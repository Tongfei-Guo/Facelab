; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_int.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_int.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_int.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string = private unnamed_addr constant [4 x i8] c"var\00"

define i32 @main() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @system_string, i32 0, i32 0))
  %system_mat = alloca double, i32 12
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 1.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 2.000000e+00, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 3.000000e+00, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 4.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 5.000000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 6.000000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 7.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 8.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 9.000000e+00, double* %element_ptr8
  %element_ptr9 = getelementptr double, double* %system_mat, i32 9
  store double 1.000000e+01, double* %element_ptr9
  %element_ptr10 = getelementptr double, double* %system_mat, i32 10
  store double 1.100000e+01, double* %element_ptr10
  %element_ptr11 = getelementptr double, double* %system_mat, i32 11
  store double 1.200000e+01, double* %element_ptr11
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r12 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r12
  %m_c13 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c13
  %size = mul i32 %r_mat, %c_mat
  %system_mat14 = alloca double, i32 %size
  %m15 = alloca %matrix_t
  %m_mat16 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  store double* %system_mat14, double** %m_mat16
  %m_r17 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  store i32 %r_mat, i32* %m_r17
  %m_c18 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  store i32 %c_mat, i32* %m_c18
  %tmp = sub i32 %c_mat, 1
  %tmp19 = sub i32 %r_mat, 1
  %m_mat20 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat20
  %m_r21 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat22 = load i32, i32* %m_r21
  %m_c23 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat24 = load i32, i32* %m_c23
  %m_mat25 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat25
  %m_r26 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r26
  %m_c27 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c27
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v47 = load i32, i32* %i
  %bool_val48 = icmp sle i32 %i_v47, %tmp19
  br i1 %bool_val48, label %while_body, label %merge46

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while28

while28:                                          ; preds = %while_body29, %while_body
  %j_v43 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v43, %tmp
  br i1 %bool_val, label %while_body29, label %merge

while_body29:                                     ; preds = %while28
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp30 = mul i32 %c_mat24, %i_v
  %index = add i32 %j_v, %tmp30
  %element_ptr31 = getelementptr double, double* %mat_mat, i32 %index
  %j_v32 = load i32, i32* %j
  %tmp33 = sub i32 %j_v32, 0
  %tmp34 = add i32 %tmp33, 0
  %i_v35 = load i32, i32* %i
  %tmp36 = sub i32 %i_v35, 0
  %tmp37 = add i32 %tmp36, 0
  %tmp38 = mul i32 %c_v, %tmp37
  %index39 = add i32 %tmp34, %tmp38
  %element_ptr40 = getelementptr double, double* %mat_v, i32 %index39
  %tmp_element = load double, double* %element_ptr40
  store double %tmp_element, double* %element_ptr31
  %j_v41 = load i32, i32* %j
  %tmp42 = add i32 %j_v41, 1
  store i32 %tmp42, i32* %j
  br label %while28

merge:                                            ; preds = %while28
  %i_v44 = load i32, i32* %i
  %tmp45 = add i32 %i_v44, 1
  store i32 %tmp45, i32* %i
  br label %while

merge46:                                          ; preds = %while
  %m_mat49 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat50 = load double*, double** %m_mat49
  %m_r51 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat52 = load i32, i32* %m_r51
  %tmp53 = sub i32 %r_mat52, 1
  %m_c54 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat55 = load i32, i32* %m_c54
  %tmp56 = sub i32 %c_mat55, 1
  %size57 = mul i32 %r_mat52, %c_mat55
  %system_mat58 = alloca double, i32 %size57
  %m59 = alloca %matrix_t
  %m_mat60 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 0
  store double* %system_mat58, double** %m_mat60
  %m_r61 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 1
  store i32 %r_mat52, i32* %m_r61
  %m_c62 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 2
  store i32 %c_mat55, i32* %m_c62
  %m_mat63 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 0
  %mat_mat64 = load double*, double** %m_mat63
  %i65 = alloca i32
  store i32 0, i32* %i65
  br label %while66

while66:                                          ; preds = %merge85, %merge46
  %i_v91 = load i32, i32* %i65
  %bool_val92 = icmp sle i32 %i_v91, %tmp53
  br i1 %bool_val92, label %while_body67, label %merge90

while_body67:                                     ; preds = %while66
  %j68 = alloca i32
  store i32 0, i32* %j68
  br label %while69

while69:                                          ; preds = %while_body70, %while_body67
  %j_v86 = load i32, i32* %j68
  %bool_val87 = icmp sle i32 %j_v86, %tmp56
  br i1 %bool_val87, label %while_body70, label %merge85

while_body70:                                     ; preds = %while69
  %j_v71 = load i32, i32* %j68
  %i_v72 = load i32, i32* %i65
  %tmp73 = mul i32 %c_mat55, %i_v72
  %index74 = add i32 %j_v71, %tmp73
  %element_ptr75 = getelementptr double, double* %mat_mat50, i32 %index74
  %tmp_element76 = load double, double* %element_ptr75
  %j_v77 = load i32, i32* %j68
  %i_v78 = load i32, i32* %i65
  %tmp79 = mul i32 %c_mat55, %i_v78
  %index80 = add i32 %j_v77, %tmp79
  %element_ptr81 = getelementptr double, double* %mat_mat64, i32 %index80
  %tmp_element82 = fadd double %tmp_element76, 3.000000e+00
  store double %tmp_element82, double* %element_ptr81
  %j_v83 = load i32, i32* %j68
  %tmp84 = add i32 %j_v83, 1
  store i32 %tmp84, i32* %j68
  br label %while69

merge85:                                          ; preds = %while69
  %i_v88 = load i32, i32* %i65
  %tmp89 = add i32 %i_v88, 1
  store i32 %tmp89, i32* %i65
  br label %while66

merge90:                                          ; preds = %while66
  call void @f(%matrix_t* %m59)
  %m_mat93 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat94 = load double*, double** %m_mat93
  %m_r95 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat96 = load i32, i32* %m_r95
  %tmp97 = sub i32 %r_mat96, 1
  %m_c98 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat99 = load i32, i32* %m_c98
  %tmp100 = sub i32 %c_mat99, 1
  %size101 = mul i32 %r_mat96, %c_mat99
  %system_mat102 = alloca double, i32 %size101
  %m103 = alloca %matrix_t
  %m_mat104 = getelementptr inbounds %matrix_t, %matrix_t* %m103, i32 0, i32 0
  store double* %system_mat102, double** %m_mat104
  %m_r105 = getelementptr inbounds %matrix_t, %matrix_t* %m103, i32 0, i32 1
  store i32 %r_mat96, i32* %m_r105
  %m_c106 = getelementptr inbounds %matrix_t, %matrix_t* %m103, i32 0, i32 2
  store i32 %c_mat99, i32* %m_c106
  %m_mat107 = getelementptr inbounds %matrix_t, %matrix_t* %m103, i32 0, i32 0
  %mat_mat108 = load double*, double** %m_mat107
  %i109 = alloca i32
  store i32 0, i32* %i109
  br label %while110

while110:                                         ; preds = %merge129, %merge90
  %i_v135 = load i32, i32* %i109
  %bool_val136 = icmp sle i32 %i_v135, %tmp97
  br i1 %bool_val136, label %while_body111, label %merge134

while_body111:                                    ; preds = %while110
  %j112 = alloca i32
  store i32 0, i32* %j112
  br label %while113

while113:                                         ; preds = %while_body114, %while_body111
  %j_v130 = load i32, i32* %j112
  %bool_val131 = icmp sle i32 %j_v130, %tmp100
  br i1 %bool_val131, label %while_body114, label %merge129

while_body114:                                    ; preds = %while113
  %j_v115 = load i32, i32* %j112
  %i_v116 = load i32, i32* %i109
  %tmp117 = mul i32 %c_mat99, %i_v116
  %index118 = add i32 %j_v115, %tmp117
  %element_ptr119 = getelementptr double, double* %mat_mat94, i32 %index118
  %tmp_element120 = load double, double* %element_ptr119
  %j_v121 = load i32, i32* %j112
  %i_v122 = load i32, i32* %i109
  %tmp123 = mul i32 %c_mat99, %i_v122
  %index124 = add i32 %j_v121, %tmp123
  %element_ptr125 = getelementptr double, double* %mat_mat108, i32 %index124
  %tmp_element126 = fmul double %tmp_element120, 2.000000e+00
  store double %tmp_element126, double* %element_ptr125
  %j_v127 = load i32, i32* %j112
  %tmp128 = add i32 %j_v127, 1
  store i32 %tmp128, i32* %j112
  br label %while113

merge129:                                         ; preds = %while113
  %i_v132 = load i32, i32* %i109
  %tmp133 = add i32 %i_v132, 1
  store i32 %tmp133, i32* %i109
  br label %while110

merge134:                                         ; preds = %while110
  call void @f(%matrix_t* %m103)
  %m_mat137 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat138 = load double*, double** %m_mat137
  %m_r139 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat140 = load i32, i32* %m_r139
  %tmp141 = sub i32 %r_mat140, 1
  %m_c142 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat143 = load i32, i32* %m_c142
  %tmp144 = sub i32 %c_mat143, 1
  %size145 = mul i32 %r_mat140, %c_mat143
  %system_mat146 = alloca double, i32 %size145
  %m147 = alloca %matrix_t
  %m_mat148 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 0
  store double* %system_mat146, double** %m_mat148
  %m_r149 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 1
  store i32 %r_mat140, i32* %m_r149
  %m_c150 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 2
  store i32 %c_mat143, i32* %m_c150
  %m_mat151 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 0
  %mat_mat152 = load double*, double** %m_mat151
  %i153 = alloca i32
  store i32 0, i32* %i153
  br label %while154

while154:                                         ; preds = %merge173, %merge134
  %i_v179 = load i32, i32* %i153
  %bool_val180 = icmp sle i32 %i_v179, %tmp141
  br i1 %bool_val180, label %while_body155, label %merge178

while_body155:                                    ; preds = %while154
  %j156 = alloca i32
  store i32 0, i32* %j156
  br label %while157

while157:                                         ; preds = %while_body158, %while_body155
  %j_v174 = load i32, i32* %j156
  %bool_val175 = icmp sle i32 %j_v174, %tmp144
  br i1 %bool_val175, label %while_body158, label %merge173

while_body158:                                    ; preds = %while157
  %j_v159 = load i32, i32* %j156
  %i_v160 = load i32, i32* %i153
  %tmp161 = mul i32 %c_mat143, %i_v160
  %index162 = add i32 %j_v159, %tmp161
  %element_ptr163 = getelementptr double, double* %mat_mat138, i32 %index162
  %tmp_element164 = load double, double* %element_ptr163
  %j_v165 = load i32, i32* %j156
  %i_v166 = load i32, i32* %i153
  %tmp167 = mul i32 %c_mat143, %i_v166
  %index168 = add i32 %j_v165, %tmp167
  %element_ptr169 = getelementptr double, double* %mat_mat152, i32 %index168
  %tmp_element170 = fdiv double %tmp_element164, 1.500000e+00
  store double %tmp_element170, double* %element_ptr169
  %j_v171 = load i32, i32* %j156
  %tmp172 = add i32 %j_v171, 1
  store i32 %tmp172, i32* %j156
  br label %while157

merge173:                                         ; preds = %while157
  %i_v176 = load i32, i32* %i153
  %tmp177 = add i32 %i_v176, 1
  store i32 %tmp177, i32* %i153
  br label %while154

merge178:                                         ; preds = %while154
  %m_r181 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 1
  %r_mat182 = load i32, i32* %m_r181
  %m_c183 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 2
  %c_mat184 = load i32, i32* %m_c183
  %size185 = mul i32 %r_mat182, %c_mat184
  %system_mat186 = alloca double, i32 %size185
  %m187 = alloca %matrix_t
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 0
  store double* %system_mat186, double** %m_mat188
  %m_r189 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 1
  store i32 %r_mat182, i32* %m_r189
  %m_c190 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 2
  store i32 %c_mat184, i32* %m_c190
  %tmp191 = sub i32 %c_mat184, 1
  %tmp192 = sub i32 %r_mat182, 1
  %m_mat193 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 0
  %mat_mat194 = load double*, double** %m_mat193
  %m_r195 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 1
  %r_mat196 = load i32, i32* %m_r195
  %m_c197 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 2
  %c_mat198 = load i32, i32* %m_c197
  %m_mat199 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 0
  %mat_v200 = load double*, double** %m_mat199
  %m_r201 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 1
  %r_v202 = load i32, i32* %m_r201
  %m_c203 = getelementptr inbounds %matrix_t, %matrix_t* %m147, i32 0, i32 2
  %c_v204 = load i32, i32* %m_c203
  %i205 = alloca i32
  store i32 0, i32* %i205
  br label %while206

while206:                                         ; preds = %merge228, %merge178
  %i_v234 = load i32, i32* %i205
  %bool_val235 = icmp sle i32 %i_v234, %tmp192
  br i1 %bool_val235, label %while_body207, label %merge233

while_body207:                                    ; preds = %while206
  %j208 = alloca i32
  store i32 0, i32* %j208
  br label %while209

while209:                                         ; preds = %while_body210, %while_body207
  %j_v229 = load i32, i32* %j208
  %bool_val230 = icmp sle i32 %j_v229, %tmp191
  br i1 %bool_val230, label %while_body210, label %merge228

while_body210:                                    ; preds = %while209
  %j_v211 = load i32, i32* %j208
  %i_v212 = load i32, i32* %i205
  %tmp213 = mul i32 %c_mat198, %i_v212
  %index214 = add i32 %j_v211, %tmp213
  %element_ptr215 = getelementptr double, double* %mat_mat194, i32 %index214
  %j_v216 = load i32, i32* %j208
  %tmp217 = sub i32 %j_v216, 0
  %tmp218 = add i32 %tmp217, 0
  %i_v219 = load i32, i32* %i205
  %tmp220 = sub i32 %i_v219, 0
  %tmp221 = add i32 %tmp220, 0
  %tmp222 = mul i32 %c_v204, %tmp221
  %index223 = add i32 %tmp218, %tmp222
  %element_ptr224 = getelementptr double, double* %mat_v200, i32 %index223
  %tmp_element225 = load double, double* %element_ptr224
  store double %tmp_element225, double* %element_ptr215
  %j_v226 = load i32, i32* %j208
  %tmp227 = add i32 %j_v226, 1
  store i32 %tmp227, i32* %j208
  br label %while209

merge228:                                         ; preds = %while209
  %i_v231 = load i32, i32* %i205
  %tmp232 = add i32 %i_v231, 1
  store i32 %tmp232, i32* %i205
  br label %while206

merge233:                                         ; preds = %while206
  %m_mat236 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat237 = load double*, double** %m_mat236
  %m_r238 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat239 = load i32, i32* %m_r238
  %tmp240 = sub i32 %r_mat239, 1
  %m_c241 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat242 = load i32, i32* %m_c241
  %tmp243 = sub i32 %c_mat242, 1
  %m_mat244 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 0
  %mat_v245 = load double*, double** %m_mat244
  %size246 = mul i32 %r_mat239, %c_mat242
  %system_mat247 = alloca double, i32 %size246
  %m248 = alloca %matrix_t
  %m_mat249 = getelementptr inbounds %matrix_t, %matrix_t* %m248, i32 0, i32 0
  store double* %system_mat247, double** %m_mat249
  %m_r250 = getelementptr inbounds %matrix_t, %matrix_t* %m248, i32 0, i32 1
  store i32 %r_mat239, i32* %m_r250
  %m_c251 = getelementptr inbounds %matrix_t, %matrix_t* %m248, i32 0, i32 2
  store i32 %c_mat242, i32* %m_c251
  %m_mat252 = getelementptr inbounds %matrix_t, %matrix_t* %m248, i32 0, i32 0
  %mat_mat253 = load double*, double** %m_mat252
  %i254 = alloca i32
  store i32 0, i32* %i254
  br label %while255

while255:                                         ; preds = %merge280, %merge233
  %i_v286 = load i32, i32* %i254
  %bool_val287 = icmp sle i32 %i_v286, %tmp240
  br i1 %bool_val287, label %while_body256, label %merge285

while_body256:                                    ; preds = %while255
  %j257 = alloca i32
  store i32 0, i32* %j257
  br label %while258

while258:                                         ; preds = %while_body259, %while_body256
  %j_v281 = load i32, i32* %j257
  %bool_val282 = icmp sle i32 %j_v281, %tmp243
  br i1 %bool_val282, label %while_body259, label %merge280

while_body259:                                    ; preds = %while258
  %j_v260 = load i32, i32* %j257
  %i_v261 = load i32, i32* %i254
  %tmp262 = mul i32 %c_mat242, %i_v261
  %index263 = add i32 %j_v260, %tmp262
  %element_ptr264 = getelementptr double, double* %mat_mat237, i32 %index263
  %tmp_element265 = load double, double* %element_ptr264
  %j_v266 = load i32, i32* %j257
  %i_v267 = load i32, i32* %i254
  %tmp268 = mul i32 %c_mat242, %i_v267
  %index269 = add i32 %j_v266, %tmp268
  %element_ptr270 = getelementptr double, double* %mat_v245, i32 %index269
  %tmp_element271 = load double, double* %element_ptr270
  %j_v272 = load i32, i32* %j257
  %i_v273 = load i32, i32* %i254
  %tmp274 = mul i32 %c_mat242, %i_v273
  %index275 = add i32 %j_v272, %tmp274
  %element_ptr276 = getelementptr double, double* %mat_mat253, i32 %index275
  %tmp_element277 = fmul double %tmp_element265, %tmp_element271
  store double %tmp_element277, double* %element_ptr276
  %j_v278 = load i32, i32* %j257
  %tmp279 = add i32 %j_v278, 1
  store i32 %tmp279, i32* %j257
  br label %while258

merge280:                                         ; preds = %while258
  %i_v283 = load i32, i32* %i254
  %tmp284 = add i32 %i_v283, 1
  store i32 %tmp284, i32* %i254
  br label %while255

merge285:                                         ; preds = %while255
  call void @f(%matrix_t* %m248)
  ret i32 0
}

declare i32 @printf(i8*, ...)

define void @f(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %c_mat, 1
  %tmp3 = sub i32 %r_mat, 1
  %m_mat4 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat4
  %m_r5 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat6 = load i32, i32* %m_r5
  %m_c7 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat8 = load i32, i32* %m_c7
  %m_mat9 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat9
  %m_r10 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r10
  %m_c11 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c11
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v30 = load i32, i32* %i
  %bool_val31 = icmp sle i32 %i_v30, %tmp3
  br i1 %bool_val31, label %while_body, label %merge29

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while12

while12:                                          ; preds = %while_body13, %while_body
  %j_v26 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v26, %tmp
  br i1 %bool_val, label %while_body13, label %merge

while_body13:                                     ; preds = %while12
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp14 = mul i32 %c_mat8, %i_v
  %index = add i32 %j_v, %tmp14
  %element_ptr = getelementptr double, double* %mat_mat, i32 %index
  %j_v15 = load i32, i32* %j
  %tmp16 = sub i32 %j_v15, 0
  %tmp17 = add i32 %tmp16, 0
  %i_v18 = load i32, i32* %i
  %tmp19 = sub i32 %i_v18, 0
  %tmp20 = add i32 %tmp19, 0
  %tmp21 = mul i32 %c_v, %tmp20
  %index22 = add i32 %tmp17, %tmp21
  %element_ptr23 = getelementptr double, double* %mat_v, i32 %index22
  %tmp_element = load double, double* %element_ptr23
  store double %tmp_element, double* %element_ptr
  %j_v24 = load i32, i32* %j
  %tmp25 = add i32 %j_v24, 1
  store i32 %tmp25, i32* %j
  br label %while12

merge:                                            ; preds = %while12
  %i_v27 = load i32, i32* %i
  %tmp28 = add i32 %i_v27, 1
  store i32 %tmp28, i32* %i
  br label %while

merge29:                                          ; preds = %while
  %m_mat32 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat33 = load double*, double** %m_mat32
  %m_r34 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat35 = load i32, i32* %m_r34
  %m_c36 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat37 = load i32, i32* %m_c36
  %tmp38 = sub i32 %r_mat35, 1
  %tmp39 = sub i32 %c_mat37, 1
  %i40 = alloca i32
  store i32 0, i32* %i40
  br label %while41

while41:                                          ; preds = %merge55, %merge29
  %i_v62 = load i32, i32* %i40
  %bool_val63 = icmp sle i32 %i_v62, %tmp38
  br i1 %bool_val63, label %while_body42, label %merge61

while_body42:                                     ; preds = %while41
  %j43 = alloca i32
  store i32 0, i32* %j43
  br label %while44

while44:                                          ; preds = %while_body45, %while_body42
  %j_v56 = load i32, i32* %j43
  %bool_val57 = icmp sle i32 %j_v56, %tmp39
  br i1 %bool_val57, label %while_body45, label %merge55

while_body45:                                     ; preds = %while44
  %j_v46 = load i32, i32* %j43
  %i_v47 = load i32, i32* %i40
  %tmp48 = mul i32 %c_mat37, %i_v47
  %index49 = add i32 %j_v46, %tmp48
  %element_ptr50 = getelementptr double, double* %mat_mat33, i32 %index49
  %tmp_element51 = load double, double* %element_ptr50
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element51)
  %printf52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.2, i32 0, i32 0))
  %j_v53 = load i32, i32* %j43
  %tmp54 = add i32 %j_v53, 1
  store i32 %tmp54, i32* %j43
  br label %while44

merge55:                                          ; preds = %while44
  %printf58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_int.1, i32 0, i32 0))
  %i_v59 = load i32, i32* %i40
  %tmp60 = add i32 %i_v59, 1
  store i32 %tmp60, i32* %i40
  br label %while41

merge61:                                          ; preds = %while41
  %printf64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_int.3, i32 0, i32 0))
  ret void
}
