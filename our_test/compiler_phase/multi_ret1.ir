; ModuleID = 'Facelab'
source_filename = "Facelab"

%matrix_t = type { double*, i32, i32 }
%return_t.2 = type { %matrix_t*, %matrix_t* }
%matrix_size_t = type { i32, i32 }
%zero_matrix_t = type { %matrix_t* }
%int_to_double_t = type { double }
%double_to_int_t = type { i32 }
%load_t = type { %matrix_t*, %matrix_t*, %matrix_t* }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"
@system_string = private unnamed_addr constant [5 x i8] c"fun1\00"

define i32 @main() {
entry:
  %system_mat = alloca double, i32 12
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 1.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 2.000000e+00, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 3.000000e+00, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 4.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 5.000000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 6.000000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 7.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 8.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 9.000000e+00, double* %element_ptr8
  %element_ptr9 = getelementptr double, double* %system_mat, i32 9
  store double 1.000000e+01, double* %element_ptr9
  %element_ptr10 = getelementptr double, double* %system_mat, i32 10
  store double 1.100000e+01, double* %element_ptr10
  %element_ptr11 = getelementptr double, double* %system_mat, i32 11
  store double 1.200000e+01, double* %element_ptr11
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r12 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r12
  %m_c13 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c13
  %size = mul i32 %r_mat, %c_mat
  %system_mat14 = alloca double, i32 %size
  %m15 = alloca %matrix_t
  %m_mat16 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  store double* %system_mat14, double** %m_mat16
  %m_r17 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  store i32 %r_mat, i32* %m_r17
  %m_c18 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  store i32 %c_mat, i32* %m_c18
  %tmp = sub i32 %r_mat, 1
  %tmp19 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v30 = load i32, i32* %i
  %bool_val31 = icmp sle i32 %i_v30, %tmp
  br i1 %bool_val31, label %while_body, label %merge29

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while20

while20:                                          ; preds = %while_body21, %while_body
  %j_v26 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v26, %tmp19
  br i1 %bool_val, label %while_body21, label %merge

while_body21:                                     ; preds = %while20
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp22 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp22
  %element_ptr23 = getelementptr double, double* %system_mat14, i32 %index
  store double 0.000000e+00, double* %element_ptr23
  %j_v24 = load i32, i32* %j
  %tmp25 = add i32 %j_v24, 1
  store i32 %tmp25, i32* %j
  br label %while20

merge:                                            ; preds = %while20
  %i_v27 = load i32, i32* %i
  %tmp28 = add i32 %i_v27, 1
  store i32 %tmp28, i32* %i
  br label %while

merge29:                                          ; preds = %while
  %tmp32 = sub i32 %c_mat, 1
  %tmp33 = sub i32 %r_mat, 1
  %m_mat34 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat34
  %m_r35 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat36 = load i32, i32* %m_r35
  %m_c37 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat38 = load i32, i32* %m_c37
  %m_mat39 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat39
  %m_r40 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r40
  %m_c41 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c41
  %i42 = alloca i32
  store i32 0, i32* %i42
  br label %while43

while43:                                          ; preds = %merge64, %merge29
  %i_v70 = load i32, i32* %i42
  %bool_val71 = icmp sle i32 %i_v70, %tmp33
  br i1 %bool_val71, label %while_body44, label %merge69

while_body44:                                     ; preds = %while43
  %j45 = alloca i32
  store i32 0, i32* %j45
  br label %while46

while46:                                          ; preds = %while_body47, %while_body44
  %j_v65 = load i32, i32* %j45
  %bool_val66 = icmp sle i32 %j_v65, %tmp32
  br i1 %bool_val66, label %while_body47, label %merge64

while_body47:                                     ; preds = %while46
  %j_v48 = load i32, i32* %j45
  %i_v49 = load i32, i32* %i42
  %tmp50 = mul i32 %c_mat38, %i_v49
  %index51 = add i32 %j_v48, %tmp50
  %element_ptr52 = getelementptr double, double* %mat_mat, i32 %index51
  %j_v53 = load i32, i32* %j45
  %tmp54 = sub i32 %j_v53, 0
  %tmp55 = add i32 %tmp54, 0
  %i_v56 = load i32, i32* %i42
  %tmp57 = sub i32 %i_v56, 0
  %tmp58 = add i32 %tmp57, 0
  %tmp59 = mul i32 %c_v, %tmp58
  %index60 = add i32 %tmp55, %tmp59
  %element_ptr61 = getelementptr double, double* %mat_v, i32 %index60
  %tmp_element = load double, double* %element_ptr61
  store double %tmp_element, double* %element_ptr52
  %j_v62 = load i32, i32* %j45
  %tmp63 = add i32 %j_v62, 1
  store i32 %tmp63, i32* %j45
  br label %while46

merge64:                                          ; preds = %while46
  %i_v67 = load i32, i32* %i42
  %tmp68 = add i32 %i_v67, 1
  store i32 %tmp68, i32* %i42
  br label %while43

merge69:                                          ; preds = %while43
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @system_string, i32 0, i32 0))
  %printf72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %system_mat73 = alloca double, i32 6
  %element_ptr74 = getelementptr double, double* %system_mat73, i32 0
  store double 2.200000e+00, double* %element_ptr74
  %element_ptr75 = getelementptr double, double* %system_mat73, i32 1
  store double 4.400000e+00, double* %element_ptr75
  %element_ptr76 = getelementptr double, double* %system_mat73, i32 2
  store double 6.600000e+00, double* %element_ptr76
  %element_ptr77 = getelementptr double, double* %system_mat73, i32 3
  store double 1.500000e+00, double* %element_ptr77
  %element_ptr78 = getelementptr double, double* %system_mat73, i32 4
  store double 9.100000e+00, double* %element_ptr78
  %element_ptr79 = getelementptr double, double* %system_mat73, i32 5
  store double 3.500000e+00, double* %element_ptr79
  %m80 = alloca %matrix_t
  %m_mat81 = getelementptr inbounds %matrix_t, %matrix_t* %m80, i32 0, i32 0
  store double* %system_mat73, double** %m_mat81
  %m_r82 = getelementptr inbounds %matrix_t, %matrix_t* %m80, i32 0, i32 1
  store i32 3, i32* %m_r82
  %m_c83 = getelementptr inbounds %matrix_t, %matrix_t* %m80, i32 0, i32 2
  store i32 2, i32* %m_c83
  %m_c84 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat85 = load i32, i32* %m_c84
  %m_r86 = getelementptr inbounds %matrix_t, %matrix_t* %m80, i32 0, i32 1
  %r_mat87 = load i32, i32* %m_r86
  %tmp90 = icmp ne i32 %c_mat85, %r_mat87
  br i1 %tmp90, label %then, label %else

merge88:                                          ; preds = %else, %then
  %m_mat91 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat92 = load double*, double** %m_mat91
  %m_mat93 = getelementptr inbounds %matrix_t, %matrix_t* %m80, i32 0, i32 0
  %mat_v94 = load double*, double** %m_mat93
  %m_r95 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat96 = load i32, i32* %m_r95
  %tmp97 = sub i32 %r_mat96, 1
  %m_c98 = getelementptr inbounds %matrix_t, %matrix_t* %m80, i32 0, i32 2
  %c_mat99 = load i32, i32* %m_c98
  %tmp100 = sub i32 %c_mat99, 1
  %m_l = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %l_mat = load i32, i32* %m_l
  %tmp101 = sub i32 %l_mat, 1
  %size102 = mul i32 %r_mat96, %c_mat99
  %system_mat103 = alloca double, i32 %size102
  %m104 = alloca %matrix_t
  %m_mat105 = getelementptr inbounds %matrix_t, %matrix_t* %m104, i32 0, i32 0
  store double* %system_mat103, double** %m_mat105
  %m_r106 = getelementptr inbounds %matrix_t, %matrix_t* %m104, i32 0, i32 1
  store i32 %r_mat96, i32* %m_r106
  %m_c107 = getelementptr inbounds %matrix_t, %matrix_t* %m104, i32 0, i32 2
  store i32 %c_mat99, i32* %m_c107
  %tmp108 = sub i32 %r_mat96, 1
  %tmp109 = sub i32 %c_mat99, 1
  %i110 = alloca i32
  store i32 0, i32* %i110
  br label %while111

then:                                             ; preds = %merge69
  %printf89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge88

else:                                             ; preds = %merge69
  br label %merge88

while111:                                         ; preds = %merge123, %merge88
  %i_v129 = load i32, i32* %i110
  %bool_val130 = icmp sle i32 %i_v129, %tmp108
  br i1 %bool_val130, label %while_body112, label %merge128

while_body112:                                    ; preds = %while111
  %j113 = alloca i32
  store i32 0, i32* %j113
  br label %while114

while114:                                         ; preds = %while_body115, %while_body112
  %j_v124 = load i32, i32* %j113
  %bool_val125 = icmp sle i32 %j_v124, %tmp109
  br i1 %bool_val125, label %while_body115, label %merge123

while_body115:                                    ; preds = %while114
  %j_v116 = load i32, i32* %j113
  %i_v117 = load i32, i32* %i110
  %tmp118 = mul i32 %c_mat99, %i_v117
  %index119 = add i32 %j_v116, %tmp118
  %element_ptr120 = getelementptr double, double* %system_mat103, i32 %index119
  store double 0.000000e+00, double* %element_ptr120
  %j_v121 = load i32, i32* %j113
  %tmp122 = add i32 %j_v121, 1
  store i32 %tmp122, i32* %j113
  br label %while114

merge123:                                         ; preds = %while114
  %i_v126 = load i32, i32* %i110
  %tmp127 = add i32 %i_v126, 1
  store i32 %tmp127, i32* %i110
  br label %while111

merge128:                                         ; preds = %while111
  %m_mat131 = getelementptr inbounds %matrix_t, %matrix_t* %m104, i32 0, i32 0
  %mat_mat132 = load double*, double** %m_mat131
  %i133 = alloca i32
  store i32 0, i32* %i133
  br label %while134

while134:                                         ; preds = %merge169, %merge128
  %i_v175 = load i32, i32* %i133
  %bool_val176 = icmp sle i32 %i_v175, %tmp97
  br i1 %bool_val176, label %while_body135, label %merge174

while_body135:                                    ; preds = %while134
  %j136 = alloca i32
  store i32 0, i32* %j136
  br label %while137

while137:                                         ; preds = %merge163, %while_body135
  %j_v170 = load i32, i32* %j136
  %bool_val171 = icmp sle i32 %j_v170, %tmp100
  br i1 %bool_val171, label %while_body138, label %merge169

while_body138:                                    ; preds = %while137
  %j_v139 = load i32, i32* %j136
  %i_v140 = load i32, i32* %i133
  %tmp141 = mul i32 %c_mat99, %i_v140
  %index142 = add i32 %j_v139, %tmp141
  %element_ptr143 = getelementptr double, double* %mat_mat132, i32 %index142
  %tmp_element144 = alloca double
  store double 0.000000e+00, double* %tmp_element144
  %k = alloca i32
  store i32 0, i32* %k
  br label %while145

while145:                                         ; preds = %while_body146, %while_body138
  %k_v164 = load i32, i32* %k
  %bool_val165 = icmp sle i32 %k_v164, %tmp101
  br i1 %bool_val165, label %while_body146, label %merge163

while_body146:                                    ; preds = %while145
  %k_v = load i32, i32* %k
  %i_v147 = load i32, i32* %i133
  %tmp148 = mul i32 %l_mat, %i_v147
  %index149 = add i32 %k_v, %tmp148
  %element_ptr150 = getelementptr double, double* %mat_mat92, i32 %index149
  %tmp_element151 = load double, double* %element_ptr150
  %j_v152 = load i32, i32* %j136
  %k_v153 = load i32, i32* %k
  %tmp154 = mul i32 %c_mat99, %k_v153
  %index155 = add i32 %j_v152, %tmp154
  %element_ptr156 = getelementptr double, double* %mat_v94, i32 %index155
  %tmp_element157 = load double, double* %element_ptr156
  %tmp158 = load double, double* %tmp_element144
  %tmp159 = fmul double %tmp_element151, %tmp_element157
  %tmp160 = fadd double %tmp159, %tmp158
  store double %tmp160, double* %tmp_element144
  %k_v161 = load i32, i32* %k
  %tmp162 = add i32 %k_v161, 1
  store i32 %tmp162, i32* %k
  br label %while145

merge163:                                         ; preds = %while145
  %tmp166 = load double, double* %tmp_element144
  store double %tmp166, double* %element_ptr143
  %j_v167 = load i32, i32* %j136
  %tmp168 = add i32 %j_v167, 1
  store i32 %tmp168, i32* %j136
  br label %while137

merge169:                                         ; preds = %while137
  %i_v172 = load i32, i32* %i133
  %tmp173 = add i32 %i_v172, 1
  store i32 %tmp173, i32* %i133
  br label %while134

merge174:                                         ; preds = %while134
  call void @f(%matrix_t* %m104)
  %system_mat177 = alloca double, i32 6
  %element_ptr178 = getelementptr double, double* %system_mat177, i32 0
  store double 2.200000e+00, double* %element_ptr178
  %element_ptr179 = getelementptr double, double* %system_mat177, i32 1
  store double 4.400000e+00, double* %element_ptr179
  %element_ptr180 = getelementptr double, double* %system_mat177, i32 2
  store double 6.600000e+00, double* %element_ptr180
  %element_ptr181 = getelementptr double, double* %system_mat177, i32 3
  store double 1.500000e+00, double* %element_ptr181
  %element_ptr182 = getelementptr double, double* %system_mat177, i32 4
  store double 9.100000e+00, double* %element_ptr182
  %element_ptr183 = getelementptr double, double* %system_mat177, i32 5
  store double 3.500000e+00, double* %element_ptr183
  %m184 = alloca %matrix_t
  %m_mat185 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 0
  store double* %system_mat177, double** %m_mat185
  %m_r186 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 1
  store i32 3, i32* %m_r186
  %m_c187 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 2
  store i32 2, i32* %m_c187
  %m_r188 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 1
  %r_mat189 = load i32, i32* %m_r188
  %m_c190 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 2
  %c_mat191 = load i32, i32* %m_c190
  %size192 = mul i32 %r_mat189, %c_mat191
  %system_mat193 = alloca double, i32 %size192
  %m194 = alloca %matrix_t
  %m_mat195 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 0
  store double* %system_mat193, double** %m_mat195
  %m_r196 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 1
  store i32 %r_mat189, i32* %m_r196
  %m_c197 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 2
  store i32 %c_mat191, i32* %m_c197
  %tmp198 = sub i32 %r_mat189, 1
  %tmp199 = sub i32 %c_mat191, 1
  %i200 = alloca i32
  store i32 0, i32* %i200
  br label %while201

while201:                                         ; preds = %merge213, %merge174
  %i_v219 = load i32, i32* %i200
  %bool_val220 = icmp sle i32 %i_v219, %tmp198
  br i1 %bool_val220, label %while_body202, label %merge218

while_body202:                                    ; preds = %while201
  %j203 = alloca i32
  store i32 0, i32* %j203
  br label %while204

while204:                                         ; preds = %while_body205, %while_body202
  %j_v214 = load i32, i32* %j203
  %bool_val215 = icmp sle i32 %j_v214, %tmp199
  br i1 %bool_val215, label %while_body205, label %merge213

while_body205:                                    ; preds = %while204
  %j_v206 = load i32, i32* %j203
  %i_v207 = load i32, i32* %i200
  %tmp208 = mul i32 %c_mat191, %i_v207
  %index209 = add i32 %j_v206, %tmp208
  %element_ptr210 = getelementptr double, double* %system_mat193, i32 %index209
  store double 0.000000e+00, double* %element_ptr210
  %j_v211 = load i32, i32* %j203
  %tmp212 = add i32 %j_v211, 1
  store i32 %tmp212, i32* %j203
  br label %while204

merge213:                                         ; preds = %while204
  %i_v216 = load i32, i32* %i200
  %tmp217 = add i32 %i_v216, 1
  store i32 %tmp217, i32* %i200
  br label %while201

merge218:                                         ; preds = %while201
  %tmp221 = sub i32 %c_mat191, 1
  %tmp222 = sub i32 %r_mat189, 1
  %m_mat223 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 0
  %mat_mat224 = load double*, double** %m_mat223
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %m_mat229 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 0
  %mat_v230 = load double*, double** %m_mat229
  %m_r231 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 1
  %r_v232 = load i32, i32* %m_r231
  %m_c233 = getelementptr inbounds %matrix_t, %matrix_t* %m184, i32 0, i32 2
  %c_v234 = load i32, i32* %m_c233
  %i235 = alloca i32
  store i32 0, i32* %i235
  br label %while236

while236:                                         ; preds = %merge258, %merge218
  %i_v264 = load i32, i32* %i235
  %bool_val265 = icmp sle i32 %i_v264, %tmp222
  br i1 %bool_val265, label %while_body237, label %merge263

while_body237:                                    ; preds = %while236
  %j238 = alloca i32
  store i32 0, i32* %j238
  br label %while239

while239:                                         ; preds = %while_body240, %while_body237
  %j_v259 = load i32, i32* %j238
  %bool_val260 = icmp sle i32 %j_v259, %tmp221
  br i1 %bool_val260, label %while_body240, label %merge258

while_body240:                                    ; preds = %while239
  %j_v241 = load i32, i32* %j238
  %i_v242 = load i32, i32* %i235
  %tmp243 = mul i32 %c_mat228, %i_v242
  %index244 = add i32 %j_v241, %tmp243
  %element_ptr245 = getelementptr double, double* %mat_mat224, i32 %index244
  %j_v246 = load i32, i32* %j238
  %tmp247 = sub i32 %j_v246, 0
  %tmp248 = add i32 %tmp247, 0
  %i_v249 = load i32, i32* %i235
  %tmp250 = sub i32 %i_v249, 0
  %tmp251 = add i32 %tmp250, 0
  %tmp252 = mul i32 %c_v234, %tmp251
  %index253 = add i32 %tmp248, %tmp252
  %element_ptr254 = getelementptr double, double* %mat_v230, i32 %index253
  %tmp_element255 = load double, double* %element_ptr254
  store double %tmp_element255, double* %element_ptr245
  %j_v256 = load i32, i32* %j238
  %tmp257 = add i32 %j_v256, 1
  store i32 %tmp257, i32* %j238
  br label %while239

merge258:                                         ; preds = %while239
  %i_v261 = load i32, i32* %i235
  %tmp262 = add i32 %i_v261, 1
  store i32 %tmp262, i32* %i235
  br label %while236

merge263:                                         ; preds = %while236
  %system_mat266 = alloca double, i32 0
  %m267 = alloca %matrix_t
  %m_mat268 = getelementptr inbounds %matrix_t, %matrix_t* %m267, i32 0, i32 0
  store double* %system_mat266, double** %m_mat268
  %m_r269 = getelementptr inbounds %matrix_t, %matrix_t* %m267, i32 0, i32 1
  store i32 0, i32* %m_r269
  %m_c270 = getelementptr inbounds %matrix_t, %matrix_t* %m267, i32 0, i32 2
  store i32 0, i32* %m_c270
  %i271 = alloca i32
  store i32 0, i32* %i271
  br label %while272

while272:                                         ; preds = %merge284, %merge263
  %i_v290 = load i32, i32* %i271
  %bool_val291 = icmp sle i32 %i_v290, -1
  br i1 %bool_val291, label %while_body273, label %merge289

while_body273:                                    ; preds = %while272
  %j274 = alloca i32
  store i32 0, i32* %j274
  br label %while275

while275:                                         ; preds = %while_body276, %while_body273
  %j_v285 = load i32, i32* %j274
  %bool_val286 = icmp sle i32 %j_v285, -1
  br i1 %bool_val286, label %while_body276, label %merge284

while_body276:                                    ; preds = %while275
  %j_v277 = load i32, i32* %j274
  %i_v278 = load i32, i32* %i271
  %tmp279 = mul i32 0, %i_v278
  %index280 = add i32 %j_v277, %tmp279
  %element_ptr281 = getelementptr double, double* %system_mat266, i32 %index280
  store double 0.000000e+00, double* %element_ptr281
  %j_v282 = load i32, i32* %j274
  %tmp283 = add i32 %j_v282, 1
  store i32 %tmp283, i32* %j274
  br label %while275

merge284:                                         ; preds = %while275
  %i_v287 = load i32, i32* %i271
  %tmp288 = add i32 %i_v287, 1
  store i32 %tmp288, i32* %i271
  br label %while272

merge289:                                         ; preds = %while272
  %system_mat292 = alloca double, i32 0
  %m293 = alloca %matrix_t
  %m_mat294 = getelementptr inbounds %matrix_t, %matrix_t* %m293, i32 0, i32 0
  store double* %system_mat292, double** %m_mat294
  %m_r295 = getelementptr inbounds %matrix_t, %matrix_t* %m293, i32 0, i32 1
  store i32 0, i32* %m_r295
  %m_c296 = getelementptr inbounds %matrix_t, %matrix_t* %m293, i32 0, i32 2
  store i32 0, i32* %m_c296
  %i297 = alloca i32
  store i32 0, i32* %i297
  br label %while298

while298:                                         ; preds = %merge310, %merge289
  %i_v316 = load i32, i32* %i297
  %bool_val317 = icmp sle i32 %i_v316, -1
  br i1 %bool_val317, label %while_body299, label %merge315

while_body299:                                    ; preds = %while298
  %j300 = alloca i32
  store i32 0, i32* %j300
  br label %while301

while301:                                         ; preds = %while_body302, %while_body299
  %j_v311 = load i32, i32* %j300
  %bool_val312 = icmp sle i32 %j_v311, -1
  br i1 %bool_val312, label %while_body302, label %merge310

while_body302:                                    ; preds = %while301
  %j_v303 = load i32, i32* %j300
  %i_v304 = load i32, i32* %i297
  %tmp305 = mul i32 0, %i_v304
  %index306 = add i32 %j_v303, %tmp305
  %element_ptr307 = getelementptr double, double* %system_mat292, i32 %index306
  store double 0.000000e+00, double* %element_ptr307
  %j_v308 = load i32, i32* %j300
  %tmp309 = add i32 %j_v308, 1
  store i32 %tmp309, i32* %j300
  br label %while301

merge310:                                         ; preds = %while301
  %i_v313 = load i32, i32* %i297
  %tmp314 = add i32 %i_v313, 1
  store i32 %tmp314, i32* %i297
  br label %while298

merge315:                                         ; preds = %while298
  %f2_result = call %return_t.2* @f2(%matrix_t* %m15, %matrix_t* %m194, double 1.000000e+01)
  %v_ptr = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 0
  %v = load %matrix_t*, %matrix_t** %v_ptr
  %m_mat318 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_mat319 = load double*, double** %m_mat318
  %m_r320 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_mat321 = load i32, i32* %m_r320
  %m_c322 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_mat323 = load i32, i32* %m_c322
  %size324 = mul i32 %r_mat321, %c_mat323
  %system_mat325 = alloca double, i32 %size324
  %m326 = alloca %matrix_t
  %m_mat327 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 0
  store double* %system_mat325, double** %m_mat327
  %m_r328 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 1
  store i32 %r_mat321, i32* %m_r328
  %m_c329 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 2
  store i32 %c_mat323, i32* %m_c329
  %tmp330 = sub i32 %r_mat321, 1
  %tmp331 = sub i32 %c_mat323, 1
  %i332 = alloca i32
  store i32 0, i32* %i332
  br label %while333

while333:                                         ; preds = %merge345, %merge315
  %i_v351 = load i32, i32* %i332
  %bool_val352 = icmp sle i32 %i_v351, %tmp330
  br i1 %bool_val352, label %while_body334, label %merge350

while_body334:                                    ; preds = %while333
  %j335 = alloca i32
  store i32 0, i32* %j335
  br label %while336

while336:                                         ; preds = %while_body337, %while_body334
  %j_v346 = load i32, i32* %j335
  %bool_val347 = icmp sle i32 %j_v346, %tmp331
  br i1 %bool_val347, label %while_body337, label %merge345

while_body337:                                    ; preds = %while336
  %j_v338 = load i32, i32* %j335
  %i_v339 = load i32, i32* %i332
  %tmp340 = mul i32 %c_mat323, %i_v339
  %index341 = add i32 %j_v338, %tmp340
  %element_ptr342 = getelementptr double, double* %system_mat325, i32 %index341
  store double 0.000000e+00, double* %element_ptr342
  %j_v343 = load i32, i32* %j335
  %tmp344 = add i32 %j_v343, 1
  store i32 %tmp344, i32* %j335
  br label %while336

merge345:                                         ; preds = %while336
  %i_v348 = load i32, i32* %i332
  %tmp349 = add i32 %i_v348, 1
  store i32 %tmp349, i32* %i332
  br label %while333

merge350:                                         ; preds = %while333
  %tmp353 = sub i32 %c_mat323, 1
  %tmp354 = sub i32 %r_mat321, 1
  %m_mat355 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 0
  %mat_mat356 = load double*, double** %m_mat355
  %m_r357 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 1
  %r_mat358 = load i32, i32* %m_r357
  %m_c359 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 2
  %c_mat360 = load i32, i32* %m_c359
  %m_mat361 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_v362 = load double*, double** %m_mat361
  %m_r363 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_v364 = load i32, i32* %m_r363
  %m_c365 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_v366 = load i32, i32* %m_c365
  %i367 = alloca i32
  store i32 0, i32* %i367
  br label %while368

while368:                                         ; preds = %merge390, %merge350
  %i_v396 = load i32, i32* %i367
  %bool_val397 = icmp sle i32 %i_v396, %tmp354
  br i1 %bool_val397, label %while_body369, label %merge395

while_body369:                                    ; preds = %while368
  %j370 = alloca i32
  store i32 0, i32* %j370
  br label %while371

while371:                                         ; preds = %while_body372, %while_body369
  %j_v391 = load i32, i32* %j370
  %bool_val392 = icmp sle i32 %j_v391, %tmp353
  br i1 %bool_val392, label %while_body372, label %merge390

while_body372:                                    ; preds = %while371
  %j_v373 = load i32, i32* %j370
  %i_v374 = load i32, i32* %i367
  %tmp375 = mul i32 %c_mat360, %i_v374
  %index376 = add i32 %j_v373, %tmp375
  %element_ptr377 = getelementptr double, double* %mat_mat356, i32 %index376
  %j_v378 = load i32, i32* %j370
  %tmp379 = sub i32 %j_v378, 0
  %tmp380 = add i32 %tmp379, 0
  %i_v381 = load i32, i32* %i367
  %tmp382 = sub i32 %i_v381, 0
  %tmp383 = add i32 %tmp382, 0
  %tmp384 = mul i32 %c_v366, %tmp383
  %index385 = add i32 %tmp380, %tmp384
  %element_ptr386 = getelementptr double, double* %mat_v362, i32 %index385
  %tmp_element387 = load double, double* %element_ptr386
  store double %tmp_element387, double* %element_ptr377
  %j_v388 = load i32, i32* %j370
  %tmp389 = add i32 %j_v388, 1
  store i32 %tmp389, i32* %j370
  br label %while371

merge390:                                         ; preds = %while371
  %i_v393 = load i32, i32* %i367
  %tmp394 = add i32 %i_v393, 1
  store i32 %tmp394, i32* %i367
  br label %while368

merge395:                                         ; preds = %while368
  %0 = bitcast double* %mat_mat319 to i8*
  tail call void @free(i8* %0)
  %1 = bitcast %matrix_t* %v to i8*
  tail call void @free(i8* %1)
  %m_r398 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 1
  %r_mat399 = load i32, i32* %m_r398
  %m_c400 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 2
  %c_mat401 = load i32, i32* %m_c400
  %size402 = mul i32 %r_mat399, %c_mat401
  %system_mat403 = alloca double, i32 %size402
  %m404 = alloca %matrix_t
  %m_mat405 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 0
  store double* %system_mat403, double** %m_mat405
  %m_r406 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 1
  store i32 %r_mat399, i32* %m_r406
  %m_c407 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 2
  store i32 %c_mat401, i32* %m_c407
  %tmp408 = sub i32 %r_mat399, 1
  %tmp409 = sub i32 %c_mat401, 1
  %i410 = alloca i32
  store i32 0, i32* %i410
  br label %while411

while411:                                         ; preds = %merge423, %merge395
  %i_v429 = load i32, i32* %i410
  %bool_val430 = icmp sle i32 %i_v429, %tmp408
  br i1 %bool_val430, label %while_body412, label %merge428

while_body412:                                    ; preds = %while411
  %j413 = alloca i32
  store i32 0, i32* %j413
  br label %while414

while414:                                         ; preds = %while_body415, %while_body412
  %j_v424 = load i32, i32* %j413
  %bool_val425 = icmp sle i32 %j_v424, %tmp409
  br i1 %bool_val425, label %while_body415, label %merge423

while_body415:                                    ; preds = %while414
  %j_v416 = load i32, i32* %j413
  %i_v417 = load i32, i32* %i410
  %tmp418 = mul i32 %c_mat401, %i_v417
  %index419 = add i32 %j_v416, %tmp418
  %element_ptr420 = getelementptr double, double* %system_mat403, i32 %index419
  store double 0.000000e+00, double* %element_ptr420
  %j_v421 = load i32, i32* %j413
  %tmp422 = add i32 %j_v421, 1
  store i32 %tmp422, i32* %j413
  br label %while414

merge423:                                         ; preds = %while414
  %i_v426 = load i32, i32* %i410
  %tmp427 = add i32 %i_v426, 1
  store i32 %tmp427, i32* %i410
  br label %while411

merge428:                                         ; preds = %while411
  %tmp431 = sub i32 %c_mat401, 1
  %tmp432 = sub i32 %r_mat399, 1
  %m_mat433 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 0
  %mat_mat434 = load double*, double** %m_mat433
  %m_r435 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 1
  %r_mat436 = load i32, i32* %m_r435
  %m_c437 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 2
  %c_mat438 = load i32, i32* %m_c437
  %m_mat439 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 0
  %mat_v440 = load double*, double** %m_mat439
  %m_r441 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 1
  %r_v442 = load i32, i32* %m_r441
  %m_c443 = getelementptr inbounds %matrix_t, %matrix_t* %m326, i32 0, i32 2
  %c_v444 = load i32, i32* %m_c443
  %i445 = alloca i32
  store i32 0, i32* %i445
  br label %while446

while446:                                         ; preds = %merge468, %merge428
  %i_v474 = load i32, i32* %i445
  %bool_val475 = icmp sle i32 %i_v474, %tmp432
  br i1 %bool_val475, label %while_body447, label %merge473

while_body447:                                    ; preds = %while446
  %j448 = alloca i32
  store i32 0, i32* %j448
  br label %while449

while449:                                         ; preds = %while_body450, %while_body447
  %j_v469 = load i32, i32* %j448
  %bool_val470 = icmp sle i32 %j_v469, %tmp431
  br i1 %bool_val470, label %while_body450, label %merge468

while_body450:                                    ; preds = %while449
  %j_v451 = load i32, i32* %j448
  %i_v452 = load i32, i32* %i445
  %tmp453 = mul i32 %c_mat438, %i_v452
  %index454 = add i32 %j_v451, %tmp453
  %element_ptr455 = getelementptr double, double* %mat_mat434, i32 %index454
  %j_v456 = load i32, i32* %j448
  %tmp457 = sub i32 %j_v456, 0
  %tmp458 = add i32 %tmp457, 0
  %i_v459 = load i32, i32* %i445
  %tmp460 = sub i32 %i_v459, 0
  %tmp461 = add i32 %tmp460, 0
  %tmp462 = mul i32 %c_v444, %tmp461
  %index463 = add i32 %tmp458, %tmp462
  %element_ptr464 = getelementptr double, double* %mat_v440, i32 %index463
  %tmp_element465 = load double, double* %element_ptr464
  store double %tmp_element465, double* %element_ptr455
  %j_v466 = load i32, i32* %j448
  %tmp467 = add i32 %j_v466, 1
  store i32 %tmp467, i32* %j448
  br label %while449

merge468:                                         ; preds = %while449
  %i_v471 = load i32, i32* %i445
  %tmp472 = add i32 %i_v471, 1
  store i32 %tmp472, i32* %i445
  br label %while446

merge473:                                         ; preds = %while446
  %v_ptr476 = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 1
  %v477 = load %matrix_t*, %matrix_t** %v_ptr476
  %m_mat478 = getelementptr inbounds %matrix_t, %matrix_t* %v477, i32 0, i32 0
  %mat_mat479 = load double*, double** %m_mat478
  %m_r480 = getelementptr inbounds %matrix_t, %matrix_t* %v477, i32 0, i32 1
  %r_mat481 = load i32, i32* %m_r480
  %m_c482 = getelementptr inbounds %matrix_t, %matrix_t* %v477, i32 0, i32 2
  %c_mat483 = load i32, i32* %m_c482
  %size484 = mul i32 %r_mat481, %c_mat483
  %system_mat485 = alloca double, i32 %size484
  %m486 = alloca %matrix_t
  %m_mat487 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 0
  store double* %system_mat485, double** %m_mat487
  %m_r488 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 1
  store i32 %r_mat481, i32* %m_r488
  %m_c489 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 2
  store i32 %c_mat483, i32* %m_c489
  %tmp490 = sub i32 %r_mat481, 1
  %tmp491 = sub i32 %c_mat483, 1
  %i492 = alloca i32
  store i32 0, i32* %i492
  br label %while493

while493:                                         ; preds = %merge505, %merge473
  %i_v511 = load i32, i32* %i492
  %bool_val512 = icmp sle i32 %i_v511, %tmp490
  br i1 %bool_val512, label %while_body494, label %merge510

while_body494:                                    ; preds = %while493
  %j495 = alloca i32
  store i32 0, i32* %j495
  br label %while496

while496:                                         ; preds = %while_body497, %while_body494
  %j_v506 = load i32, i32* %j495
  %bool_val507 = icmp sle i32 %j_v506, %tmp491
  br i1 %bool_val507, label %while_body497, label %merge505

while_body497:                                    ; preds = %while496
  %j_v498 = load i32, i32* %j495
  %i_v499 = load i32, i32* %i492
  %tmp500 = mul i32 %c_mat483, %i_v499
  %index501 = add i32 %j_v498, %tmp500
  %element_ptr502 = getelementptr double, double* %system_mat485, i32 %index501
  store double 0.000000e+00, double* %element_ptr502
  %j_v503 = load i32, i32* %j495
  %tmp504 = add i32 %j_v503, 1
  store i32 %tmp504, i32* %j495
  br label %while496

merge505:                                         ; preds = %while496
  %i_v508 = load i32, i32* %i492
  %tmp509 = add i32 %i_v508, 1
  store i32 %tmp509, i32* %i492
  br label %while493

merge510:                                         ; preds = %while493
  %tmp513 = sub i32 %c_mat483, 1
  %tmp514 = sub i32 %r_mat481, 1
  %m_mat515 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 0
  %mat_mat516 = load double*, double** %m_mat515
  %m_r517 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 1
  %r_mat518 = load i32, i32* %m_r517
  %m_c519 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 2
  %c_mat520 = load i32, i32* %m_c519
  %m_mat521 = getelementptr inbounds %matrix_t, %matrix_t* %v477, i32 0, i32 0
  %mat_v522 = load double*, double** %m_mat521
  %m_r523 = getelementptr inbounds %matrix_t, %matrix_t* %v477, i32 0, i32 1
  %r_v524 = load i32, i32* %m_r523
  %m_c525 = getelementptr inbounds %matrix_t, %matrix_t* %v477, i32 0, i32 2
  %c_v526 = load i32, i32* %m_c525
  %i527 = alloca i32
  store i32 0, i32* %i527
  br label %while528

while528:                                         ; preds = %merge550, %merge510
  %i_v556 = load i32, i32* %i527
  %bool_val557 = icmp sle i32 %i_v556, %tmp514
  br i1 %bool_val557, label %while_body529, label %merge555

while_body529:                                    ; preds = %while528
  %j530 = alloca i32
  store i32 0, i32* %j530
  br label %while531

while531:                                         ; preds = %while_body532, %while_body529
  %j_v551 = load i32, i32* %j530
  %bool_val552 = icmp sle i32 %j_v551, %tmp513
  br i1 %bool_val552, label %while_body532, label %merge550

while_body532:                                    ; preds = %while531
  %j_v533 = load i32, i32* %j530
  %i_v534 = load i32, i32* %i527
  %tmp535 = mul i32 %c_mat520, %i_v534
  %index536 = add i32 %j_v533, %tmp535
  %element_ptr537 = getelementptr double, double* %mat_mat516, i32 %index536
  %j_v538 = load i32, i32* %j530
  %tmp539 = sub i32 %j_v538, 0
  %tmp540 = add i32 %tmp539, 0
  %i_v541 = load i32, i32* %i527
  %tmp542 = sub i32 %i_v541, 0
  %tmp543 = add i32 %tmp542, 0
  %tmp544 = mul i32 %c_v526, %tmp543
  %index545 = add i32 %tmp540, %tmp544
  %element_ptr546 = getelementptr double, double* %mat_v522, i32 %index545
  %tmp_element547 = load double, double* %element_ptr546
  store double %tmp_element547, double* %element_ptr537
  %j_v548 = load i32, i32* %j530
  %tmp549 = add i32 %j_v548, 1
  store i32 %tmp549, i32* %j530
  br label %while531

merge550:                                         ; preds = %while531
  %i_v553 = load i32, i32* %i527
  %tmp554 = add i32 %i_v553, 1
  store i32 %tmp554, i32* %i527
  br label %while528

merge555:                                         ; preds = %while528
  %2 = bitcast double* %mat_mat479 to i8*
  tail call void @free(i8* %2)
  %3 = bitcast %matrix_t* %v477 to i8*
  tail call void @free(i8* %3)
  %m_r558 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 1
  %r_mat559 = load i32, i32* %m_r558
  %m_c560 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 2
  %c_mat561 = load i32, i32* %m_c560
  %size562 = mul i32 %r_mat559, %c_mat561
  %system_mat563 = alloca double, i32 %size562
  %m564 = alloca %matrix_t
  %m_mat565 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 0
  store double* %system_mat563, double** %m_mat565
  %m_r566 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 1
  store i32 %r_mat559, i32* %m_r566
  %m_c567 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 2
  store i32 %c_mat561, i32* %m_c567
  %tmp568 = sub i32 %r_mat559, 1
  %tmp569 = sub i32 %c_mat561, 1
  %i570 = alloca i32
  store i32 0, i32* %i570
  br label %while571

while571:                                         ; preds = %merge583, %merge555
  %i_v589 = load i32, i32* %i570
  %bool_val590 = icmp sle i32 %i_v589, %tmp568
  br i1 %bool_val590, label %while_body572, label %merge588

while_body572:                                    ; preds = %while571
  %j573 = alloca i32
  store i32 0, i32* %j573
  br label %while574

while574:                                         ; preds = %while_body575, %while_body572
  %j_v584 = load i32, i32* %j573
  %bool_val585 = icmp sle i32 %j_v584, %tmp569
  br i1 %bool_val585, label %while_body575, label %merge583

while_body575:                                    ; preds = %while574
  %j_v576 = load i32, i32* %j573
  %i_v577 = load i32, i32* %i570
  %tmp578 = mul i32 %c_mat561, %i_v577
  %index579 = add i32 %j_v576, %tmp578
  %element_ptr580 = getelementptr double, double* %system_mat563, i32 %index579
  store double 0.000000e+00, double* %element_ptr580
  %j_v581 = load i32, i32* %j573
  %tmp582 = add i32 %j_v581, 1
  store i32 %tmp582, i32* %j573
  br label %while574

merge583:                                         ; preds = %while574
  %i_v586 = load i32, i32* %i570
  %tmp587 = add i32 %i_v586, 1
  store i32 %tmp587, i32* %i570
  br label %while571

merge588:                                         ; preds = %while571
  %tmp591 = sub i32 %c_mat561, 1
  %tmp592 = sub i32 %r_mat559, 1
  %m_mat593 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 0
  %mat_mat594 = load double*, double** %m_mat593
  %m_r595 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 1
  %r_mat596 = load i32, i32* %m_r595
  %m_c597 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 2
  %c_mat598 = load i32, i32* %m_c597
  %m_mat599 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 0
  %mat_v600 = load double*, double** %m_mat599
  %m_r601 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 1
  %r_v602 = load i32, i32* %m_r601
  %m_c603 = getelementptr inbounds %matrix_t, %matrix_t* %m486, i32 0, i32 2
  %c_v604 = load i32, i32* %m_c603
  %i605 = alloca i32
  store i32 0, i32* %i605
  br label %while606

while606:                                         ; preds = %merge628, %merge588
  %i_v634 = load i32, i32* %i605
  %bool_val635 = icmp sle i32 %i_v634, %tmp592
  br i1 %bool_val635, label %while_body607, label %merge633

while_body607:                                    ; preds = %while606
  %j608 = alloca i32
  store i32 0, i32* %j608
  br label %while609

while609:                                         ; preds = %while_body610, %while_body607
  %j_v629 = load i32, i32* %j608
  %bool_val630 = icmp sle i32 %j_v629, %tmp591
  br i1 %bool_val630, label %while_body610, label %merge628

while_body610:                                    ; preds = %while609
  %j_v611 = load i32, i32* %j608
  %i_v612 = load i32, i32* %i605
  %tmp613 = mul i32 %c_mat598, %i_v612
  %index614 = add i32 %j_v611, %tmp613
  %element_ptr615 = getelementptr double, double* %mat_mat594, i32 %index614
  %j_v616 = load i32, i32* %j608
  %tmp617 = sub i32 %j_v616, 0
  %tmp618 = add i32 %tmp617, 0
  %i_v619 = load i32, i32* %i605
  %tmp620 = sub i32 %i_v619, 0
  %tmp621 = add i32 %tmp620, 0
  %tmp622 = mul i32 %c_v604, %tmp621
  %index623 = add i32 %tmp618, %tmp622
  %element_ptr624 = getelementptr double, double* %mat_v600, i32 %index623
  %tmp_element625 = load double, double* %element_ptr624
  store double %tmp_element625, double* %element_ptr615
  %j_v626 = load i32, i32* %j608
  %tmp627 = add i32 %j_v626, 1
  store i32 %tmp627, i32* %j608
  br label %while609

merge628:                                         ; preds = %while609
  %i_v631 = load i32, i32* %i605
  %tmp632 = add i32 %i_v631, 1
  store i32 %tmp632, i32* %i605
  br label %while606

merge633:                                         ; preds = %while606
  %4 = bitcast %return_t.2* %f2_result to i8*
  tail call void @free(i8* %4)
  %printf636 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_c637 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 2
  %c_mat638 = load i32, i32* %m_c637
  %m_r639 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 1
  %r_mat640 = load i32, i32* %m_r639
  %tmp645 = icmp ne i32 %c_mat638, %r_mat640
  br i1 %tmp645, label %then642, label %else644

merge641:                                         ; preds = %else644, %then642
  %m_mat646 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 0
  %mat_mat647 = load double*, double** %m_mat646
  %m_mat648 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 0
  %mat_v649 = load double*, double** %m_mat648
  %m_r650 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 1
  %r_mat651 = load i32, i32* %m_r650
  %tmp652 = sub i32 %r_mat651, 1
  %m_c653 = getelementptr inbounds %matrix_t, %matrix_t* %m564, i32 0, i32 2
  %c_mat654 = load i32, i32* %m_c653
  %tmp655 = sub i32 %c_mat654, 1
  %m_l656 = getelementptr inbounds %matrix_t, %matrix_t* %m404, i32 0, i32 2
  %l_mat657 = load i32, i32* %m_l656
  %tmp658 = sub i32 %l_mat657, 1
  %size659 = mul i32 %r_mat651, %c_mat654
  %system_mat660 = alloca double, i32 %size659
  %m661 = alloca %matrix_t
  %m_mat662 = getelementptr inbounds %matrix_t, %matrix_t* %m661, i32 0, i32 0
  store double* %system_mat660, double** %m_mat662
  %m_r663 = getelementptr inbounds %matrix_t, %matrix_t* %m661, i32 0, i32 1
  store i32 %r_mat651, i32* %m_r663
  %m_c664 = getelementptr inbounds %matrix_t, %matrix_t* %m661, i32 0, i32 2
  store i32 %c_mat654, i32* %m_c664
  %tmp665 = sub i32 %r_mat651, 1
  %tmp666 = sub i32 %c_mat654, 1
  %i667 = alloca i32
  store i32 0, i32* %i667
  br label %while668

then642:                                          ; preds = %merge633
  %printf643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge641

else644:                                          ; preds = %merge633
  br label %merge641

while668:                                         ; preds = %merge680, %merge641
  %i_v686 = load i32, i32* %i667
  %bool_val687 = icmp sle i32 %i_v686, %tmp665
  br i1 %bool_val687, label %while_body669, label %merge685

while_body669:                                    ; preds = %while668
  %j670 = alloca i32
  store i32 0, i32* %j670
  br label %while671

while671:                                         ; preds = %while_body672, %while_body669
  %j_v681 = load i32, i32* %j670
  %bool_val682 = icmp sle i32 %j_v681, %tmp666
  br i1 %bool_val682, label %while_body672, label %merge680

while_body672:                                    ; preds = %while671
  %j_v673 = load i32, i32* %j670
  %i_v674 = load i32, i32* %i667
  %tmp675 = mul i32 %c_mat654, %i_v674
  %index676 = add i32 %j_v673, %tmp675
  %element_ptr677 = getelementptr double, double* %system_mat660, i32 %index676
  store double 0.000000e+00, double* %element_ptr677
  %j_v678 = load i32, i32* %j670
  %tmp679 = add i32 %j_v678, 1
  store i32 %tmp679, i32* %j670
  br label %while671

merge680:                                         ; preds = %while671
  %i_v683 = load i32, i32* %i667
  %tmp684 = add i32 %i_v683, 1
  store i32 %tmp684, i32* %i667
  br label %while668

merge685:                                         ; preds = %while668
  %m_mat688 = getelementptr inbounds %matrix_t, %matrix_t* %m661, i32 0, i32 0
  %mat_mat689 = load double*, double** %m_mat688
  %i690 = alloca i32
  store i32 0, i32* %i690
  br label %while691

while691:                                         ; preds = %merge728, %merge685
  %i_v734 = load i32, i32* %i690
  %bool_val735 = icmp sle i32 %i_v734, %tmp652
  br i1 %bool_val735, label %while_body692, label %merge733

while_body692:                                    ; preds = %while691
  %j693 = alloca i32
  store i32 0, i32* %j693
  br label %while694

while694:                                         ; preds = %merge722, %while_body692
  %j_v729 = load i32, i32* %j693
  %bool_val730 = icmp sle i32 %j_v729, %tmp655
  br i1 %bool_val730, label %while_body695, label %merge728

while_body695:                                    ; preds = %while694
  %j_v696 = load i32, i32* %j693
  %i_v697 = load i32, i32* %i690
  %tmp698 = mul i32 %c_mat654, %i_v697
  %index699 = add i32 %j_v696, %tmp698
  %element_ptr700 = getelementptr double, double* %mat_mat689, i32 %index699
  %tmp_element701 = alloca double
  store double 0.000000e+00, double* %tmp_element701
  %k702 = alloca i32
  store i32 0, i32* %k702
  br label %while703

while703:                                         ; preds = %while_body704, %while_body695
  %k_v723 = load i32, i32* %k702
  %bool_val724 = icmp sle i32 %k_v723, %tmp658
  br i1 %bool_val724, label %while_body704, label %merge722

while_body704:                                    ; preds = %while703
  %k_v705 = load i32, i32* %k702
  %i_v706 = load i32, i32* %i690
  %tmp707 = mul i32 %l_mat657, %i_v706
  %index708 = add i32 %k_v705, %tmp707
  %element_ptr709 = getelementptr double, double* %mat_mat647, i32 %index708
  %tmp_element710 = load double, double* %element_ptr709
  %j_v711 = load i32, i32* %j693
  %k_v712 = load i32, i32* %k702
  %tmp713 = mul i32 %c_mat654, %k_v712
  %index714 = add i32 %j_v711, %tmp713
  %element_ptr715 = getelementptr double, double* %mat_v649, i32 %index714
  %tmp_element716 = load double, double* %element_ptr715
  %tmp717 = load double, double* %tmp_element701
  %tmp718 = fmul double %tmp_element710, %tmp_element716
  %tmp719 = fadd double %tmp718, %tmp717
  store double %tmp719, double* %tmp_element701
  %k_v720 = load i32, i32* %k702
  %tmp721 = add i32 %k_v720, 1
  store i32 %tmp721, i32* %k702
  br label %while703

merge722:                                         ; preds = %while703
  %tmp725 = load double, double* %tmp_element701
  store double %tmp725, double* %element_ptr700
  %j_v726 = load i32, i32* %j693
  %tmp727 = add i32 %j_v726, 1
  store i32 %tmp727, i32* %j693
  br label %while694

merge728:                                         ; preds = %while694
  %i_v731 = load i32, i32* %i690
  %tmp732 = add i32 %i_v731, 1
  store i32 %tmp732, i32* %i690
  br label %while691

merge733:                                         ; preds = %while691
  call void @f(%matrix_t* %m661)
  %printf736 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %f2_result737 = call %return_t.2* @f2(%matrix_t* %m404, %matrix_t* %m564, double 1.000000e+00)
  ret i32 0
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %int_to_double_t* @int2double(i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %int_to_double_t*
  %tmp = sitofp i32 %0 to double
  %converted_double = getelementptr inbounds %int_to_double_t, %int_to_double_t* %return, i32 0, i32 0
  store double %tmp, double* %converted_double
  ret %int_to_double_t* %return
}

define %double_to_int_t* @double2int(double) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %double_to_int_t*
  %tmp = fptosi double %0 to i32
  %converted_int = getelementptr inbounds %double_to_int_t, %double_to_int_t* %return, i32 0, i32 0
  store i32 %tmp, i32* %converted_int
  ret %double_to_int_t* %return
}

declare double* @load_cpp(i8*)

define %load_t* @load(i8*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 3) to i32))
  %return = bitcast i8* %malloccall to %load_t*
  %mat_arr = call double* @load_cpp(i8* %0)
  %element_ptr = getelementptr double, double* %mat_arr, i32 0
  %tmp = load double, double* %element_ptr
  %tmp1 = fptosi double %tmp to i32
  %element_ptr2 = getelementptr double, double* %mat_arr, i32 1
  %tmp3 = load double, double* %element_ptr2
  %tmp4 = fptosi double %tmp3 to i32
  %size = mul i32 %tmp1, %tmp4
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall5 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall5 to double*
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall6 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %tmp1, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %tmp4, i32* %m_c
  %tmp7 = sub i32 %tmp1, 1
  %tmp8 = sub i32 %tmp4, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v19 = load i32, i32* %i
  %bool_val20 = icmp sle i32 %i_v19, %tmp7
  br i1 %bool_val20, label %while_body, label %merge18

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while9

while9:                                           ; preds = %while_body10, %while_body
  %j_v15 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v15, %tmp8
  br i1 %bool_val, label %while_body10, label %merge

while_body10:                                     ; preds = %while9
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp11 = mul i32 %tmp4, %i_v
  %index = add i32 %j_v, %tmp11
  %element_ptr12 = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr12
  %j_v13 = load i32, i32* %j
  %tmp14 = add i32 %j_v13, 1
  store i32 %tmp14, i32* %j
  br label %while9

merge:                                            ; preds = %while9
  %i_v16 = load i32, i32* %i
  %tmp17 = add i32 %i_v16, 1
  store i32 %tmp17, i32* %i
  br label %while

merge18:                                          ; preds = %while
  %size21 = mul i32 %tmp1, %tmp4
  %mallocsize22 = mul i32 %size21, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall23 = tail call i8* @malloc(i32 %mallocsize22)
  %system_mat24 = bitcast i8* %malloccall23 to double*
  %malloccall25 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m26 = bitcast i8* %malloccall25 to %matrix_t*
  %m_mat27 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 0
  store double* %system_mat24, double** %m_mat27
  %m_r28 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 1
  store i32 %tmp1, i32* %m_r28
  %m_c29 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 2
  store i32 %tmp4, i32* %m_c29
  %tmp30 = sub i32 %tmp1, 1
  %tmp31 = sub i32 %tmp4, 1
  %i32 = alloca i32
  store i32 0, i32* %i32
  br label %while33

while33:                                          ; preds = %merge45, %merge18
  %i_v51 = load i32, i32* %i32
  %bool_val52 = icmp sle i32 %i_v51, %tmp30
  br i1 %bool_val52, label %while_body34, label %merge50

while_body34:                                     ; preds = %while33
  %j35 = alloca i32
  store i32 0, i32* %j35
  br label %while36

while36:                                          ; preds = %while_body37, %while_body34
  %j_v46 = load i32, i32* %j35
  %bool_val47 = icmp sle i32 %j_v46, %tmp31
  br i1 %bool_val47, label %while_body37, label %merge45

while_body37:                                     ; preds = %while36
  %j_v38 = load i32, i32* %j35
  %i_v39 = load i32, i32* %i32
  %tmp40 = mul i32 %tmp4, %i_v39
  %index41 = add i32 %j_v38, %tmp40
  %element_ptr42 = getelementptr double, double* %system_mat24, i32 %index41
  store double 0.000000e+00, double* %element_ptr42
  %j_v43 = load i32, i32* %j35
  %tmp44 = add i32 %j_v43, 1
  store i32 %tmp44, i32* %j35
  br label %while36

merge45:                                          ; preds = %while36
  %i_v48 = load i32, i32* %i32
  %tmp49 = add i32 %i_v48, 1
  store i32 %tmp49, i32* %i32
  br label %while33

merge50:                                          ; preds = %while33
  %size53 = mul i32 %tmp1, %tmp4
  %mallocsize54 = mul i32 %size53, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall55 = tail call i8* @malloc(i32 %mallocsize54)
  %system_mat56 = bitcast i8* %malloccall55 to double*
  %malloccall57 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m58 = bitcast i8* %malloccall57 to %matrix_t*
  %m_mat59 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 0
  store double* %system_mat56, double** %m_mat59
  %m_r60 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 1
  store i32 %tmp1, i32* %m_r60
  %m_c61 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 2
  store i32 %tmp4, i32* %m_c61
  %tmp62 = sub i32 %tmp1, 1
  %tmp63 = sub i32 %tmp4, 1
  %i64 = alloca i32
  store i32 0, i32* %i64
  br label %while65

while65:                                          ; preds = %merge77, %merge50
  %i_v83 = load i32, i32* %i64
  %bool_val84 = icmp sle i32 %i_v83, %tmp62
  br i1 %bool_val84, label %while_body66, label %merge82

while_body66:                                     ; preds = %while65
  %j67 = alloca i32
  store i32 0, i32* %j67
  br label %while68

while68:                                          ; preds = %while_body69, %while_body66
  %j_v78 = load i32, i32* %j67
  %bool_val79 = icmp sle i32 %j_v78, %tmp63
  br i1 %bool_val79, label %while_body69, label %merge77

while_body69:                                     ; preds = %while68
  %j_v70 = load i32, i32* %j67
  %i_v71 = load i32, i32* %i64
  %tmp72 = mul i32 %tmp4, %i_v71
  %index73 = add i32 %j_v70, %tmp72
  %element_ptr74 = getelementptr double, double* %system_mat56, i32 %index73
  store double 0.000000e+00, double* %element_ptr74
  %j_v75 = load i32, i32* %j67
  %tmp76 = add i32 %j_v75, 1
  store i32 %tmp76, i32* %j67
  br label %while68

merge77:                                          ; preds = %while68
  %i_v80 = load i32, i32* %i64
  %tmp81 = add i32 %i_v80, 1
  store i32 %tmp81, i32* %i64
  br label %while65

merge82:                                          ; preds = %while65
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %mat_g = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 0
  %mat_mat85 = load double*, double** %mat_g
  %mat_b = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 0
  %mat_mat86 = load double*, double** %mat_b
  %tmp87 = sub i32 %tmp1, 1
  %tmp88 = sub i32 %tmp4, 1
  %counter = alloca i32
  store i32 2, i32* %counter
  %i89 = alloca i32
  store i32 0, i32* %i89
  br label %while90

while90:                                          ; preds = %merge126, %merge82
  %i_v132 = load i32, i32* %i89
  %bool_val133 = icmp sle i32 %i_v132, %tmp87
  br i1 %bool_val133, label %while_body91, label %merge131

while_body91:                                     ; preds = %while90
  %j92 = alloca i32
  store i32 0, i32* %j92
  br label %while93

while93:                                          ; preds = %while_body94, %while_body91
  %j_v127 = load i32, i32* %j92
  %bool_val128 = icmp sle i32 %j_v127, %tmp88
  br i1 %bool_val128, label %while_body94, label %merge126

while_body94:                                     ; preds = %while93
  %j_v95 = load i32, i32* %j92
  %i_v96 = load i32, i32* %i89
  %tmp97 = mul i32 %tmp4, %i_v96
  %index98 = add i32 %j_v95, %tmp97
  %element_ptr99 = getelementptr double, double* %mat_mat, i32 %index98
  %j_v100 = load i32, i32* %j92
  %i_v101 = load i32, i32* %i89
  %tmp102 = mul i32 %tmp4, %i_v101
  %index103 = add i32 %j_v100, %tmp102
  %element_ptr104 = getelementptr double, double* %mat_mat85, i32 %index103
  %j_v105 = load i32, i32* %j92
  %i_v106 = load i32, i32* %i89
  %tmp107 = mul i32 %tmp4, %i_v106
  %index108 = add i32 %j_v105, %tmp107
  %element_ptr109 = getelementptr double, double* %mat_mat86, i32 %index108
  %counter110 = load i32, i32* %counter
  %element_ptr111 = getelementptr double, double* %mat_arr, i32 %counter110
  %tmp_element = load double, double* %element_ptr111
  store double %tmp_element, double* %element_ptr109
  %counter112 = load i32, i32* %counter
  %tmp113 = add i32 %counter112, 1
  store i32 %tmp113, i32* %counter
  %counter114 = load i32, i32* %counter
  %element_ptr115 = getelementptr double, double* %mat_arr, i32 %counter114
  %tmp_element116 = load double, double* %element_ptr115
  store double %tmp_element116, double* %element_ptr104
  %counter117 = load i32, i32* %counter
  %tmp118 = add i32 %counter117, 1
  store i32 %tmp118, i32* %counter
  %counter119 = load i32, i32* %counter
  %element_ptr120 = getelementptr double, double* %mat_arr, i32 %counter119
  %tmp_element121 = load double, double* %element_ptr120
  store double %tmp_element121, double* %element_ptr99
  %counter122 = load i32, i32* %counter
  %tmp123 = add i32 %counter122, 1
  store i32 %tmp123, i32* %counter
  %j_v124 = load i32, i32* %j92
  %tmp125 = add i32 %j_v124, 1
  store i32 %tmp125, i32* %j92
  br label %while93

merge126:                                         ; preds = %while93
  %i_v129 = load i32, i32* %i89
  %tmp130 = add i32 %i_v129, 1
  store i32 %tmp130, i32* %i89
  br label %while90

merge131:                                         ; preds = %while90
  %mat_r134 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %mat_r134
  %mat_r135 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 1
  store %matrix_t* %m26, %matrix_t** %mat_r135
  %mat_r136 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 2
  store %matrix_t* %m58, %matrix_t** %mat_r136
  ret %load_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  %tmp133 = load double, double* %k
  store double 0.000000e+00, double* %k
  %i134 = alloca i32
  %tmp135 = load i32, i32* %i134
  store i32 0, i32* %i134
  %j136 = alloca i32
  %tmp137 = load i32, i32* %j136
  store i32 0, i32* %j136
  %i138 = load i32, i32* %i134
  %tmp139 = icmp slt i32 %i138, 3
  %tmp140 = load i32, i32* %i134
  store i32 0, i32* %i134
  br label %while141

while141:                                         ; preds = %merge266, %merge130
  %i273 = load i32, i32* %i134
  %tmp274 = icmp slt i32 %i273, 3
  br i1 %tmp274, label %while_body142, label %merge272

while_body142:                                    ; preds = %while141
  %j143 = load i32, i32* %j136
  %tmp144 = icmp slt i32 %j143, 3
  %tmp145 = load i32, i32* %j136
  store i32 0, i32* %j136
  br label %while146

while146:                                         ; preds = %merge249, %while_body142
  %j267 = load i32, i32* %j136
  %tmp268 = icmp slt i32 %j267, 3
  br i1 %tmp268, label %while_body147, label %merge266

while_body147:                                    ; preds = %while146
  %k148 = load double, double* %k
  %m_r149 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat150 = load i32, i32* %m_r149
  %m_c151 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat152 = load i32, i32* %m_c151
  %i153 = load i32, i32* %i134
  %tmp155 = icmp sgt i32 0, %i153
  br i1 %tmp155, label %then, label %else

merge154:                                         ; preds = %else, %then
  %tmp156 = sub i32 %r_mat150, 1
  %tmp161 = icmp slt i32 %tmp156, %i153
  br i1 %tmp161, label %then158, label %else160

then:                                             ; preds = %while_body147
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge154

else:                                             ; preds = %while_body147
  br label %merge154

merge157:                                         ; preds = %else160, %then158
  %i162 = load i32, i32* %i134
  %tmp167 = icmp sgt i32 0, %i162
  br i1 %tmp167, label %then164, label %else166

then158:                                          ; preds = %merge154
  %printf159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge157

else160:                                          ; preds = %merge154
  br label %merge157

merge163:                                         ; preds = %else166, %then164
  %tmp168 = sub i32 %r_mat150, 1
  %tmp173 = icmp slt i32 %tmp168, %i162
  br i1 %tmp173, label %then170, label %else172

then164:                                          ; preds = %merge157
  %printf165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge163

else166:                                          ; preds = %merge157
  br label %merge163

merge169:                                         ; preds = %else172, %then170
  %j174 = load i32, i32* %j136
  %tmp179 = icmp sgt i32 0, %j174
  br i1 %tmp179, label %then176, label %else178

then170:                                          ; preds = %merge163
  %printf171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge169

else172:                                          ; preds = %merge163
  br label %merge169

merge175:                                         ; preds = %else178, %then176
  %tmp180 = sub i32 %c_mat152, 1
  %tmp185 = icmp slt i32 %tmp180, %j174
  br i1 %tmp185, label %then182, label %else184

then176:                                          ; preds = %merge169
  %printf177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge175

else178:                                          ; preds = %merge169
  br label %merge175

merge181:                                         ; preds = %else184, %then182
  %j186 = load i32, i32* %j136
  %tmp191 = icmp sgt i32 0, %j186
  br i1 %tmp191, label %then188, label %else190

then182:                                          ; preds = %merge175
  %printf183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge181

else184:                                          ; preds = %merge175
  br label %merge181

merge187:                                         ; preds = %else190, %then188
  %tmp192 = sub i32 %c_mat152, 1
  %tmp197 = icmp slt i32 %tmp192, %j186
  br i1 %tmp197, label %then194, label %else196

then188:                                          ; preds = %merge181
  %printf189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge187

else190:                                          ; preds = %merge181
  br label %merge187

merge193:                                         ; preds = %else196, %then194
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat198 = load double*, double** %mat
  %tmp199 = mul i32 %c_mat152, %i153
  %index200 = add i32 %j174, %tmp199
  %element_ptr201 = getelementptr double, double* %mat198, i32 %index200
  %element = load double, double* %element_ptr201
  %m_r202 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat203 = load i32, i32* %m_r202
  %m_c204 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat205 = load i32, i32* %m_c204
  %i206 = load i32, i32* %i134
  %tmp211 = icmp sgt i32 0, %i206
  br i1 %tmp211, label %then208, label %else210

then194:                                          ; preds = %merge187
  %printf195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge193

else196:                                          ; preds = %merge187
  br label %merge193

merge207:                                         ; preds = %else210, %then208
  %tmp212 = sub i32 %r_mat203, 1
  %tmp217 = icmp slt i32 %tmp212, %i206
  br i1 %tmp217, label %then214, label %else216

then208:                                          ; preds = %merge193
  %printf209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge207

else210:                                          ; preds = %merge193
  br label %merge207

merge213:                                         ; preds = %else216, %then214
  %i218 = load i32, i32* %i134
  %tmp223 = icmp sgt i32 0, %i218
  br i1 %tmp223, label %then220, label %else222

then214:                                          ; preds = %merge207
  %printf215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge213

else216:                                          ; preds = %merge207
  br label %merge213

merge219:                                         ; preds = %else222, %then220
  %tmp224 = sub i32 %r_mat203, 1
  %tmp229 = icmp slt i32 %tmp224, %i218
  br i1 %tmp229, label %then226, label %else228

then220:                                          ; preds = %merge213
  %printf221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge219

else222:                                          ; preds = %merge213
  br label %merge219

merge225:                                         ; preds = %else228, %then226
  %j230 = load i32, i32* %j136
  %tmp235 = icmp sgt i32 0, %j230
  br i1 %tmp235, label %then232, label %else234

then226:                                          ; preds = %merge219
  %printf227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge225

else228:                                          ; preds = %merge219
  br label %merge225

merge231:                                         ; preds = %else234, %then232
  %tmp236 = sub i32 %c_mat205, 1
  %tmp241 = icmp slt i32 %tmp236, %j230
  br i1 %tmp241, label %then238, label %else240

then232:                                          ; preds = %merge225
  %printf233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge231

else234:                                          ; preds = %merge225
  br label %merge231

merge237:                                         ; preds = %else240, %then238
  %j242 = load i32, i32* %j136
  %tmp247 = icmp sgt i32 0, %j242
  br i1 %tmp247, label %then244, label %else246

then238:                                          ; preds = %merge231
  %printf239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge237

else240:                                          ; preds = %merge231
  br label %merge237

merge243:                                         ; preds = %else246, %then244
  %tmp248 = sub i32 %c_mat205, 1
  %tmp253 = icmp slt i32 %tmp248, %j242
  br i1 %tmp253, label %then250, label %else252

then244:                                          ; preds = %merge237
  %printf245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge243

else246:                                          ; preds = %merge237
  br label %merge243

merge249:                                         ; preds = %else252, %then250
  %mat254 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat255 = load double*, double** %mat254
  %tmp256 = mul i32 %c_mat205, %i206
  %index257 = add i32 %j230, %tmp256
  %element_ptr258 = getelementptr double, double* %mat255, i32 %index257
  %element259 = load double, double* %element_ptr258
  %tmp260 = fmul double %element, %element259
  %tmp261 = fadd double %k148, %tmp260
  %tmp262 = load double, double* %k
  store double %tmp261, double* %k
  %j263 = load i32, i32* %j136
  %tmp264 = add i32 %j263, 1
  %tmp265 = load i32, i32* %j136
  store i32 %tmp264, i32* %j136
  br label %while146

then250:                                          ; preds = %merge243
  %printf251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge249

else252:                                          ; preds = %merge243
  br label %merge249

merge266:                                         ; preds = %while146
  %i269 = load i32, i32* %i134
  %tmp270 = add i32 %i269, 1
  %tmp271 = load i32, i32* %i134
  store i32 %tmp270, i32* %i134
  br label %while141

merge272:                                         ; preds = %while141
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k275 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k275, double* %return0
  ret %return_t* %return
  %tmp276 = alloca %return_t
  ret %return_t* %tmp276
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  %tmp133 = load i32, i32* %a
  store i32 0, i32* %a
  %b = alloca i32
  %tmp134 = load i32, i32* %b
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp135 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr136 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v137 = load i32, i32* %v_ptr136
  %tmp138 = load i32, i32* %b
  store i32 %v137, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b139 = load i32, i32* %b
  %tmp140 = add i32 %b139, 2
  %a141 = load i32, i32* %a
  %tmp142 = add i32 %a141, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp142, i32 %tmp140)
  %v_ptr143 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v144 = load %matrix_t*, %matrix_t** %v_ptr143
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat145 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_mat146 = load double*, double** %m_mat145
  %m_r147 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_mat148 = load i32, i32* %m_r147
  %m_c149 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_mat150 = load i32, i32* %m_c149
  %size151 = mul i32 %r_mat148, %c_mat150
  %system_mat152 = alloca double, i32 %size151
  %m153 = alloca %matrix_t
  %m_mat154 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  store double* %system_mat152, double** %m_mat154
  %m_r155 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  store i32 %r_mat148, i32* %m_r155
  %m_c156 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  store i32 %c_mat150, i32* %m_c156
  %tmp157 = sub i32 %r_mat148, 1
  %tmp158 = sub i32 %c_mat150, 1
  %i159 = alloca i32
  store i32 0, i32* %i159
  br label %while160

while160:                                         ; preds = %merge172, %merge130
  %i_v178 = load i32, i32* %i159
  %bool_val179 = icmp sle i32 %i_v178, %tmp157
  br i1 %bool_val179, label %while_body161, label %merge177

while_body161:                                    ; preds = %while160
  %j162 = alloca i32
  store i32 0, i32* %j162
  br label %while163

while163:                                         ; preds = %while_body164, %while_body161
  %j_v173 = load i32, i32* %j162
  %bool_val174 = icmp sle i32 %j_v173, %tmp158
  br i1 %bool_val174, label %while_body164, label %merge172

while_body164:                                    ; preds = %while163
  %j_v165 = load i32, i32* %j162
  %i_v166 = load i32, i32* %i159
  %tmp167 = mul i32 %c_mat150, %i_v166
  %index168 = add i32 %j_v165, %tmp167
  %element_ptr169 = getelementptr double, double* %system_mat152, i32 %index168
  store double 0.000000e+00, double* %element_ptr169
  %j_v170 = load i32, i32* %j162
  %tmp171 = add i32 %j_v170, 1
  store i32 %tmp171, i32* %j162
  br label %while163

merge172:                                         ; preds = %while163
  %i_v175 = load i32, i32* %i159
  %tmp176 = add i32 %i_v175, 1
  store i32 %tmp176, i32* %i159
  br label %while160

merge177:                                         ; preds = %while160
  %tmp180 = sub i32 %c_mat150, 1
  %tmp181 = sub i32 %r_mat148, 1
  %m_mat182 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_mat183 = load double*, double** %m_mat182
  %m_r184 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat185 = load i32, i32* %m_r184
  %m_c186 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat187 = load i32, i32* %m_c186
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_v189 = load double*, double** %m_mat188
  %m_r190 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_v191 = load i32, i32* %m_r190
  %m_c192 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_v193 = load i32, i32* %m_c192
  %i194 = alloca i32
  store i32 0, i32* %i194
  br label %while195

while195:                                         ; preds = %merge217, %merge177
  %i_v223 = load i32, i32* %i194
  %bool_val224 = icmp sle i32 %i_v223, %tmp181
  br i1 %bool_val224, label %while_body196, label %merge222

while_body196:                                    ; preds = %while195
  %j197 = alloca i32
  store i32 0, i32* %j197
  br label %while198

while198:                                         ; preds = %while_body199, %while_body196
  %j_v218 = load i32, i32* %j197
  %bool_val219 = icmp sle i32 %j_v218, %tmp180
  br i1 %bool_val219, label %while_body199, label %merge217

while_body199:                                    ; preds = %while198
  %j_v200 = load i32, i32* %j197
  %i_v201 = load i32, i32* %i194
  %tmp202 = mul i32 %c_mat187, %i_v201
  %index203 = add i32 %j_v200, %tmp202
  %element_ptr204 = getelementptr double, double* %mat_mat183, i32 %index203
  %j_v205 = load i32, i32* %j197
  %tmp206 = sub i32 %j_v205, 0
  %tmp207 = add i32 %tmp206, 0
  %i_v208 = load i32, i32* %i194
  %tmp209 = sub i32 %i_v208, 0
  %tmp210 = add i32 %tmp209, 0
  %tmp211 = mul i32 %c_v193, %tmp210
  %index212 = add i32 %tmp207, %tmp211
  %element_ptr213 = getelementptr double, double* %mat_v189, i32 %index212
  %tmp_element214 = load double, double* %element_ptr213
  store double %tmp_element214, double* %element_ptr204
  %j_v215 = load i32, i32* %j197
  %tmp216 = add i32 %j_v215, 1
  store i32 %tmp216, i32* %j197
  br label %while198

merge217:                                         ; preds = %while198
  %i_v220 = load i32, i32* %i194
  %tmp221 = add i32 %i_v220, 1
  store i32 %tmp221, i32* %i194
  br label %while195

merge222:                                         ; preds = %while195
  %4 = bitcast double* %mat_mat146 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v144 to i8*
  tail call void @free(i8* %5)
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %size229 = mul i32 %r_mat226, %c_mat228
  %system_mat230 = alloca double, i32 %size229
  %m231 = alloca %matrix_t
  %m_mat232 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  store double* %system_mat230, double** %m_mat232
  %m_r233 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  store i32 %r_mat226, i32* %m_r233
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  store i32 %c_mat228, i32* %m_c234
  %tmp235 = sub i32 %r_mat226, 1
  %tmp236 = sub i32 %c_mat228, 1
  %i237 = alloca i32
  store i32 0, i32* %i237
  br label %while238

while238:                                         ; preds = %merge250, %merge222
  %i_v256 = load i32, i32* %i237
  %bool_val257 = icmp sle i32 %i_v256, %tmp235
  br i1 %bool_val257, label %while_body239, label %merge255

while_body239:                                    ; preds = %while238
  %j240 = alloca i32
  store i32 0, i32* %j240
  br label %while241

while241:                                         ; preds = %while_body242, %while_body239
  %j_v251 = load i32, i32* %j240
  %bool_val252 = icmp sle i32 %j_v251, %tmp236
  br i1 %bool_val252, label %while_body242, label %merge250

while_body242:                                    ; preds = %while241
  %j_v243 = load i32, i32* %j240
  %i_v244 = load i32, i32* %i237
  %tmp245 = mul i32 %c_mat228, %i_v244
  %index246 = add i32 %j_v243, %tmp245
  %element_ptr247 = getelementptr double, double* %system_mat230, i32 %index246
  store double 0.000000e+00, double* %element_ptr247
  %j_v248 = load i32, i32* %j240
  %tmp249 = add i32 %j_v248, 1
  store i32 %tmp249, i32* %j240
  br label %while241

merge250:                                         ; preds = %while241
  %i_v253 = load i32, i32* %i237
  %tmp254 = add i32 %i_v253, 1
  store i32 %tmp254, i32* %i237
  br label %while238

merge255:                                         ; preds = %while238
  %tmp258 = sub i32 %c_mat228, 1
  %tmp259 = sub i32 %r_mat226, 1
  %m_mat260 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat261 = load double*, double** %m_mat260
  %m_r262 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat263 = load i32, i32* %m_r262
  %m_c264 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat265 = load i32, i32* %m_c264
  %m_mat266 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_v267 = load double*, double** %m_mat266
  %m_r268 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_v269 = load i32, i32* %m_r268
  %m_c270 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_v271 = load i32, i32* %m_c270
  %i272 = alloca i32
  store i32 0, i32* %i272
  br label %while273

while273:                                         ; preds = %merge295, %merge255
  %i_v301 = load i32, i32* %i272
  %bool_val302 = icmp sle i32 %i_v301, %tmp259
  br i1 %bool_val302, label %while_body274, label %merge300

while_body274:                                    ; preds = %while273
  %j275 = alloca i32
  store i32 0, i32* %j275
  br label %while276

while276:                                         ; preds = %while_body277, %while_body274
  %j_v296 = load i32, i32* %j275
  %bool_val297 = icmp sle i32 %j_v296, %tmp258
  br i1 %bool_val297, label %while_body277, label %merge295

while_body277:                                    ; preds = %while276
  %j_v278 = load i32, i32* %j275
  %i_v279 = load i32, i32* %i272
  %tmp280 = mul i32 %c_mat265, %i_v279
  %index281 = add i32 %j_v278, %tmp280
  %element_ptr282 = getelementptr double, double* %mat_mat261, i32 %index281
  %j_v283 = load i32, i32* %j275
  %tmp284 = sub i32 %j_v283, 0
  %tmp285 = add i32 %tmp284, 0
  %i_v286 = load i32, i32* %i272
  %tmp287 = sub i32 %i_v286, 0
  %tmp288 = add i32 %tmp287, 0
  %tmp289 = mul i32 %c_v271, %tmp288
  %index290 = add i32 %tmp285, %tmp289
  %element_ptr291 = getelementptr double, double* %mat_v267, i32 %index290
  %tmp_element292 = load double, double* %element_ptr291
  store double %tmp_element292, double* %element_ptr282
  %j_v293 = load i32, i32* %j275
  %tmp294 = add i32 %j_v293, 1
  store i32 %tmp294, i32* %j275
  br label %while276

merge295:                                         ; preds = %while276
  %i_v298 = load i32, i32* %i272
  %tmp299 = add i32 %i_v298, 1
  store i32 %tmp299, i32* %i272
  br label %while273

merge300:                                         ; preds = %while273
  %b303 = load i32, i32* %b
  %a304 = load i32, i32* %a
  %zeros_result305 = call %zero_matrix_t* @zeros(i32 %a304, i32 %b303)
  %v_ptr306 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result305, i32 0, i32 0
  %v307 = load %matrix_t*, %matrix_t** %v_ptr306
  %6 = bitcast %zero_matrix_t* %zeros_result305 to i8*
  tail call void @free(i8* %6)
  %m_mat308 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_mat309 = load double*, double** %m_mat308
  %m_r310 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_mat311 = load i32, i32* %m_r310
  %m_c312 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_mat313 = load i32, i32* %m_c312
  %size314 = mul i32 %r_mat311, %c_mat313
  %system_mat315 = alloca double, i32 %size314
  %m316 = alloca %matrix_t
  %m_mat317 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  store double* %system_mat315, double** %m_mat317
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  store i32 %r_mat311, i32* %m_r318
  %m_c319 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  store i32 %c_mat313, i32* %m_c319
  %tmp320 = sub i32 %r_mat311, 1
  %tmp321 = sub i32 %c_mat313, 1
  %i322 = alloca i32
  store i32 0, i32* %i322
  br label %while323

while323:                                         ; preds = %merge335, %merge300
  %i_v341 = load i32, i32* %i322
  %bool_val342 = icmp sle i32 %i_v341, %tmp320
  br i1 %bool_val342, label %while_body324, label %merge340

while_body324:                                    ; preds = %while323
  %j325 = alloca i32
  store i32 0, i32* %j325
  br label %while326

while326:                                         ; preds = %while_body327, %while_body324
  %j_v336 = load i32, i32* %j325
  %bool_val337 = icmp sle i32 %j_v336, %tmp321
  br i1 %bool_val337, label %while_body327, label %merge335

while_body327:                                    ; preds = %while326
  %j_v328 = load i32, i32* %j325
  %i_v329 = load i32, i32* %i322
  %tmp330 = mul i32 %c_mat313, %i_v329
  %index331 = add i32 %j_v328, %tmp330
  %element_ptr332 = getelementptr double, double* %system_mat315, i32 %index331
  store double 0.000000e+00, double* %element_ptr332
  %j_v333 = load i32, i32* %j325
  %tmp334 = add i32 %j_v333, 1
  store i32 %tmp334, i32* %j325
  br label %while326

merge335:                                         ; preds = %while326
  %i_v338 = load i32, i32* %i322
  %tmp339 = add i32 %i_v338, 1
  store i32 %tmp339, i32* %i322
  br label %while323

merge340:                                         ; preds = %while323
  %tmp343 = sub i32 %c_mat313, 1
  %tmp344 = sub i32 %r_mat311, 1
  %m_mat345 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_mat346 = load double*, double** %m_mat345
  %m_r347 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat348 = load i32, i32* %m_r347
  %m_c349 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat350 = load i32, i32* %m_c349
  %m_mat351 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_v352 = load double*, double** %m_mat351
  %m_r353 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_v354 = load i32, i32* %m_r353
  %m_c355 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_v356 = load i32, i32* %m_c355
  %i357 = alloca i32
  store i32 0, i32* %i357
  br label %while358

while358:                                         ; preds = %merge380, %merge340
  %i_v386 = load i32, i32* %i357
  %bool_val387 = icmp sle i32 %i_v386, %tmp344
  br i1 %bool_val387, label %while_body359, label %merge385

while_body359:                                    ; preds = %while358
  %j360 = alloca i32
  store i32 0, i32* %j360
  br label %while361

while361:                                         ; preds = %while_body362, %while_body359
  %j_v381 = load i32, i32* %j360
  %bool_val382 = icmp sle i32 %j_v381, %tmp343
  br i1 %bool_val382, label %while_body362, label %merge380

while_body362:                                    ; preds = %while361
  %j_v363 = load i32, i32* %j360
  %i_v364 = load i32, i32* %i357
  %tmp365 = mul i32 %c_mat350, %i_v364
  %index366 = add i32 %j_v363, %tmp365
  %element_ptr367 = getelementptr double, double* %mat_mat346, i32 %index366
  %j_v368 = load i32, i32* %j360
  %tmp369 = sub i32 %j_v368, 0
  %tmp370 = add i32 %tmp369, 0
  %i_v371 = load i32, i32* %i357
  %tmp372 = sub i32 %i_v371, 0
  %tmp373 = add i32 %tmp372, 0
  %tmp374 = mul i32 %c_v356, %tmp373
  %index375 = add i32 %tmp370, %tmp374
  %element_ptr376 = getelementptr double, double* %mat_v352, i32 %index375
  %tmp_element377 = load double, double* %element_ptr376
  store double %tmp_element377, double* %element_ptr367
  %j_v378 = load i32, i32* %j360
  %tmp379 = add i32 %j_v378, 1
  store i32 %tmp379, i32* %j360
  br label %while361

merge380:                                         ; preds = %while361
  %i_v383 = load i32, i32* %i357
  %tmp384 = add i32 %i_v383, 1
  store i32 %tmp384, i32* %i357
  br label %while358

merge385:                                         ; preds = %while358
  %7 = bitcast double* %mat_mat309 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v307 to i8*
  tail call void @free(i8* %8)
  %m_r388 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat389 = load i32, i32* %m_r388
  %m_c390 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat391 = load i32, i32* %m_c390
  %size392 = mul i32 %r_mat389, %c_mat391
  %system_mat393 = alloca double, i32 %size392
  %m394 = alloca %matrix_t
  %m_mat395 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  store double* %system_mat393, double** %m_mat395
  %m_r396 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  store i32 %r_mat389, i32* %m_r396
  %m_c397 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  store i32 %c_mat391, i32* %m_c397
  %tmp398 = sub i32 %r_mat389, 1
  %tmp399 = sub i32 %c_mat391, 1
  %i400 = alloca i32
  store i32 0, i32* %i400
  br label %while401

while401:                                         ; preds = %merge413, %merge385
  %i_v419 = load i32, i32* %i400
  %bool_val420 = icmp sle i32 %i_v419, %tmp398
  br i1 %bool_val420, label %while_body402, label %merge418

while_body402:                                    ; preds = %while401
  %j403 = alloca i32
  store i32 0, i32* %j403
  br label %while404

while404:                                         ; preds = %while_body405, %while_body402
  %j_v414 = load i32, i32* %j403
  %bool_val415 = icmp sle i32 %j_v414, %tmp399
  br i1 %bool_val415, label %while_body405, label %merge413

while_body405:                                    ; preds = %while404
  %j_v406 = load i32, i32* %j403
  %i_v407 = load i32, i32* %i400
  %tmp408 = mul i32 %c_mat391, %i_v407
  %index409 = add i32 %j_v406, %tmp408
  %element_ptr410 = getelementptr double, double* %system_mat393, i32 %index409
  store double 0.000000e+00, double* %element_ptr410
  %j_v411 = load i32, i32* %j403
  %tmp412 = add i32 %j_v411, 1
  store i32 %tmp412, i32* %j403
  br label %while404

merge413:                                         ; preds = %while404
  %i_v416 = load i32, i32* %i400
  %tmp417 = add i32 %i_v416, 1
  store i32 %tmp417, i32* %i400
  br label %while401

merge418:                                         ; preds = %while401
  %tmp421 = sub i32 %c_mat391, 1
  %tmp422 = sub i32 %r_mat389, 1
  %m_mat423 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_mat424 = load double*, double** %m_mat423
  %m_r425 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat426 = load i32, i32* %m_r425
  %m_c427 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat428 = load i32, i32* %m_c427
  %m_mat429 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_v430 = load double*, double** %m_mat429
  %m_r431 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_v432 = load i32, i32* %m_r431
  %m_c433 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_v434 = load i32, i32* %m_c433
  %i435 = alloca i32
  store i32 0, i32* %i435
  br label %while436

while436:                                         ; preds = %merge458, %merge418
  %i_v464 = load i32, i32* %i435
  %bool_val465 = icmp sle i32 %i_v464, %tmp422
  br i1 %bool_val465, label %while_body437, label %merge463

while_body437:                                    ; preds = %while436
  %j438 = alloca i32
  store i32 0, i32* %j438
  br label %while439

while439:                                         ; preds = %while_body440, %while_body437
  %j_v459 = load i32, i32* %j438
  %bool_val460 = icmp sle i32 %j_v459, %tmp421
  br i1 %bool_val460, label %while_body440, label %merge458

while_body440:                                    ; preds = %while439
  %j_v441 = load i32, i32* %j438
  %i_v442 = load i32, i32* %i435
  %tmp443 = mul i32 %c_mat428, %i_v442
  %index444 = add i32 %j_v441, %tmp443
  %element_ptr445 = getelementptr double, double* %mat_mat424, i32 %index444
  %j_v446 = load i32, i32* %j438
  %tmp447 = sub i32 %j_v446, 0
  %tmp448 = add i32 %tmp447, 0
  %i_v449 = load i32, i32* %i435
  %tmp450 = sub i32 %i_v449, 0
  %tmp451 = add i32 %tmp450, 0
  %tmp452 = mul i32 %c_v434, %tmp451
  %index453 = add i32 %tmp448, %tmp452
  %element_ptr454 = getelementptr double, double* %mat_v430, i32 %index453
  %tmp_element455 = load double, double* %element_ptr454
  store double %tmp_element455, double* %element_ptr445
  %j_v456 = load i32, i32* %j438
  %tmp457 = add i32 %j_v456, 1
  store i32 %tmp457, i32* %j438
  br label %while439

merge458:                                         ; preds = %while439
  %i_v461 = load i32, i32* %i435
  %tmp462 = add i32 %i_v461, 1
  store i32 %tmp462, i32* %i435
  br label %while436

merge463:                                         ; preds = %while436
  %m_r466 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat467 = load i32, i32* %m_r466
  %m_c468 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat469 = load i32, i32* %m_c468
  br i1 false, label %then, label %else

merge470:                                         ; preds = %else, %then
  %tmp471 = sub i32 %r_mat467, 1
  %tmp476 = icmp slt i32 %tmp471, 0
  br i1 %tmp476, label %then473, label %else475

then:                                             ; preds = %merge463
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge470

else:                                             ; preds = %merge463
  br label %merge470

merge472:                                         ; preds = %else475, %then473
  %a477 = load i32, i32* %a
  %tmp478 = sub i32 %a477, 1
  %tmp483 = icmp sgt i32 0, %tmp478
  br i1 %tmp483, label %then480, label %else482

then473:                                          ; preds = %merge470
  %printf474 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge472

else475:                                          ; preds = %merge470
  br label %merge472

merge479:                                         ; preds = %else482, %then480
  %tmp484 = sub i32 %r_mat467, 1
  %tmp489 = icmp slt i32 %tmp484, %tmp478
  br i1 %tmp489, label %then486, label %else488

then480:                                          ; preds = %merge472
  %printf481 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge479

else482:                                          ; preds = %merge472
  br label %merge479

merge485:                                         ; preds = %else488, %then486
  br i1 false, label %then491, label %else493

then486:                                          ; preds = %merge479
  %printf487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge485

else488:                                          ; preds = %merge479
  br label %merge485

merge490:                                         ; preds = %else493, %then491
  %tmp494 = sub i32 %c_mat469, 1
  %tmp499 = icmp slt i32 %tmp494, 0
  br i1 %tmp499, label %then496, label %else498

then491:                                          ; preds = %merge485
  %printf492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge490

else493:                                          ; preds = %merge485
  br label %merge490

merge495:                                         ; preds = %else498, %then496
  %b500 = load i32, i32* %b
  %tmp501 = sub i32 %b500, 1
  %tmp506 = icmp sgt i32 0, %tmp501
  br i1 %tmp506, label %then503, label %else505

then496:                                          ; preds = %merge490
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge495

else498:                                          ; preds = %merge490
  br label %merge495

merge502:                                         ; preds = %else505, %then503
  %tmp507 = sub i32 %c_mat469, 1
  %tmp512 = icmp slt i32 %tmp507, %tmp501
  br i1 %tmp512, label %then509, label %else511

then503:                                          ; preds = %merge495
  %printf504 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge502

else505:                                          ; preds = %merge495
  br label %merge502

merge508:                                         ; preds = %else511, %then509
  %tmp513 = sub i32 %tmp478, 0
  %tmp514 = sub i32 %tmp501, 0
  %tmp515 = add i32 %tmp514, 1
  %tmp516 = add i32 %tmp513, 1
  %size517 = mul i32 %tmp516, %tmp515
  %system_mat518 = alloca double, i32 %size517
  %m519 = alloca %matrix_t
  %m_mat520 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  store double* %system_mat518, double** %m_mat520
  %m_r521 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  store i32 %tmp516, i32* %m_r521
  %m_c522 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  store i32 %tmp515, i32* %m_c522
  %tmp523 = sub i32 %tmp516, 1
  %tmp524 = sub i32 %tmp515, 1
  %i525 = alloca i32
  store i32 0, i32* %i525
  br label %while526

then509:                                          ; preds = %merge502
  %printf510 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge508

else511:                                          ; preds = %merge502
  br label %merge508

while526:                                         ; preds = %merge538, %merge508
  %i_v544 = load i32, i32* %i525
  %bool_val545 = icmp sle i32 %i_v544, %tmp523
  br i1 %bool_val545, label %while_body527, label %merge543

while_body527:                                    ; preds = %while526
  %j528 = alloca i32
  store i32 0, i32* %j528
  br label %while529

while529:                                         ; preds = %while_body530, %while_body527
  %j_v539 = load i32, i32* %j528
  %bool_val540 = icmp sle i32 %j_v539, %tmp524
  br i1 %bool_val540, label %while_body530, label %merge538

while_body530:                                    ; preds = %while529
  %j_v531 = load i32, i32* %j528
  %i_v532 = load i32, i32* %i525
  %tmp533 = mul i32 %tmp515, %i_v532
  %index534 = add i32 %j_v531, %tmp533
  %element_ptr535 = getelementptr double, double* %system_mat518, i32 %index534
  store double 0.000000e+00, double* %element_ptr535
  %j_v536 = load i32, i32* %j528
  %tmp537 = add i32 %j_v536, 1
  store i32 %tmp537, i32* %j528
  br label %while529

merge538:                                         ; preds = %while529
  %i_v541 = load i32, i32* %i525
  %tmp542 = add i32 %i_v541, 1
  store i32 %tmp542, i32* %i525
  br label %while526

merge543:                                         ; preds = %while526
  %m_mat546 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_mat547 = load double*, double** %m_mat546
  %m_r548 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat549 = load i32, i32* %m_r548
  %m_c550 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_mat551 = load i32, i32* %m_c550
  %m_mat552 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v553 = load double*, double** %m_mat552
  %m_r554 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v555 = load i32, i32* %m_r554
  %m_c556 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v557 = load i32, i32* %m_c556
  %i558 = alloca i32
  store i32 0, i32* %i558
  br label %while559

while559:                                         ; preds = %merge581, %merge543
  %i_v587 = load i32, i32* %i558
  %bool_val588 = icmp sle i32 %i_v587, %tmp513
  br i1 %bool_val588, label %while_body560, label %merge586

while_body560:                                    ; preds = %while559
  %j561 = alloca i32
  store i32 0, i32* %j561
  br label %while562

while562:                                         ; preds = %while_body563, %while_body560
  %j_v582 = load i32, i32* %j561
  %bool_val583 = icmp sle i32 %j_v582, %tmp514
  br i1 %bool_val583, label %while_body563, label %merge581

while_body563:                                    ; preds = %while562
  %j_v564 = load i32, i32* %j561
  %i_v565 = load i32, i32* %i558
  %tmp566 = mul i32 %c_mat551, %i_v565
  %index567 = add i32 %j_v564, %tmp566
  %element_ptr568 = getelementptr double, double* %mat_mat547, i32 %index567
  %j_v569 = load i32, i32* %j561
  %tmp570 = sub i32 %j_v569, 0
  %tmp571 = add i32 %tmp570, 0
  %i_v572 = load i32, i32* %i558
  %tmp573 = sub i32 %i_v572, 0
  %tmp574 = add i32 %tmp573, 0
  %tmp575 = mul i32 %c_v557, %tmp574
  %index576 = add i32 %tmp571, %tmp575
  %element_ptr577 = getelementptr double, double* %mat_v553, i32 %index576
  %tmp_element578 = load double, double* %element_ptr577
  store double %tmp_element578, double* %element_ptr568
  %j_v579 = load i32, i32* %j561
  %tmp580 = add i32 %j_v579, 1
  store i32 %tmp580, i32* %j561
  br label %while562

merge581:                                         ; preds = %while562
  %i_v584 = load i32, i32* %i558
  %tmp585 = add i32 %i_v584, 1
  store i32 %tmp585, i32* %i558
  br label %while559

merge586:                                         ; preds = %while559
  %m_r589 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat590 = load i32, i32* %m_r589
  %m_c591 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat592 = load i32, i32* %m_c591
  br i1 false, label %then594, label %else596

merge593:                                         ; preds = %else596, %then594
  %tmp597 = sub i32 %r_mat590, 1
  %tmp602 = icmp slt i32 %tmp597, 1
  br i1 %tmp602, label %then599, label %else601

then594:                                          ; preds = %merge586
  %printf595 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge593

else596:                                          ; preds = %merge586
  br label %merge593

merge598:                                         ; preds = %else601, %then599
  %a603 = load i32, i32* %a
  %tmp608 = icmp sgt i32 0, %a603
  br i1 %tmp608, label %then605, label %else607

then599:                                          ; preds = %merge593
  %printf600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge598

else601:                                          ; preds = %merge593
  br label %merge598

merge604:                                         ; preds = %else607, %then605
  %tmp609 = sub i32 %r_mat590, 1
  %tmp614 = icmp slt i32 %tmp609, %a603
  br i1 %tmp614, label %then611, label %else613

then605:                                          ; preds = %merge598
  %printf606 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge604

else607:                                          ; preds = %merge598
  br label %merge604

merge610:                                         ; preds = %else613, %then611
  br i1 false, label %then616, label %else618

then611:                                          ; preds = %merge604
  %printf612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge610

else613:                                          ; preds = %merge604
  br label %merge610

merge615:                                         ; preds = %else618, %then616
  %tmp619 = sub i32 %c_mat592, 1
  %tmp624 = icmp slt i32 %tmp619, 1
  br i1 %tmp624, label %then621, label %else623

then616:                                          ; preds = %merge610
  %printf617 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge615

else618:                                          ; preds = %merge610
  br label %merge615

merge620:                                         ; preds = %else623, %then621
  %b625 = load i32, i32* %b
  %tmp630 = icmp sgt i32 0, %b625
  br i1 %tmp630, label %then627, label %else629

then621:                                          ; preds = %merge615
  %printf622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge620

else623:                                          ; preds = %merge615
  br label %merge620

merge626:                                         ; preds = %else629, %then627
  %tmp631 = sub i32 %c_mat592, 1
  %tmp636 = icmp slt i32 %tmp631, %b625
  br i1 %tmp636, label %then633, label %else635

then627:                                          ; preds = %merge620
  %printf628 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge626

else629:                                          ; preds = %merge620
  br label %merge626

merge632:                                         ; preds = %else635, %then633
  %tmp637 = sub i32 %a603, 1
  %tmp638 = add i32 %tmp637, 1
  %m_r639 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat640 = load i32, i32* %m_r639
  %tmp645 = icmp ne i32 %tmp638, %r_mat640
  br i1 %tmp645, label %then642, label %else644

then633:                                          ; preds = %merge626
  %printf634 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge632

else635:                                          ; preds = %merge626
  br label %merge632

merge641:                                         ; preds = %else644, %then642
  %tmp646 = sub i32 %b625, 1
  %tmp647 = add i32 %tmp646, 1
  %m_r648 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %r_mat649 = load i32, i32* %m_r648
  %tmp654 = icmp ne i32 %tmp647, %r_mat649
  br i1 %tmp654, label %then651, label %else653

then642:                                          ; preds = %merge632
  %printf643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge641

else644:                                          ; preds = %merge632
  br label %merge641

merge650:                                         ; preds = %else653, %then651
  %m_mat655 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat656 = load double*, double** %m_mat655
  %m_r657 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat658 = load i32, i32* %m_r657
  %m_c659 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat660 = load i32, i32* %m_c659
  %m_mat661 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_v662 = load double*, double** %m_mat661
  %m_r663 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_v664 = load i32, i32* %m_r663
  %m_c665 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_v666 = load i32, i32* %m_c665
  %i667 = alloca i32
  store i32 1, i32* %i667
  br label %while668

then651:                                          ; preds = %merge641
  %printf652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge650

else653:                                          ; preds = %merge641
  br label %merge650

while668:                                         ; preds = %merge690, %merge650
  %i_v696 = load i32, i32* %i667
  %bool_val697 = icmp sle i32 %i_v696, %a603
  br i1 %bool_val697, label %while_body669, label %merge695

while_body669:                                    ; preds = %while668
  %j670 = alloca i32
  store i32 1, i32* %j670
  br label %while671

while671:                                         ; preds = %while_body672, %while_body669
  %j_v691 = load i32, i32* %j670
  %bool_val692 = icmp sle i32 %j_v691, %b625
  br i1 %bool_val692, label %while_body672, label %merge690

while_body672:                                    ; preds = %while671
  %j_v673 = load i32, i32* %j670
  %i_v674 = load i32, i32* %i667
  %tmp675 = mul i32 %c_mat660, %i_v674
  %index676 = add i32 %j_v673, %tmp675
  %element_ptr677 = getelementptr double, double* %mat_mat656, i32 %index676
  %j_v678 = load i32, i32* %j670
  %tmp679 = sub i32 %j_v678, 1
  %tmp680 = add i32 %tmp679, 0
  %i_v681 = load i32, i32* %i667
  %tmp682 = sub i32 %i_v681, 1
  %tmp683 = add i32 %tmp682, 0
  %tmp684 = mul i32 %c_v666, %tmp683
  %index685 = add i32 %tmp680, %tmp684
  %element_ptr686 = getelementptr double, double* %mat_v662, i32 %index685
  %tmp_element687 = load double, double* %element_ptr686
  store double %tmp_element687, double* %element_ptr677
  %j_v688 = load i32, i32* %j670
  %tmp689 = add i32 %j_v688, 1
  store i32 %tmp689, i32* %j670
  br label %while671

merge690:                                         ; preds = %while671
  %i_v693 = load i32, i32* %i667
  %tmp694 = add i32 %i_v693, 1
  store i32 %tmp694, i32* %i667
  br label %while668

merge695:                                         ; preds = %while668
  %i698 = alloca i32
  %tmp699 = load i32, i32* %i698
  store i32 0, i32* %i698
  %j700 = alloca i32
  %tmp701 = load i32, i32* %j700
  store i32 0, i32* %j700
  %i702 = load i32, i32* %i698
  %a703 = load i32, i32* %a
  %tmp704 = icmp slt i32 %i702, %a703
  %tmp705 = load i32, i32* %i698
  store i32 0, i32* %i698
  br label %while706

while706:                                         ; preds = %merge908, %merge695
  %i916 = load i32, i32* %i698
  %a917 = load i32, i32* %a
  %tmp918 = icmp slt i32 %i916, %a917
  br i1 %tmp918, label %while_body707, label %merge915

while_body707:                                    ; preds = %while706
  %j708 = load i32, i32* %j700
  %b709 = load i32, i32* %b
  %tmp710 = icmp slt i32 %j708, %b709
  %tmp711 = load i32, i32* %j700
  store i32 0, i32* %j700
  br label %while712

while712:                                         ; preds = %merge896, %while_body707
  %j909 = load i32, i32* %j700
  %b910 = load i32, i32* %b
  %tmp911 = icmp slt i32 %j909, %b910
  br i1 %tmp911, label %while_body713, label %merge908

while_body713:                                    ; preds = %while712
  %k = alloca double
  %tmp714 = load double, double* %k
  store double 0.000000e+00, double* %k
  %m_r715 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat716 = load i32, i32* %m_r715
  %m_c717 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat718 = load i32, i32* %m_c717
  %i719 = load i32, i32* %i698
  %tmp724 = icmp sgt i32 0, %i719
  br i1 %tmp724, label %then721, label %else723

merge720:                                         ; preds = %else723, %then721
  %tmp725 = sub i32 %r_mat716, 1
  %tmp730 = icmp slt i32 %tmp725, %i719
  br i1 %tmp730, label %then727, label %else729

then721:                                          ; preds = %while_body713
  %printf722 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge720

else723:                                          ; preds = %while_body713
  br label %merge720

merge726:                                         ; preds = %else729, %then727
  %i731 = load i32, i32* %i698
  %tmp732 = add i32 %i731, 2
  %tmp737 = icmp sgt i32 0, %tmp732
  br i1 %tmp737, label %then734, label %else736

then727:                                          ; preds = %merge720
  %printf728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge726

else729:                                          ; preds = %merge720
  br label %merge726

merge733:                                         ; preds = %else736, %then734
  %tmp738 = sub i32 %r_mat716, 1
  %tmp743 = icmp slt i32 %tmp738, %tmp732
  br i1 %tmp743, label %then740, label %else742

then734:                                          ; preds = %merge726
  %printf735 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge733

else736:                                          ; preds = %merge726
  br label %merge733

merge739:                                         ; preds = %else742, %then740
  %j744 = load i32, i32* %j700
  %tmp749 = icmp sgt i32 0, %j744
  br i1 %tmp749, label %then746, label %else748

then740:                                          ; preds = %merge733
  %printf741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge739

else742:                                          ; preds = %merge733
  br label %merge739

merge745:                                         ; preds = %else748, %then746
  %tmp750 = sub i32 %c_mat718, 1
  %tmp755 = icmp slt i32 %tmp750, %j744
  br i1 %tmp755, label %then752, label %else754

then746:                                          ; preds = %merge739
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge739
  br label %merge745

merge751:                                         ; preds = %else754, %then752
  %j756 = load i32, i32* %j700
  %tmp757 = add i32 %j756, 2
  %tmp762 = icmp sgt i32 0, %tmp757
  br i1 %tmp762, label %then759, label %else761

then752:                                          ; preds = %merge745
  %printf753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge751

else754:                                          ; preds = %merge745
  br label %merge751

merge758:                                         ; preds = %else761, %then759
  %tmp763 = sub i32 %c_mat718, 1
  %tmp768 = icmp slt i32 %tmp763, %tmp757
  br i1 %tmp768, label %then765, label %else767

then759:                                          ; preds = %merge751
  %printf760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge758

else761:                                          ; preds = %merge751
  br label %merge758

merge764:                                         ; preds = %else767, %then765
  %tmp769 = sub i32 %tmp732, %i719
  %tmp770 = sub i32 %tmp757, %j744
  %tmp771 = add i32 %tmp770, 1
  %tmp772 = add i32 %tmp769, 1
  %size773 = mul i32 %tmp772, %tmp771
  %system_mat774 = alloca double, i32 %size773
  %m775 = alloca %matrix_t
  %m_mat776 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  store double* %system_mat774, double** %m_mat776
  %m_r777 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  store i32 %tmp772, i32* %m_r777
  %m_c778 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  store i32 %tmp771, i32* %m_c778
  %tmp779 = sub i32 %tmp772, 1
  %tmp780 = sub i32 %tmp771, 1
  %i781 = alloca i32
  store i32 0, i32* %i781
  br label %while782

then765:                                          ; preds = %merge758
  %printf766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge764

else767:                                          ; preds = %merge758
  br label %merge764

while782:                                         ; preds = %merge794, %merge764
  %i_v800 = load i32, i32* %i781
  %bool_val801 = icmp sle i32 %i_v800, %tmp779
  br i1 %bool_val801, label %while_body783, label %merge799

while_body783:                                    ; preds = %while782
  %j784 = alloca i32
  store i32 0, i32* %j784
  br label %while785

while785:                                         ; preds = %while_body786, %while_body783
  %j_v795 = load i32, i32* %j784
  %bool_val796 = icmp sle i32 %j_v795, %tmp780
  br i1 %bool_val796, label %while_body786, label %merge794

while_body786:                                    ; preds = %while785
  %j_v787 = load i32, i32* %j784
  %i_v788 = load i32, i32* %i781
  %tmp789 = mul i32 %tmp771, %i_v788
  %index790 = add i32 %j_v787, %tmp789
  %element_ptr791 = getelementptr double, double* %system_mat774, i32 %index790
  store double 0.000000e+00, double* %element_ptr791
  %j_v792 = load i32, i32* %j784
  %tmp793 = add i32 %j_v792, 1
  store i32 %tmp793, i32* %j784
  br label %while785

merge794:                                         ; preds = %while785
  %i_v797 = load i32, i32* %i781
  %tmp798 = add i32 %i_v797, 1
  store i32 %tmp798, i32* %i781
  br label %while782

merge799:                                         ; preds = %while782
  %m_mat802 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  %mat_mat803 = load double*, double** %m_mat802
  %m_r804 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  %r_mat805 = load i32, i32* %m_r804
  %m_c806 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  %c_mat807 = load i32, i32* %m_c806
  %m_mat808 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_v809 = load double*, double** %m_mat808
  %m_r810 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_v811 = load i32, i32* %m_r810
  %m_c812 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_v813 = load i32, i32* %m_c812
  %i814 = alloca i32
  store i32 0, i32* %i814
  br label %while815

while815:                                         ; preds = %merge837, %merge799
  %i_v843 = load i32, i32* %i814
  %bool_val844 = icmp sle i32 %i_v843, %tmp769
  br i1 %bool_val844, label %while_body816, label %merge842

while_body816:                                    ; preds = %while815
  %j817 = alloca i32
  store i32 0, i32* %j817
  br label %while818

while818:                                         ; preds = %while_body819, %while_body816
  %j_v838 = load i32, i32* %j817
  %bool_val839 = icmp sle i32 %j_v838, %tmp770
  br i1 %bool_val839, label %while_body819, label %merge837

while_body819:                                    ; preds = %while818
  %j_v820 = load i32, i32* %j817
  %i_v821 = load i32, i32* %i814
  %tmp822 = mul i32 %c_mat807, %i_v821
  %index823 = add i32 %j_v820, %tmp822
  %element_ptr824 = getelementptr double, double* %mat_mat803, i32 %index823
  %j_v825 = load i32, i32* %j817
  %tmp826 = sub i32 %j_v825, 0
  %tmp827 = add i32 %tmp826, %j744
  %i_v828 = load i32, i32* %i814
  %tmp829 = sub i32 %i_v828, 0
  %tmp830 = add i32 %tmp829, %i719
  %tmp831 = mul i32 %c_v813, %tmp830
  %index832 = add i32 %tmp827, %tmp831
  %element_ptr833 = getelementptr double, double* %mat_v809, i32 %index832
  %tmp_element834 = load double, double* %element_ptr833
  store double %tmp_element834, double* %element_ptr824
  %j_v835 = load i32, i32* %j817
  %tmp836 = add i32 %j_v835, 1
  store i32 %tmp836, i32* %j817
  br label %while818

merge837:                                         ; preds = %while818
  %i_v840 = load i32, i32* %i814
  %tmp841 = add i32 %i_v840, 1
  store i32 %tmp841, i32* %i814
  br label %while815

merge842:                                         ; preds = %while815
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m775, %matrix_t* %m61)
  %v_ptr845 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v846 = load double, double* %v_ptr845
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp847 = load double, double* %k
  store double %v846, double* %k
  %k848 = load double, double* %k
  %m_r849 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat850 = load i32, i32* %m_r849
  %m_c851 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat852 = load i32, i32* %m_c851
  %i853 = load i32, i32* %i698
  %tmp858 = icmp sgt i32 0, %i853
  br i1 %tmp858, label %then855, label %else857

merge854:                                         ; preds = %else857, %then855
  %tmp859 = sub i32 %r_mat850, 1
  %tmp864 = icmp slt i32 %tmp859, %i853
  br i1 %tmp864, label %then861, label %else863

then855:                                          ; preds = %merge842
  %printf856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge854

else857:                                          ; preds = %merge842
  br label %merge854

merge860:                                         ; preds = %else863, %then861
  %i865 = load i32, i32* %i698
  %tmp870 = icmp sgt i32 0, %i865
  br i1 %tmp870, label %then867, label %else869

then861:                                          ; preds = %merge854
  %printf862 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge860

else863:                                          ; preds = %merge854
  br label %merge860

merge866:                                         ; preds = %else869, %then867
  %tmp871 = sub i32 %r_mat850, 1
  %tmp876 = icmp slt i32 %tmp871, %i865
  br i1 %tmp876, label %then873, label %else875

then867:                                          ; preds = %merge860
  %printf868 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge866

else869:                                          ; preds = %merge860
  br label %merge866

merge872:                                         ; preds = %else875, %then873
  %j877 = load i32, i32* %j700
  %tmp882 = icmp sgt i32 0, %j877
  br i1 %tmp882, label %then879, label %else881

then873:                                          ; preds = %merge866
  %printf874 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge872

else875:                                          ; preds = %merge866
  br label %merge872

merge878:                                         ; preds = %else881, %then879
  %tmp883 = sub i32 %c_mat852, 1
  %tmp888 = icmp slt i32 %tmp883, %j877
  br i1 %tmp888, label %then885, label %else887

then879:                                          ; preds = %merge872
  %printf880 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge878

else881:                                          ; preds = %merge872
  br label %merge878

merge884:                                         ; preds = %else887, %then885
  %j889 = load i32, i32* %j700
  %tmp894 = icmp sgt i32 0, %j889
  br i1 %tmp894, label %then891, label %else893

then885:                                          ; preds = %merge878
  %printf886 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge884

else887:                                          ; preds = %merge878
  br label %merge884

merge890:                                         ; preds = %else893, %then891
  %tmp895 = sub i32 %c_mat852, 1
  %tmp900 = icmp slt i32 %tmp895, %j889
  br i1 %tmp900, label %then897, label %else899

then891:                                          ; preds = %merge884
  %printf892 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge890

else893:                                          ; preds = %merge884
  br label %merge890

merge896:                                         ; preds = %else899, %then897
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat901 = load double*, double** %mat
  %tmp902 = mul i32 %c_mat852, %i853
  %index903 = add i32 %j877, %tmp902
  %element_ptr904 = getelementptr double, double* %mat901, i32 %index903
  store double %k848, double* %element_ptr904
  %j905 = load i32, i32* %j700
  %tmp906 = add i32 %j905, 1
  %tmp907 = load i32, i32* %j700
  store i32 %tmp906, i32* %j700
  br label %while712

then897:                                          ; preds = %merge890
  %printf898 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge896

else899:                                          ; preds = %merge890
  br label %merge896

merge908:                                         ; preds = %while712
  %i912 = load i32, i32* %i698
  %tmp913 = add i32 %i912, 1
  %tmp914 = load i32, i32* %i698
  store i32 %tmp913, i32* %i698
  br label %while706

merge915:                                         ; preds = %while706
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r919 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat920 = load i32, i32* %m_r919
  %m_c921 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat922 = load i32, i32* %m_c921
  %size923 = mul i32 %r_mat920, %c_mat922
  %mallocsize = mul i32 %size923, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall924 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat925 = bitcast i8* %malloccall924 to double*
  %malloccall926 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m927 = bitcast i8* %malloccall926 to %matrix_t*
  %m_mat928 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  store double* %system_mat925, double** %m_mat928
  %m_r929 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  store i32 %r_mat920, i32* %m_r929
  %m_c930 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  store i32 %c_mat922, i32* %m_c930
  %tmp931 = sub i32 %r_mat920, 1
  %tmp932 = sub i32 %c_mat922, 1
  %i933 = alloca i32
  store i32 0, i32* %i933
  br label %while934

while934:                                         ; preds = %merge946, %merge915
  %i_v952 = load i32, i32* %i933
  %bool_val953 = icmp sle i32 %i_v952, %tmp931
  br i1 %bool_val953, label %while_body935, label %merge951

while_body935:                                    ; preds = %while934
  %j936 = alloca i32
  store i32 0, i32* %j936
  br label %while937

while937:                                         ; preds = %while_body938, %while_body935
  %j_v947 = load i32, i32* %j936
  %bool_val948 = icmp sle i32 %j_v947, %tmp932
  br i1 %bool_val948, label %while_body938, label %merge946

while_body938:                                    ; preds = %while937
  %j_v939 = load i32, i32* %j936
  %i_v940 = load i32, i32* %i933
  %tmp941 = mul i32 %c_mat922, %i_v940
  %index942 = add i32 %j_v939, %tmp941
  %element_ptr943 = getelementptr double, double* %system_mat925, i32 %index942
  store double 0.000000e+00, double* %element_ptr943
  %j_v944 = load i32, i32* %j936
  %tmp945 = add i32 %j_v944, 1
  store i32 %tmp945, i32* %j936
  br label %while937

merge946:                                         ; preds = %while937
  %i_v949 = load i32, i32* %i933
  %tmp950 = add i32 %i_v949, 1
  store i32 %tmp950, i32* %i933
  br label %while934

merge951:                                         ; preds = %while934
  %tmp954 = sub i32 %c_mat922, 1
  %tmp955 = sub i32 %r_mat920, 1
  %m_mat956 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  %mat_mat957 = load double*, double** %m_mat956
  %m_r958 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  %r_mat959 = load i32, i32* %m_r958
  %m_c960 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  %c_mat961 = load i32, i32* %m_c960
  %m_mat962 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_v963 = load double*, double** %m_mat962
  %m_r964 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_v965 = load i32, i32* %m_r964
  %m_c966 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_v967 = load i32, i32* %m_c966
  %i968 = alloca i32
  store i32 0, i32* %i968
  br label %while969

while969:                                         ; preds = %merge991, %merge951
  %i_v997 = load i32, i32* %i968
  %bool_val998 = icmp sle i32 %i_v997, %tmp955
  br i1 %bool_val998, label %while_body970, label %merge996

while_body970:                                    ; preds = %while969
  %j971 = alloca i32
  store i32 0, i32* %j971
  br label %while972

while972:                                         ; preds = %while_body973, %while_body970
  %j_v992 = load i32, i32* %j971
  %bool_val993 = icmp sle i32 %j_v992, %tmp954
  br i1 %bool_val993, label %while_body973, label %merge991

while_body973:                                    ; preds = %while972
  %j_v974 = load i32, i32* %j971
  %i_v975 = load i32, i32* %i968
  %tmp976 = mul i32 %c_mat961, %i_v975
  %index977 = add i32 %j_v974, %tmp976
  %element_ptr978 = getelementptr double, double* %mat_mat957, i32 %index977
  %j_v979 = load i32, i32* %j971
  %tmp980 = sub i32 %j_v979, 0
  %tmp981 = add i32 %tmp980, 0
  %i_v982 = load i32, i32* %i968
  %tmp983 = sub i32 %i_v982, 0
  %tmp984 = add i32 %tmp983, 0
  %tmp985 = mul i32 %c_v967, %tmp984
  %index986 = add i32 %tmp981, %tmp985
  %element_ptr987 = getelementptr double, double* %mat_v963, i32 %index986
  %tmp_element988 = load double, double* %element_ptr987
  store double %tmp_element988, double* %element_ptr978
  %j_v989 = load i32, i32* %j971
  %tmp990 = add i32 %j_v989, 1
  store i32 %tmp990, i32* %j971
  br label %while972

merge991:                                         ; preds = %while972
  %i_v994 = load i32, i32* %i968
  %tmp995 = add i32 %i_v994, 1
  store i32 %tmp995, i32* %i968
  br label %while969

merge996:                                         ; preds = %while969
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m927, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp999 = alloca %return_t.0
  ret %return_t.0* %tmp999
}

define void @f(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_mat55 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat56 = load double*, double** %m_mat55
  %m_r57 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat58 = load i32, i32* %m_r57
  %m_c59 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat60 = load i32, i32* %m_c59
  %tmp61 = sub i32 %r_mat58, 1
  %tmp62 = sub i32 %c_mat60, 1
  %i63 = alloca i32
  store i32 0, i32* %i63
  br label %while64

while64:                                          ; preds = %merge78, %merge52
  %i_v85 = load i32, i32* %i63
  %bool_val86 = icmp sle i32 %i_v85, %tmp61
  br i1 %bool_val86, label %while_body65, label %merge84

while_body65:                                     ; preds = %while64
  %j66 = alloca i32
  store i32 0, i32* %j66
  br label %while67

while67:                                          ; preds = %while_body68, %while_body65
  %j_v79 = load i32, i32* %j66
  %bool_val80 = icmp sle i32 %j_v79, %tmp62
  br i1 %bool_val80, label %while_body68, label %merge78

while_body68:                                     ; preds = %while67
  %j_v69 = load i32, i32* %j66
  %i_v70 = load i32, i32* %i63
  %tmp71 = mul i32 %c_mat60, %i_v70
  %index72 = add i32 %j_v69, %tmp71
  %element_ptr73 = getelementptr double, double* %mat_mat56, i32 %index72
  %tmp_element74 = load double, double* %element_ptr73
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element74)
  %printf75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v76 = load i32, i32* %j66
  %tmp77 = add i32 %j_v76, 1
  store i32 %tmp77, i32* %j66
  br label %while67

merge78:                                          ; preds = %while67
  %printf81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v82 = load i32, i32* %i63
  %tmp83 = add i32 %i_v82, 1
  store i32 %tmp83, i32* %i63
  br label %while64

merge84:                                          ; preds = %while64
  %printf87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  ret void
}

define %return_t.2* @f2(%matrix_t*, %matrix_t*, double) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %d = alloca double
  store double %2, double* %d
  %m_c133 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat134 = load i32, i32* %m_c133
  %m_r135 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat136 = load i32, i32* %m_r135
  %tmp138 = icmp ne i32 %c_mat134, %r_mat136
  br i1 %tmp138, label %then, label %else

merge137:                                         ; preds = %else, %then
  %m_mat139 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat140 = load double*, double** %m_mat139
  %m_mat141 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_v142 = load double*, double** %m_mat141
  %m_r143 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat144 = load i32, i32* %m_r143
  %tmp145 = sub i32 %r_mat144, 1
  %m_c146 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat147 = load i32, i32* %m_c146
  %tmp148 = sub i32 %c_mat147, 1
  %m_l = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %l_mat = load i32, i32* %m_l
  %tmp149 = sub i32 %l_mat, 1
  %size150 = mul i32 %r_mat144, %c_mat147
  %system_mat151 = alloca double, i32 %size150
  %m152 = alloca %matrix_t
  %m_mat153 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 0
  store double* %system_mat151, double** %m_mat153
  %m_r154 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 1
  store i32 %r_mat144, i32* %m_r154
  %m_c155 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 2
  store i32 %c_mat147, i32* %m_c155
  %tmp156 = sub i32 %r_mat144, 1
  %tmp157 = sub i32 %c_mat147, 1
  %i158 = alloca i32
  store i32 0, i32* %i158
  br label %while159

then:                                             ; preds = %merge130
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge137

else:                                             ; preds = %merge130
  br label %merge137

while159:                                         ; preds = %merge171, %merge137
  %i_v177 = load i32, i32* %i158
  %bool_val178 = icmp sle i32 %i_v177, %tmp156
  br i1 %bool_val178, label %while_body160, label %merge176

while_body160:                                    ; preds = %while159
  %j161 = alloca i32
  store i32 0, i32* %j161
  br label %while162

while162:                                         ; preds = %while_body163, %while_body160
  %j_v172 = load i32, i32* %j161
  %bool_val173 = icmp sle i32 %j_v172, %tmp157
  br i1 %bool_val173, label %while_body163, label %merge171

while_body163:                                    ; preds = %while162
  %j_v164 = load i32, i32* %j161
  %i_v165 = load i32, i32* %i158
  %tmp166 = mul i32 %c_mat147, %i_v165
  %index167 = add i32 %j_v164, %tmp166
  %element_ptr168 = getelementptr double, double* %system_mat151, i32 %index167
  store double 0.000000e+00, double* %element_ptr168
  %j_v169 = load i32, i32* %j161
  %tmp170 = add i32 %j_v169, 1
  store i32 %tmp170, i32* %j161
  br label %while162

merge171:                                         ; preds = %while162
  %i_v174 = load i32, i32* %i158
  %tmp175 = add i32 %i_v174, 1
  store i32 %tmp175, i32* %i158
  br label %while159

merge176:                                         ; preds = %while159
  %m_mat179 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 0
  %mat_mat180 = load double*, double** %m_mat179
  %i181 = alloca i32
  store i32 0, i32* %i181
  br label %while182

while182:                                         ; preds = %merge217, %merge176
  %i_v223 = load i32, i32* %i181
  %bool_val224 = icmp sle i32 %i_v223, %tmp145
  br i1 %bool_val224, label %while_body183, label %merge222

while_body183:                                    ; preds = %while182
  %j184 = alloca i32
  store i32 0, i32* %j184
  br label %while185

while185:                                         ; preds = %merge211, %while_body183
  %j_v218 = load i32, i32* %j184
  %bool_val219 = icmp sle i32 %j_v218, %tmp148
  br i1 %bool_val219, label %while_body186, label %merge217

while_body186:                                    ; preds = %while185
  %j_v187 = load i32, i32* %j184
  %i_v188 = load i32, i32* %i181
  %tmp189 = mul i32 %c_mat147, %i_v188
  %index190 = add i32 %j_v187, %tmp189
  %element_ptr191 = getelementptr double, double* %mat_mat180, i32 %index190
  %tmp_element192 = alloca double
  store double 0.000000e+00, double* %tmp_element192
  %k = alloca i32
  store i32 0, i32* %k
  br label %while193

while193:                                         ; preds = %while_body194, %while_body186
  %k_v212 = load i32, i32* %k
  %bool_val213 = icmp sle i32 %k_v212, %tmp149
  br i1 %bool_val213, label %while_body194, label %merge211

while_body194:                                    ; preds = %while193
  %k_v = load i32, i32* %k
  %i_v195 = load i32, i32* %i181
  %tmp196 = mul i32 %l_mat, %i_v195
  %index197 = add i32 %k_v, %tmp196
  %element_ptr198 = getelementptr double, double* %mat_mat140, i32 %index197
  %tmp_element199 = load double, double* %element_ptr198
  %j_v200 = load i32, i32* %j184
  %k_v201 = load i32, i32* %k
  %tmp202 = mul i32 %c_mat147, %k_v201
  %index203 = add i32 %j_v200, %tmp202
  %element_ptr204 = getelementptr double, double* %mat_v142, i32 %index203
  %tmp_element205 = load double, double* %element_ptr204
  %tmp206 = load double, double* %tmp_element192
  %tmp207 = fmul double %tmp_element199, %tmp_element205
  %tmp208 = fadd double %tmp207, %tmp206
  store double %tmp208, double* %tmp_element192
  %k_v209 = load i32, i32* %k
  %tmp210 = add i32 %k_v209, 1
  store i32 %tmp210, i32* %k
  br label %while193

merge211:                                         ; preds = %while193
  %tmp214 = load double, double* %tmp_element192
  store double %tmp214, double* %element_ptr191
  %j_v215 = load i32, i32* %j184
  %tmp216 = add i32 %j_v215, 1
  store i32 %tmp216, i32* %j184
  br label %while185

merge217:                                         ; preds = %while185
  %i_v220 = load i32, i32* %i181
  %tmp221 = add i32 %i_v220, 1
  store i32 %tmp221, i32* %i181
  br label %while182

merge222:                                         ; preds = %while182
  %d225 = load double, double* %d
  %m_mat226 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 0
  %mat_mat227 = load double*, double** %m_mat226
  %m_r228 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 1
  %r_mat229 = load i32, i32* %m_r228
  %tmp230 = sub i32 %r_mat229, 1
  %m_c231 = getelementptr inbounds %matrix_t, %matrix_t* %m152, i32 0, i32 2
  %c_mat232 = load i32, i32* %m_c231
  %tmp233 = sub i32 %c_mat232, 1
  %size234 = mul i32 %r_mat229, %c_mat232
  %system_mat235 = alloca double, i32 %size234
  %m236 = alloca %matrix_t
  %m_mat237 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 0
  store double* %system_mat235, double** %m_mat237
  %m_r238 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 1
  store i32 %r_mat229, i32* %m_r238
  %m_c239 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 2
  store i32 %c_mat232, i32* %m_c239
  %tmp240 = sub i32 %r_mat229, 1
  %tmp241 = sub i32 %c_mat232, 1
  %i242 = alloca i32
  store i32 0, i32* %i242
  br label %while243

while243:                                         ; preds = %merge255, %merge222
  %i_v261 = load i32, i32* %i242
  %bool_val262 = icmp sle i32 %i_v261, %tmp240
  br i1 %bool_val262, label %while_body244, label %merge260

while_body244:                                    ; preds = %while243
  %j245 = alloca i32
  store i32 0, i32* %j245
  br label %while246

while246:                                         ; preds = %while_body247, %while_body244
  %j_v256 = load i32, i32* %j245
  %bool_val257 = icmp sle i32 %j_v256, %tmp241
  br i1 %bool_val257, label %while_body247, label %merge255

while_body247:                                    ; preds = %while246
  %j_v248 = load i32, i32* %j245
  %i_v249 = load i32, i32* %i242
  %tmp250 = mul i32 %c_mat232, %i_v249
  %index251 = add i32 %j_v248, %tmp250
  %element_ptr252 = getelementptr double, double* %system_mat235, i32 %index251
  store double 0.000000e+00, double* %element_ptr252
  %j_v253 = load i32, i32* %j245
  %tmp254 = add i32 %j_v253, 1
  store i32 %tmp254, i32* %j245
  br label %while246

merge255:                                         ; preds = %while246
  %i_v258 = load i32, i32* %i242
  %tmp259 = add i32 %i_v258, 1
  store i32 %tmp259, i32* %i242
  br label %while243

merge260:                                         ; preds = %while243
  %m_mat263 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 0
  %mat_mat264 = load double*, double** %m_mat263
  %i265 = alloca i32
  store i32 0, i32* %i265
  br label %while266

while266:                                         ; preds = %merge285, %merge260
  %i_v291 = load i32, i32* %i265
  %bool_val292 = icmp sle i32 %i_v291, %tmp230
  br i1 %bool_val292, label %while_body267, label %merge290

while_body267:                                    ; preds = %while266
  %j268 = alloca i32
  store i32 0, i32* %j268
  br label %while269

while269:                                         ; preds = %while_body270, %while_body267
  %j_v286 = load i32, i32* %j268
  %bool_val287 = icmp sle i32 %j_v286, %tmp233
  br i1 %bool_val287, label %while_body270, label %merge285

while_body270:                                    ; preds = %while269
  %j_v271 = load i32, i32* %j268
  %i_v272 = load i32, i32* %i265
  %tmp273 = mul i32 %c_mat232, %i_v272
  %index274 = add i32 %j_v271, %tmp273
  %element_ptr275 = getelementptr double, double* %mat_mat227, i32 %index274
  %tmp_element276 = load double, double* %element_ptr275
  %j_v277 = load i32, i32* %j268
  %i_v278 = load i32, i32* %i265
  %tmp279 = mul i32 %c_mat232, %i_v278
  %index280 = add i32 %j_v277, %tmp279
  %element_ptr281 = getelementptr double, double* %mat_mat264, i32 %index280
  %tmp_element282 = fmul double %tmp_element276, %d225
  store double %tmp_element282, double* %element_ptr281
  %j_v283 = load i32, i32* %j268
  %tmp284 = add i32 %j_v283, 1
  store i32 %tmp284, i32* %j268
  br label %while269

merge285:                                         ; preds = %while269
  %i_v288 = load i32, i32* %i265
  %tmp289 = add i32 %i_v288, 1
  store i32 %tmp289, i32* %i265
  br label %while266

merge290:                                         ; preds = %while266
  %m_mat293 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 0
  %mat_mat294 = load double*, double** %m_mat293
  %m_r295 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 1
  %r_mat296 = load i32, i32* %m_r295
  %m_c297 = getelementptr inbounds %matrix_t, %matrix_t* %m236, i32 0, i32 2
  %c_mat298 = load i32, i32* %m_c297
  %tmp299 = sub i32 %r_mat296, 1
  %tmp300 = sub i32 %c_mat298, 1
  %i301 = alloca i32
  store i32 0, i32* %i301
  br label %while302

while302:                                         ; preds = %merge317, %merge290
  %i_v324 = load i32, i32* %i301
  %bool_val325 = icmp sle i32 %i_v324, %tmp299
  br i1 %bool_val325, label %while_body303, label %merge323

while_body303:                                    ; preds = %while302
  %j304 = alloca i32
  store i32 0, i32* %j304
  br label %while305

while305:                                         ; preds = %while_body306, %while_body303
  %j_v318 = load i32, i32* %j304
  %bool_val319 = icmp sle i32 %j_v318, %tmp300
  br i1 %bool_val319, label %while_body306, label %merge317

while_body306:                                    ; preds = %while305
  %j_v307 = load i32, i32* %j304
  %i_v308 = load i32, i32* %i301
  %tmp309 = mul i32 %c_mat298, %i_v308
  %index310 = add i32 %j_v307, %tmp309
  %element_ptr311 = getelementptr double, double* %mat_mat294, i32 %index310
  %tmp_element312 = load double, double* %element_ptr311
  %printf313 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element312)
  %printf314 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v315 = load i32, i32* %j304
  %tmp316 = add i32 %j_v315, 1
  store i32 %tmp316, i32* %j304
  br label %while305

merge317:                                         ; preds = %while305
  %printf320 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v321 = load i32, i32* %i301
  %tmp322 = add i32 %i_v321, 1
  store i32 %tmp322, i32* %i301
  br label %while302

merge323:                                         ; preds = %while302
  %printf326 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %return_t.2*
  %d327 = load double, double* %d
  %m_mat328 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat329 = load double*, double** %m_mat328
  %m_r330 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat331 = load i32, i32* %m_r330
  %tmp332 = sub i32 %r_mat331, 1
  %m_c333 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat334 = load i32, i32* %m_c333
  %tmp335 = sub i32 %c_mat334, 1
  %size336 = mul i32 %r_mat331, %c_mat334
  %system_mat337 = alloca double, i32 %size336
  %m338 = alloca %matrix_t
  %m_mat339 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 0
  store double* %system_mat337, double** %m_mat339
  %m_r340 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 1
  store i32 %r_mat331, i32* %m_r340
  %m_c341 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 2
  store i32 %c_mat334, i32* %m_c341
  %tmp342 = sub i32 %r_mat331, 1
  %tmp343 = sub i32 %c_mat334, 1
  %i344 = alloca i32
  store i32 0, i32* %i344
  br label %while345

while345:                                         ; preds = %merge357, %merge323
  %i_v363 = load i32, i32* %i344
  %bool_val364 = icmp sle i32 %i_v363, %tmp342
  br i1 %bool_val364, label %while_body346, label %merge362

while_body346:                                    ; preds = %while345
  %j347 = alloca i32
  store i32 0, i32* %j347
  br label %while348

while348:                                         ; preds = %while_body349, %while_body346
  %j_v358 = load i32, i32* %j347
  %bool_val359 = icmp sle i32 %j_v358, %tmp343
  br i1 %bool_val359, label %while_body349, label %merge357

while_body349:                                    ; preds = %while348
  %j_v350 = load i32, i32* %j347
  %i_v351 = load i32, i32* %i344
  %tmp352 = mul i32 %c_mat334, %i_v351
  %index353 = add i32 %j_v350, %tmp352
  %element_ptr354 = getelementptr double, double* %system_mat337, i32 %index353
  store double 0.000000e+00, double* %element_ptr354
  %j_v355 = load i32, i32* %j347
  %tmp356 = add i32 %j_v355, 1
  store i32 %tmp356, i32* %j347
  br label %while348

merge357:                                         ; preds = %while348
  %i_v360 = load i32, i32* %i344
  %tmp361 = add i32 %i_v360, 1
  store i32 %tmp361, i32* %i344
  br label %while345

merge362:                                         ; preds = %while345
  %m_mat365 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 0
  %mat_mat366 = load double*, double** %m_mat365
  %i367 = alloca i32
  store i32 0, i32* %i367
  br label %while368

while368:                                         ; preds = %merge387, %merge362
  %i_v393 = load i32, i32* %i367
  %bool_val394 = icmp sle i32 %i_v393, %tmp332
  br i1 %bool_val394, label %while_body369, label %merge392

while_body369:                                    ; preds = %while368
  %j370 = alloca i32
  store i32 0, i32* %j370
  br label %while371

while371:                                         ; preds = %while_body372, %while_body369
  %j_v388 = load i32, i32* %j370
  %bool_val389 = icmp sle i32 %j_v388, %tmp335
  br i1 %bool_val389, label %while_body372, label %merge387

while_body372:                                    ; preds = %while371
  %j_v373 = load i32, i32* %j370
  %i_v374 = load i32, i32* %i367
  %tmp375 = mul i32 %c_mat334, %i_v374
  %index376 = add i32 %j_v373, %tmp375
  %element_ptr377 = getelementptr double, double* %mat_mat329, i32 %index376
  %tmp_element378 = load double, double* %element_ptr377
  %j_v379 = load i32, i32* %j370
  %i_v380 = load i32, i32* %i367
  %tmp381 = mul i32 %c_mat334, %i_v380
  %index382 = add i32 %j_v379, %tmp381
  %element_ptr383 = getelementptr double, double* %mat_mat366, i32 %index382
  %tmp_element384 = fmul double %tmp_element378, %d327
  store double %tmp_element384, double* %element_ptr383
  %j_v385 = load i32, i32* %j370
  %tmp386 = add i32 %j_v385, 1
  store i32 %tmp386, i32* %j370
  br label %while371

merge387:                                         ; preds = %while371
  %i_v390 = load i32, i32* %i367
  %tmp391 = add i32 %i_v390, 1
  store i32 %tmp391, i32* %i367
  br label %while368

merge392:                                         ; preds = %while368
  %m_r395 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 1
  %r_mat396 = load i32, i32* %m_r395
  %m_c397 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 2
  %c_mat398 = load i32, i32* %m_c397
  %size399 = mul i32 %r_mat396, %c_mat398
  %mallocsize = mul i32 %size399, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall400 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat401 = bitcast i8* %malloccall400 to double*
  %malloccall402 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m403 = bitcast i8* %malloccall402 to %matrix_t*
  %m_mat404 = getelementptr inbounds %matrix_t, %matrix_t* %m403, i32 0, i32 0
  store double* %system_mat401, double** %m_mat404
  %m_r405 = getelementptr inbounds %matrix_t, %matrix_t* %m403, i32 0, i32 1
  store i32 %r_mat396, i32* %m_r405
  %m_c406 = getelementptr inbounds %matrix_t, %matrix_t* %m403, i32 0, i32 2
  store i32 %c_mat398, i32* %m_c406
  %tmp407 = sub i32 %r_mat396, 1
  %tmp408 = sub i32 %c_mat398, 1
  %i409 = alloca i32
  store i32 0, i32* %i409
  br label %while410

while410:                                         ; preds = %merge422, %merge392
  %i_v428 = load i32, i32* %i409
  %bool_val429 = icmp sle i32 %i_v428, %tmp407
  br i1 %bool_val429, label %while_body411, label %merge427

while_body411:                                    ; preds = %while410
  %j412 = alloca i32
  store i32 0, i32* %j412
  br label %while413

while413:                                         ; preds = %while_body414, %while_body411
  %j_v423 = load i32, i32* %j412
  %bool_val424 = icmp sle i32 %j_v423, %tmp408
  br i1 %bool_val424, label %while_body414, label %merge422

while_body414:                                    ; preds = %while413
  %j_v415 = load i32, i32* %j412
  %i_v416 = load i32, i32* %i409
  %tmp417 = mul i32 %c_mat398, %i_v416
  %index418 = add i32 %j_v415, %tmp417
  %element_ptr419 = getelementptr double, double* %system_mat401, i32 %index418
  store double 0.000000e+00, double* %element_ptr419
  %j_v420 = load i32, i32* %j412
  %tmp421 = add i32 %j_v420, 1
  store i32 %tmp421, i32* %j412
  br label %while413

merge422:                                         ; preds = %while413
  %i_v425 = load i32, i32* %i409
  %tmp426 = add i32 %i_v425, 1
  store i32 %tmp426, i32* %i409
  br label %while410

merge427:                                         ; preds = %while410
  %tmp430 = sub i32 %c_mat398, 1
  %tmp431 = sub i32 %r_mat396, 1
  %m_mat432 = getelementptr inbounds %matrix_t, %matrix_t* %m403, i32 0, i32 0
  %mat_mat433 = load double*, double** %m_mat432
  %m_r434 = getelementptr inbounds %matrix_t, %matrix_t* %m403, i32 0, i32 1
  %r_mat435 = load i32, i32* %m_r434
  %m_c436 = getelementptr inbounds %matrix_t, %matrix_t* %m403, i32 0, i32 2
  %c_mat437 = load i32, i32* %m_c436
  %m_mat438 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 0
  %mat_v439 = load double*, double** %m_mat438
  %m_r440 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 1
  %r_v441 = load i32, i32* %m_r440
  %m_c442 = getelementptr inbounds %matrix_t, %matrix_t* %m338, i32 0, i32 2
  %c_v443 = load i32, i32* %m_c442
  %i444 = alloca i32
  store i32 0, i32* %i444
  br label %while445

while445:                                         ; preds = %merge467, %merge427
  %i_v473 = load i32, i32* %i444
  %bool_val474 = icmp sle i32 %i_v473, %tmp431
  br i1 %bool_val474, label %while_body446, label %merge472

while_body446:                                    ; preds = %while445
  %j447 = alloca i32
  store i32 0, i32* %j447
  br label %while448

while448:                                         ; preds = %while_body449, %while_body446
  %j_v468 = load i32, i32* %j447
  %bool_val469 = icmp sle i32 %j_v468, %tmp430
  br i1 %bool_val469, label %while_body449, label %merge467

while_body449:                                    ; preds = %while448
  %j_v450 = load i32, i32* %j447
  %i_v451 = load i32, i32* %i444
  %tmp452 = mul i32 %c_mat437, %i_v451
  %index453 = add i32 %j_v450, %tmp452
  %element_ptr454 = getelementptr double, double* %mat_mat433, i32 %index453
  %j_v455 = load i32, i32* %j447
  %tmp456 = sub i32 %j_v455, 0
  %tmp457 = add i32 %tmp456, 0
  %i_v458 = load i32, i32* %i444
  %tmp459 = sub i32 %i_v458, 0
  %tmp460 = add i32 %tmp459, 0
  %tmp461 = mul i32 %c_v443, %tmp460
  %index462 = add i32 %tmp457, %tmp461
  %element_ptr463 = getelementptr double, double* %mat_v439, i32 %index462
  %tmp_element464 = load double, double* %element_ptr463
  store double %tmp_element464, double* %element_ptr454
  %j_v465 = load i32, i32* %j447
  %tmp466 = add i32 %j_v465, 1
  store i32 %tmp466, i32* %j447
  br label %while448

merge467:                                         ; preds = %while448
  %i_v470 = load i32, i32* %i444
  %tmp471 = add i32 %i_v470, 1
  store i32 %tmp471, i32* %i444
  br label %while445

merge472:                                         ; preds = %while445
  %return0 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 0
  store %matrix_t* %m403, %matrix_t** %return0
  %m_r475 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat476 = load i32, i32* %m_r475
  %m_c477 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat478 = load i32, i32* %m_c477
  %size479 = mul i32 %r_mat476, %c_mat478
  %mallocsize480 = mul i32 %size479, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall481 = tail call i8* @malloc(i32 %mallocsize480)
  %system_mat482 = bitcast i8* %malloccall481 to double*
  %malloccall483 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m484 = bitcast i8* %malloccall483 to %matrix_t*
  %m_mat485 = getelementptr inbounds %matrix_t, %matrix_t* %m484, i32 0, i32 0
  store double* %system_mat482, double** %m_mat485
  %m_r486 = getelementptr inbounds %matrix_t, %matrix_t* %m484, i32 0, i32 1
  store i32 %r_mat476, i32* %m_r486
  %m_c487 = getelementptr inbounds %matrix_t, %matrix_t* %m484, i32 0, i32 2
  store i32 %c_mat478, i32* %m_c487
  %tmp488 = sub i32 %r_mat476, 1
  %tmp489 = sub i32 %c_mat478, 1
  %i490 = alloca i32
  store i32 0, i32* %i490
  br label %while491

while491:                                         ; preds = %merge503, %merge472
  %i_v509 = load i32, i32* %i490
  %bool_val510 = icmp sle i32 %i_v509, %tmp488
  br i1 %bool_val510, label %while_body492, label %merge508

while_body492:                                    ; preds = %while491
  %j493 = alloca i32
  store i32 0, i32* %j493
  br label %while494

while494:                                         ; preds = %while_body495, %while_body492
  %j_v504 = load i32, i32* %j493
  %bool_val505 = icmp sle i32 %j_v504, %tmp489
  br i1 %bool_val505, label %while_body495, label %merge503

while_body495:                                    ; preds = %while494
  %j_v496 = load i32, i32* %j493
  %i_v497 = load i32, i32* %i490
  %tmp498 = mul i32 %c_mat478, %i_v497
  %index499 = add i32 %j_v496, %tmp498
  %element_ptr500 = getelementptr double, double* %system_mat482, i32 %index499
  store double 0.000000e+00, double* %element_ptr500
  %j_v501 = load i32, i32* %j493
  %tmp502 = add i32 %j_v501, 1
  store i32 %tmp502, i32* %j493
  br label %while494

merge503:                                         ; preds = %while494
  %i_v506 = load i32, i32* %i490
  %tmp507 = add i32 %i_v506, 1
  store i32 %tmp507, i32* %i490
  br label %while491

merge508:                                         ; preds = %while491
  %tmp511 = sub i32 %c_mat478, 1
  %tmp512 = sub i32 %r_mat476, 1
  %m_mat513 = getelementptr inbounds %matrix_t, %matrix_t* %m484, i32 0, i32 0
  %mat_mat514 = load double*, double** %m_mat513
  %m_r515 = getelementptr inbounds %matrix_t, %matrix_t* %m484, i32 0, i32 1
  %r_mat516 = load i32, i32* %m_r515
  %m_c517 = getelementptr inbounds %matrix_t, %matrix_t* %m484, i32 0, i32 2
  %c_mat518 = load i32, i32* %m_c517
  %m_mat519 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_v520 = load double*, double** %m_mat519
  %m_r521 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_v522 = load i32, i32* %m_r521
  %m_c523 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_v524 = load i32, i32* %m_c523
  %i525 = alloca i32
  store i32 0, i32* %i525
  br label %while526

while526:                                         ; preds = %merge548, %merge508
  %i_v554 = load i32, i32* %i525
  %bool_val555 = icmp sle i32 %i_v554, %tmp512
  br i1 %bool_val555, label %while_body527, label %merge553

while_body527:                                    ; preds = %while526
  %j528 = alloca i32
  store i32 0, i32* %j528
  br label %while529

while529:                                         ; preds = %while_body530, %while_body527
  %j_v549 = load i32, i32* %j528
  %bool_val550 = icmp sle i32 %j_v549, %tmp511
  br i1 %bool_val550, label %while_body530, label %merge548

while_body530:                                    ; preds = %while529
  %j_v531 = load i32, i32* %j528
  %i_v532 = load i32, i32* %i525
  %tmp533 = mul i32 %c_mat518, %i_v532
  %index534 = add i32 %j_v531, %tmp533
  %element_ptr535 = getelementptr double, double* %mat_mat514, i32 %index534
  %j_v536 = load i32, i32* %j528
  %tmp537 = sub i32 %j_v536, 0
  %tmp538 = add i32 %tmp537, 0
  %i_v539 = load i32, i32* %i525
  %tmp540 = sub i32 %i_v539, 0
  %tmp541 = add i32 %tmp540, 0
  %tmp542 = mul i32 %c_v524, %tmp541
  %index543 = add i32 %tmp538, %tmp542
  %element_ptr544 = getelementptr double, double* %mat_v520, i32 %index543
  %tmp_element545 = load double, double* %element_ptr544
  store double %tmp_element545, double* %element_ptr535
  %j_v546 = load i32, i32* %j528
  %tmp547 = add i32 %j_v546, 1
  store i32 %tmp547, i32* %j528
  br label %while529

merge548:                                         ; preds = %while529
  %i_v551 = load i32, i32* %i525
  %tmp552 = add i32 %i_v551, 1
  store i32 %tmp552, i32* %i525
  br label %while526

merge553:                                         ; preds = %while526
  %return1 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 1
  store %matrix_t* %m484, %matrix_t** %return1
  ret %return_t.2* %return
  %tmp556 = alloca %return_t.2
  ret %return_t.2* %tmp556
}
