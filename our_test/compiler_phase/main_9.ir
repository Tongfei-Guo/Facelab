; ModuleID = 'MicroC'
source_filename = "MicroC"

%return_t = type { i32 }
%return_t.0 = type { i8* }
%matrix_t = type { double*, i32, i32 }
%return_t.1 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@system_string = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string.6 = private unnamed_addr constant [4 x i8] c"abc\00"
@system_string.7 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string.8 = private unnamed_addr constant [4 x i8] c"abc\00"
@system_string.9 = private unnamed_addr constant [8 x i8] c"testing\00"
@system_string.10 = private unnamed_addr constant [8 x i8] c"testing\00"
@system_string.11 = private unnamed_addr constant [11 x i8] c"now j is :\00"
@system_string.12 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string.13 = private unnamed_addr constant [7 x i8] c"hahaha\00"
@system_string.14 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string.15 = private unnamed_addr constant [11 x i8] c"now s is :\00"

define i32 @main() {
entry:
  %i = alloca i32
  store i32 2, i32* %i
  %j = alloca i32
  store i32 3, i32* %j
  %i1 = load i32, i32* %i
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %i1)
  %j2 = load i32, i32* %j
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %j2)
  store i32 0, i32* %i
  %i4 = load i32, i32* %i
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %i4)
  %f1_result = call %return_t* @f1()
  %v_ptr = getelementptr inbounds %return_t, %return_t* %f1_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %0 = bitcast %return_t* %f1_result to i8*
  tail call void @free(i8* %0)
  store i32 %v, i32* %j
  %printf6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @system_string.11, i32 0, i32 0))
  %j7 = load i32, i32* %j
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %j7)
  %my_str = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.12, i32 0, i32 0), i8** %my_str
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @system_string.13, i32 0, i32 0), i8** %my_str
  %my_str9 = load i8*, i8** %my_str
  %printf10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* %my_str9)
  %s = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.14, i32 0, i32 0), i8** %s
  %f2_result = call %return_t.0* @f2()
  %v_ptr11 = getelementptr inbounds %return_t.0, %return_t.0* %f2_result, i32 0, i32 0
  %v12 = load i8*, i8** %v_ptr11
  %1 = bitcast %return_t.0* %f2_result to i8*
  tail call void @free(i8* %1)
  store i8* %v12, i8** %s
  %printf13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @system_string.15, i32 0, i32 0))
  %s14 = load i8*, i8** %s
  %printf15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* %s14)
  %system_mat = alloca double, i32 6
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 1.100000e+00, double* %element_ptr
  %element_ptr16 = getelementptr double, double* %system_mat, i32 1
  store double 2.200000e+00, double* %element_ptr16
  %element_ptr17 = getelementptr double, double* %system_mat, i32 2
  store double 3.300000e+00, double* %element_ptr17
  %element_ptr18 = getelementptr double, double* %system_mat, i32 3
  store double 4.400000e+00, double* %element_ptr18
  %element_ptr19 = getelementptr double, double* %system_mat, i32 4
  store double 5.500000e+00, double* %element_ptr19
  %element_ptr20 = getelementptr double, double* %system_mat, i32 5
  store double 6.600000e+00, double* %element_ptr20
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 2, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r21 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r21
  %m_c22 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c22
  %size = mul i32 %r_mat, %c_mat
  %system_mat23 = alloca double, i32 %size
  %m24 = alloca %matrix_t
  %m_mat25 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 0
  store double* %system_mat23, double** %m_mat25
  %m_r26 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 1
  store i32 %r_mat, i32* %m_r26
  %m_c27 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 2
  store i32 %c_mat, i32* %m_c27
  %tmp = sub i32 %r_mat, 1
  %tmp28 = sub i32 %c_mat, 1
  %i29 = alloca i32
  store i32 0, i32* %i29
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v41 = load i32, i32* %i29
  %bool_val42 = icmp sle i32 %i_v41, %tmp
  br i1 %bool_val42, label %while_body, label %merge40

while_body:                                       ; preds = %while
  %j30 = alloca i32
  store i32 0, i32* %j30
  br label %while31

while31:                                          ; preds = %while_body32, %while_body
  %j_v37 = load i32, i32* %j30
  %bool_val = icmp sle i32 %j_v37, %tmp28
  br i1 %bool_val, label %while_body32, label %merge

while_body32:                                     ; preds = %while31
  %j_v = load i32, i32* %j30
  %i_v = load i32, i32* %i29
  %tmp33 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp33
  %element_ptr34 = getelementptr double, double* %system_mat23, i32 %index
  store double 0.000000e+00, double* %element_ptr34
  %j_v35 = load i32, i32* %j30
  %tmp36 = add i32 %j_v35, 1
  store i32 %tmp36, i32* %j30
  br label %while31

merge:                                            ; preds = %while31
  %i_v38 = load i32, i32* %i29
  %tmp39 = add i32 %i_v38, 1
  store i32 %tmp39, i32* %i29
  br label %while

merge40:                                          ; preds = %while
  %tmp43 = sub i32 %c_mat, 1
  %tmp44 = sub i32 %r_mat, 1
  %m_mat45 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat45
  %m_r46 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 1
  %r_mat47 = load i32, i32* %m_r46
  %m_c48 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 2
  %c_mat49 = load i32, i32* %m_c48
  %m_mat50 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat50
  %m_r51 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r51
  %m_c52 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c52
  %i53 = alloca i32
  store i32 0, i32* %i53
  br label %while54

while54:                                          ; preds = %merge75, %merge40
  %i_v81 = load i32, i32* %i53
  %bool_val82 = icmp sle i32 %i_v81, %tmp44
  br i1 %bool_val82, label %while_body55, label %merge80

while_body55:                                     ; preds = %while54
  %j56 = alloca i32
  store i32 0, i32* %j56
  br label %while57

while57:                                          ; preds = %while_body58, %while_body55
  %j_v76 = load i32, i32* %j56
  %bool_val77 = icmp sle i32 %j_v76, %tmp43
  br i1 %bool_val77, label %while_body58, label %merge75

while_body58:                                     ; preds = %while57
  %j_v59 = load i32, i32* %j56
  %i_v60 = load i32, i32* %i53
  %tmp61 = mul i32 %c_mat49, %i_v60
  %index62 = add i32 %j_v59, %tmp61
  %element_ptr63 = getelementptr double, double* %mat_mat, i32 %index62
  %j_v64 = load i32, i32* %j56
  %tmp65 = sub i32 %j_v64, 0
  %tmp66 = add i32 %tmp65, 0
  %i_v67 = load i32, i32* %i53
  %tmp68 = sub i32 %i_v67, 0
  %tmp69 = add i32 %tmp68, 0
  %tmp70 = mul i32 %c_v, %tmp69
  %index71 = add i32 %tmp66, %tmp70
  %element_ptr72 = getelementptr double, double* %mat_v, i32 %index71
  %tmp_element = load double, double* %element_ptr72
  store double %tmp_element, double* %element_ptr63
  %j_v73 = load i32, i32* %j56
  %tmp74 = add i32 %j_v73, 1
  store i32 %tmp74, i32* %j56
  br label %while57

merge75:                                          ; preds = %while57
  %i_v78 = load i32, i32* %i53
  %tmp79 = add i32 %i_v78, 1
  store i32 %tmp79, i32* %i53
  br label %while54

merge80:                                          ; preds = %while54
  %f3_result = call %return_t.1* @f3(%matrix_t* %m24, double 1.001000e+01)
  %v_ptr83 = getelementptr inbounds %return_t.1, %return_t.1* %f3_result, i32 0, i32 0
  %v84 = load %matrix_t*, %matrix_t** %v_ptr83
  %2 = bitcast %return_t.1* %f3_result to i8*
  tail call void @free(i8* %2)
  %m_mat85 = getelementptr inbounds %matrix_t, %matrix_t* %v84, i32 0, i32 0
  %mat_mat86 = load double*, double** %m_mat85
  %m_r87 = getelementptr inbounds %matrix_t, %matrix_t* %v84, i32 0, i32 1
  %r_mat88 = load i32, i32* %m_r87
  %m_c89 = getelementptr inbounds %matrix_t, %matrix_t* %v84, i32 0, i32 2
  %c_mat90 = load i32, i32* %m_c89
  %size91 = mul i32 %r_mat88, %c_mat90
  %system_mat92 = alloca double, i32 %size91
  %m93 = alloca %matrix_t
  %m_mat94 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 0
  store double* %system_mat92, double** %m_mat94
  %m_r95 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 1
  store i32 %r_mat88, i32* %m_r95
  %m_c96 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 2
  store i32 %c_mat90, i32* %m_c96
  %tmp97 = sub i32 %r_mat88, 1
  %tmp98 = sub i32 %c_mat90, 1
  %i99 = alloca i32
  store i32 0, i32* %i99
  br label %while100

while100:                                         ; preds = %merge112, %merge80
  %i_v118 = load i32, i32* %i99
  %bool_val119 = icmp sle i32 %i_v118, %tmp97
  br i1 %bool_val119, label %while_body101, label %merge117

while_body101:                                    ; preds = %while100
  %j102 = alloca i32
  store i32 0, i32* %j102
  br label %while103

while103:                                         ; preds = %while_body104, %while_body101
  %j_v113 = load i32, i32* %j102
  %bool_val114 = icmp sle i32 %j_v113, %tmp98
  br i1 %bool_val114, label %while_body104, label %merge112

while_body104:                                    ; preds = %while103
  %j_v105 = load i32, i32* %j102
  %i_v106 = load i32, i32* %i99
  %tmp107 = mul i32 %c_mat90, %i_v106
  %index108 = add i32 %j_v105, %tmp107
  %element_ptr109 = getelementptr double, double* %system_mat92, i32 %index108
  store double 0.000000e+00, double* %element_ptr109
  %j_v110 = load i32, i32* %j102
  %tmp111 = add i32 %j_v110, 1
  store i32 %tmp111, i32* %j102
  br label %while103

merge112:                                         ; preds = %while103
  %i_v115 = load i32, i32* %i99
  %tmp116 = add i32 %i_v115, 1
  store i32 %tmp116, i32* %i99
  br label %while100

merge117:                                         ; preds = %while100
  %tmp120 = sub i32 %c_mat90, 1
  %tmp121 = sub i32 %r_mat88, 1
  %m_mat122 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 0
  %mat_mat123 = load double*, double** %m_mat122
  %m_r124 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 1
  %r_mat125 = load i32, i32* %m_r124
  %m_c126 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 2
  %c_mat127 = load i32, i32* %m_c126
  %m_mat128 = getelementptr inbounds %matrix_t, %matrix_t* %v84, i32 0, i32 0
  %mat_v129 = load double*, double** %m_mat128
  %m_r130 = getelementptr inbounds %matrix_t, %matrix_t* %v84, i32 0, i32 1
  %r_v131 = load i32, i32* %m_r130
  %m_c132 = getelementptr inbounds %matrix_t, %matrix_t* %v84, i32 0, i32 2
  %c_v133 = load i32, i32* %m_c132
  %i134 = alloca i32
  store i32 0, i32* %i134
  br label %while135

while135:                                         ; preds = %merge157, %merge117
  %i_v163 = load i32, i32* %i134
  %bool_val164 = icmp sle i32 %i_v163, %tmp121
  br i1 %bool_val164, label %while_body136, label %merge162

while_body136:                                    ; preds = %while135
  %j137 = alloca i32
  store i32 0, i32* %j137
  br label %while138

while138:                                         ; preds = %while_body139, %while_body136
  %j_v158 = load i32, i32* %j137
  %bool_val159 = icmp sle i32 %j_v158, %tmp120
  br i1 %bool_val159, label %while_body139, label %merge157

while_body139:                                    ; preds = %while138
  %j_v140 = load i32, i32* %j137
  %i_v141 = load i32, i32* %i134
  %tmp142 = mul i32 %c_mat127, %i_v141
  %index143 = add i32 %j_v140, %tmp142
  %element_ptr144 = getelementptr double, double* %mat_mat123, i32 %index143
  %j_v145 = load i32, i32* %j137
  %tmp146 = sub i32 %j_v145, 0
  %tmp147 = add i32 %tmp146, 0
  %i_v148 = load i32, i32* %i134
  %tmp149 = sub i32 %i_v148, 0
  %tmp150 = add i32 %tmp149, 0
  %tmp151 = mul i32 %c_v133, %tmp150
  %index152 = add i32 %tmp147, %tmp151
  %element_ptr153 = getelementptr double, double* %mat_v129, i32 %index152
  %tmp_element154 = load double, double* %element_ptr153
  store double %tmp_element154, double* %element_ptr144
  %j_v155 = load i32, i32* %j137
  %tmp156 = add i32 %j_v155, 1
  store i32 %tmp156, i32* %j137
  br label %while138

merge157:                                         ; preds = %while138
  %i_v160 = load i32, i32* %i134
  %tmp161 = add i32 %i_v160, 1
  store i32 %tmp161, i32* %i134
  br label %while135

merge162:                                         ; preds = %while135
  %3 = bitcast double* %mat_mat86 to i8*
  tail call void @free(i8* %3)
  %4 = bitcast %matrix_t* %v84 to i8*
  tail call void @free(i8* %4)
  %m_mat165 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 0
  %mat_mat166 = load double*, double** %m_mat165
  %m_r167 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 1
  %r_mat168 = load i32, i32* %m_r167
  %m_c169 = getelementptr inbounds %matrix_t, %matrix_t* %m93, i32 0, i32 2
  %c_mat170 = load i32, i32* %m_c169
  %tmp171 = sub i32 %r_mat168, 1
  %tmp172 = sub i32 %c_mat170, 1
  %i173 = alloca i32
  store i32 0, i32* %i173
  br label %while174

while174:                                         ; preds = %merge189, %merge162
  %i_v196 = load i32, i32* %i173
  %bool_val197 = icmp sle i32 %i_v196, %tmp171
  br i1 %bool_val197, label %while_body175, label %merge195

while_body175:                                    ; preds = %while174
  %j176 = alloca i32
  store i32 0, i32* %j176
  br label %while177

while177:                                         ; preds = %while_body178, %while_body175
  %j_v190 = load i32, i32* %j176
  %bool_val191 = icmp sle i32 %j_v190, %tmp172
  br i1 %bool_val191, label %while_body178, label %merge189

while_body178:                                    ; preds = %while177
  %j_v179 = load i32, i32* %j176
  %i_v180 = load i32, i32* %i173
  %tmp181 = mul i32 %c_mat170, %i_v180
  %index182 = add i32 %j_v179, %tmp181
  %element_ptr183 = getelementptr double, double* %mat_mat166, i32 %index182
  %tmp_element184 = load double, double* %element_ptr183
  %printf185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element184)
  %printf186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v187 = load i32, i32* %j176
  %tmp188 = add i32 %j_v187, 1
  store i32 %tmp188, i32* %j176
  br label %while177

merge189:                                         ; preds = %while177
  %printf192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v193 = load i32, i32* %i173
  %tmp194 = add i32 %i_v193, 1
  store i32 %tmp194, i32* %i173
  br label %while174

merge195:                                         ; preds = %while174
  %printf198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  ret i32 0
}

declare i32 @printf(i8*, ...)

define %return_t* @f1() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 1)
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store i32 5, i32* %return0
  ret %return_t* %return
  %tmp = alloca %return_t
  ret %return_t* %tmp
}

declare noalias i8* @malloc(i32)

declare void @free(i8*)

define %return_t.0* @f2() {
entry:
  %st = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.7, i32 0, i32 0), i8** %st
  %f1_result = call %return_t* @f1()
  %v_ptr = getelementptr inbounds %return_t, %return_t* %f1_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %0 = bitcast %return_t* %f1_result to i8*
  tail call void @free(i8* %0)
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %v)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @system_string.8, i32 0, i32 0), i8** %st
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %st1 = load i8*, i8** %st
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store i8* %st1, i8** %return0
  ret %return_t.0* %return
  %tmp = alloca %return_t.0
  ret %return_t.0* %tmp
}

define %return_t.1* @f3(%matrix_t*, double) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %d = alloca double
  store double %1, double* %d
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @system_string.10, i32 0, i32 0))
  %printf55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.1*
  %d56 = load double, double* %d
  %m_mat57 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat58 = load double*, double** %m_mat57
  %m_r59 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat60 = load i32, i32* %m_r59
  %tmp61 = sub i32 %r_mat60, 1
  %m_c62 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat63 = load i32, i32* %m_c62
  %tmp64 = sub i32 %c_mat63, 1
  %size65 = mul i32 %r_mat60, %c_mat63
  %system_mat66 = alloca double, i32 %size65
  %m67 = alloca %matrix_t
  %m_mat68 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 0
  store double* %system_mat66, double** %m_mat68
  %m_r69 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 1
  store i32 %r_mat60, i32* %m_r69
  %m_c70 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 2
  store i32 %c_mat63, i32* %m_c70
  %tmp71 = sub i32 %r_mat60, 1
  %tmp72 = sub i32 %c_mat63, 1
  %i73 = alloca i32
  store i32 0, i32* %i73
  br label %while74

while74:                                          ; preds = %merge86, %merge52
  %i_v92 = load i32, i32* %i73
  %bool_val93 = icmp sle i32 %i_v92, %tmp71
  br i1 %bool_val93, label %while_body75, label %merge91

while_body75:                                     ; preds = %while74
  %j76 = alloca i32
  store i32 0, i32* %j76
  br label %while77

while77:                                          ; preds = %while_body78, %while_body75
  %j_v87 = load i32, i32* %j76
  %bool_val88 = icmp sle i32 %j_v87, %tmp72
  br i1 %bool_val88, label %while_body78, label %merge86

while_body78:                                     ; preds = %while77
  %j_v79 = load i32, i32* %j76
  %i_v80 = load i32, i32* %i73
  %tmp81 = mul i32 %c_mat63, %i_v80
  %index82 = add i32 %j_v79, %tmp81
  %element_ptr83 = getelementptr double, double* %system_mat66, i32 %index82
  store double 0.000000e+00, double* %element_ptr83
  %j_v84 = load i32, i32* %j76
  %tmp85 = add i32 %j_v84, 1
  store i32 %tmp85, i32* %j76
  br label %while77

merge86:                                          ; preds = %while77
  %i_v89 = load i32, i32* %i73
  %tmp90 = add i32 %i_v89, 1
  store i32 %tmp90, i32* %i73
  br label %while74

merge91:                                          ; preds = %while74
  %m_mat94 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 0
  %mat_mat95 = load double*, double** %m_mat94
  %i96 = alloca i32
  store i32 0, i32* %i96
  br label %while97

while97:                                          ; preds = %merge116, %merge91
  %i_v122 = load i32, i32* %i96
  %bool_val123 = icmp sle i32 %i_v122, %tmp61
  br i1 %bool_val123, label %while_body98, label %merge121

while_body98:                                     ; preds = %while97
  %j99 = alloca i32
  store i32 0, i32* %j99
  br label %while100

while100:                                         ; preds = %while_body101, %while_body98
  %j_v117 = load i32, i32* %j99
  %bool_val118 = icmp sle i32 %j_v117, %tmp64
  br i1 %bool_val118, label %while_body101, label %merge116

while_body101:                                    ; preds = %while100
  %j_v102 = load i32, i32* %j99
  %i_v103 = load i32, i32* %i96
  %tmp104 = mul i32 %c_mat63, %i_v103
  %index105 = add i32 %j_v102, %tmp104
  %element_ptr106 = getelementptr double, double* %mat_mat58, i32 %index105
  %tmp_element107 = load double, double* %element_ptr106
  %j_v108 = load i32, i32* %j99
  %i_v109 = load i32, i32* %i96
  %tmp110 = mul i32 %c_mat63, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat95, i32 %index111
  %tmp_element113 = fmul double %tmp_element107, %d56
  store double %tmp_element113, double* %element_ptr112
  %j_v114 = load i32, i32* %j99
  %tmp115 = add i32 %j_v114, 1
  store i32 %tmp115, i32* %j99
  br label %while100

merge116:                                         ; preds = %while100
  %i_v119 = load i32, i32* %i96
  %tmp120 = add i32 %i_v119, 1
  store i32 %tmp120, i32* %i96
  br label %while97

merge121:                                         ; preds = %while97
  %m_r124 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 1
  %r_mat125 = load i32, i32* %m_r124
  %m_c126 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 2
  %c_mat127 = load i32, i32* %m_c126
  %size128 = mul i32 %r_mat125, %c_mat127
  %mallocsize = mul i32 %size128, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall129 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat130 = bitcast i8* %malloccall129 to double*
  %malloccall131 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m132 = bitcast i8* %malloccall131 to %matrix_t*
  %m_mat133 = getelementptr inbounds %matrix_t, %matrix_t* %m132, i32 0, i32 0
  store double* %system_mat130, double** %m_mat133
  %m_r134 = getelementptr inbounds %matrix_t, %matrix_t* %m132, i32 0, i32 1
  store i32 %r_mat125, i32* %m_r134
  %m_c135 = getelementptr inbounds %matrix_t, %matrix_t* %m132, i32 0, i32 2
  store i32 %c_mat127, i32* %m_c135
  %tmp136 = sub i32 %r_mat125, 1
  %tmp137 = sub i32 %c_mat127, 1
  %i138 = alloca i32
  store i32 0, i32* %i138
  br label %while139

while139:                                         ; preds = %merge151, %merge121
  %i_v157 = load i32, i32* %i138
  %bool_val158 = icmp sle i32 %i_v157, %tmp136
  br i1 %bool_val158, label %while_body140, label %merge156

while_body140:                                    ; preds = %while139
  %j141 = alloca i32
  store i32 0, i32* %j141
  br label %while142

while142:                                         ; preds = %while_body143, %while_body140
  %j_v152 = load i32, i32* %j141
  %bool_val153 = icmp sle i32 %j_v152, %tmp137
  br i1 %bool_val153, label %while_body143, label %merge151

while_body143:                                    ; preds = %while142
  %j_v144 = load i32, i32* %j141
  %i_v145 = load i32, i32* %i138
  %tmp146 = mul i32 %c_mat127, %i_v145
  %index147 = add i32 %j_v144, %tmp146
  %element_ptr148 = getelementptr double, double* %system_mat130, i32 %index147
  store double 0.000000e+00, double* %element_ptr148
  %j_v149 = load i32, i32* %j141
  %tmp150 = add i32 %j_v149, 1
  store i32 %tmp150, i32* %j141
  br label %while142

merge151:                                         ; preds = %while142
  %i_v154 = load i32, i32* %i138
  %tmp155 = add i32 %i_v154, 1
  store i32 %tmp155, i32* %i138
  br label %while139

merge156:                                         ; preds = %while139
  %tmp159 = sub i32 %c_mat127, 1
  %tmp160 = sub i32 %r_mat125, 1
  %m_mat161 = getelementptr inbounds %matrix_t, %matrix_t* %m132, i32 0, i32 0
  %mat_mat162 = load double*, double** %m_mat161
  %m_r163 = getelementptr inbounds %matrix_t, %matrix_t* %m132, i32 0, i32 1
  %r_mat164 = load i32, i32* %m_r163
  %m_c165 = getelementptr inbounds %matrix_t, %matrix_t* %m132, i32 0, i32 2
  %c_mat166 = load i32, i32* %m_c165
  %m_mat167 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 0
  %mat_v168 = load double*, double** %m_mat167
  %m_r169 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 1
  %r_v170 = load i32, i32* %m_r169
  %m_c171 = getelementptr inbounds %matrix_t, %matrix_t* %m67, i32 0, i32 2
  %c_v172 = load i32, i32* %m_c171
  %i173 = alloca i32
  store i32 0, i32* %i173
  br label %while174

while174:                                         ; preds = %merge196, %merge156
  %i_v202 = load i32, i32* %i173
  %bool_val203 = icmp sle i32 %i_v202, %tmp160
  br i1 %bool_val203, label %while_body175, label %merge201

while_body175:                                    ; preds = %while174
  %j176 = alloca i32
  store i32 0, i32* %j176
  br label %while177

while177:                                         ; preds = %while_body178, %while_body175
  %j_v197 = load i32, i32* %j176
  %bool_val198 = icmp sle i32 %j_v197, %tmp159
  br i1 %bool_val198, label %while_body178, label %merge196

while_body178:                                    ; preds = %while177
  %j_v179 = load i32, i32* %j176
  %i_v180 = load i32, i32* %i173
  %tmp181 = mul i32 %c_mat166, %i_v180
  %index182 = add i32 %j_v179, %tmp181
  %element_ptr183 = getelementptr double, double* %mat_mat162, i32 %index182
  %j_v184 = load i32, i32* %j176
  %tmp185 = sub i32 %j_v184, 0
  %tmp186 = add i32 %tmp185, 0
  %i_v187 = load i32, i32* %i173
  %tmp188 = sub i32 %i_v187, 0
  %tmp189 = add i32 %tmp188, 0
  %tmp190 = mul i32 %c_v172, %tmp189
  %index191 = add i32 %tmp186, %tmp190
  %element_ptr192 = getelementptr double, double* %mat_v168, i32 %index191
  %tmp_element193 = load double, double* %element_ptr192
  store double %tmp_element193, double* %element_ptr183
  %j_v194 = load i32, i32* %j176
  %tmp195 = add i32 %j_v194, 1
  store i32 %tmp195, i32* %j176
  br label %while177

merge196:                                         ; preds = %while177
  %i_v199 = load i32, i32* %i173
  %tmp200 = add i32 %i_v199, 1
  store i32 %tmp200, i32* %i173
  br label %while174

merge201:                                         ; preds = %while174
  %return0 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 0
  store %matrix_t* %m132, %matrix_t** %return0
  ret %return_t.1* %return
  %tmp204 = alloca %return_t.1
  ret %return_t.1* %tmp204
}
