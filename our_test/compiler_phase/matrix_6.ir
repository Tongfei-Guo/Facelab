; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_int.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_int.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_int.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string = private unnamed_addr constant [4 x i8] c"var\00"

define i32 @main() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @system_string, i32 0, i32 0))
  %system_mat = alloca double, i32 12
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 1.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 2.000000e+00, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 3.000000e+00, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 4.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 5.000000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 6.000000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 7.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 8.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 9.000000e+00, double* %element_ptr8
  %element_ptr9 = getelementptr double, double* %system_mat, i32 9
  store double 1.000000e+01, double* %element_ptr9
  %element_ptr10 = getelementptr double, double* %system_mat, i32 10
  store double 1.100000e+01, double* %element_ptr10
  %element_ptr11 = getelementptr double, double* %system_mat, i32 11
  store double 1.200000e+01, double* %element_ptr11
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r12 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r12
  %m_c13 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c13
  %size = mul i32 %r_mat, %c_mat
  %system_mat14 = alloca double, i32 %size
  %m15 = alloca %matrix_t
  %m_mat16 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  store double* %system_mat14, double** %m_mat16
  %m_r17 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  store i32 %r_mat, i32* %m_r17
  %m_c18 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  store i32 %c_mat, i32* %m_c18
  %tmp = sub i32 %c_mat, 1
  %tmp19 = sub i32 %r_mat, 1
  %m_mat20 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat20
  %m_r21 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat22 = load i32, i32* %m_r21
  %m_c23 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat24 = load i32, i32* %m_c23
  %m_mat25 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat25
  %m_r26 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r26
  %m_c27 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c27
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v47 = load i32, i32* %i
  %bool_val48 = icmp sle i32 %i_v47, %tmp19
  br i1 %bool_val48, label %while_body, label %merge46

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while28

while28:                                          ; preds = %while_body29, %while_body
  %j_v43 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v43, %tmp
  br i1 %bool_val, label %while_body29, label %merge

while_body29:                                     ; preds = %while28
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp30 = mul i32 %c_mat24, %i_v
  %index = add i32 %j_v, %tmp30
  %element_ptr31 = getelementptr double, double* %mat_mat, i32 %index
  %j_v32 = load i32, i32* %j
  %tmp33 = sub i32 %j_v32, 0
  %tmp34 = add i32 %tmp33, 0
  %i_v35 = load i32, i32* %i
  %tmp36 = sub i32 %i_v35, 0
  %tmp37 = add i32 %tmp36, 0
  %tmp38 = mul i32 %c_v, %tmp37
  %index39 = add i32 %tmp34, %tmp38
  %element_ptr40 = getelementptr double, double* %mat_v, i32 %index39
  %tmp_element = load double, double* %element_ptr40
  store double %tmp_element, double* %element_ptr31
  %j_v41 = load i32, i32* %j
  %tmp42 = add i32 %j_v41, 1
  store i32 %tmp42, i32* %j
  br label %while28

merge:                                            ; preds = %while28
  %i_v44 = load i32, i32* %i
  %tmp45 = add i32 %i_v44, 1
  store i32 %tmp45, i32* %i
  br label %while

merge46:                                          ; preds = %while
  %system_mat49 = alloca double, i32 6
  %element_ptr50 = getelementptr double, double* %system_mat49, i32 0
  store double 2.200000e+00, double* %element_ptr50
  %element_ptr51 = getelementptr double, double* %system_mat49, i32 1
  store double 4.400000e+00, double* %element_ptr51
  %element_ptr52 = getelementptr double, double* %system_mat49, i32 2
  store double 6.600000e+00, double* %element_ptr52
  %element_ptr53 = getelementptr double, double* %system_mat49, i32 3
  store double 1.500000e+00, double* %element_ptr53
  %element_ptr54 = getelementptr double, double* %system_mat49, i32 4
  store double 9.100000e+00, double* %element_ptr54
  %element_ptr55 = getelementptr double, double* %system_mat49, i32 5
  store double 3.500000e+00, double* %element_ptr55
  %m56 = alloca %matrix_t
  %m_mat57 = getelementptr inbounds %matrix_t, %matrix_t* %m56, i32 0, i32 0
  store double* %system_mat49, double** %m_mat57
  %m_r58 = getelementptr inbounds %matrix_t, %matrix_t* %m56, i32 0, i32 1
  store i32 3, i32* %m_r58
  %m_c59 = getelementptr inbounds %matrix_t, %matrix_t* %m56, i32 0, i32 2
  store i32 2, i32* %m_c59
  %m_mat60 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat61 = load double*, double** %m_mat60
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m56, i32 0, i32 0
  %mat_v63 = load double*, double** %m_mat62
  %m_r64 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat65 = load i32, i32* %m_r64
  %tmp66 = sub i32 %r_mat65, 1
  %m_c67 = getelementptr inbounds %matrix_t, %matrix_t* %m56, i32 0, i32 2
  %c_mat68 = load i32, i32* %m_c67
  %tmp69 = sub i32 %c_mat68, 1
  %m_c70 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat71 = load i32, i32* %m_c70
  %tmp72 = sub i32 %c_mat71, 1
  %size73 = mul i32 %r_mat65, %c_mat68
  %system_mat74 = alloca double, i32 %size73
  %m75 = alloca %matrix_t
  %m_mat76 = getelementptr inbounds %matrix_t, %matrix_t* %m75, i32 0, i32 0
  store double* %system_mat74, double** %m_mat76
  %m_r77 = getelementptr inbounds %matrix_t, %matrix_t* %m75, i32 0, i32 1
  store i32 %r_mat65, i32* %m_r77
  %m_c78 = getelementptr inbounds %matrix_t, %matrix_t* %m75, i32 0, i32 2
  store i32 %c_mat68, i32* %m_c78
  %m_mat79 = getelementptr inbounds %matrix_t, %matrix_t* %m75, i32 0, i32 0
  %mat_mat80 = load double*, double** %m_mat79
  %i81 = alloca i32
  store i32 0, i32* %i81
  br label %while82

while82:                                          ; preds = %merge117, %merge46
  %i_v123 = load i32, i32* %i81
  %bool_val124 = icmp sle i32 %i_v123, %tmp66
  br i1 %bool_val124, label %while_body83, label %merge122

while_body83:                                     ; preds = %while82
  %j84 = alloca i32
  store i32 0, i32* %j84
  br label %while85

while85:                                          ; preds = %merge111, %while_body83
  %j_v118 = load i32, i32* %j84
  %bool_val119 = icmp sle i32 %j_v118, %tmp69
  br i1 %bool_val119, label %while_body86, label %merge117

while_body86:                                     ; preds = %while85
  %j_v87 = load i32, i32* %j84
  %i_v88 = load i32, i32* %i81
  %tmp89 = mul i32 %c_mat68, %i_v88
  %index90 = add i32 %j_v87, %tmp89
  %element_ptr91 = getelementptr double, double* %mat_mat80, i32 %index90
  %tmp_element92 = alloca double
  %k = alloca i32
  store i32 0, i32* %k
  br label %while93

while93:                                          ; preds = %while_body94, %while_body86
  %k_v112 = load i32, i32* %k
  %bool_val113 = icmp sle i32 %k_v112, %tmp72
  br i1 %bool_val113, label %while_body94, label %merge111

while_body94:                                     ; preds = %while93
  %k_v = load i32, i32* %k
  %i_v95 = load i32, i32* %i81
  %tmp96 = mul i32 %c_mat71, %i_v95
  %index97 = add i32 %k_v, %tmp96
  %element_ptr98 = getelementptr double, double* %mat_mat61, i32 %index97
  %tmp_element99 = load double, double* %element_ptr98
  %j_v100 = load i32, i32* %j84
  %k_v101 = load i32, i32* %k
  %tmp102 = mul i32 %c_mat68, %k_v101
  %index103 = add i32 %j_v100, %tmp102
  %element_ptr104 = getelementptr double, double* %mat_v63, i32 %index103
  %tmp_element105 = load double, double* %element_ptr104
  %tmp106 = load double, double* %tmp_element92
  %tmp107 = fmul double %tmp_element99, %tmp_element105
  %tmp108 = fadd double %tmp107, %tmp106
  store double %tmp108, double* %tmp_element92
  %k_v109 = load i32, i32* %k
  %tmp110 = add i32 %k_v109, 1
  store i32 %tmp110, i32* %k
  br label %while93

merge111:                                         ; preds = %while93
  %tmp114 = load double, double* %tmp_element92
  store double %tmp114, double* %element_ptr91
  %j_v115 = load i32, i32* %j84
  %tmp116 = add i32 %j_v115, 1
  store i32 %tmp116, i32* %j84
  br label %while85

merge117:                                         ; preds = %while85
  %i_v120 = load i32, i32* %i81
  %tmp121 = add i32 %i_v120, 1
  store i32 %tmp121, i32* %i81
  br label %while82

merge122:                                         ; preds = %while82
  call void @f(%matrix_t* %m75)
  ret i32 0
}

declare i32 @printf(i8*, ...)

define void @f(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %c_mat, 1
  %tmp3 = sub i32 %r_mat, 1
  %m_mat4 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat4
  %m_r5 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat6 = load i32, i32* %m_r5
  %m_c7 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat8 = load i32, i32* %m_c7
  %m_mat9 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat9
  %m_r10 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r10
  %m_c11 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c11
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v30 = load i32, i32* %i
  %bool_val31 = icmp sle i32 %i_v30, %tmp3
  br i1 %bool_val31, label %while_body, label %merge29

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while12

while12:                                          ; preds = %while_body13, %while_body
  %j_v26 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v26, %tmp
  br i1 %bool_val, label %while_body13, label %merge

while_body13:                                     ; preds = %while12
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp14 = mul i32 %c_mat8, %i_v
  %index = add i32 %j_v, %tmp14
  %element_ptr = getelementptr double, double* %mat_mat, i32 %index
  %j_v15 = load i32, i32* %j
  %tmp16 = sub i32 %j_v15, 0
  %tmp17 = add i32 %tmp16, 0
  %i_v18 = load i32, i32* %i
  %tmp19 = sub i32 %i_v18, 0
  %tmp20 = add i32 %tmp19, 0
  %tmp21 = mul i32 %c_v, %tmp20
  %index22 = add i32 %tmp17, %tmp21
  %element_ptr23 = getelementptr double, double* %mat_v, i32 %index22
  %tmp_element = load double, double* %element_ptr23
  store double %tmp_element, double* %element_ptr
  %j_v24 = load i32, i32* %j
  %tmp25 = add i32 %j_v24, 1
  store i32 %tmp25, i32* %j
  br label %while12

merge:                                            ; preds = %while12
  %i_v27 = load i32, i32* %i
  %tmp28 = add i32 %i_v27, 1
  store i32 %tmp28, i32* %i
  br label %while

merge29:                                          ; preds = %while
  %m_mat32 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat33 = load double*, double** %m_mat32
  %m_r34 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat35 = load i32, i32* %m_r34
  %m_c36 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat37 = load i32, i32* %m_c36
  %tmp38 = sub i32 %r_mat35, 1
  %tmp39 = sub i32 %c_mat37, 1
  %i40 = alloca i32
  store i32 0, i32* %i40
  br label %while41

while41:                                          ; preds = %merge55, %merge29
  %i_v62 = load i32, i32* %i40
  %bool_val63 = icmp sle i32 %i_v62, %tmp38
  br i1 %bool_val63, label %while_body42, label %merge61

while_body42:                                     ; preds = %while41
  %j43 = alloca i32
  store i32 0, i32* %j43
  br label %while44

while44:                                          ; preds = %while_body45, %while_body42
  %j_v56 = load i32, i32* %j43
  %bool_val57 = icmp sle i32 %j_v56, %tmp39
  br i1 %bool_val57, label %while_body45, label %merge55

while_body45:                                     ; preds = %while44
  %j_v46 = load i32, i32* %j43
  %i_v47 = load i32, i32* %i40
  %tmp48 = mul i32 %c_mat37, %i_v47
  %index49 = add i32 %j_v46, %tmp48
  %element_ptr50 = getelementptr double, double* %mat_mat33, i32 %index49
  %tmp_element51 = load double, double* %element_ptr50
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element51)
  %printf52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.2, i32 0, i32 0))
  %j_v53 = load i32, i32* %j43
  %tmp54 = add i32 %j_v53, 1
  store i32 %tmp54, i32* %j43
  br label %while44

merge55:                                          ; preds = %while44
  %printf58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_int.1, i32 0, i32 0))
  %i_v59 = load i32, i32* %i40
  %tmp60 = add i32 %i_v59, 1
  store i32 %tmp60, i32* %i40
  br label %while41

merge61:                                          ; preds = %while41
  %printf64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_int.3, i32 0, i32 0))
  ret void
}
