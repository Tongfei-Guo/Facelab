; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }
%return_t.1 = type {}
%matrix_size_t = type { i32, i32 }
%zero_matrix_t = type { %matrix_t* }
%int_to_double_t = type { double }
%double_to_int_t = type { i32 }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"

define i32 @main() {
entry:
  %system_mat = alloca double, i32 9
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 0.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 1.000000e-01, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 2.000000e-01, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 1.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 1.100000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 1.200000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 2.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 2.100000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 2.200000e+00, double* %element_ptr8
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 3, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r9 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r9
  %m_c10 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c10
  %size = mul i32 %r_mat, %c_mat
  %system_mat11 = alloca double, i32 %size
  %m12 = alloca %matrix_t
  %m_mat13 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 0
  store double* %system_mat11, double** %m_mat13
  %m_r14 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 1
  store i32 %r_mat, i32* %m_r14
  %m_c15 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 2
  store i32 %c_mat, i32* %m_c15
  %tmp = sub i32 %r_mat, 1
  %tmp16 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v27 = load i32, i32* %i
  %bool_val28 = icmp sle i32 %i_v27, %tmp
  br i1 %bool_val28, label %while_body, label %merge26

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while17

while17:                                          ; preds = %while_body18, %while_body
  %j_v23 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v23, %tmp16
  br i1 %bool_val, label %while_body18, label %merge

while_body18:                                     ; preds = %while17
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp19 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp19
  %element_ptr20 = getelementptr double, double* %system_mat11, i32 %index
  store double 0.000000e+00, double* %element_ptr20
  %j_v21 = load i32, i32* %j
  %tmp22 = add i32 %j_v21, 1
  store i32 %tmp22, i32* %j
  br label %while17

merge:                                            ; preds = %while17
  %i_v24 = load i32, i32* %i
  %tmp25 = add i32 %i_v24, 1
  store i32 %tmp25, i32* %i
  br label %while

merge26:                                          ; preds = %while
  %tmp29 = sub i32 %c_mat, 1
  %tmp30 = sub i32 %r_mat, 1
  %m_mat31 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat31
  %m_r32 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 1
  %r_mat33 = load i32, i32* %m_r32
  %m_c34 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 2
  %c_mat35 = load i32, i32* %m_c34
  %m_mat36 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat36
  %m_r37 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r37
  %m_c38 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c38
  %i39 = alloca i32
  store i32 0, i32* %i39
  br label %while40

while40:                                          ; preds = %merge61, %merge26
  %i_v67 = load i32, i32* %i39
  %bool_val68 = icmp sle i32 %i_v67, %tmp30
  br i1 %bool_val68, label %while_body41, label %merge66

while_body41:                                     ; preds = %while40
  %j42 = alloca i32
  store i32 0, i32* %j42
  br label %while43

while43:                                          ; preds = %while_body44, %while_body41
  %j_v62 = load i32, i32* %j42
  %bool_val63 = icmp sle i32 %j_v62, %tmp29
  br i1 %bool_val63, label %while_body44, label %merge61

while_body44:                                     ; preds = %while43
  %j_v45 = load i32, i32* %j42
  %i_v46 = load i32, i32* %i39
  %tmp47 = mul i32 %c_mat35, %i_v46
  %index48 = add i32 %j_v45, %tmp47
  %element_ptr49 = getelementptr double, double* %mat_mat, i32 %index48
  %j_v50 = load i32, i32* %j42
  %tmp51 = sub i32 %j_v50, 0
  %tmp52 = add i32 %tmp51, 0
  %i_v53 = load i32, i32* %i39
  %tmp54 = sub i32 %i_v53, 0
  %tmp55 = add i32 %tmp54, 0
  %tmp56 = mul i32 %c_v, %tmp55
  %index57 = add i32 %tmp52, %tmp56
  %element_ptr58 = getelementptr double, double* %mat_v, i32 %index57
  %tmp_element = load double, double* %element_ptr58
  store double %tmp_element, double* %element_ptr49
  %j_v59 = load i32, i32* %j42
  %tmp60 = add i32 %j_v59, 1
  store i32 %tmp60, i32* %j42
  br label %while43

merge61:                                          ; preds = %while43
  %i_v64 = load i32, i32* %i39
  %tmp65 = add i32 %i_v64, 1
  store i32 %tmp65, i32* %i39
  br label %while40

merge66:                                          ; preds = %while40
  %m_mat69 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 0
  %mat_mat70 = load double*, double** %m_mat69
  %m_r71 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 1
  %r_mat72 = load i32, i32* %m_r71
  %m_c73 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 2
  %c_mat74 = load i32, i32* %m_c73
  %tmp75 = sub i32 %r_mat72, 1
  %tmp76 = sub i32 %c_mat74, 1
  %i77 = alloca i32
  store i32 0, i32* %i77
  br label %while78

while78:                                          ; preds = %merge92, %merge66
  %i_v99 = load i32, i32* %i77
  %bool_val100 = icmp sle i32 %i_v99, %tmp75
  br i1 %bool_val100, label %while_body79, label %merge98

while_body79:                                     ; preds = %while78
  %j80 = alloca i32
  store i32 0, i32* %j80
  br label %while81

while81:                                          ; preds = %while_body82, %while_body79
  %j_v93 = load i32, i32* %j80
  %bool_val94 = icmp sle i32 %j_v93, %tmp76
  br i1 %bool_val94, label %while_body82, label %merge92

while_body82:                                     ; preds = %while81
  %j_v83 = load i32, i32* %j80
  %i_v84 = load i32, i32* %i77
  %tmp85 = mul i32 %c_mat74, %i_v84
  %index86 = add i32 %j_v83, %tmp85
  %element_ptr87 = getelementptr double, double* %mat_mat70, i32 %index86
  %tmp_element88 = load double, double* %element_ptr87
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element88)
  %printf89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v90 = load i32, i32* %j80
  %tmp91 = add i32 %j_v90, 1
  store i32 %tmp91, i32* %j80
  br label %while81

merge92:                                          ; preds = %while81
  %printf95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v96 = load i32, i32* %i77
  %tmp97 = add i32 %i_v96, 1
  store i32 %tmp97, i32* %i77
  br label %while78

merge98:                                          ; preds = %while78
  %printf101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %multiply_result = call %return_t.1* @multiply(%matrix_t* %m12)
  ret i32 0
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %int_to_double_t* @int2double(i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %int_to_double_t*
  %tmp = sitofp i32 %0 to double
  %converted_double = getelementptr inbounds %int_to_double_t, %int_to_double_t* %return, i32 0, i32 0
  store double %tmp, double* %converted_double
  ret %int_to_double_t* %return
}

define %double_to_int_t* @double2int(double) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %double_to_int_t*
  %tmp = fptosi double %0 to i32
  %converted_int = getelementptr inbounds %double_to_int_t, %double_to_int_t* %return, i32 0, i32 0
  store i32 %tmp, i32* %converted_int
  ret %double_to_int_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  %tmp133 = load double, double* %k
  store double 0.000000e+00, double* %k
  %i134 = alloca i32
  %tmp135 = load i32, i32* %i134
  store i32 0, i32* %i134
  %j136 = alloca i32
  %tmp137 = load i32, i32* %j136
  store i32 0, i32* %j136
  %i138 = load i32, i32* %i134
  %tmp139 = icmp slt i32 %i138, 3
  %tmp140 = load i32, i32* %i134
  store i32 0, i32* %i134
  br label %while141

while141:                                         ; preds = %merge266, %merge130
  %i273 = load i32, i32* %i134
  %tmp274 = icmp slt i32 %i273, 3
  br i1 %tmp274, label %while_body142, label %merge272

while_body142:                                    ; preds = %while141
  %j143 = load i32, i32* %j136
  %tmp144 = icmp slt i32 %j143, 3
  %tmp145 = load i32, i32* %j136
  store i32 0, i32* %j136
  br label %while146

while146:                                         ; preds = %merge249, %while_body142
  %j267 = load i32, i32* %j136
  %tmp268 = icmp slt i32 %j267, 3
  br i1 %tmp268, label %while_body147, label %merge266

while_body147:                                    ; preds = %while146
  %k148 = load double, double* %k
  %m_r149 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat150 = load i32, i32* %m_r149
  %m_c151 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat152 = load i32, i32* %m_c151
  %i153 = load i32, i32* %i134
  %tmp155 = icmp sgt i32 0, %i153
  br i1 %tmp155, label %then, label %else

merge154:                                         ; preds = %else, %then
  %tmp156 = sub i32 %r_mat150, 1
  %tmp161 = icmp slt i32 %tmp156, %i153
  br i1 %tmp161, label %then158, label %else160

then:                                             ; preds = %while_body147
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge154

else:                                             ; preds = %while_body147
  br label %merge154

merge157:                                         ; preds = %else160, %then158
  %i162 = load i32, i32* %i134
  %tmp167 = icmp sgt i32 0, %i162
  br i1 %tmp167, label %then164, label %else166

then158:                                          ; preds = %merge154
  %printf159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge157

else160:                                          ; preds = %merge154
  br label %merge157

merge163:                                         ; preds = %else166, %then164
  %tmp168 = sub i32 %r_mat150, 1
  %tmp173 = icmp slt i32 %tmp168, %i162
  br i1 %tmp173, label %then170, label %else172

then164:                                          ; preds = %merge157
  %printf165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge163

else166:                                          ; preds = %merge157
  br label %merge163

merge169:                                         ; preds = %else172, %then170
  %j174 = load i32, i32* %j136
  %tmp179 = icmp sgt i32 0, %j174
  br i1 %tmp179, label %then176, label %else178

then170:                                          ; preds = %merge163
  %printf171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge169

else172:                                          ; preds = %merge163
  br label %merge169

merge175:                                         ; preds = %else178, %then176
  %tmp180 = sub i32 %c_mat152, 1
  %tmp185 = icmp slt i32 %tmp180, %j174
  br i1 %tmp185, label %then182, label %else184

then176:                                          ; preds = %merge169
  %printf177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge175

else178:                                          ; preds = %merge169
  br label %merge175

merge181:                                         ; preds = %else184, %then182
  %j186 = load i32, i32* %j136
  %tmp191 = icmp sgt i32 0, %j186
  br i1 %tmp191, label %then188, label %else190

then182:                                          ; preds = %merge175
  %printf183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge181

else184:                                          ; preds = %merge175
  br label %merge181

merge187:                                         ; preds = %else190, %then188
  %tmp192 = sub i32 %c_mat152, 1
  %tmp197 = icmp slt i32 %tmp192, %j186
  br i1 %tmp197, label %then194, label %else196

then188:                                          ; preds = %merge181
  %printf189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge187

else190:                                          ; preds = %merge181
  br label %merge187

merge193:                                         ; preds = %else196, %then194
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat198 = load double*, double** %mat
  %tmp199 = mul i32 %c_mat152, %i153
  %index200 = add i32 %j174, %tmp199
  %element_ptr201 = getelementptr double, double* %mat198, i32 %index200
  %element = load double, double* %element_ptr201
  %m_r202 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat203 = load i32, i32* %m_r202
  %m_c204 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat205 = load i32, i32* %m_c204
  %i206 = load i32, i32* %i134
  %tmp211 = icmp sgt i32 0, %i206
  br i1 %tmp211, label %then208, label %else210

then194:                                          ; preds = %merge187
  %printf195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge193

else196:                                          ; preds = %merge187
  br label %merge193

merge207:                                         ; preds = %else210, %then208
  %tmp212 = sub i32 %r_mat203, 1
  %tmp217 = icmp slt i32 %tmp212, %i206
  br i1 %tmp217, label %then214, label %else216

then208:                                          ; preds = %merge193
  %printf209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge207

else210:                                          ; preds = %merge193
  br label %merge207

merge213:                                         ; preds = %else216, %then214
  %i218 = load i32, i32* %i134
  %tmp223 = icmp sgt i32 0, %i218
  br i1 %tmp223, label %then220, label %else222

then214:                                          ; preds = %merge207
  %printf215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge213

else216:                                          ; preds = %merge207
  br label %merge213

merge219:                                         ; preds = %else222, %then220
  %tmp224 = sub i32 %r_mat203, 1
  %tmp229 = icmp slt i32 %tmp224, %i218
  br i1 %tmp229, label %then226, label %else228

then220:                                          ; preds = %merge213
  %printf221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge219

else222:                                          ; preds = %merge213
  br label %merge219

merge225:                                         ; preds = %else228, %then226
  %j230 = load i32, i32* %j136
  %tmp235 = icmp sgt i32 0, %j230
  br i1 %tmp235, label %then232, label %else234

then226:                                          ; preds = %merge219
  %printf227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge225

else228:                                          ; preds = %merge219
  br label %merge225

merge231:                                         ; preds = %else234, %then232
  %tmp236 = sub i32 %c_mat205, 1
  %tmp241 = icmp slt i32 %tmp236, %j230
  br i1 %tmp241, label %then238, label %else240

then232:                                          ; preds = %merge225
  %printf233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge231

else234:                                          ; preds = %merge225
  br label %merge231

merge237:                                         ; preds = %else240, %then238
  %j242 = load i32, i32* %j136
  %tmp247 = icmp sgt i32 0, %j242
  br i1 %tmp247, label %then244, label %else246

then238:                                          ; preds = %merge231
  %printf239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge237

else240:                                          ; preds = %merge231
  br label %merge237

merge243:                                         ; preds = %else246, %then244
  %tmp248 = sub i32 %c_mat205, 1
  %tmp253 = icmp slt i32 %tmp248, %j242
  br i1 %tmp253, label %then250, label %else252

then244:                                          ; preds = %merge237
  %printf245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge243

else246:                                          ; preds = %merge237
  br label %merge243

merge249:                                         ; preds = %else252, %then250
  %mat254 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat255 = load double*, double** %mat254
  %tmp256 = mul i32 %c_mat205, %i206
  %index257 = add i32 %j230, %tmp256
  %element_ptr258 = getelementptr double, double* %mat255, i32 %index257
  %element259 = load double, double* %element_ptr258
  %tmp260 = fmul double %element, %element259
  %tmp261 = fadd double %k148, %tmp260
  %tmp262 = load double, double* %k
  store double %tmp261, double* %k
  %j263 = load i32, i32* %j136
  %tmp264 = add i32 %j263, 1
  %tmp265 = load i32, i32* %j136
  store i32 %tmp264, i32* %j136
  br label %while146

then250:                                          ; preds = %merge243
  %printf251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge249

else252:                                          ; preds = %merge243
  br label %merge249

merge266:                                         ; preds = %while146
  %i269 = load i32, i32* %i134
  %tmp270 = add i32 %i269, 1
  %tmp271 = load i32, i32* %i134
  store i32 %tmp270, i32* %i134
  br label %while141

merge272:                                         ; preds = %while141
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k275 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k275, double* %return0
  ret %return_t* %return
  %tmp276 = alloca %return_t
  ret %return_t* %tmp276
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  %tmp133 = load i32, i32* %a
  store i32 0, i32* %a
  %b = alloca i32
  %tmp134 = load i32, i32* %b
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp135 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr136 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v137 = load i32, i32* %v_ptr136
  %tmp138 = load i32, i32* %b
  store i32 %v137, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b139 = load i32, i32* %b
  %tmp140 = add i32 %b139, 2
  %a141 = load i32, i32* %a
  %tmp142 = add i32 %a141, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp142, i32 %tmp140)
  %v_ptr143 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v144 = load %matrix_t*, %matrix_t** %v_ptr143
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat145 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_mat146 = load double*, double** %m_mat145
  %m_r147 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_mat148 = load i32, i32* %m_r147
  %m_c149 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_mat150 = load i32, i32* %m_c149
  %size151 = mul i32 %r_mat148, %c_mat150
  %system_mat152 = alloca double, i32 %size151
  %m153 = alloca %matrix_t
  %m_mat154 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  store double* %system_mat152, double** %m_mat154
  %m_r155 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  store i32 %r_mat148, i32* %m_r155
  %m_c156 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  store i32 %c_mat150, i32* %m_c156
  %tmp157 = sub i32 %r_mat148, 1
  %tmp158 = sub i32 %c_mat150, 1
  %i159 = alloca i32
  store i32 0, i32* %i159
  br label %while160

while160:                                         ; preds = %merge172, %merge130
  %i_v178 = load i32, i32* %i159
  %bool_val179 = icmp sle i32 %i_v178, %tmp157
  br i1 %bool_val179, label %while_body161, label %merge177

while_body161:                                    ; preds = %while160
  %j162 = alloca i32
  store i32 0, i32* %j162
  br label %while163

while163:                                         ; preds = %while_body164, %while_body161
  %j_v173 = load i32, i32* %j162
  %bool_val174 = icmp sle i32 %j_v173, %tmp158
  br i1 %bool_val174, label %while_body164, label %merge172

while_body164:                                    ; preds = %while163
  %j_v165 = load i32, i32* %j162
  %i_v166 = load i32, i32* %i159
  %tmp167 = mul i32 %c_mat150, %i_v166
  %index168 = add i32 %j_v165, %tmp167
  %element_ptr169 = getelementptr double, double* %system_mat152, i32 %index168
  store double 0.000000e+00, double* %element_ptr169
  %j_v170 = load i32, i32* %j162
  %tmp171 = add i32 %j_v170, 1
  store i32 %tmp171, i32* %j162
  br label %while163

merge172:                                         ; preds = %while163
  %i_v175 = load i32, i32* %i159
  %tmp176 = add i32 %i_v175, 1
  store i32 %tmp176, i32* %i159
  br label %while160

merge177:                                         ; preds = %while160
  %tmp180 = sub i32 %c_mat150, 1
  %tmp181 = sub i32 %r_mat148, 1
  %m_mat182 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_mat183 = load double*, double** %m_mat182
  %m_r184 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat185 = load i32, i32* %m_r184
  %m_c186 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat187 = load i32, i32* %m_c186
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_v189 = load double*, double** %m_mat188
  %m_r190 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_v191 = load i32, i32* %m_r190
  %m_c192 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_v193 = load i32, i32* %m_c192
  %i194 = alloca i32
  store i32 0, i32* %i194
  br label %while195

while195:                                         ; preds = %merge217, %merge177
  %i_v223 = load i32, i32* %i194
  %bool_val224 = icmp sle i32 %i_v223, %tmp181
  br i1 %bool_val224, label %while_body196, label %merge222

while_body196:                                    ; preds = %while195
  %j197 = alloca i32
  store i32 0, i32* %j197
  br label %while198

while198:                                         ; preds = %while_body199, %while_body196
  %j_v218 = load i32, i32* %j197
  %bool_val219 = icmp sle i32 %j_v218, %tmp180
  br i1 %bool_val219, label %while_body199, label %merge217

while_body199:                                    ; preds = %while198
  %j_v200 = load i32, i32* %j197
  %i_v201 = load i32, i32* %i194
  %tmp202 = mul i32 %c_mat187, %i_v201
  %index203 = add i32 %j_v200, %tmp202
  %element_ptr204 = getelementptr double, double* %mat_mat183, i32 %index203
  %j_v205 = load i32, i32* %j197
  %tmp206 = sub i32 %j_v205, 0
  %tmp207 = add i32 %tmp206, 0
  %i_v208 = load i32, i32* %i194
  %tmp209 = sub i32 %i_v208, 0
  %tmp210 = add i32 %tmp209, 0
  %tmp211 = mul i32 %c_v193, %tmp210
  %index212 = add i32 %tmp207, %tmp211
  %element_ptr213 = getelementptr double, double* %mat_v189, i32 %index212
  %tmp_element214 = load double, double* %element_ptr213
  store double %tmp_element214, double* %element_ptr204
  %j_v215 = load i32, i32* %j197
  %tmp216 = add i32 %j_v215, 1
  store i32 %tmp216, i32* %j197
  br label %while198

merge217:                                         ; preds = %while198
  %i_v220 = load i32, i32* %i194
  %tmp221 = add i32 %i_v220, 1
  store i32 %tmp221, i32* %i194
  br label %while195

merge222:                                         ; preds = %while195
  %4 = bitcast double* %mat_mat146 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v144 to i8*
  tail call void @free(i8* %5)
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %size229 = mul i32 %r_mat226, %c_mat228
  %system_mat230 = alloca double, i32 %size229
  %m231 = alloca %matrix_t
  %m_mat232 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  store double* %system_mat230, double** %m_mat232
  %m_r233 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  store i32 %r_mat226, i32* %m_r233
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  store i32 %c_mat228, i32* %m_c234
  %tmp235 = sub i32 %r_mat226, 1
  %tmp236 = sub i32 %c_mat228, 1
  %i237 = alloca i32
  store i32 0, i32* %i237
  br label %while238

while238:                                         ; preds = %merge250, %merge222
  %i_v256 = load i32, i32* %i237
  %bool_val257 = icmp sle i32 %i_v256, %tmp235
  br i1 %bool_val257, label %while_body239, label %merge255

while_body239:                                    ; preds = %while238
  %j240 = alloca i32
  store i32 0, i32* %j240
  br label %while241

while241:                                         ; preds = %while_body242, %while_body239
  %j_v251 = load i32, i32* %j240
  %bool_val252 = icmp sle i32 %j_v251, %tmp236
  br i1 %bool_val252, label %while_body242, label %merge250

while_body242:                                    ; preds = %while241
  %j_v243 = load i32, i32* %j240
  %i_v244 = load i32, i32* %i237
  %tmp245 = mul i32 %c_mat228, %i_v244
  %index246 = add i32 %j_v243, %tmp245
  %element_ptr247 = getelementptr double, double* %system_mat230, i32 %index246
  store double 0.000000e+00, double* %element_ptr247
  %j_v248 = load i32, i32* %j240
  %tmp249 = add i32 %j_v248, 1
  store i32 %tmp249, i32* %j240
  br label %while241

merge250:                                         ; preds = %while241
  %i_v253 = load i32, i32* %i237
  %tmp254 = add i32 %i_v253, 1
  store i32 %tmp254, i32* %i237
  br label %while238

merge255:                                         ; preds = %while238
  %tmp258 = sub i32 %c_mat228, 1
  %tmp259 = sub i32 %r_mat226, 1
  %m_mat260 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat261 = load double*, double** %m_mat260
  %m_r262 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat263 = load i32, i32* %m_r262
  %m_c264 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat265 = load i32, i32* %m_c264
  %m_mat266 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_v267 = load double*, double** %m_mat266
  %m_r268 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_v269 = load i32, i32* %m_r268
  %m_c270 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_v271 = load i32, i32* %m_c270
  %i272 = alloca i32
  store i32 0, i32* %i272
  br label %while273

while273:                                         ; preds = %merge295, %merge255
  %i_v301 = load i32, i32* %i272
  %bool_val302 = icmp sle i32 %i_v301, %tmp259
  br i1 %bool_val302, label %while_body274, label %merge300

while_body274:                                    ; preds = %while273
  %j275 = alloca i32
  store i32 0, i32* %j275
  br label %while276

while276:                                         ; preds = %while_body277, %while_body274
  %j_v296 = load i32, i32* %j275
  %bool_val297 = icmp sle i32 %j_v296, %tmp258
  br i1 %bool_val297, label %while_body277, label %merge295

while_body277:                                    ; preds = %while276
  %j_v278 = load i32, i32* %j275
  %i_v279 = load i32, i32* %i272
  %tmp280 = mul i32 %c_mat265, %i_v279
  %index281 = add i32 %j_v278, %tmp280
  %element_ptr282 = getelementptr double, double* %mat_mat261, i32 %index281
  %j_v283 = load i32, i32* %j275
  %tmp284 = sub i32 %j_v283, 0
  %tmp285 = add i32 %tmp284, 0
  %i_v286 = load i32, i32* %i272
  %tmp287 = sub i32 %i_v286, 0
  %tmp288 = add i32 %tmp287, 0
  %tmp289 = mul i32 %c_v271, %tmp288
  %index290 = add i32 %tmp285, %tmp289
  %element_ptr291 = getelementptr double, double* %mat_v267, i32 %index290
  %tmp_element292 = load double, double* %element_ptr291
  store double %tmp_element292, double* %element_ptr282
  %j_v293 = load i32, i32* %j275
  %tmp294 = add i32 %j_v293, 1
  store i32 %tmp294, i32* %j275
  br label %while276

merge295:                                         ; preds = %while276
  %i_v298 = load i32, i32* %i272
  %tmp299 = add i32 %i_v298, 1
  store i32 %tmp299, i32* %i272
  br label %while273

merge300:                                         ; preds = %while273
  %b303 = load i32, i32* %b
  %a304 = load i32, i32* %a
  %zeros_result305 = call %zero_matrix_t* @zeros(i32 %a304, i32 %b303)
  %v_ptr306 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result305, i32 0, i32 0
  %v307 = load %matrix_t*, %matrix_t** %v_ptr306
  %6 = bitcast %zero_matrix_t* %zeros_result305 to i8*
  tail call void @free(i8* %6)
  %m_mat308 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_mat309 = load double*, double** %m_mat308
  %m_r310 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_mat311 = load i32, i32* %m_r310
  %m_c312 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_mat313 = load i32, i32* %m_c312
  %size314 = mul i32 %r_mat311, %c_mat313
  %system_mat315 = alloca double, i32 %size314
  %m316 = alloca %matrix_t
  %m_mat317 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  store double* %system_mat315, double** %m_mat317
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  store i32 %r_mat311, i32* %m_r318
  %m_c319 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  store i32 %c_mat313, i32* %m_c319
  %tmp320 = sub i32 %r_mat311, 1
  %tmp321 = sub i32 %c_mat313, 1
  %i322 = alloca i32
  store i32 0, i32* %i322
  br label %while323

while323:                                         ; preds = %merge335, %merge300
  %i_v341 = load i32, i32* %i322
  %bool_val342 = icmp sle i32 %i_v341, %tmp320
  br i1 %bool_val342, label %while_body324, label %merge340

while_body324:                                    ; preds = %while323
  %j325 = alloca i32
  store i32 0, i32* %j325
  br label %while326

while326:                                         ; preds = %while_body327, %while_body324
  %j_v336 = load i32, i32* %j325
  %bool_val337 = icmp sle i32 %j_v336, %tmp321
  br i1 %bool_val337, label %while_body327, label %merge335

while_body327:                                    ; preds = %while326
  %j_v328 = load i32, i32* %j325
  %i_v329 = load i32, i32* %i322
  %tmp330 = mul i32 %c_mat313, %i_v329
  %index331 = add i32 %j_v328, %tmp330
  %element_ptr332 = getelementptr double, double* %system_mat315, i32 %index331
  store double 0.000000e+00, double* %element_ptr332
  %j_v333 = load i32, i32* %j325
  %tmp334 = add i32 %j_v333, 1
  store i32 %tmp334, i32* %j325
  br label %while326

merge335:                                         ; preds = %while326
  %i_v338 = load i32, i32* %i322
  %tmp339 = add i32 %i_v338, 1
  store i32 %tmp339, i32* %i322
  br label %while323

merge340:                                         ; preds = %while323
  %tmp343 = sub i32 %c_mat313, 1
  %tmp344 = sub i32 %r_mat311, 1
  %m_mat345 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_mat346 = load double*, double** %m_mat345
  %m_r347 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat348 = load i32, i32* %m_r347
  %m_c349 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat350 = load i32, i32* %m_c349
  %m_mat351 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_v352 = load double*, double** %m_mat351
  %m_r353 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_v354 = load i32, i32* %m_r353
  %m_c355 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_v356 = load i32, i32* %m_c355
  %i357 = alloca i32
  store i32 0, i32* %i357
  br label %while358

while358:                                         ; preds = %merge380, %merge340
  %i_v386 = load i32, i32* %i357
  %bool_val387 = icmp sle i32 %i_v386, %tmp344
  br i1 %bool_val387, label %while_body359, label %merge385

while_body359:                                    ; preds = %while358
  %j360 = alloca i32
  store i32 0, i32* %j360
  br label %while361

while361:                                         ; preds = %while_body362, %while_body359
  %j_v381 = load i32, i32* %j360
  %bool_val382 = icmp sle i32 %j_v381, %tmp343
  br i1 %bool_val382, label %while_body362, label %merge380

while_body362:                                    ; preds = %while361
  %j_v363 = load i32, i32* %j360
  %i_v364 = load i32, i32* %i357
  %tmp365 = mul i32 %c_mat350, %i_v364
  %index366 = add i32 %j_v363, %tmp365
  %element_ptr367 = getelementptr double, double* %mat_mat346, i32 %index366
  %j_v368 = load i32, i32* %j360
  %tmp369 = sub i32 %j_v368, 0
  %tmp370 = add i32 %tmp369, 0
  %i_v371 = load i32, i32* %i357
  %tmp372 = sub i32 %i_v371, 0
  %tmp373 = add i32 %tmp372, 0
  %tmp374 = mul i32 %c_v356, %tmp373
  %index375 = add i32 %tmp370, %tmp374
  %element_ptr376 = getelementptr double, double* %mat_v352, i32 %index375
  %tmp_element377 = load double, double* %element_ptr376
  store double %tmp_element377, double* %element_ptr367
  %j_v378 = load i32, i32* %j360
  %tmp379 = add i32 %j_v378, 1
  store i32 %tmp379, i32* %j360
  br label %while361

merge380:                                         ; preds = %while361
  %i_v383 = load i32, i32* %i357
  %tmp384 = add i32 %i_v383, 1
  store i32 %tmp384, i32* %i357
  br label %while358

merge385:                                         ; preds = %while358
  %7 = bitcast double* %mat_mat309 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v307 to i8*
  tail call void @free(i8* %8)
  %m_r388 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat389 = load i32, i32* %m_r388
  %m_c390 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat391 = load i32, i32* %m_c390
  %size392 = mul i32 %r_mat389, %c_mat391
  %system_mat393 = alloca double, i32 %size392
  %m394 = alloca %matrix_t
  %m_mat395 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  store double* %system_mat393, double** %m_mat395
  %m_r396 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  store i32 %r_mat389, i32* %m_r396
  %m_c397 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  store i32 %c_mat391, i32* %m_c397
  %tmp398 = sub i32 %r_mat389, 1
  %tmp399 = sub i32 %c_mat391, 1
  %i400 = alloca i32
  store i32 0, i32* %i400
  br label %while401

while401:                                         ; preds = %merge413, %merge385
  %i_v419 = load i32, i32* %i400
  %bool_val420 = icmp sle i32 %i_v419, %tmp398
  br i1 %bool_val420, label %while_body402, label %merge418

while_body402:                                    ; preds = %while401
  %j403 = alloca i32
  store i32 0, i32* %j403
  br label %while404

while404:                                         ; preds = %while_body405, %while_body402
  %j_v414 = load i32, i32* %j403
  %bool_val415 = icmp sle i32 %j_v414, %tmp399
  br i1 %bool_val415, label %while_body405, label %merge413

while_body405:                                    ; preds = %while404
  %j_v406 = load i32, i32* %j403
  %i_v407 = load i32, i32* %i400
  %tmp408 = mul i32 %c_mat391, %i_v407
  %index409 = add i32 %j_v406, %tmp408
  %element_ptr410 = getelementptr double, double* %system_mat393, i32 %index409
  store double 0.000000e+00, double* %element_ptr410
  %j_v411 = load i32, i32* %j403
  %tmp412 = add i32 %j_v411, 1
  store i32 %tmp412, i32* %j403
  br label %while404

merge413:                                         ; preds = %while404
  %i_v416 = load i32, i32* %i400
  %tmp417 = add i32 %i_v416, 1
  store i32 %tmp417, i32* %i400
  br label %while401

merge418:                                         ; preds = %while401
  %tmp421 = sub i32 %c_mat391, 1
  %tmp422 = sub i32 %r_mat389, 1
  %m_mat423 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_mat424 = load double*, double** %m_mat423
  %m_r425 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat426 = load i32, i32* %m_r425
  %m_c427 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat428 = load i32, i32* %m_c427
  %m_mat429 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_v430 = load double*, double** %m_mat429
  %m_r431 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_v432 = load i32, i32* %m_r431
  %m_c433 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_v434 = load i32, i32* %m_c433
  %i435 = alloca i32
  store i32 0, i32* %i435
  br label %while436

while436:                                         ; preds = %merge458, %merge418
  %i_v464 = load i32, i32* %i435
  %bool_val465 = icmp sle i32 %i_v464, %tmp422
  br i1 %bool_val465, label %while_body437, label %merge463

while_body437:                                    ; preds = %while436
  %j438 = alloca i32
  store i32 0, i32* %j438
  br label %while439

while439:                                         ; preds = %while_body440, %while_body437
  %j_v459 = load i32, i32* %j438
  %bool_val460 = icmp sle i32 %j_v459, %tmp421
  br i1 %bool_val460, label %while_body440, label %merge458

while_body440:                                    ; preds = %while439
  %j_v441 = load i32, i32* %j438
  %i_v442 = load i32, i32* %i435
  %tmp443 = mul i32 %c_mat428, %i_v442
  %index444 = add i32 %j_v441, %tmp443
  %element_ptr445 = getelementptr double, double* %mat_mat424, i32 %index444
  %j_v446 = load i32, i32* %j438
  %tmp447 = sub i32 %j_v446, 0
  %tmp448 = add i32 %tmp447, 0
  %i_v449 = load i32, i32* %i435
  %tmp450 = sub i32 %i_v449, 0
  %tmp451 = add i32 %tmp450, 0
  %tmp452 = mul i32 %c_v434, %tmp451
  %index453 = add i32 %tmp448, %tmp452
  %element_ptr454 = getelementptr double, double* %mat_v430, i32 %index453
  %tmp_element455 = load double, double* %element_ptr454
  store double %tmp_element455, double* %element_ptr445
  %j_v456 = load i32, i32* %j438
  %tmp457 = add i32 %j_v456, 1
  store i32 %tmp457, i32* %j438
  br label %while439

merge458:                                         ; preds = %while439
  %i_v461 = load i32, i32* %i435
  %tmp462 = add i32 %i_v461, 1
  store i32 %tmp462, i32* %i435
  br label %while436

merge463:                                         ; preds = %while436
  %m_r466 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat467 = load i32, i32* %m_r466
  %m_c468 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat469 = load i32, i32* %m_c468
  br i1 false, label %then, label %else

merge470:                                         ; preds = %else, %then
  %tmp471 = sub i32 %r_mat467, 1
  %tmp476 = icmp slt i32 %tmp471, 0
  br i1 %tmp476, label %then473, label %else475

then:                                             ; preds = %merge463
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge470

else:                                             ; preds = %merge463
  br label %merge470

merge472:                                         ; preds = %else475, %then473
  %a477 = load i32, i32* %a
  %tmp478 = sub i32 %a477, 1
  %tmp483 = icmp sgt i32 0, %tmp478
  br i1 %tmp483, label %then480, label %else482

then473:                                          ; preds = %merge470
  %printf474 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge472

else475:                                          ; preds = %merge470
  br label %merge472

merge479:                                         ; preds = %else482, %then480
  %tmp484 = sub i32 %r_mat467, 1
  %tmp489 = icmp slt i32 %tmp484, %tmp478
  br i1 %tmp489, label %then486, label %else488

then480:                                          ; preds = %merge472
  %printf481 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge479

else482:                                          ; preds = %merge472
  br label %merge479

merge485:                                         ; preds = %else488, %then486
  br i1 false, label %then491, label %else493

then486:                                          ; preds = %merge479
  %printf487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge485

else488:                                          ; preds = %merge479
  br label %merge485

merge490:                                         ; preds = %else493, %then491
  %tmp494 = sub i32 %c_mat469, 1
  %tmp499 = icmp slt i32 %tmp494, 0
  br i1 %tmp499, label %then496, label %else498

then491:                                          ; preds = %merge485
  %printf492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge490

else493:                                          ; preds = %merge485
  br label %merge490

merge495:                                         ; preds = %else498, %then496
  %b500 = load i32, i32* %b
  %tmp501 = sub i32 %b500, 1
  %tmp506 = icmp sgt i32 0, %tmp501
  br i1 %tmp506, label %then503, label %else505

then496:                                          ; preds = %merge490
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge495

else498:                                          ; preds = %merge490
  br label %merge495

merge502:                                         ; preds = %else505, %then503
  %tmp507 = sub i32 %c_mat469, 1
  %tmp512 = icmp slt i32 %tmp507, %tmp501
  br i1 %tmp512, label %then509, label %else511

then503:                                          ; preds = %merge495
  %printf504 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge502

else505:                                          ; preds = %merge495
  br label %merge502

merge508:                                         ; preds = %else511, %then509
  %tmp513 = sub i32 %tmp478, 0
  %tmp514 = sub i32 %tmp501, 0
  %tmp515 = add i32 %tmp514, 1
  %tmp516 = add i32 %tmp513, 1
  %size517 = mul i32 %tmp516, %tmp515
  %system_mat518 = alloca double, i32 %size517
  %m519 = alloca %matrix_t
  %m_mat520 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  store double* %system_mat518, double** %m_mat520
  %m_r521 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  store i32 %tmp516, i32* %m_r521
  %m_c522 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  store i32 %tmp515, i32* %m_c522
  %tmp523 = sub i32 %tmp516, 1
  %tmp524 = sub i32 %tmp515, 1
  %i525 = alloca i32
  store i32 0, i32* %i525
  br label %while526

then509:                                          ; preds = %merge502
  %printf510 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge508

else511:                                          ; preds = %merge502
  br label %merge508

while526:                                         ; preds = %merge538, %merge508
  %i_v544 = load i32, i32* %i525
  %bool_val545 = icmp sle i32 %i_v544, %tmp523
  br i1 %bool_val545, label %while_body527, label %merge543

while_body527:                                    ; preds = %while526
  %j528 = alloca i32
  store i32 0, i32* %j528
  br label %while529

while529:                                         ; preds = %while_body530, %while_body527
  %j_v539 = load i32, i32* %j528
  %bool_val540 = icmp sle i32 %j_v539, %tmp524
  br i1 %bool_val540, label %while_body530, label %merge538

while_body530:                                    ; preds = %while529
  %j_v531 = load i32, i32* %j528
  %i_v532 = load i32, i32* %i525
  %tmp533 = mul i32 %tmp515, %i_v532
  %index534 = add i32 %j_v531, %tmp533
  %element_ptr535 = getelementptr double, double* %system_mat518, i32 %index534
  store double 0.000000e+00, double* %element_ptr535
  %j_v536 = load i32, i32* %j528
  %tmp537 = add i32 %j_v536, 1
  store i32 %tmp537, i32* %j528
  br label %while529

merge538:                                         ; preds = %while529
  %i_v541 = load i32, i32* %i525
  %tmp542 = add i32 %i_v541, 1
  store i32 %tmp542, i32* %i525
  br label %while526

merge543:                                         ; preds = %while526
  %m_mat546 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_mat547 = load double*, double** %m_mat546
  %m_r548 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat549 = load i32, i32* %m_r548
  %m_c550 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_mat551 = load i32, i32* %m_c550
  %m_mat552 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v553 = load double*, double** %m_mat552
  %m_r554 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v555 = load i32, i32* %m_r554
  %m_c556 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v557 = load i32, i32* %m_c556
  %i558 = alloca i32
  store i32 0, i32* %i558
  br label %while559

while559:                                         ; preds = %merge581, %merge543
  %i_v587 = load i32, i32* %i558
  %bool_val588 = icmp sle i32 %i_v587, %tmp513
  br i1 %bool_val588, label %while_body560, label %merge586

while_body560:                                    ; preds = %while559
  %j561 = alloca i32
  store i32 0, i32* %j561
  br label %while562

while562:                                         ; preds = %while_body563, %while_body560
  %j_v582 = load i32, i32* %j561
  %bool_val583 = icmp sle i32 %j_v582, %tmp514
  br i1 %bool_val583, label %while_body563, label %merge581

while_body563:                                    ; preds = %while562
  %j_v564 = load i32, i32* %j561
  %i_v565 = load i32, i32* %i558
  %tmp566 = mul i32 %c_mat551, %i_v565
  %index567 = add i32 %j_v564, %tmp566
  %element_ptr568 = getelementptr double, double* %mat_mat547, i32 %index567
  %j_v569 = load i32, i32* %j561
  %tmp570 = sub i32 %j_v569, 0
  %tmp571 = add i32 %tmp570, 0
  %i_v572 = load i32, i32* %i558
  %tmp573 = sub i32 %i_v572, 0
  %tmp574 = add i32 %tmp573, 0
  %tmp575 = mul i32 %c_v557, %tmp574
  %index576 = add i32 %tmp571, %tmp575
  %element_ptr577 = getelementptr double, double* %mat_v553, i32 %index576
  %tmp_element578 = load double, double* %element_ptr577
  store double %tmp_element578, double* %element_ptr568
  %j_v579 = load i32, i32* %j561
  %tmp580 = add i32 %j_v579, 1
  store i32 %tmp580, i32* %j561
  br label %while562

merge581:                                         ; preds = %while562
  %i_v584 = load i32, i32* %i558
  %tmp585 = add i32 %i_v584, 1
  store i32 %tmp585, i32* %i558
  br label %while559

merge586:                                         ; preds = %while559
  %m_r589 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat590 = load i32, i32* %m_r589
  %m_c591 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat592 = load i32, i32* %m_c591
  br i1 false, label %then594, label %else596

merge593:                                         ; preds = %else596, %then594
  %tmp597 = sub i32 %r_mat590, 1
  %tmp602 = icmp slt i32 %tmp597, 1
  br i1 %tmp602, label %then599, label %else601

then594:                                          ; preds = %merge586
  %printf595 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge593

else596:                                          ; preds = %merge586
  br label %merge593

merge598:                                         ; preds = %else601, %then599
  %a603 = load i32, i32* %a
  %tmp608 = icmp sgt i32 0, %a603
  br i1 %tmp608, label %then605, label %else607

then599:                                          ; preds = %merge593
  %printf600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge598

else601:                                          ; preds = %merge593
  br label %merge598

merge604:                                         ; preds = %else607, %then605
  %tmp609 = sub i32 %r_mat590, 1
  %tmp614 = icmp slt i32 %tmp609, %a603
  br i1 %tmp614, label %then611, label %else613

then605:                                          ; preds = %merge598
  %printf606 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge604

else607:                                          ; preds = %merge598
  br label %merge604

merge610:                                         ; preds = %else613, %then611
  br i1 false, label %then616, label %else618

then611:                                          ; preds = %merge604
  %printf612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge610

else613:                                          ; preds = %merge604
  br label %merge610

merge615:                                         ; preds = %else618, %then616
  %tmp619 = sub i32 %c_mat592, 1
  %tmp624 = icmp slt i32 %tmp619, 1
  br i1 %tmp624, label %then621, label %else623

then616:                                          ; preds = %merge610
  %printf617 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge615

else618:                                          ; preds = %merge610
  br label %merge615

merge620:                                         ; preds = %else623, %then621
  %b625 = load i32, i32* %b
  %tmp630 = icmp sgt i32 0, %b625
  br i1 %tmp630, label %then627, label %else629

then621:                                          ; preds = %merge615
  %printf622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge620

else623:                                          ; preds = %merge615
  br label %merge620

merge626:                                         ; preds = %else629, %then627
  %tmp631 = sub i32 %c_mat592, 1
  %tmp636 = icmp slt i32 %tmp631, %b625
  br i1 %tmp636, label %then633, label %else635

then627:                                          ; preds = %merge620
  %printf628 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge626

else629:                                          ; preds = %merge620
  br label %merge626

merge632:                                         ; preds = %else635, %then633
  %tmp637 = sub i32 %a603, 1
  %tmp638 = add i32 %tmp637, 1
  %m_r639 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat640 = load i32, i32* %m_r639
  %tmp645 = icmp ne i32 %tmp638, %r_mat640
  br i1 %tmp645, label %then642, label %else644

then633:                                          ; preds = %merge626
  %printf634 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge632

else635:                                          ; preds = %merge626
  br label %merge632

merge641:                                         ; preds = %else644, %then642
  %tmp646 = sub i32 %b625, 1
  %tmp647 = add i32 %tmp646, 1
  %m_r648 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %r_mat649 = load i32, i32* %m_r648
  %tmp654 = icmp ne i32 %tmp647, %r_mat649
  br i1 %tmp654, label %then651, label %else653

then642:                                          ; preds = %merge632
  %printf643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge641

else644:                                          ; preds = %merge632
  br label %merge641

merge650:                                         ; preds = %else653, %then651
  %m_mat655 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat656 = load double*, double** %m_mat655
  %m_r657 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat658 = load i32, i32* %m_r657
  %m_c659 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat660 = load i32, i32* %m_c659
  %m_mat661 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_v662 = load double*, double** %m_mat661
  %m_r663 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_v664 = load i32, i32* %m_r663
  %m_c665 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_v666 = load i32, i32* %m_c665
  %i667 = alloca i32
  store i32 1, i32* %i667
  br label %while668

then651:                                          ; preds = %merge641
  %printf652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge650

else653:                                          ; preds = %merge641
  br label %merge650

while668:                                         ; preds = %merge690, %merge650
  %i_v696 = load i32, i32* %i667
  %bool_val697 = icmp sle i32 %i_v696, %a603
  br i1 %bool_val697, label %while_body669, label %merge695

while_body669:                                    ; preds = %while668
  %j670 = alloca i32
  store i32 1, i32* %j670
  br label %while671

while671:                                         ; preds = %while_body672, %while_body669
  %j_v691 = load i32, i32* %j670
  %bool_val692 = icmp sle i32 %j_v691, %b625
  br i1 %bool_val692, label %while_body672, label %merge690

while_body672:                                    ; preds = %while671
  %j_v673 = load i32, i32* %j670
  %i_v674 = load i32, i32* %i667
  %tmp675 = mul i32 %c_mat660, %i_v674
  %index676 = add i32 %j_v673, %tmp675
  %element_ptr677 = getelementptr double, double* %mat_mat656, i32 %index676
  %j_v678 = load i32, i32* %j670
  %tmp679 = sub i32 %j_v678, 1
  %tmp680 = add i32 %tmp679, 0
  %i_v681 = load i32, i32* %i667
  %tmp682 = sub i32 %i_v681, 1
  %tmp683 = add i32 %tmp682, 0
  %tmp684 = mul i32 %c_v666, %tmp683
  %index685 = add i32 %tmp680, %tmp684
  %element_ptr686 = getelementptr double, double* %mat_v662, i32 %index685
  %tmp_element687 = load double, double* %element_ptr686
  store double %tmp_element687, double* %element_ptr677
  %j_v688 = load i32, i32* %j670
  %tmp689 = add i32 %j_v688, 1
  store i32 %tmp689, i32* %j670
  br label %while671

merge690:                                         ; preds = %while671
  %i_v693 = load i32, i32* %i667
  %tmp694 = add i32 %i_v693, 1
  store i32 %tmp694, i32* %i667
  br label %while668

merge695:                                         ; preds = %while668
  %i698 = alloca i32
  %tmp699 = load i32, i32* %i698
  store i32 0, i32* %i698
  %j700 = alloca i32
  %tmp701 = load i32, i32* %j700
  store i32 0, i32* %j700
  %i702 = load i32, i32* %i698
  %a703 = load i32, i32* %a
  %tmp704 = icmp slt i32 %i702, %a703
  %tmp705 = load i32, i32* %i698
  store i32 0, i32* %i698
  br label %while706

while706:                                         ; preds = %merge908, %merge695
  %i916 = load i32, i32* %i698
  %a917 = load i32, i32* %a
  %tmp918 = icmp slt i32 %i916, %a917
  br i1 %tmp918, label %while_body707, label %merge915

while_body707:                                    ; preds = %while706
  %j708 = load i32, i32* %j700
  %b709 = load i32, i32* %b
  %tmp710 = icmp slt i32 %j708, %b709
  %tmp711 = load i32, i32* %j700
  store i32 0, i32* %j700
  br label %while712

while712:                                         ; preds = %merge896, %while_body707
  %j909 = load i32, i32* %j700
  %b910 = load i32, i32* %b
  %tmp911 = icmp slt i32 %j909, %b910
  br i1 %tmp911, label %while_body713, label %merge908

while_body713:                                    ; preds = %while712
  %k = alloca double
  %tmp714 = load double, double* %k
  store double 0.000000e+00, double* %k
  %m_r715 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat716 = load i32, i32* %m_r715
  %m_c717 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat718 = load i32, i32* %m_c717
  %i719 = load i32, i32* %i698
  %tmp724 = icmp sgt i32 0, %i719
  br i1 %tmp724, label %then721, label %else723

merge720:                                         ; preds = %else723, %then721
  %tmp725 = sub i32 %r_mat716, 1
  %tmp730 = icmp slt i32 %tmp725, %i719
  br i1 %tmp730, label %then727, label %else729

then721:                                          ; preds = %while_body713
  %printf722 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge720

else723:                                          ; preds = %while_body713
  br label %merge720

merge726:                                         ; preds = %else729, %then727
  %i731 = load i32, i32* %i698
  %tmp732 = add i32 %i731, 2
  %tmp737 = icmp sgt i32 0, %tmp732
  br i1 %tmp737, label %then734, label %else736

then727:                                          ; preds = %merge720
  %printf728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge726

else729:                                          ; preds = %merge720
  br label %merge726

merge733:                                         ; preds = %else736, %then734
  %tmp738 = sub i32 %r_mat716, 1
  %tmp743 = icmp slt i32 %tmp738, %tmp732
  br i1 %tmp743, label %then740, label %else742

then734:                                          ; preds = %merge726
  %printf735 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge733

else736:                                          ; preds = %merge726
  br label %merge733

merge739:                                         ; preds = %else742, %then740
  %j744 = load i32, i32* %j700
  %tmp749 = icmp sgt i32 0, %j744
  br i1 %tmp749, label %then746, label %else748

then740:                                          ; preds = %merge733
  %printf741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge739

else742:                                          ; preds = %merge733
  br label %merge739

merge745:                                         ; preds = %else748, %then746
  %tmp750 = sub i32 %c_mat718, 1
  %tmp755 = icmp slt i32 %tmp750, %j744
  br i1 %tmp755, label %then752, label %else754

then746:                                          ; preds = %merge739
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge739
  br label %merge745

merge751:                                         ; preds = %else754, %then752
  %j756 = load i32, i32* %j700
  %tmp757 = add i32 %j756, 2
  %tmp762 = icmp sgt i32 0, %tmp757
  br i1 %tmp762, label %then759, label %else761

then752:                                          ; preds = %merge745
  %printf753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge751

else754:                                          ; preds = %merge745
  br label %merge751

merge758:                                         ; preds = %else761, %then759
  %tmp763 = sub i32 %c_mat718, 1
  %tmp768 = icmp slt i32 %tmp763, %tmp757
  br i1 %tmp768, label %then765, label %else767

then759:                                          ; preds = %merge751
  %printf760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge758

else761:                                          ; preds = %merge751
  br label %merge758

merge764:                                         ; preds = %else767, %then765
  %tmp769 = sub i32 %tmp732, %i719
  %tmp770 = sub i32 %tmp757, %j744
  %tmp771 = add i32 %tmp770, 1
  %tmp772 = add i32 %tmp769, 1
  %size773 = mul i32 %tmp772, %tmp771
  %system_mat774 = alloca double, i32 %size773
  %m775 = alloca %matrix_t
  %m_mat776 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  store double* %system_mat774, double** %m_mat776
  %m_r777 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  store i32 %tmp772, i32* %m_r777
  %m_c778 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  store i32 %tmp771, i32* %m_c778
  %tmp779 = sub i32 %tmp772, 1
  %tmp780 = sub i32 %tmp771, 1
  %i781 = alloca i32
  store i32 0, i32* %i781
  br label %while782

then765:                                          ; preds = %merge758
  %printf766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge764

else767:                                          ; preds = %merge758
  br label %merge764

while782:                                         ; preds = %merge794, %merge764
  %i_v800 = load i32, i32* %i781
  %bool_val801 = icmp sle i32 %i_v800, %tmp779
  br i1 %bool_val801, label %while_body783, label %merge799

while_body783:                                    ; preds = %while782
  %j784 = alloca i32
  store i32 0, i32* %j784
  br label %while785

while785:                                         ; preds = %while_body786, %while_body783
  %j_v795 = load i32, i32* %j784
  %bool_val796 = icmp sle i32 %j_v795, %tmp780
  br i1 %bool_val796, label %while_body786, label %merge794

while_body786:                                    ; preds = %while785
  %j_v787 = load i32, i32* %j784
  %i_v788 = load i32, i32* %i781
  %tmp789 = mul i32 %tmp771, %i_v788
  %index790 = add i32 %j_v787, %tmp789
  %element_ptr791 = getelementptr double, double* %system_mat774, i32 %index790
  store double 0.000000e+00, double* %element_ptr791
  %j_v792 = load i32, i32* %j784
  %tmp793 = add i32 %j_v792, 1
  store i32 %tmp793, i32* %j784
  br label %while785

merge794:                                         ; preds = %while785
  %i_v797 = load i32, i32* %i781
  %tmp798 = add i32 %i_v797, 1
  store i32 %tmp798, i32* %i781
  br label %while782

merge799:                                         ; preds = %while782
  %m_mat802 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  %mat_mat803 = load double*, double** %m_mat802
  %m_r804 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  %r_mat805 = load i32, i32* %m_r804
  %m_c806 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  %c_mat807 = load i32, i32* %m_c806
  %m_mat808 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_v809 = load double*, double** %m_mat808
  %m_r810 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_v811 = load i32, i32* %m_r810
  %m_c812 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_v813 = load i32, i32* %m_c812
  %i814 = alloca i32
  store i32 0, i32* %i814
  br label %while815

while815:                                         ; preds = %merge837, %merge799
  %i_v843 = load i32, i32* %i814
  %bool_val844 = icmp sle i32 %i_v843, %tmp769
  br i1 %bool_val844, label %while_body816, label %merge842

while_body816:                                    ; preds = %while815
  %j817 = alloca i32
  store i32 0, i32* %j817
  br label %while818

while818:                                         ; preds = %while_body819, %while_body816
  %j_v838 = load i32, i32* %j817
  %bool_val839 = icmp sle i32 %j_v838, %tmp770
  br i1 %bool_val839, label %while_body819, label %merge837

while_body819:                                    ; preds = %while818
  %j_v820 = load i32, i32* %j817
  %i_v821 = load i32, i32* %i814
  %tmp822 = mul i32 %c_mat807, %i_v821
  %index823 = add i32 %j_v820, %tmp822
  %element_ptr824 = getelementptr double, double* %mat_mat803, i32 %index823
  %j_v825 = load i32, i32* %j817
  %tmp826 = sub i32 %j_v825, 0
  %tmp827 = add i32 %tmp826, %j744
  %i_v828 = load i32, i32* %i814
  %tmp829 = sub i32 %i_v828, 0
  %tmp830 = add i32 %tmp829, %i719
  %tmp831 = mul i32 %c_v813, %tmp830
  %index832 = add i32 %tmp827, %tmp831
  %element_ptr833 = getelementptr double, double* %mat_v809, i32 %index832
  %tmp_element834 = load double, double* %element_ptr833
  store double %tmp_element834, double* %element_ptr824
  %j_v835 = load i32, i32* %j817
  %tmp836 = add i32 %j_v835, 1
  store i32 %tmp836, i32* %j817
  br label %while818

merge837:                                         ; preds = %while818
  %i_v840 = load i32, i32* %i814
  %tmp841 = add i32 %i_v840, 1
  store i32 %tmp841, i32* %i814
  br label %while815

merge842:                                         ; preds = %while815
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m775, %matrix_t* %m61)
  %v_ptr845 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v846 = load double, double* %v_ptr845
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp847 = load double, double* %k
  store double %v846, double* %k
  %k848 = load double, double* %k
  %m_r849 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat850 = load i32, i32* %m_r849
  %m_c851 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat852 = load i32, i32* %m_c851
  %i853 = load i32, i32* %i698
  %tmp858 = icmp sgt i32 0, %i853
  br i1 %tmp858, label %then855, label %else857

merge854:                                         ; preds = %else857, %then855
  %tmp859 = sub i32 %r_mat850, 1
  %tmp864 = icmp slt i32 %tmp859, %i853
  br i1 %tmp864, label %then861, label %else863

then855:                                          ; preds = %merge842
  %printf856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge854

else857:                                          ; preds = %merge842
  br label %merge854

merge860:                                         ; preds = %else863, %then861
  %i865 = load i32, i32* %i698
  %tmp870 = icmp sgt i32 0, %i865
  br i1 %tmp870, label %then867, label %else869

then861:                                          ; preds = %merge854
  %printf862 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge860

else863:                                          ; preds = %merge854
  br label %merge860

merge866:                                         ; preds = %else869, %then867
  %tmp871 = sub i32 %r_mat850, 1
  %tmp876 = icmp slt i32 %tmp871, %i865
  br i1 %tmp876, label %then873, label %else875

then867:                                          ; preds = %merge860
  %printf868 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge866

else869:                                          ; preds = %merge860
  br label %merge866

merge872:                                         ; preds = %else875, %then873
  %j877 = load i32, i32* %j700
  %tmp882 = icmp sgt i32 0, %j877
  br i1 %tmp882, label %then879, label %else881

then873:                                          ; preds = %merge866
  %printf874 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge872

else875:                                          ; preds = %merge866
  br label %merge872

merge878:                                         ; preds = %else881, %then879
  %tmp883 = sub i32 %c_mat852, 1
  %tmp888 = icmp slt i32 %tmp883, %j877
  br i1 %tmp888, label %then885, label %else887

then879:                                          ; preds = %merge872
  %printf880 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge878

else881:                                          ; preds = %merge872
  br label %merge878

merge884:                                         ; preds = %else887, %then885
  %j889 = load i32, i32* %j700
  %tmp894 = icmp sgt i32 0, %j889
  br i1 %tmp894, label %then891, label %else893

then885:                                          ; preds = %merge878
  %printf886 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge884

else887:                                          ; preds = %merge878
  br label %merge884

merge890:                                         ; preds = %else893, %then891
  %tmp895 = sub i32 %c_mat852, 1
  %tmp900 = icmp slt i32 %tmp895, %j889
  br i1 %tmp900, label %then897, label %else899

then891:                                          ; preds = %merge884
  %printf892 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge890

else893:                                          ; preds = %merge884
  br label %merge890

merge896:                                         ; preds = %else899, %then897
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat901 = load double*, double** %mat
  %tmp902 = mul i32 %c_mat852, %i853
  %index903 = add i32 %j877, %tmp902
  %element_ptr904 = getelementptr double, double* %mat901, i32 %index903
  store double %k848, double* %element_ptr904
  %j905 = load i32, i32* %j700
  %tmp906 = add i32 %j905, 1
  %tmp907 = load i32, i32* %j700
  store i32 %tmp906, i32* %j700
  br label %while712

then897:                                          ; preds = %merge890
  %printf898 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge896

else899:                                          ; preds = %merge890
  br label %merge896

merge908:                                         ; preds = %while712
  %i912 = load i32, i32* %i698
  %tmp913 = add i32 %i912, 1
  %tmp914 = load i32, i32* %i698
  store i32 %tmp913, i32* %i698
  br label %while706

merge915:                                         ; preds = %while706
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r919 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat920 = load i32, i32* %m_r919
  %m_c921 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat922 = load i32, i32* %m_c921
  %size923 = mul i32 %r_mat920, %c_mat922
  %mallocsize = mul i32 %size923, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall924 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat925 = bitcast i8* %malloccall924 to double*
  %malloccall926 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m927 = bitcast i8* %malloccall926 to %matrix_t*
  %m_mat928 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  store double* %system_mat925, double** %m_mat928
  %m_r929 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  store i32 %r_mat920, i32* %m_r929
  %m_c930 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  store i32 %c_mat922, i32* %m_c930
  %tmp931 = sub i32 %r_mat920, 1
  %tmp932 = sub i32 %c_mat922, 1
  %i933 = alloca i32
  store i32 0, i32* %i933
  br label %while934

while934:                                         ; preds = %merge946, %merge915
  %i_v952 = load i32, i32* %i933
  %bool_val953 = icmp sle i32 %i_v952, %tmp931
  br i1 %bool_val953, label %while_body935, label %merge951

while_body935:                                    ; preds = %while934
  %j936 = alloca i32
  store i32 0, i32* %j936
  br label %while937

while937:                                         ; preds = %while_body938, %while_body935
  %j_v947 = load i32, i32* %j936
  %bool_val948 = icmp sle i32 %j_v947, %tmp932
  br i1 %bool_val948, label %while_body938, label %merge946

while_body938:                                    ; preds = %while937
  %j_v939 = load i32, i32* %j936
  %i_v940 = load i32, i32* %i933
  %tmp941 = mul i32 %c_mat922, %i_v940
  %index942 = add i32 %j_v939, %tmp941
  %element_ptr943 = getelementptr double, double* %system_mat925, i32 %index942
  store double 0.000000e+00, double* %element_ptr943
  %j_v944 = load i32, i32* %j936
  %tmp945 = add i32 %j_v944, 1
  store i32 %tmp945, i32* %j936
  br label %while937

merge946:                                         ; preds = %while937
  %i_v949 = load i32, i32* %i933
  %tmp950 = add i32 %i_v949, 1
  store i32 %tmp950, i32* %i933
  br label %while934

merge951:                                         ; preds = %while934
  %tmp954 = sub i32 %c_mat922, 1
  %tmp955 = sub i32 %r_mat920, 1
  %m_mat956 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  %mat_mat957 = load double*, double** %m_mat956
  %m_r958 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  %r_mat959 = load i32, i32* %m_r958
  %m_c960 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  %c_mat961 = load i32, i32* %m_c960
  %m_mat962 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_v963 = load double*, double** %m_mat962
  %m_r964 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_v965 = load i32, i32* %m_r964
  %m_c966 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_v967 = load i32, i32* %m_c966
  %i968 = alloca i32
  store i32 0, i32* %i968
  br label %while969

while969:                                         ; preds = %merge991, %merge951
  %i_v997 = load i32, i32* %i968
  %bool_val998 = icmp sle i32 %i_v997, %tmp955
  br i1 %bool_val998, label %while_body970, label %merge996

while_body970:                                    ; preds = %while969
  %j971 = alloca i32
  store i32 0, i32* %j971
  br label %while972

while972:                                         ; preds = %while_body973, %while_body970
  %j_v992 = load i32, i32* %j971
  %bool_val993 = icmp sle i32 %j_v992, %tmp954
  br i1 %bool_val993, label %while_body973, label %merge991

while_body973:                                    ; preds = %while972
  %j_v974 = load i32, i32* %j971
  %i_v975 = load i32, i32* %i968
  %tmp976 = mul i32 %c_mat961, %i_v975
  %index977 = add i32 %j_v974, %tmp976
  %element_ptr978 = getelementptr double, double* %mat_mat957, i32 %index977
  %j_v979 = load i32, i32* %j971
  %tmp980 = sub i32 %j_v979, 0
  %tmp981 = add i32 %tmp980, 0
  %i_v982 = load i32, i32* %i968
  %tmp983 = sub i32 %i_v982, 0
  %tmp984 = add i32 %tmp983, 0
  %tmp985 = mul i32 %c_v967, %tmp984
  %index986 = add i32 %tmp981, %tmp985
  %element_ptr987 = getelementptr double, double* %mat_v963, i32 %index986
  %tmp_element988 = load double, double* %element_ptr987
  store double %tmp_element988, double* %element_ptr978
  %j_v989 = load i32, i32* %j971
  %tmp990 = add i32 %j_v989, 1
  store i32 %tmp990, i32* %j971
  br label %while972

merge991:                                         ; preds = %while972
  %i_v994 = load i32, i32* %i968
  %tmp995 = add i32 %i_v994, 1
  store i32 %tmp995, i32* %i968
  br label %while969

merge996:                                         ; preds = %while969
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m927, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp999 = alloca %return_t.0
  ret %return_t.0* %tmp999
}

define %return_t.1* @multiply(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %system_mat55 = alloca double, i32 8
  %element_ptr56 = getelementptr double, double* %system_mat55, i32 0
  store double 0.000000e+00, double* %element_ptr56
  %element_ptr57 = getelementptr double, double* %system_mat55, i32 1
  store double 1.000000e-01, double* %element_ptr57
  %element_ptr58 = getelementptr double, double* %system_mat55, i32 2
  store double 1.000000e+00, double* %element_ptr58
  %element_ptr59 = getelementptr double, double* %system_mat55, i32 3
  store double 1.100000e+00, double* %element_ptr59
  %element_ptr60 = getelementptr double, double* %system_mat55, i32 4
  store double 2.000000e+00, double* %element_ptr60
  %element_ptr61 = getelementptr double, double* %system_mat55, i32 5
  store double 2.100000e+00, double* %element_ptr61
  %element_ptr62 = getelementptr double, double* %system_mat55, i32 6
  store double 3.000000e+00, double* %element_ptr62
  %element_ptr63 = getelementptr double, double* %system_mat55, i32 7
  store double 3.100000e+00, double* %element_ptr63
  %m64 = alloca %matrix_t
  %m_mat65 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 0
  store double* %system_mat55, double** %m_mat65
  %m_r66 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 1
  store i32 4, i32* %m_r66
  %m_c67 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 2
  store i32 2, i32* %m_c67
  %m_r68 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 1
  %r_mat69 = load i32, i32* %m_r68
  %m_c70 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 2
  %c_mat71 = load i32, i32* %m_c70
  %size72 = mul i32 %r_mat69, %c_mat71
  %system_mat73 = alloca double, i32 %size72
  %m74 = alloca %matrix_t
  %m_mat75 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 0
  store double* %system_mat73, double** %m_mat75
  %m_r76 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 1
  store i32 %r_mat69, i32* %m_r76
  %m_c77 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 2
  store i32 %c_mat71, i32* %m_c77
  %tmp78 = sub i32 %r_mat69, 1
  %tmp79 = sub i32 %c_mat71, 1
  %i80 = alloca i32
  store i32 0, i32* %i80
  br label %while81

while81:                                          ; preds = %merge93, %merge52
  %i_v99 = load i32, i32* %i80
  %bool_val100 = icmp sle i32 %i_v99, %tmp78
  br i1 %bool_val100, label %while_body82, label %merge98

while_body82:                                     ; preds = %while81
  %j83 = alloca i32
  store i32 0, i32* %j83
  br label %while84

while84:                                          ; preds = %while_body85, %while_body82
  %j_v94 = load i32, i32* %j83
  %bool_val95 = icmp sle i32 %j_v94, %tmp79
  br i1 %bool_val95, label %while_body85, label %merge93

while_body85:                                     ; preds = %while84
  %j_v86 = load i32, i32* %j83
  %i_v87 = load i32, i32* %i80
  %tmp88 = mul i32 %c_mat71, %i_v87
  %index89 = add i32 %j_v86, %tmp88
  %element_ptr90 = getelementptr double, double* %system_mat73, i32 %index89
  store double 0.000000e+00, double* %element_ptr90
  %j_v91 = load i32, i32* %j83
  %tmp92 = add i32 %j_v91, 1
  store i32 %tmp92, i32* %j83
  br label %while84

merge93:                                          ; preds = %while84
  %i_v96 = load i32, i32* %i80
  %tmp97 = add i32 %i_v96, 1
  store i32 %tmp97, i32* %i80
  br label %while81

merge98:                                          ; preds = %while81
  %tmp101 = sub i32 %c_mat71, 1
  %tmp102 = sub i32 %r_mat69, 1
  %m_mat103 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 0
  %mat_mat104 = load double*, double** %m_mat103
  %m_r105 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 1
  %r_mat106 = load i32, i32* %m_r105
  %m_c107 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 2
  %c_mat108 = load i32, i32* %m_c107
  %m_mat109 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 0
  %mat_v110 = load double*, double** %m_mat109
  %m_r111 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 1
  %r_v112 = load i32, i32* %m_r111
  %m_c113 = getelementptr inbounds %matrix_t, %matrix_t* %m64, i32 0, i32 2
  %c_v114 = load i32, i32* %m_c113
  %i115 = alloca i32
  store i32 0, i32* %i115
  br label %while116

while116:                                         ; preds = %merge138, %merge98
  %i_v144 = load i32, i32* %i115
  %bool_val145 = icmp sle i32 %i_v144, %tmp102
  br i1 %bool_val145, label %while_body117, label %merge143

while_body117:                                    ; preds = %while116
  %j118 = alloca i32
  store i32 0, i32* %j118
  br label %while119

while119:                                         ; preds = %while_body120, %while_body117
  %j_v139 = load i32, i32* %j118
  %bool_val140 = icmp sle i32 %j_v139, %tmp101
  br i1 %bool_val140, label %while_body120, label %merge138

while_body120:                                    ; preds = %while119
  %j_v121 = load i32, i32* %j118
  %i_v122 = load i32, i32* %i115
  %tmp123 = mul i32 %c_mat108, %i_v122
  %index124 = add i32 %j_v121, %tmp123
  %element_ptr125 = getelementptr double, double* %mat_mat104, i32 %index124
  %j_v126 = load i32, i32* %j118
  %tmp127 = sub i32 %j_v126, 0
  %tmp128 = add i32 %tmp127, 0
  %i_v129 = load i32, i32* %i115
  %tmp130 = sub i32 %i_v129, 0
  %tmp131 = add i32 %tmp130, 0
  %tmp132 = mul i32 %c_v114, %tmp131
  %index133 = add i32 %tmp128, %tmp132
  %element_ptr134 = getelementptr double, double* %mat_v110, i32 %index133
  %tmp_element135 = load double, double* %element_ptr134
  store double %tmp_element135, double* %element_ptr125
  %j_v136 = load i32, i32* %j118
  %tmp137 = add i32 %j_v136, 1
  store i32 %tmp137, i32* %j118
  br label %while119

merge138:                                         ; preds = %while119
  %i_v141 = load i32, i32* %i115
  %tmp142 = add i32 %i_v141, 1
  store i32 %tmp142, i32* %i115
  br label %while116

merge143:                                         ; preds = %while116
  %m_r146 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 1
  %r_mat147 = load i32, i32* %m_r146
  %m_c148 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 2
  %c_mat149 = load i32, i32* %m_c148
  br i1 false, label %then, label %else

merge150:                                         ; preds = %else, %then
  %tmp151 = sub i32 %r_mat147, 1
  %tmp156 = icmp slt i32 %tmp151, 1
  br i1 %tmp156, label %then153, label %else155

then:                                             ; preds = %merge143
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge150

else:                                             ; preds = %merge143
  br label %merge150

merge152:                                         ; preds = %else155, %then153
  %tmp157 = sub i32 %r_mat147, 1
  %tmp158 = sub i32 %c_mat149, 1
  %tmp159 = sub i32 %tmp157, 1
  %tmp160 = sub i32 %tmp158, 0
  %tmp161 = add i32 %tmp160, 1
  %tmp162 = add i32 %tmp159, 1
  %size163 = mul i32 %tmp162, %tmp161
  %system_mat164 = alloca double, i32 %size163
  %m165 = alloca %matrix_t
  %m_mat166 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 0
  store double* %system_mat164, double** %m_mat166
  %m_r167 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 1
  store i32 %tmp162, i32* %m_r167
  %m_c168 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 2
  store i32 %tmp161, i32* %m_c168
  %tmp169 = sub i32 %tmp162, 1
  %tmp170 = sub i32 %tmp161, 1
  %i171 = alloca i32
  store i32 0, i32* %i171
  br label %while172

then153:                                          ; preds = %merge150
  %printf154 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge152

else155:                                          ; preds = %merge150
  br label %merge152

while172:                                         ; preds = %merge184, %merge152
  %i_v190 = load i32, i32* %i171
  %bool_val191 = icmp sle i32 %i_v190, %tmp169
  br i1 %bool_val191, label %while_body173, label %merge189

while_body173:                                    ; preds = %while172
  %j174 = alloca i32
  store i32 0, i32* %j174
  br label %while175

while175:                                         ; preds = %while_body176, %while_body173
  %j_v185 = load i32, i32* %j174
  %bool_val186 = icmp sle i32 %j_v185, %tmp170
  br i1 %bool_val186, label %while_body176, label %merge184

while_body176:                                    ; preds = %while175
  %j_v177 = load i32, i32* %j174
  %i_v178 = load i32, i32* %i171
  %tmp179 = mul i32 %tmp161, %i_v178
  %index180 = add i32 %j_v177, %tmp179
  %element_ptr181 = getelementptr double, double* %system_mat164, i32 %index180
  store double 0.000000e+00, double* %element_ptr181
  %j_v182 = load i32, i32* %j174
  %tmp183 = add i32 %j_v182, 1
  store i32 %tmp183, i32* %j174
  br label %while175

merge184:                                         ; preds = %while175
  %i_v187 = load i32, i32* %i171
  %tmp188 = add i32 %i_v187, 1
  store i32 %tmp188, i32* %i171
  br label %while172

merge189:                                         ; preds = %while172
  %m_mat192 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 0
  %mat_mat193 = load double*, double** %m_mat192
  %m_r194 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 1
  %r_mat195 = load i32, i32* %m_r194
  %m_c196 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 2
  %c_mat197 = load i32, i32* %m_c196
  %m_mat198 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 0
  %mat_v199 = load double*, double** %m_mat198
  %m_r200 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 1
  %r_v201 = load i32, i32* %m_r200
  %m_c202 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 2
  %c_v203 = load i32, i32* %m_c202
  %i204 = alloca i32
  store i32 0, i32* %i204
  br label %while205

while205:                                         ; preds = %merge227, %merge189
  %i_v233 = load i32, i32* %i204
  %bool_val234 = icmp sle i32 %i_v233, %tmp159
  br i1 %bool_val234, label %while_body206, label %merge232

while_body206:                                    ; preds = %while205
  %j207 = alloca i32
  store i32 0, i32* %j207
  br label %while208

while208:                                         ; preds = %while_body209, %while_body206
  %j_v228 = load i32, i32* %j207
  %bool_val229 = icmp sle i32 %j_v228, %tmp160
  br i1 %bool_val229, label %while_body209, label %merge227

while_body209:                                    ; preds = %while208
  %j_v210 = load i32, i32* %j207
  %i_v211 = load i32, i32* %i204
  %tmp212 = mul i32 %c_mat197, %i_v211
  %index213 = add i32 %j_v210, %tmp212
  %element_ptr214 = getelementptr double, double* %mat_mat193, i32 %index213
  %j_v215 = load i32, i32* %j207
  %tmp216 = sub i32 %j_v215, 0
  %tmp217 = add i32 %tmp216, 0
  %i_v218 = load i32, i32* %i204
  %tmp219 = sub i32 %i_v218, 0
  %tmp220 = add i32 %tmp219, 1
  %tmp221 = mul i32 %c_v203, %tmp220
  %index222 = add i32 %tmp217, %tmp221
  %element_ptr223 = getelementptr double, double* %mat_v199, i32 %index222
  %tmp_element224 = load double, double* %element_ptr223
  store double %tmp_element224, double* %element_ptr214
  %j_v225 = load i32, i32* %j207
  %tmp226 = add i32 %j_v225, 1
  store i32 %tmp226, i32* %j207
  br label %while208

merge227:                                         ; preds = %while208
  %i_v230 = load i32, i32* %i204
  %tmp231 = add i32 %i_v230, 1
  store i32 %tmp231, i32* %i204
  br label %while205

merge232:                                         ; preds = %while205
  %m_mat235 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 0
  %mat_mat236 = load double*, double** %m_mat235
  %m_r237 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 1
  %r_mat238 = load i32, i32* %m_r237
  %m_c239 = getelementptr inbounds %matrix_t, %matrix_t* %m165, i32 0, i32 2
  %c_mat240 = load i32, i32* %m_c239
  %tmp241 = sub i32 %r_mat238, 1
  %tmp242 = sub i32 %c_mat240, 1
  %i243 = alloca i32
  store i32 0, i32* %i243
  br label %while244

while244:                                         ; preds = %merge259, %merge232
  %i_v266 = load i32, i32* %i243
  %bool_val267 = icmp sle i32 %i_v266, %tmp241
  br i1 %bool_val267, label %while_body245, label %merge265

while_body245:                                    ; preds = %while244
  %j246 = alloca i32
  store i32 0, i32* %j246
  br label %while247

while247:                                         ; preds = %while_body248, %while_body245
  %j_v260 = load i32, i32* %j246
  %bool_val261 = icmp sle i32 %j_v260, %tmp242
  br i1 %bool_val261, label %while_body248, label %merge259

while_body248:                                    ; preds = %while247
  %j_v249 = load i32, i32* %j246
  %i_v250 = load i32, i32* %i243
  %tmp251 = mul i32 %c_mat240, %i_v250
  %index252 = add i32 %j_v249, %tmp251
  %element_ptr253 = getelementptr double, double* %mat_mat236, i32 %index252
  %tmp_element254 = load double, double* %element_ptr253
  %printf255 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element254)
  %printf256 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v257 = load i32, i32* %j246
  %tmp258 = add i32 %j_v257, 1
  store i32 %tmp258, i32* %j246
  br label %while247

merge259:                                         ; preds = %while247
  %printf262 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v263 = load i32, i32* %i243
  %tmp264 = add i32 %i_v263, 1
  store i32 %tmp264, i32* %i243
  br label %while244

merge265:                                         ; preds = %while244
  %printf268 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_r269 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 1
  %r_mat270 = load i32, i32* %m_r269
  %m_c271 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 2
  %c_mat272 = load i32, i32* %m_c271
  br i1 false, label %then274, label %else276

merge273:                                         ; preds = %else276, %then274
  %tmp277 = sub i32 %r_mat270, 1
  %tmp282 = icmp slt i32 %tmp277, 1
  br i1 %tmp282, label %then279, label %else281

then274:                                          ; preds = %merge265
  %printf275 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge273

else276:                                          ; preds = %merge265
  br label %merge273

merge278:                                         ; preds = %else281, %then279
  %tmp283 = sub i32 %r_mat270, 1
  %tmp284 = sub i32 %c_mat272, 1
  %tmp285 = sub i32 %tmp283, 1
  %tmp286 = sub i32 %tmp284, 0
  %tmp287 = add i32 %tmp286, 1
  %tmp288 = add i32 %tmp285, 1
  %size289 = mul i32 %tmp288, %tmp287
  %system_mat290 = alloca double, i32 %size289
  %m291 = alloca %matrix_t
  %m_mat292 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 0
  store double* %system_mat290, double** %m_mat292
  %m_r293 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 1
  store i32 %tmp288, i32* %m_r293
  %m_c294 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 2
  store i32 %tmp287, i32* %m_c294
  %tmp295 = sub i32 %tmp288, 1
  %tmp296 = sub i32 %tmp287, 1
  %i297 = alloca i32
  store i32 0, i32* %i297
  br label %while298

then279:                                          ; preds = %merge273
  %printf280 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge278

else281:                                          ; preds = %merge273
  br label %merge278

while298:                                         ; preds = %merge310, %merge278
  %i_v316 = load i32, i32* %i297
  %bool_val317 = icmp sle i32 %i_v316, %tmp295
  br i1 %bool_val317, label %while_body299, label %merge315

while_body299:                                    ; preds = %while298
  %j300 = alloca i32
  store i32 0, i32* %j300
  br label %while301

while301:                                         ; preds = %while_body302, %while_body299
  %j_v311 = load i32, i32* %j300
  %bool_val312 = icmp sle i32 %j_v311, %tmp296
  br i1 %bool_val312, label %while_body302, label %merge310

while_body302:                                    ; preds = %while301
  %j_v303 = load i32, i32* %j300
  %i_v304 = load i32, i32* %i297
  %tmp305 = mul i32 %tmp287, %i_v304
  %index306 = add i32 %j_v303, %tmp305
  %element_ptr307 = getelementptr double, double* %system_mat290, i32 %index306
  store double 0.000000e+00, double* %element_ptr307
  %j_v308 = load i32, i32* %j300
  %tmp309 = add i32 %j_v308, 1
  store i32 %tmp309, i32* %j300
  br label %while301

merge310:                                         ; preds = %while301
  %i_v313 = load i32, i32* %i297
  %tmp314 = add i32 %i_v313, 1
  store i32 %tmp314, i32* %i297
  br label %while298

merge315:                                         ; preds = %while298
  %m_mat318 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 0
  %mat_mat319 = load double*, double** %m_mat318
  %m_r320 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 1
  %r_mat321 = load i32, i32* %m_r320
  %m_c322 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 2
  %c_mat323 = load i32, i32* %m_c322
  %m_mat324 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 0
  %mat_v325 = load double*, double** %m_mat324
  %m_r326 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 1
  %r_v327 = load i32, i32* %m_r326
  %m_c328 = getelementptr inbounds %matrix_t, %matrix_t* %m74, i32 0, i32 2
  %c_v329 = load i32, i32* %m_c328
  %i330 = alloca i32
  store i32 0, i32* %i330
  br label %while331

while331:                                         ; preds = %merge353, %merge315
  %i_v359 = load i32, i32* %i330
  %bool_val360 = icmp sle i32 %i_v359, %tmp285
  br i1 %bool_val360, label %while_body332, label %merge358

while_body332:                                    ; preds = %while331
  %j333 = alloca i32
  store i32 0, i32* %j333
  br label %while334

while334:                                         ; preds = %while_body335, %while_body332
  %j_v354 = load i32, i32* %j333
  %bool_val355 = icmp sle i32 %j_v354, %tmp286
  br i1 %bool_val355, label %while_body335, label %merge353

while_body335:                                    ; preds = %while334
  %j_v336 = load i32, i32* %j333
  %i_v337 = load i32, i32* %i330
  %tmp338 = mul i32 %c_mat323, %i_v337
  %index339 = add i32 %j_v336, %tmp338
  %element_ptr340 = getelementptr double, double* %mat_mat319, i32 %index339
  %j_v341 = load i32, i32* %j333
  %tmp342 = sub i32 %j_v341, 0
  %tmp343 = add i32 %tmp342, 0
  %i_v344 = load i32, i32* %i330
  %tmp345 = sub i32 %i_v344, 0
  %tmp346 = add i32 %tmp345, 1
  %tmp347 = mul i32 %c_v329, %tmp346
  %index348 = add i32 %tmp343, %tmp347
  %element_ptr349 = getelementptr double, double* %mat_v325, i32 %index348
  %tmp_element350 = load double, double* %element_ptr349
  store double %tmp_element350, double* %element_ptr340
  %j_v351 = load i32, i32* %j333
  %tmp352 = add i32 %j_v351, 1
  store i32 %tmp352, i32* %j333
  br label %while334

merge353:                                         ; preds = %while334
  %i_v356 = load i32, i32* %i330
  %tmp357 = add i32 %i_v356, 1
  store i32 %tmp357, i32* %i330
  br label %while331

merge358:                                         ; preds = %while331
  %m_r361 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 1
  %r_mat362 = load i32, i32* %m_r361
  %m_c363 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 2
  %c_mat364 = load i32, i32* %m_c363
  %size365 = mul i32 %r_mat362, %c_mat364
  %system_mat366 = alloca double, i32 %size365
  %m367 = alloca %matrix_t
  %m_mat368 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 0
  store double* %system_mat366, double** %m_mat368
  %m_r369 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 1
  store i32 %r_mat362, i32* %m_r369
  %m_c370 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 2
  store i32 %c_mat364, i32* %m_c370
  %tmp371 = sub i32 %r_mat362, 1
  %tmp372 = sub i32 %c_mat364, 1
  %i373 = alloca i32
  store i32 0, i32* %i373
  br label %while374

while374:                                         ; preds = %merge386, %merge358
  %i_v392 = load i32, i32* %i373
  %bool_val393 = icmp sle i32 %i_v392, %tmp371
  br i1 %bool_val393, label %while_body375, label %merge391

while_body375:                                    ; preds = %while374
  %j376 = alloca i32
  store i32 0, i32* %j376
  br label %while377

while377:                                         ; preds = %while_body378, %while_body375
  %j_v387 = load i32, i32* %j376
  %bool_val388 = icmp sle i32 %j_v387, %tmp372
  br i1 %bool_val388, label %while_body378, label %merge386

while_body378:                                    ; preds = %while377
  %j_v379 = load i32, i32* %j376
  %i_v380 = load i32, i32* %i373
  %tmp381 = mul i32 %c_mat364, %i_v380
  %index382 = add i32 %j_v379, %tmp381
  %element_ptr383 = getelementptr double, double* %system_mat366, i32 %index382
  store double 0.000000e+00, double* %element_ptr383
  %j_v384 = load i32, i32* %j376
  %tmp385 = add i32 %j_v384, 1
  store i32 %tmp385, i32* %j376
  br label %while377

merge386:                                         ; preds = %while377
  %i_v389 = load i32, i32* %i373
  %tmp390 = add i32 %i_v389, 1
  store i32 %tmp390, i32* %i373
  br label %while374

merge391:                                         ; preds = %while374
  %tmp394 = sub i32 %c_mat364, 1
  %tmp395 = sub i32 %r_mat362, 1
  %m_mat396 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 0
  %mat_mat397 = load double*, double** %m_mat396
  %m_r398 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 1
  %r_mat399 = load i32, i32* %m_r398
  %m_c400 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 2
  %c_mat401 = load i32, i32* %m_c400
  %m_mat402 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 0
  %mat_v403 = load double*, double** %m_mat402
  %m_r404 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 1
  %r_v405 = load i32, i32* %m_r404
  %m_c406 = getelementptr inbounds %matrix_t, %matrix_t* %m291, i32 0, i32 2
  %c_v407 = load i32, i32* %m_c406
  %i408 = alloca i32
  store i32 0, i32* %i408
  br label %while409

while409:                                         ; preds = %merge431, %merge391
  %i_v437 = load i32, i32* %i408
  %bool_val438 = icmp sle i32 %i_v437, %tmp395
  br i1 %bool_val438, label %while_body410, label %merge436

while_body410:                                    ; preds = %while409
  %j411 = alloca i32
  store i32 0, i32* %j411
  br label %while412

while412:                                         ; preds = %while_body413, %while_body410
  %j_v432 = load i32, i32* %j411
  %bool_val433 = icmp sle i32 %j_v432, %tmp394
  br i1 %bool_val433, label %while_body413, label %merge431

while_body413:                                    ; preds = %while412
  %j_v414 = load i32, i32* %j411
  %i_v415 = load i32, i32* %i408
  %tmp416 = mul i32 %c_mat401, %i_v415
  %index417 = add i32 %j_v414, %tmp416
  %element_ptr418 = getelementptr double, double* %mat_mat397, i32 %index417
  %j_v419 = load i32, i32* %j411
  %tmp420 = sub i32 %j_v419, 0
  %tmp421 = add i32 %tmp420, 0
  %i_v422 = load i32, i32* %i408
  %tmp423 = sub i32 %i_v422, 0
  %tmp424 = add i32 %tmp423, 0
  %tmp425 = mul i32 %c_v407, %tmp424
  %index426 = add i32 %tmp421, %tmp425
  %element_ptr427 = getelementptr double, double* %mat_v403, i32 %index426
  %tmp_element428 = load double, double* %element_ptr427
  store double %tmp_element428, double* %element_ptr418
  %j_v429 = load i32, i32* %j411
  %tmp430 = add i32 %j_v429, 1
  store i32 %tmp430, i32* %j411
  br label %while412

merge431:                                         ; preds = %while412
  %i_v434 = load i32, i32* %i408
  %tmp435 = add i32 %i_v434, 1
  store i32 %tmp435, i32* %i408
  br label %while409

merge436:                                         ; preds = %while409
  %printf439 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_c440 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat441 = load i32, i32* %m_c440
  %m_r442 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 1
  %r_mat443 = load i32, i32* %m_r442
  %tmp448 = icmp ne i32 %c_mat441, %r_mat443
  br i1 %tmp448, label %then445, label %else447

merge444:                                         ; preds = %else447, %then445
  %m_mat449 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat450 = load double*, double** %m_mat449
  %m_mat451 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 0
  %mat_v452 = load double*, double** %m_mat451
  %m_r453 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat454 = load i32, i32* %m_r453
  %tmp455 = sub i32 %r_mat454, 1
  %m_c456 = getelementptr inbounds %matrix_t, %matrix_t* %m367, i32 0, i32 2
  %c_mat457 = load i32, i32* %m_c456
  %tmp458 = sub i32 %c_mat457, 1
  %m_l = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %l_mat = load i32, i32* %m_l
  %tmp459 = sub i32 %l_mat, 1
  %size460 = mul i32 %r_mat454, %c_mat457
  %system_mat461 = alloca double, i32 %size460
  %m462 = alloca %matrix_t
  %m_mat463 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 0
  store double* %system_mat461, double** %m_mat463
  %m_r464 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 1
  store i32 %r_mat454, i32* %m_r464
  %m_c465 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 2
  store i32 %c_mat457, i32* %m_c465
  %tmp466 = sub i32 %r_mat454, 1
  %tmp467 = sub i32 %c_mat457, 1
  %i468 = alloca i32
  store i32 0, i32* %i468
  br label %while469

then445:                                          ; preds = %merge436
  %printf446 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge444

else447:                                          ; preds = %merge436
  br label %merge444

while469:                                         ; preds = %merge481, %merge444
  %i_v487 = load i32, i32* %i468
  %bool_val488 = icmp sle i32 %i_v487, %tmp466
  br i1 %bool_val488, label %while_body470, label %merge486

while_body470:                                    ; preds = %while469
  %j471 = alloca i32
  store i32 0, i32* %j471
  br label %while472

while472:                                         ; preds = %while_body473, %while_body470
  %j_v482 = load i32, i32* %j471
  %bool_val483 = icmp sle i32 %j_v482, %tmp467
  br i1 %bool_val483, label %while_body473, label %merge481

while_body473:                                    ; preds = %while472
  %j_v474 = load i32, i32* %j471
  %i_v475 = load i32, i32* %i468
  %tmp476 = mul i32 %c_mat457, %i_v475
  %index477 = add i32 %j_v474, %tmp476
  %element_ptr478 = getelementptr double, double* %system_mat461, i32 %index477
  store double 0.000000e+00, double* %element_ptr478
  %j_v479 = load i32, i32* %j471
  %tmp480 = add i32 %j_v479, 1
  store i32 %tmp480, i32* %j471
  br label %while472

merge481:                                         ; preds = %while472
  %i_v484 = load i32, i32* %i468
  %tmp485 = add i32 %i_v484, 1
  store i32 %tmp485, i32* %i468
  br label %while469

merge486:                                         ; preds = %while469
  %m_mat489 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 0
  %mat_mat490 = load double*, double** %m_mat489
  %i491 = alloca i32
  store i32 0, i32* %i491
  br label %while492

while492:                                         ; preds = %merge527, %merge486
  %i_v533 = load i32, i32* %i491
  %bool_val534 = icmp sle i32 %i_v533, %tmp455
  br i1 %bool_val534, label %while_body493, label %merge532

while_body493:                                    ; preds = %while492
  %j494 = alloca i32
  store i32 0, i32* %j494
  br label %while495

while495:                                         ; preds = %merge521, %while_body493
  %j_v528 = load i32, i32* %j494
  %bool_val529 = icmp sle i32 %j_v528, %tmp458
  br i1 %bool_val529, label %while_body496, label %merge527

while_body496:                                    ; preds = %while495
  %j_v497 = load i32, i32* %j494
  %i_v498 = load i32, i32* %i491
  %tmp499 = mul i32 %c_mat457, %i_v498
  %index500 = add i32 %j_v497, %tmp499
  %element_ptr501 = getelementptr double, double* %mat_mat490, i32 %index500
  %tmp_element502 = alloca double
  store double 0.000000e+00, double* %tmp_element502
  %k = alloca i32
  store i32 0, i32* %k
  br label %while503

while503:                                         ; preds = %while_body504, %while_body496
  %k_v522 = load i32, i32* %k
  %bool_val523 = icmp sle i32 %k_v522, %tmp459
  br i1 %bool_val523, label %while_body504, label %merge521

while_body504:                                    ; preds = %while503
  %k_v = load i32, i32* %k
  %i_v505 = load i32, i32* %i491
  %tmp506 = mul i32 %l_mat, %i_v505
  %index507 = add i32 %k_v, %tmp506
  %element_ptr508 = getelementptr double, double* %mat_mat450, i32 %index507
  %tmp_element509 = load double, double* %element_ptr508
  %j_v510 = load i32, i32* %j494
  %k_v511 = load i32, i32* %k
  %tmp512 = mul i32 %c_mat457, %k_v511
  %index513 = add i32 %j_v510, %tmp512
  %element_ptr514 = getelementptr double, double* %mat_v452, i32 %index513
  %tmp_element515 = load double, double* %element_ptr514
  %tmp516 = load double, double* %tmp_element502
  %tmp517 = fmul double %tmp_element509, %tmp_element515
  %tmp518 = fadd double %tmp517, %tmp516
  store double %tmp518, double* %tmp_element502
  %k_v519 = load i32, i32* %k
  %tmp520 = add i32 %k_v519, 1
  store i32 %tmp520, i32* %k
  br label %while503

merge521:                                         ; preds = %while503
  %tmp524 = load double, double* %tmp_element502
  store double %tmp524, double* %element_ptr501
  %j_v525 = load i32, i32* %j494
  %tmp526 = add i32 %j_v525, 1
  store i32 %tmp526, i32* %j494
  br label %while495

merge527:                                         ; preds = %while495
  %i_v530 = load i32, i32* %i491
  %tmp531 = add i32 %i_v530, 1
  store i32 %tmp531, i32* %i491
  br label %while492

merge532:                                         ; preds = %while492
  %m_mat535 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 0
  %mat_mat536 = load double*, double** %m_mat535
  %m_r537 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 1
  %r_mat538 = load i32, i32* %m_r537
  %m_c539 = getelementptr inbounds %matrix_t, %matrix_t* %m462, i32 0, i32 2
  %c_mat540 = load i32, i32* %m_c539
  %tmp541 = sub i32 %r_mat538, 1
  %tmp542 = sub i32 %c_mat540, 1
  %i543 = alloca i32
  store i32 0, i32* %i543
  br label %while544

while544:                                         ; preds = %merge559, %merge532
  %i_v566 = load i32, i32* %i543
  %bool_val567 = icmp sle i32 %i_v566, %tmp541
  br i1 %bool_val567, label %while_body545, label %merge565

while_body545:                                    ; preds = %while544
  %j546 = alloca i32
  store i32 0, i32* %j546
  br label %while547

while547:                                         ; preds = %while_body548, %while_body545
  %j_v560 = load i32, i32* %j546
  %bool_val561 = icmp sle i32 %j_v560, %tmp542
  br i1 %bool_val561, label %while_body548, label %merge559

while_body548:                                    ; preds = %while547
  %j_v549 = load i32, i32* %j546
  %i_v550 = load i32, i32* %i543
  %tmp551 = mul i32 %c_mat540, %i_v550
  %index552 = add i32 %j_v549, %tmp551
  %element_ptr553 = getelementptr double, double* %mat_mat536, i32 %index552
  %tmp_element554 = load double, double* %element_ptr553
  %printf555 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element554)
  %printf556 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v557 = load i32, i32* %j546
  %tmp558 = add i32 %j_v557, 1
  store i32 %tmp558, i32* %j546
  br label %while547

merge559:                                         ; preds = %while547
  %printf562 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v563 = load i32, i32* %i543
  %tmp564 = add i32 %i_v563, 1
  store i32 %tmp564, i32* %i543
  br label %while544

merge565:                                         ; preds = %while544
  %printf568 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %tmp569 = alloca %return_t.1
  ret %return_t.1* %tmp569
}
