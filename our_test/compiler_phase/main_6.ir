; ModuleID = 'MicroC'
source_filename = "MicroC"

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.2 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.3 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.4 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.5 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.6 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.7 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.8 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.9 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.10 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.11 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.12 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.13 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.14 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.15 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.16 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.17 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.18 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string.19 = private unnamed_addr constant [4 x i8] c"abc\00"
@fmt_str.20 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.21 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.22 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.23 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.24 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.25 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.26 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.27 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.28 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.29 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.30 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.31 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.32 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.33 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.34 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.35 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.36 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.37 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.38 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.39 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.40 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.41 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.42 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.43 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.44 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.45 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.46 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.47 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.48 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.49 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string.50 = private unnamed_addr constant [11 x i8] c"now j is :\00"
@fmt_str.51 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.52 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.53 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.54 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.55 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.56 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string.57 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.58 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.59 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.60 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string.61 = private unnamed_addr constant [7 x i8] c"hahaha\00"
@fmt_str.62 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.63 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.64 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.65 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.66 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.67 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string.68 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.69 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.70 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.71 = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.72 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.73 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.74 = private unnamed_addr constant [3 x i8] c"%d\00"
@system_string.75 = private unnamed_addr constant [11 x i8] c"now s is :\00"
@fmt_str.76 = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double.77 = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int.78 = private unnamed_addr constant [3 x i8] c"%d\00"

declare i32 @printf(i8*, ...)

define i32 @f1() {
entry:
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.3, i32 0, i32 0), i32 1)
  ret i32 5
}

define i8* @f2() {
entry:
  %st = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string, i32 0, i32 0), i8** %st
  %f1_result = call i32 @f1()
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.15, i32 0, i32 0), i32 %f1_result)
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @system_string.19, i32 0, i32 0), i8** %st
  %st1 = load i8*, i8** %st
  ret i8* %st1
}

define i32 @main() {
entry:
  %i = alloca i32
  store i32 2, i32* %i
  %j = alloca i32
  store i32 3, i32* %j
  %i1 = load i32, i32* %i
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.34, i32 0, i32 0), i32 %i1)
  %j2 = load i32, i32* %j
  %printf3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.37, i32 0, i32 0), i32 %j2)
  store i32 0, i32* %i
  %i4 = load i32, i32* %i
  %printf5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.43, i32 0, i32 0), i32 %i4)
  %f1_result = call i32 @f1()
  store i32 %f1_result, i32* %j
  %printf6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @system_string.50, i32 0, i32 0))
  %j7 = load i32, i32* %j
  %printf8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int.53, i32 0, i32 0), i32 %j7)
  %my_str = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.57, i32 0, i32 0), i8** %my_str
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @system_string.61, i32 0, i32 0), i8** %my_str
  %my_str9 = load i8*, i8** %my_str
  %printf10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.62, i32 0, i32 0), i8* %my_str9)
  %s = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.68, i32 0, i32 0), i8** %s
  %f2_result = call i8* @f2()
  store i8* %f2_result, i8** %s
  %printf11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.72, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @system_string.75, i32 0, i32 0))
  %s12 = load i8*, i8** %s
  %printf13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.76, i32 0, i32 0), i8* %s12)
  ret i32 0
}
