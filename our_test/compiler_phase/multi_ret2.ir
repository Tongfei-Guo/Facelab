; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }
%return_t.2 = type { i32, double, i8* }
%return_t.1 = type { %matrix_t*, %matrix_t*, double }
%matrix_size_t = type { i32, i32 }
%zero_matrix_t = type { %matrix_t* }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"
@system_string = private unnamed_addr constant [4 x i8] c" : \00"
@system_string.9 = private unnamed_addr constant [4 x i8] c" : \00"
@system_string.10 = private unnamed_addr constant [3 x i8] c"m1\00"
@system_string.11 = private unnamed_addr constant [5 x i8] c"haha\00"
@system_string.12 = private unnamed_addr constant [3 x i8] c"m1\00"
@system_string.13 = private unnamed_addr constant [5 x i8] c"haha\00"
@system_string.14 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string.15 = private unnamed_addr constant [3 x i8] c"m2\00"

define i32 @main() {
entry:
  %i = alloca i32
  %tmp = load i32, i32* %i
  store i32 0, i32* %i
  %d = alloca double
  %tmp1 = load double, double* %d
  store double 0.000000e+00, double* %d
  %s = alloca i8*
  %tmp2 = load i8*, i8** %s
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.14, i32 0, i32 0), i8** %s
  %system_mat = alloca double, i32 4
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 0x4020666666666666, double* %element_ptr
  %element_ptr3 = getelementptr double, double* %system_mat, i32 1
  store double 1.634000e+02, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 2
  store double 9.246000e+02, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 3
  store double 9.990000e+01, double* %element_ptr5
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 2, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 2, i32* %m_c
  %system_mat6 = alloca double, i32 4
  %element_ptr7 = getelementptr double, double* %system_mat6, i32 0
  store double 1.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat6, i32 1
  store double 2.000000e+00, double* %element_ptr8
  %element_ptr9 = getelementptr double, double* %system_mat6, i32 2
  store double 3.000000e+00, double* %element_ptr9
  %element_ptr10 = getelementptr double, double* %system_mat6, i32 3
  store double 4.000000e+00, double* %element_ptr10
  %m11 = alloca %matrix_t
  %m_mat12 = getelementptr inbounds %matrix_t, %matrix_t* %m11, i32 0, i32 0
  store double* %system_mat6, double** %m_mat12
  %m_r13 = getelementptr inbounds %matrix_t, %matrix_t* %m11, i32 0, i32 1
  store i32 2, i32* %m_r13
  %m_c14 = getelementptr inbounds %matrix_t, %matrix_t* %m11, i32 0, i32 2
  store i32 2, i32* %m_c14
  %f2_result = call %return_t.2* @f2(%matrix_t* %m11, %matrix_t* %m, double 4.000000e+00)
  %v_ptr = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp15 = load i32, i32* %i
  store i32 %v, i32* %i
  %v_ptr16 = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 1
  %v17 = load double, double* %v_ptr16
  %tmp18 = load double, double* %d
  store double %v17, double* %d
  %v_ptr19 = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 2
  %v20 = load i8*, i8** %v_ptr19
  %tmp21 = load i8*, i8** %s
  store i8* %v20, i8** %s
  %0 = bitcast %return_t.2* %f2_result to i8*
  tail call void @free(i8* %0)
  %system_mat22 = alloca double, i32 4
  %element_ptr23 = getelementptr double, double* %system_mat22, i32 0
  store double 0x4020666666666666, double* %element_ptr23
  %element_ptr24 = getelementptr double, double* %system_mat22, i32 1
  store double 1.634000e+02, double* %element_ptr24
  %element_ptr25 = getelementptr double, double* %system_mat22, i32 2
  store double 9.246000e+02, double* %element_ptr25
  %element_ptr26 = getelementptr double, double* %system_mat22, i32 3
  store double 9.990000e+01, double* %element_ptr26
  %m27 = alloca %matrix_t
  %m_mat28 = getelementptr inbounds %matrix_t, %matrix_t* %m27, i32 0, i32 0
  store double* %system_mat22, double** %m_mat28
  %m_r29 = getelementptr inbounds %matrix_t, %matrix_t* %m27, i32 0, i32 1
  store i32 2, i32* %m_r29
  %m_c30 = getelementptr inbounds %matrix_t, %matrix_t* %m27, i32 0, i32 2
  store i32 2, i32* %m_c30
  %system_mat31 = alloca double, i32 4
  %element_ptr32 = getelementptr double, double* %system_mat31, i32 0
  store double 1.000000e+00, double* %element_ptr32
  %element_ptr33 = getelementptr double, double* %system_mat31, i32 1
  store double 2.000000e+00, double* %element_ptr33
  %element_ptr34 = getelementptr double, double* %system_mat31, i32 2
  store double 3.000000e+00, double* %element_ptr34
  %element_ptr35 = getelementptr double, double* %system_mat31, i32 3
  store double 4.000000e+00, double* %element_ptr35
  %m36 = alloca %matrix_t
  %m_mat37 = getelementptr inbounds %matrix_t, %matrix_t* %m36, i32 0, i32 0
  store double* %system_mat31, double** %m_mat37
  %m_r38 = getelementptr inbounds %matrix_t, %matrix_t* %m36, i32 0, i32 1
  store i32 2, i32* %m_r38
  %m_c39 = getelementptr inbounds %matrix_t, %matrix_t* %m36, i32 0, i32 2
  store i32 2, i32* %m_c39
  %system_mat40 = alloca double, i32 4
  %element_ptr41 = getelementptr double, double* %system_mat40, i32 0
  store double 1.000000e+00, double* %element_ptr41
  %element_ptr42 = getelementptr double, double* %system_mat40, i32 1
  store double 2.000000e+00, double* %element_ptr42
  %element_ptr43 = getelementptr double, double* %system_mat40, i32 2
  store double 3.000000e+00, double* %element_ptr43
  %element_ptr44 = getelementptr double, double* %system_mat40, i32 3
  store double 4.000000e+00, double* %element_ptr44
  %m45 = alloca %matrix_t
  %m_mat46 = getelementptr inbounds %matrix_t, %matrix_t* %m45, i32 0, i32 0
  store double* %system_mat40, double** %m_mat46
  %m_r47 = getelementptr inbounds %matrix_t, %matrix_t* %m45, i32 0, i32 1
  store i32 2, i32* %m_r47
  %m_c48 = getelementptr inbounds %matrix_t, %matrix_t* %m45, i32 0, i32 2
  store i32 2, i32* %m_c48
  %f_result = call %return_t.1* @f(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @system_string.15, i32 0, i32 0), %matrix_t* %m45, %matrix_t* %m36, %matrix_t* %m27, double 4.000000e+00)
  %i49 = load i32, i32* %i
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %i49)
  %printf50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %d51 = load double, double* %d
  %printf52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %d51)
  %printf53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %s54 = load i8*, i8** %s
  %printf55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* %s54)
  %printf56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %system_mat57 = alloca double, i32 4
  %element_ptr58 = getelementptr double, double* %system_mat57, i32 0
  store double 1.000000e+00, double* %element_ptr58
  %element_ptr59 = getelementptr double, double* %system_mat57, i32 1
  store double 2.000000e+00, double* %element_ptr59
  %element_ptr60 = getelementptr double, double* %system_mat57, i32 2
  store double 3.000000e+00, double* %element_ptr60
  %element_ptr61 = getelementptr double, double* %system_mat57, i32 3
  store double 4.000000e+00, double* %element_ptr61
  %m62 = alloca %matrix_t
  %m_mat63 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 0
  store double* %system_mat57, double** %m_mat63
  %m_r64 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 1
  store i32 2, i32* %m_r64
  %m_c65 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 2
  store i32 2, i32* %m_c65
  %system_mat66 = alloca double, i32 4
  %element_ptr67 = getelementptr double, double* %system_mat66, i32 0
  store double 1.000000e+00, double* %element_ptr67
  %element_ptr68 = getelementptr double, double* %system_mat66, i32 1
  store double 2.000000e+00, double* %element_ptr68
  %element_ptr69 = getelementptr double, double* %system_mat66, i32 2
  store double 3.000000e+00, double* %element_ptr69
  %element_ptr70 = getelementptr double, double* %system_mat66, i32 3
  store double 4.000000e+00, double* %element_ptr70
  %m71 = alloca %matrix_t
  %m_mat72 = getelementptr inbounds %matrix_t, %matrix_t* %m71, i32 0, i32 0
  store double* %system_mat66, double** %m_mat72
  %m_r73 = getelementptr inbounds %matrix_t, %matrix_t* %m71, i32 0, i32 1
  store i32 2, i32* %m_r73
  %m_c74 = getelementptr inbounds %matrix_t, %matrix_t* %m71, i32 0, i32 2
  store i32 2, i32* %m_c74
  %m_r75 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 1
  %r_mat = load i32, i32* %m_r75
  %m_r76 = getelementptr inbounds %matrix_t, %matrix_t* %m71, i32 0, i32 1
  %r_mat77 = load i32, i32* %m_r76
  %tmp87 = icmp ne i32 %r_mat, %r_mat77
  br i1 %tmp87, label %then, label %else

merge:                                            ; preds = %merge82, %then
  %m_mat88 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat88
  %m_r89 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 1
  %r_mat90 = load i32, i32* %m_r89
  %tmp91 = sub i32 %r_mat90, 1
  %m_c92 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 2
  %c_mat93 = load i32, i32* %m_c92
  %tmp94 = sub i32 %c_mat93, 1
  %m_mat95 = getelementptr inbounds %matrix_t, %matrix_t* %m71, i32 0, i32 0
  %mat_v = load double*, double** %m_mat95
  %result = alloca i1
  store i1 true, i1* %result
  %i96 = alloca i32
  store i32 0, i32* %i96
  br label %while

then:                                             ; preds = %entry
  %printf78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge

else:                                             ; preds = %entry
  %m_c79 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 2
  %c_mat = load i32, i32* %m_c79
  %m_c80 = getelementptr inbounds %matrix_t, %matrix_t* %m71, i32 0, i32 2
  %c_mat81 = load i32, i32* %m_c80
  %tmp86 = icmp ne i32 %c_mat, %c_mat81
  br i1 %tmp86, label %then83, label %else85

merge82:                                          ; preds = %else85, %then83
  br label %merge

then83:                                           ; preds = %else
  %printf84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge82

else85:                                           ; preds = %else
  br label %merge82

while:                                            ; preds = %merge113, %merge
  %i_v118 = load i32, i32* %i96
  %bool_val119 = icmp sle i32 %i_v118, %tmp91
  br i1 %bool_val119, label %while_body, label %merge117

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while97

while97:                                          ; preds = %merge107, %while_body
  %j_v114 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v114, %tmp94
  br i1 %bool_val, label %while_body98, label %merge113

while_body98:                                     ; preds = %while97
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i96
  %tmp99 = mul i32 %c_mat93, %i_v
  %index = add i32 %j_v, %tmp99
  %element_ptr100 = getelementptr double, double* %mat_mat, i32 %index
  %tmp_element = load double, double* %element_ptr100
  %j_v101 = load i32, i32* %j
  %i_v102 = load i32, i32* %i96
  %tmp103 = mul i32 %c_mat93, %i_v102
  %index104 = add i32 %j_v101, %tmp103
  %element_ptr105 = getelementptr double, double* %mat_v, i32 %index104
  %tmp_element106 = load double, double* %element_ptr105
  %tmp110 = fcmp one double %tmp_element, %tmp_element106
  br i1 %tmp110, label %then108, label %else109

merge107:                                         ; preds = %else109, %then108
  %j_v111 = load i32, i32* %j
  %tmp112 = add i32 %j_v111, 1
  store i32 %tmp112, i32* %j
  br label %while97

then108:                                          ; preds = %while_body98
  store i1 false, i1* %result
  br label %merge107

else109:                                          ; preds = %while_body98
  br label %merge107

merge113:                                         ; preds = %while97
  %i_v115 = load i32, i32* %i96
  %tmp116 = add i32 %i_v115, 1
  store i32 %tmp116, i32* %i96
  br label %while

merge117:                                         ; preds = %while
  %result120 = load i1, i1* %result
  %tmp126 = icmp ne i1 true, %result120
  br i1 %tmp126, label %then122, label %else124

merge121:                                         ; preds = %else124, %then122
  %printf127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %system_mat129 = alloca double, i32 4
  %element_ptr130 = getelementptr double, double* %system_mat129, i32 0
  store double 0x4020666666666666, double* %element_ptr130
  %element_ptr131 = getelementptr double, double* %system_mat129, i32 1
  store double 1.634000e+02, double* %element_ptr131
  %element_ptr132 = getelementptr double, double* %system_mat129, i32 2
  store double 9.246000e+02, double* %element_ptr132
  %element_ptr133 = getelementptr double, double* %system_mat129, i32 3
  store double 9.990000e+01, double* %element_ptr133
  %m134 = alloca %matrix_t
  %m_mat135 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 0
  store double* %system_mat129, double** %m_mat135
  %m_r136 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 1
  store i32 2, i32* %m_r136
  %m_c137 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 2
  store i32 2, i32* %m_c137
  %m_r138 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 1
  %r_mat139 = load i32, i32* %m_r138
  %m_c140 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 2
  %c_mat141 = load i32, i32* %m_c140
  %size = mul i32 %r_mat139, %c_mat141
  %system_mat142 = alloca double, i32 %size
  %m143 = alloca %matrix_t
  %m_mat144 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 0
  store double* %system_mat142, double** %m_mat144
  %m_r145 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 1
  store i32 %r_mat139, i32* %m_r145
  %m_c146 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 2
  store i32 %c_mat141, i32* %m_c146
  %tmp147 = sub i32 %r_mat139, 1
  %tmp148 = sub i32 %c_mat141, 1
  %i149 = alloca i32
  store i32 0, i32* %i149
  br label %while150

then122:                                          ; preds = %merge117
  %printf123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge121

else124:                                          ; preds = %merge117
  %printf125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge121

while150:                                         ; preds = %merge162, %merge121
  %i_v168 = load i32, i32* %i149
  %bool_val169 = icmp sle i32 %i_v168, %tmp147
  br i1 %bool_val169, label %while_body151, label %merge167

while_body151:                                    ; preds = %while150
  %j152 = alloca i32
  store i32 0, i32* %j152
  br label %while153

while153:                                         ; preds = %while_body154, %while_body151
  %j_v163 = load i32, i32* %j152
  %bool_val164 = icmp sle i32 %j_v163, %tmp148
  br i1 %bool_val164, label %while_body154, label %merge162

while_body154:                                    ; preds = %while153
  %j_v155 = load i32, i32* %j152
  %i_v156 = load i32, i32* %i149
  %tmp157 = mul i32 %c_mat141, %i_v156
  %index158 = add i32 %j_v155, %tmp157
  %element_ptr159 = getelementptr double, double* %system_mat142, i32 %index158
  store double 0.000000e+00, double* %element_ptr159
  %j_v160 = load i32, i32* %j152
  %tmp161 = add i32 %j_v160, 1
  store i32 %tmp161, i32* %j152
  br label %while153

merge162:                                         ; preds = %while153
  %i_v165 = load i32, i32* %i149
  %tmp166 = add i32 %i_v165, 1
  store i32 %tmp166, i32* %i149
  br label %while150

merge167:                                         ; preds = %while150
  %tmp170 = sub i32 %c_mat141, 1
  %tmp171 = sub i32 %r_mat139, 1
  %m_mat172 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 0
  %mat_mat173 = load double*, double** %m_mat172
  %m_r174 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 1
  %r_mat175 = load i32, i32* %m_r174
  %m_c176 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 2
  %c_mat177 = load i32, i32* %m_c176
  %m_mat178 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 0
  %mat_v179 = load double*, double** %m_mat178
  %m_r180 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 1
  %r_v = load i32, i32* %m_r180
  %m_c181 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 2
  %c_v = load i32, i32* %m_c181
  %i182 = alloca i32
  store i32 0, i32* %i182
  br label %while183

while183:                                         ; preds = %merge205, %merge167
  %i_v211 = load i32, i32* %i182
  %bool_val212 = icmp sle i32 %i_v211, %tmp171
  br i1 %bool_val212, label %while_body184, label %merge210

while_body184:                                    ; preds = %while183
  %j185 = alloca i32
  store i32 0, i32* %j185
  br label %while186

while186:                                         ; preds = %while_body187, %while_body184
  %j_v206 = load i32, i32* %j185
  %bool_val207 = icmp sle i32 %j_v206, %tmp170
  br i1 %bool_val207, label %while_body187, label %merge205

while_body187:                                    ; preds = %while186
  %j_v188 = load i32, i32* %j185
  %i_v189 = load i32, i32* %i182
  %tmp190 = mul i32 %c_mat177, %i_v189
  %index191 = add i32 %j_v188, %tmp190
  %element_ptr192 = getelementptr double, double* %mat_mat173, i32 %index191
  %j_v193 = load i32, i32* %j185
  %tmp194 = sub i32 %j_v193, 0
  %tmp195 = add i32 %tmp194, 0
  %i_v196 = load i32, i32* %i182
  %tmp197 = sub i32 %i_v196, 0
  %tmp198 = add i32 %tmp197, 0
  %tmp199 = mul i32 %c_v, %tmp198
  %index200 = add i32 %tmp195, %tmp199
  %element_ptr201 = getelementptr double, double* %mat_v179, i32 %index200
  %tmp_element202 = load double, double* %element_ptr201
  store double %tmp_element202, double* %element_ptr192
  %j_v203 = load i32, i32* %j185
  %tmp204 = add i32 %j_v203, 1
  store i32 %tmp204, i32* %j185
  br label %while186

merge205:                                         ; preds = %while186
  %i_v208 = load i32, i32* %i182
  %tmp209 = add i32 %i_v208, 1
  store i32 %tmp209, i32* %i182
  br label %while183

merge210:                                         ; preds = %while183
  %system_mat213 = alloca double, i32 4
  %element_ptr214 = getelementptr double, double* %system_mat213, i32 0
  store double 1.000000e+00, double* %element_ptr214
  %element_ptr215 = getelementptr double, double* %system_mat213, i32 1
  store double 2.000000e+00, double* %element_ptr215
  %element_ptr216 = getelementptr double, double* %system_mat213, i32 2
  store double 3.000000e+00, double* %element_ptr216
  %element_ptr217 = getelementptr double, double* %system_mat213, i32 3
  store double 4.000000e+00, double* %element_ptr217
  %m218 = alloca %matrix_t
  %m_mat219 = getelementptr inbounds %matrix_t, %matrix_t* %m218, i32 0, i32 0
  store double* %system_mat213, double** %m_mat219
  %m_r220 = getelementptr inbounds %matrix_t, %matrix_t* %m218, i32 0, i32 1
  store i32 2, i32* %m_r220
  %m_c221 = getelementptr inbounds %matrix_t, %matrix_t* %m218, i32 0, i32 2
  store i32 2, i32* %m_c221
  %m_r222 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 1
  %r_mat223 = load i32, i32* %m_r222
  %m_r224 = getelementptr inbounds %matrix_t, %matrix_t* %m218, i32 0, i32 1
  %r_mat225 = load i32, i32* %m_r224
  %tmp239 = icmp ne i32 %r_mat223, %r_mat225
  br i1 %tmp239, label %then227, label %else229

merge226:                                         ; preds = %merge234, %then227
  %m_mat240 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 0
  %mat_mat241 = load double*, double** %m_mat240
  %m_r242 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 1
  %r_mat243 = load i32, i32* %m_r242
  %tmp244 = sub i32 %r_mat243, 1
  %m_c245 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 2
  %c_mat246 = load i32, i32* %m_c245
  %tmp247 = sub i32 %c_mat246, 1
  %m_mat248 = getelementptr inbounds %matrix_t, %matrix_t* %m218, i32 0, i32 0
  %mat_v249 = load double*, double** %m_mat248
  %result250 = alloca i1
  store i1 true, i1* %result250
  %i251 = alloca i32
  store i32 0, i32* %i251
  br label %while252

then227:                                          ; preds = %merge210
  %printf228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge226

else229:                                          ; preds = %merge210
  %m_c230 = getelementptr inbounds %matrix_t, %matrix_t* %m143, i32 0, i32 2
  %c_mat231 = load i32, i32* %m_c230
  %m_c232 = getelementptr inbounds %matrix_t, %matrix_t* %m218, i32 0, i32 2
  %c_mat233 = load i32, i32* %m_c232
  %tmp238 = icmp ne i32 %c_mat231, %c_mat233
  br i1 %tmp238, label %then235, label %else237

merge234:                                         ; preds = %else237, %then235
  br label %merge226

then235:                                          ; preds = %else229
  %printf236 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge234

else237:                                          ; preds = %else229
  br label %merge234

while252:                                         ; preds = %merge275, %merge226
  %i_v281 = load i32, i32* %i251
  %bool_val282 = icmp sle i32 %i_v281, %tmp244
  br i1 %bool_val282, label %while_body253, label %merge280

while_body253:                                    ; preds = %while252
  %j254 = alloca i32
  store i32 0, i32* %j254
  br label %while255

while255:                                         ; preds = %merge269, %while_body253
  %j_v276 = load i32, i32* %j254
  %bool_val277 = icmp sle i32 %j_v276, %tmp247
  br i1 %bool_val277, label %while_body256, label %merge275

while_body256:                                    ; preds = %while255
  %j_v257 = load i32, i32* %j254
  %i_v258 = load i32, i32* %i251
  %tmp259 = mul i32 %c_mat246, %i_v258
  %index260 = add i32 %j_v257, %tmp259
  %element_ptr261 = getelementptr double, double* %mat_mat241, i32 %index260
  %tmp_element262 = load double, double* %element_ptr261
  %j_v263 = load i32, i32* %j254
  %i_v264 = load i32, i32* %i251
  %tmp265 = mul i32 %c_mat246, %i_v264
  %index266 = add i32 %j_v263, %tmp265
  %element_ptr267 = getelementptr double, double* %mat_v249, i32 %index266
  %tmp_element268 = load double, double* %element_ptr267
  %tmp272 = fcmp one double %tmp_element262, %tmp_element268
  br i1 %tmp272, label %then270, label %else271

merge269:                                         ; preds = %else271, %then270
  %j_v273 = load i32, i32* %j254
  %tmp274 = add i32 %j_v273, 1
  store i32 %tmp274, i32* %j254
  br label %while255

then270:                                          ; preds = %while_body256
  store i1 false, i1* %result250
  br label %merge269

else271:                                          ; preds = %while_body256
  br label %merge269

merge275:                                         ; preds = %while255
  %i_v278 = load i32, i32* %i251
  %tmp279 = add i32 %i_v278, 1
  store i32 %tmp279, i32* %i251
  br label %while252

merge280:                                         ; preds = %while252
  %result283 = load i1, i1* %result250
  %tmp289 = icmp ne i1 true, %result283
  br i1 %tmp289, label %then285, label %else287

merge284:                                         ; preds = %else287, %then285
  %printf290 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf291 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  ret i32 0

then285:                                          ; preds = %merge280
  %printf286 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge284

else287:                                          ; preds = %merge280
  %printf288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge284
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  %tmp133 = load double, double* %k
  store double 0.000000e+00, double* %k
  %i134 = alloca i32
  %tmp135 = load i32, i32* %i134
  store i32 0, i32* %i134
  %j136 = alloca i32
  %tmp137 = load i32, i32* %j136
  store i32 0, i32* %j136
  %i138 = load i32, i32* %i134
  %tmp139 = icmp slt i32 %i138, 3
  %tmp140 = load i32, i32* %i134
  store i32 0, i32* %i134
  br label %while141

while141:                                         ; preds = %merge266, %merge130
  %i273 = load i32, i32* %i134
  %tmp274 = icmp slt i32 %i273, 3
  br i1 %tmp274, label %while_body142, label %merge272

while_body142:                                    ; preds = %while141
  %j143 = load i32, i32* %j136
  %tmp144 = icmp slt i32 %j143, 3
  %tmp145 = load i32, i32* %j136
  store i32 0, i32* %j136
  br label %while146

while146:                                         ; preds = %merge249, %while_body142
  %j267 = load i32, i32* %j136
  %tmp268 = icmp slt i32 %j267, 3
  br i1 %tmp268, label %while_body147, label %merge266

while_body147:                                    ; preds = %while146
  %k148 = load double, double* %k
  %m_r149 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat150 = load i32, i32* %m_r149
  %m_c151 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat152 = load i32, i32* %m_c151
  %i153 = load i32, i32* %i134
  %tmp155 = icmp sgt i32 0, %i153
  br i1 %tmp155, label %then, label %else

merge154:                                         ; preds = %else, %then
  %tmp156 = sub i32 %r_mat150, 1
  %tmp161 = icmp slt i32 %tmp156, %i153
  br i1 %tmp161, label %then158, label %else160

then:                                             ; preds = %while_body147
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge154

else:                                             ; preds = %while_body147
  br label %merge154

merge157:                                         ; preds = %else160, %then158
  %i162 = load i32, i32* %i134
  %tmp167 = icmp sgt i32 0, %i162
  br i1 %tmp167, label %then164, label %else166

then158:                                          ; preds = %merge154
  %printf159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge157

else160:                                          ; preds = %merge154
  br label %merge157

merge163:                                         ; preds = %else166, %then164
  %tmp168 = sub i32 %r_mat150, 1
  %tmp173 = icmp slt i32 %tmp168, %i162
  br i1 %tmp173, label %then170, label %else172

then164:                                          ; preds = %merge157
  %printf165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge163

else166:                                          ; preds = %merge157
  br label %merge163

merge169:                                         ; preds = %else172, %then170
  %j174 = load i32, i32* %j136
  %tmp179 = icmp sgt i32 0, %j174
  br i1 %tmp179, label %then176, label %else178

then170:                                          ; preds = %merge163
  %printf171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge169

else172:                                          ; preds = %merge163
  br label %merge169

merge175:                                         ; preds = %else178, %then176
  %tmp180 = sub i32 %c_mat152, 1
  %tmp185 = icmp slt i32 %tmp180, %j174
  br i1 %tmp185, label %then182, label %else184

then176:                                          ; preds = %merge169
  %printf177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge175

else178:                                          ; preds = %merge169
  br label %merge175

merge181:                                         ; preds = %else184, %then182
  %j186 = load i32, i32* %j136
  %tmp191 = icmp sgt i32 0, %j186
  br i1 %tmp191, label %then188, label %else190

then182:                                          ; preds = %merge175
  %printf183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge181

else184:                                          ; preds = %merge175
  br label %merge181

merge187:                                         ; preds = %else190, %then188
  %tmp192 = sub i32 %c_mat152, 1
  %tmp197 = icmp slt i32 %tmp192, %j186
  br i1 %tmp197, label %then194, label %else196

then188:                                          ; preds = %merge181
  %printf189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge187

else190:                                          ; preds = %merge181
  br label %merge187

merge193:                                         ; preds = %else196, %then194
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat198 = load double*, double** %mat
  %tmp199 = mul i32 %c_mat152, %i153
  %index200 = add i32 %j174, %tmp199
  %element_ptr201 = getelementptr double, double* %mat198, i32 %index200
  %element = load double, double* %element_ptr201
  %m_r202 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat203 = load i32, i32* %m_r202
  %m_c204 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat205 = load i32, i32* %m_c204
  %i206 = load i32, i32* %i134
  %tmp211 = icmp sgt i32 0, %i206
  br i1 %tmp211, label %then208, label %else210

then194:                                          ; preds = %merge187
  %printf195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge193

else196:                                          ; preds = %merge187
  br label %merge193

merge207:                                         ; preds = %else210, %then208
  %tmp212 = sub i32 %r_mat203, 1
  %tmp217 = icmp slt i32 %tmp212, %i206
  br i1 %tmp217, label %then214, label %else216

then208:                                          ; preds = %merge193
  %printf209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge207

else210:                                          ; preds = %merge193
  br label %merge207

merge213:                                         ; preds = %else216, %then214
  %i218 = load i32, i32* %i134
  %tmp223 = icmp sgt i32 0, %i218
  br i1 %tmp223, label %then220, label %else222

then214:                                          ; preds = %merge207
  %printf215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge213

else216:                                          ; preds = %merge207
  br label %merge213

merge219:                                         ; preds = %else222, %then220
  %tmp224 = sub i32 %r_mat203, 1
  %tmp229 = icmp slt i32 %tmp224, %i218
  br i1 %tmp229, label %then226, label %else228

then220:                                          ; preds = %merge213
  %printf221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge219

else222:                                          ; preds = %merge213
  br label %merge219

merge225:                                         ; preds = %else228, %then226
  %j230 = load i32, i32* %j136
  %tmp235 = icmp sgt i32 0, %j230
  br i1 %tmp235, label %then232, label %else234

then226:                                          ; preds = %merge219
  %printf227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge225

else228:                                          ; preds = %merge219
  br label %merge225

merge231:                                         ; preds = %else234, %then232
  %tmp236 = sub i32 %c_mat205, 1
  %tmp241 = icmp slt i32 %tmp236, %j230
  br i1 %tmp241, label %then238, label %else240

then232:                                          ; preds = %merge225
  %printf233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge231

else234:                                          ; preds = %merge225
  br label %merge231

merge237:                                         ; preds = %else240, %then238
  %j242 = load i32, i32* %j136
  %tmp247 = icmp sgt i32 0, %j242
  br i1 %tmp247, label %then244, label %else246

then238:                                          ; preds = %merge231
  %printf239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge237

else240:                                          ; preds = %merge231
  br label %merge237

merge243:                                         ; preds = %else246, %then244
  %tmp248 = sub i32 %c_mat205, 1
  %tmp253 = icmp slt i32 %tmp248, %j242
  br i1 %tmp253, label %then250, label %else252

then244:                                          ; preds = %merge237
  %printf245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge243

else246:                                          ; preds = %merge237
  br label %merge243

merge249:                                         ; preds = %else252, %then250
  %mat254 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat255 = load double*, double** %mat254
  %tmp256 = mul i32 %c_mat205, %i206
  %index257 = add i32 %j230, %tmp256
  %element_ptr258 = getelementptr double, double* %mat255, i32 %index257
  %element259 = load double, double* %element_ptr258
  %tmp260 = fmul double %element, %element259
  %tmp261 = fadd double %k148, %tmp260
  %tmp262 = load double, double* %k
  store double %tmp261, double* %k
  %j263 = load i32, i32* %j136
  %tmp264 = add i32 %j263, 1
  %tmp265 = load i32, i32* %j136
  store i32 %tmp264, i32* %j136
  br label %while146

then250:                                          ; preds = %merge243
  %printf251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge249

else252:                                          ; preds = %merge243
  br label %merge249

merge266:                                         ; preds = %while146
  %i269 = load i32, i32* %i134
  %tmp270 = add i32 %i269, 1
  %tmp271 = load i32, i32* %i134
  store i32 %tmp270, i32* %i134
  br label %while141

merge272:                                         ; preds = %while141
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k275 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k275, double* %return0
  ret %return_t* %return
  %tmp276 = alloca %return_t
  ret %return_t* %tmp276
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  %tmp133 = load i32, i32* %a
  store i32 0, i32* %a
  %b = alloca i32
  %tmp134 = load i32, i32* %b
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp135 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr136 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v137 = load i32, i32* %v_ptr136
  %tmp138 = load i32, i32* %b
  store i32 %v137, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b139 = load i32, i32* %b
  %tmp140 = add i32 %b139, 2
  %a141 = load i32, i32* %a
  %tmp142 = add i32 %a141, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp142, i32 %tmp140)
  %v_ptr143 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v144 = load %matrix_t*, %matrix_t** %v_ptr143
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat145 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_mat146 = load double*, double** %m_mat145
  %m_r147 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_mat148 = load i32, i32* %m_r147
  %m_c149 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_mat150 = load i32, i32* %m_c149
  %size151 = mul i32 %r_mat148, %c_mat150
  %system_mat152 = alloca double, i32 %size151
  %m153 = alloca %matrix_t
  %m_mat154 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  store double* %system_mat152, double** %m_mat154
  %m_r155 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  store i32 %r_mat148, i32* %m_r155
  %m_c156 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  store i32 %c_mat150, i32* %m_c156
  %tmp157 = sub i32 %r_mat148, 1
  %tmp158 = sub i32 %c_mat150, 1
  %i159 = alloca i32
  store i32 0, i32* %i159
  br label %while160

while160:                                         ; preds = %merge172, %merge130
  %i_v178 = load i32, i32* %i159
  %bool_val179 = icmp sle i32 %i_v178, %tmp157
  br i1 %bool_val179, label %while_body161, label %merge177

while_body161:                                    ; preds = %while160
  %j162 = alloca i32
  store i32 0, i32* %j162
  br label %while163

while163:                                         ; preds = %while_body164, %while_body161
  %j_v173 = load i32, i32* %j162
  %bool_val174 = icmp sle i32 %j_v173, %tmp158
  br i1 %bool_val174, label %while_body164, label %merge172

while_body164:                                    ; preds = %while163
  %j_v165 = load i32, i32* %j162
  %i_v166 = load i32, i32* %i159
  %tmp167 = mul i32 %c_mat150, %i_v166
  %index168 = add i32 %j_v165, %tmp167
  %element_ptr169 = getelementptr double, double* %system_mat152, i32 %index168
  store double 0.000000e+00, double* %element_ptr169
  %j_v170 = load i32, i32* %j162
  %tmp171 = add i32 %j_v170, 1
  store i32 %tmp171, i32* %j162
  br label %while163

merge172:                                         ; preds = %while163
  %i_v175 = load i32, i32* %i159
  %tmp176 = add i32 %i_v175, 1
  store i32 %tmp176, i32* %i159
  br label %while160

merge177:                                         ; preds = %while160
  %tmp180 = sub i32 %c_mat150, 1
  %tmp181 = sub i32 %r_mat148, 1
  %m_mat182 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_mat183 = load double*, double** %m_mat182
  %m_r184 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat185 = load i32, i32* %m_r184
  %m_c186 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat187 = load i32, i32* %m_c186
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_v189 = load double*, double** %m_mat188
  %m_r190 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_v191 = load i32, i32* %m_r190
  %m_c192 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_v193 = load i32, i32* %m_c192
  %i194 = alloca i32
  store i32 0, i32* %i194
  br label %while195

while195:                                         ; preds = %merge217, %merge177
  %i_v223 = load i32, i32* %i194
  %bool_val224 = icmp sle i32 %i_v223, %tmp181
  br i1 %bool_val224, label %while_body196, label %merge222

while_body196:                                    ; preds = %while195
  %j197 = alloca i32
  store i32 0, i32* %j197
  br label %while198

while198:                                         ; preds = %while_body199, %while_body196
  %j_v218 = load i32, i32* %j197
  %bool_val219 = icmp sle i32 %j_v218, %tmp180
  br i1 %bool_val219, label %while_body199, label %merge217

while_body199:                                    ; preds = %while198
  %j_v200 = load i32, i32* %j197
  %i_v201 = load i32, i32* %i194
  %tmp202 = mul i32 %c_mat187, %i_v201
  %index203 = add i32 %j_v200, %tmp202
  %element_ptr204 = getelementptr double, double* %mat_mat183, i32 %index203
  %j_v205 = load i32, i32* %j197
  %tmp206 = sub i32 %j_v205, 0
  %tmp207 = add i32 %tmp206, 0
  %i_v208 = load i32, i32* %i194
  %tmp209 = sub i32 %i_v208, 0
  %tmp210 = add i32 %tmp209, 0
  %tmp211 = mul i32 %c_v193, %tmp210
  %index212 = add i32 %tmp207, %tmp211
  %element_ptr213 = getelementptr double, double* %mat_v189, i32 %index212
  %tmp_element214 = load double, double* %element_ptr213
  store double %tmp_element214, double* %element_ptr204
  %j_v215 = load i32, i32* %j197
  %tmp216 = add i32 %j_v215, 1
  store i32 %tmp216, i32* %j197
  br label %while198

merge217:                                         ; preds = %while198
  %i_v220 = load i32, i32* %i194
  %tmp221 = add i32 %i_v220, 1
  store i32 %tmp221, i32* %i194
  br label %while195

merge222:                                         ; preds = %while195
  %4 = bitcast double* %mat_mat146 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v144 to i8*
  tail call void @free(i8* %5)
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %size229 = mul i32 %r_mat226, %c_mat228
  %system_mat230 = alloca double, i32 %size229
  %m231 = alloca %matrix_t
  %m_mat232 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  store double* %system_mat230, double** %m_mat232
  %m_r233 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  store i32 %r_mat226, i32* %m_r233
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  store i32 %c_mat228, i32* %m_c234
  %tmp235 = sub i32 %r_mat226, 1
  %tmp236 = sub i32 %c_mat228, 1
  %i237 = alloca i32
  store i32 0, i32* %i237
  br label %while238

while238:                                         ; preds = %merge250, %merge222
  %i_v256 = load i32, i32* %i237
  %bool_val257 = icmp sle i32 %i_v256, %tmp235
  br i1 %bool_val257, label %while_body239, label %merge255

while_body239:                                    ; preds = %while238
  %j240 = alloca i32
  store i32 0, i32* %j240
  br label %while241

while241:                                         ; preds = %while_body242, %while_body239
  %j_v251 = load i32, i32* %j240
  %bool_val252 = icmp sle i32 %j_v251, %tmp236
  br i1 %bool_val252, label %while_body242, label %merge250

while_body242:                                    ; preds = %while241
  %j_v243 = load i32, i32* %j240
  %i_v244 = load i32, i32* %i237
  %tmp245 = mul i32 %c_mat228, %i_v244
  %index246 = add i32 %j_v243, %tmp245
  %element_ptr247 = getelementptr double, double* %system_mat230, i32 %index246
  store double 0.000000e+00, double* %element_ptr247
  %j_v248 = load i32, i32* %j240
  %tmp249 = add i32 %j_v248, 1
  store i32 %tmp249, i32* %j240
  br label %while241

merge250:                                         ; preds = %while241
  %i_v253 = load i32, i32* %i237
  %tmp254 = add i32 %i_v253, 1
  store i32 %tmp254, i32* %i237
  br label %while238

merge255:                                         ; preds = %while238
  %tmp258 = sub i32 %c_mat228, 1
  %tmp259 = sub i32 %r_mat226, 1
  %m_mat260 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat261 = load double*, double** %m_mat260
  %m_r262 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat263 = load i32, i32* %m_r262
  %m_c264 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat265 = load i32, i32* %m_c264
  %m_mat266 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_v267 = load double*, double** %m_mat266
  %m_r268 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_v269 = load i32, i32* %m_r268
  %m_c270 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_v271 = load i32, i32* %m_c270
  %i272 = alloca i32
  store i32 0, i32* %i272
  br label %while273

while273:                                         ; preds = %merge295, %merge255
  %i_v301 = load i32, i32* %i272
  %bool_val302 = icmp sle i32 %i_v301, %tmp259
  br i1 %bool_val302, label %while_body274, label %merge300

while_body274:                                    ; preds = %while273
  %j275 = alloca i32
  store i32 0, i32* %j275
  br label %while276

while276:                                         ; preds = %while_body277, %while_body274
  %j_v296 = load i32, i32* %j275
  %bool_val297 = icmp sle i32 %j_v296, %tmp258
  br i1 %bool_val297, label %while_body277, label %merge295

while_body277:                                    ; preds = %while276
  %j_v278 = load i32, i32* %j275
  %i_v279 = load i32, i32* %i272
  %tmp280 = mul i32 %c_mat265, %i_v279
  %index281 = add i32 %j_v278, %tmp280
  %element_ptr282 = getelementptr double, double* %mat_mat261, i32 %index281
  %j_v283 = load i32, i32* %j275
  %tmp284 = sub i32 %j_v283, 0
  %tmp285 = add i32 %tmp284, 0
  %i_v286 = load i32, i32* %i272
  %tmp287 = sub i32 %i_v286, 0
  %tmp288 = add i32 %tmp287, 0
  %tmp289 = mul i32 %c_v271, %tmp288
  %index290 = add i32 %tmp285, %tmp289
  %element_ptr291 = getelementptr double, double* %mat_v267, i32 %index290
  %tmp_element292 = load double, double* %element_ptr291
  store double %tmp_element292, double* %element_ptr282
  %j_v293 = load i32, i32* %j275
  %tmp294 = add i32 %j_v293, 1
  store i32 %tmp294, i32* %j275
  br label %while276

merge295:                                         ; preds = %while276
  %i_v298 = load i32, i32* %i272
  %tmp299 = add i32 %i_v298, 1
  store i32 %tmp299, i32* %i272
  br label %while273

merge300:                                         ; preds = %while273
  %b303 = load i32, i32* %b
  %a304 = load i32, i32* %a
  %zeros_result305 = call %zero_matrix_t* @zeros(i32 %a304, i32 %b303)
  %v_ptr306 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result305, i32 0, i32 0
  %v307 = load %matrix_t*, %matrix_t** %v_ptr306
  %6 = bitcast %zero_matrix_t* %zeros_result305 to i8*
  tail call void @free(i8* %6)
  %m_mat308 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_mat309 = load double*, double** %m_mat308
  %m_r310 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_mat311 = load i32, i32* %m_r310
  %m_c312 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_mat313 = load i32, i32* %m_c312
  %size314 = mul i32 %r_mat311, %c_mat313
  %system_mat315 = alloca double, i32 %size314
  %m316 = alloca %matrix_t
  %m_mat317 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  store double* %system_mat315, double** %m_mat317
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  store i32 %r_mat311, i32* %m_r318
  %m_c319 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  store i32 %c_mat313, i32* %m_c319
  %tmp320 = sub i32 %r_mat311, 1
  %tmp321 = sub i32 %c_mat313, 1
  %i322 = alloca i32
  store i32 0, i32* %i322
  br label %while323

while323:                                         ; preds = %merge335, %merge300
  %i_v341 = load i32, i32* %i322
  %bool_val342 = icmp sle i32 %i_v341, %tmp320
  br i1 %bool_val342, label %while_body324, label %merge340

while_body324:                                    ; preds = %while323
  %j325 = alloca i32
  store i32 0, i32* %j325
  br label %while326

while326:                                         ; preds = %while_body327, %while_body324
  %j_v336 = load i32, i32* %j325
  %bool_val337 = icmp sle i32 %j_v336, %tmp321
  br i1 %bool_val337, label %while_body327, label %merge335

while_body327:                                    ; preds = %while326
  %j_v328 = load i32, i32* %j325
  %i_v329 = load i32, i32* %i322
  %tmp330 = mul i32 %c_mat313, %i_v329
  %index331 = add i32 %j_v328, %tmp330
  %element_ptr332 = getelementptr double, double* %system_mat315, i32 %index331
  store double 0.000000e+00, double* %element_ptr332
  %j_v333 = load i32, i32* %j325
  %tmp334 = add i32 %j_v333, 1
  store i32 %tmp334, i32* %j325
  br label %while326

merge335:                                         ; preds = %while326
  %i_v338 = load i32, i32* %i322
  %tmp339 = add i32 %i_v338, 1
  store i32 %tmp339, i32* %i322
  br label %while323

merge340:                                         ; preds = %while323
  %tmp343 = sub i32 %c_mat313, 1
  %tmp344 = sub i32 %r_mat311, 1
  %m_mat345 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_mat346 = load double*, double** %m_mat345
  %m_r347 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat348 = load i32, i32* %m_r347
  %m_c349 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat350 = load i32, i32* %m_c349
  %m_mat351 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_v352 = load double*, double** %m_mat351
  %m_r353 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_v354 = load i32, i32* %m_r353
  %m_c355 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_v356 = load i32, i32* %m_c355
  %i357 = alloca i32
  store i32 0, i32* %i357
  br label %while358

while358:                                         ; preds = %merge380, %merge340
  %i_v386 = load i32, i32* %i357
  %bool_val387 = icmp sle i32 %i_v386, %tmp344
  br i1 %bool_val387, label %while_body359, label %merge385

while_body359:                                    ; preds = %while358
  %j360 = alloca i32
  store i32 0, i32* %j360
  br label %while361

while361:                                         ; preds = %while_body362, %while_body359
  %j_v381 = load i32, i32* %j360
  %bool_val382 = icmp sle i32 %j_v381, %tmp343
  br i1 %bool_val382, label %while_body362, label %merge380

while_body362:                                    ; preds = %while361
  %j_v363 = load i32, i32* %j360
  %i_v364 = load i32, i32* %i357
  %tmp365 = mul i32 %c_mat350, %i_v364
  %index366 = add i32 %j_v363, %tmp365
  %element_ptr367 = getelementptr double, double* %mat_mat346, i32 %index366
  %j_v368 = load i32, i32* %j360
  %tmp369 = sub i32 %j_v368, 0
  %tmp370 = add i32 %tmp369, 0
  %i_v371 = load i32, i32* %i357
  %tmp372 = sub i32 %i_v371, 0
  %tmp373 = add i32 %tmp372, 0
  %tmp374 = mul i32 %c_v356, %tmp373
  %index375 = add i32 %tmp370, %tmp374
  %element_ptr376 = getelementptr double, double* %mat_v352, i32 %index375
  %tmp_element377 = load double, double* %element_ptr376
  store double %tmp_element377, double* %element_ptr367
  %j_v378 = load i32, i32* %j360
  %tmp379 = add i32 %j_v378, 1
  store i32 %tmp379, i32* %j360
  br label %while361

merge380:                                         ; preds = %while361
  %i_v383 = load i32, i32* %i357
  %tmp384 = add i32 %i_v383, 1
  store i32 %tmp384, i32* %i357
  br label %while358

merge385:                                         ; preds = %while358
  %7 = bitcast double* %mat_mat309 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v307 to i8*
  tail call void @free(i8* %8)
  %m_r388 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat389 = load i32, i32* %m_r388
  %m_c390 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat391 = load i32, i32* %m_c390
  %size392 = mul i32 %r_mat389, %c_mat391
  %system_mat393 = alloca double, i32 %size392
  %m394 = alloca %matrix_t
  %m_mat395 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  store double* %system_mat393, double** %m_mat395
  %m_r396 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  store i32 %r_mat389, i32* %m_r396
  %m_c397 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  store i32 %c_mat391, i32* %m_c397
  %tmp398 = sub i32 %r_mat389, 1
  %tmp399 = sub i32 %c_mat391, 1
  %i400 = alloca i32
  store i32 0, i32* %i400
  br label %while401

while401:                                         ; preds = %merge413, %merge385
  %i_v419 = load i32, i32* %i400
  %bool_val420 = icmp sle i32 %i_v419, %tmp398
  br i1 %bool_val420, label %while_body402, label %merge418

while_body402:                                    ; preds = %while401
  %j403 = alloca i32
  store i32 0, i32* %j403
  br label %while404

while404:                                         ; preds = %while_body405, %while_body402
  %j_v414 = load i32, i32* %j403
  %bool_val415 = icmp sle i32 %j_v414, %tmp399
  br i1 %bool_val415, label %while_body405, label %merge413

while_body405:                                    ; preds = %while404
  %j_v406 = load i32, i32* %j403
  %i_v407 = load i32, i32* %i400
  %tmp408 = mul i32 %c_mat391, %i_v407
  %index409 = add i32 %j_v406, %tmp408
  %element_ptr410 = getelementptr double, double* %system_mat393, i32 %index409
  store double 0.000000e+00, double* %element_ptr410
  %j_v411 = load i32, i32* %j403
  %tmp412 = add i32 %j_v411, 1
  store i32 %tmp412, i32* %j403
  br label %while404

merge413:                                         ; preds = %while404
  %i_v416 = load i32, i32* %i400
  %tmp417 = add i32 %i_v416, 1
  store i32 %tmp417, i32* %i400
  br label %while401

merge418:                                         ; preds = %while401
  %tmp421 = sub i32 %c_mat391, 1
  %tmp422 = sub i32 %r_mat389, 1
  %m_mat423 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_mat424 = load double*, double** %m_mat423
  %m_r425 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat426 = load i32, i32* %m_r425
  %m_c427 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat428 = load i32, i32* %m_c427
  %m_mat429 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_v430 = load double*, double** %m_mat429
  %m_r431 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_v432 = load i32, i32* %m_r431
  %m_c433 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_v434 = load i32, i32* %m_c433
  %i435 = alloca i32
  store i32 0, i32* %i435
  br label %while436

while436:                                         ; preds = %merge458, %merge418
  %i_v464 = load i32, i32* %i435
  %bool_val465 = icmp sle i32 %i_v464, %tmp422
  br i1 %bool_val465, label %while_body437, label %merge463

while_body437:                                    ; preds = %while436
  %j438 = alloca i32
  store i32 0, i32* %j438
  br label %while439

while439:                                         ; preds = %while_body440, %while_body437
  %j_v459 = load i32, i32* %j438
  %bool_val460 = icmp sle i32 %j_v459, %tmp421
  br i1 %bool_val460, label %while_body440, label %merge458

while_body440:                                    ; preds = %while439
  %j_v441 = load i32, i32* %j438
  %i_v442 = load i32, i32* %i435
  %tmp443 = mul i32 %c_mat428, %i_v442
  %index444 = add i32 %j_v441, %tmp443
  %element_ptr445 = getelementptr double, double* %mat_mat424, i32 %index444
  %j_v446 = load i32, i32* %j438
  %tmp447 = sub i32 %j_v446, 0
  %tmp448 = add i32 %tmp447, 0
  %i_v449 = load i32, i32* %i435
  %tmp450 = sub i32 %i_v449, 0
  %tmp451 = add i32 %tmp450, 0
  %tmp452 = mul i32 %c_v434, %tmp451
  %index453 = add i32 %tmp448, %tmp452
  %element_ptr454 = getelementptr double, double* %mat_v430, i32 %index453
  %tmp_element455 = load double, double* %element_ptr454
  store double %tmp_element455, double* %element_ptr445
  %j_v456 = load i32, i32* %j438
  %tmp457 = add i32 %j_v456, 1
  store i32 %tmp457, i32* %j438
  br label %while439

merge458:                                         ; preds = %while439
  %i_v461 = load i32, i32* %i435
  %tmp462 = add i32 %i_v461, 1
  store i32 %tmp462, i32* %i435
  br label %while436

merge463:                                         ; preds = %while436
  %m_r466 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat467 = load i32, i32* %m_r466
  %m_c468 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat469 = load i32, i32* %m_c468
  br i1 false, label %then, label %else

merge470:                                         ; preds = %else, %then
  %tmp471 = sub i32 %r_mat467, 1
  %tmp476 = icmp slt i32 %tmp471, 0
  br i1 %tmp476, label %then473, label %else475

then:                                             ; preds = %merge463
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge470

else:                                             ; preds = %merge463
  br label %merge470

merge472:                                         ; preds = %else475, %then473
  %a477 = load i32, i32* %a
  %tmp478 = sub i32 %a477, 1
  %tmp483 = icmp sgt i32 0, %tmp478
  br i1 %tmp483, label %then480, label %else482

then473:                                          ; preds = %merge470
  %printf474 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge472

else475:                                          ; preds = %merge470
  br label %merge472

merge479:                                         ; preds = %else482, %then480
  %tmp484 = sub i32 %r_mat467, 1
  %tmp489 = icmp slt i32 %tmp484, %tmp478
  br i1 %tmp489, label %then486, label %else488

then480:                                          ; preds = %merge472
  %printf481 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge479

else482:                                          ; preds = %merge472
  br label %merge479

merge485:                                         ; preds = %else488, %then486
  br i1 false, label %then491, label %else493

then486:                                          ; preds = %merge479
  %printf487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge485

else488:                                          ; preds = %merge479
  br label %merge485

merge490:                                         ; preds = %else493, %then491
  %tmp494 = sub i32 %c_mat469, 1
  %tmp499 = icmp slt i32 %tmp494, 0
  br i1 %tmp499, label %then496, label %else498

then491:                                          ; preds = %merge485
  %printf492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge490

else493:                                          ; preds = %merge485
  br label %merge490

merge495:                                         ; preds = %else498, %then496
  %b500 = load i32, i32* %b
  %tmp501 = sub i32 %b500, 1
  %tmp506 = icmp sgt i32 0, %tmp501
  br i1 %tmp506, label %then503, label %else505

then496:                                          ; preds = %merge490
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge495

else498:                                          ; preds = %merge490
  br label %merge495

merge502:                                         ; preds = %else505, %then503
  %tmp507 = sub i32 %c_mat469, 1
  %tmp512 = icmp slt i32 %tmp507, %tmp501
  br i1 %tmp512, label %then509, label %else511

then503:                                          ; preds = %merge495
  %printf504 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge502

else505:                                          ; preds = %merge495
  br label %merge502

merge508:                                         ; preds = %else511, %then509
  %tmp513 = sub i32 %tmp478, 0
  %tmp514 = sub i32 %tmp501, 0
  %tmp515 = add i32 %tmp514, 1
  %tmp516 = add i32 %tmp513, 1
  %size517 = mul i32 %tmp516, %tmp515
  %system_mat518 = alloca double, i32 %size517
  %m519 = alloca %matrix_t
  %m_mat520 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  store double* %system_mat518, double** %m_mat520
  %m_r521 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  store i32 %tmp516, i32* %m_r521
  %m_c522 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  store i32 %tmp515, i32* %m_c522
  %tmp523 = sub i32 %tmp516, 1
  %tmp524 = sub i32 %tmp515, 1
  %i525 = alloca i32
  store i32 0, i32* %i525
  br label %while526

then509:                                          ; preds = %merge502
  %printf510 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge508

else511:                                          ; preds = %merge502
  br label %merge508

while526:                                         ; preds = %merge538, %merge508
  %i_v544 = load i32, i32* %i525
  %bool_val545 = icmp sle i32 %i_v544, %tmp523
  br i1 %bool_val545, label %while_body527, label %merge543

while_body527:                                    ; preds = %while526
  %j528 = alloca i32
  store i32 0, i32* %j528
  br label %while529

while529:                                         ; preds = %while_body530, %while_body527
  %j_v539 = load i32, i32* %j528
  %bool_val540 = icmp sle i32 %j_v539, %tmp524
  br i1 %bool_val540, label %while_body530, label %merge538

while_body530:                                    ; preds = %while529
  %j_v531 = load i32, i32* %j528
  %i_v532 = load i32, i32* %i525
  %tmp533 = mul i32 %tmp515, %i_v532
  %index534 = add i32 %j_v531, %tmp533
  %element_ptr535 = getelementptr double, double* %system_mat518, i32 %index534
  store double 0.000000e+00, double* %element_ptr535
  %j_v536 = load i32, i32* %j528
  %tmp537 = add i32 %j_v536, 1
  store i32 %tmp537, i32* %j528
  br label %while529

merge538:                                         ; preds = %while529
  %i_v541 = load i32, i32* %i525
  %tmp542 = add i32 %i_v541, 1
  store i32 %tmp542, i32* %i525
  br label %while526

merge543:                                         ; preds = %while526
  %m_mat546 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_mat547 = load double*, double** %m_mat546
  %m_r548 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat549 = load i32, i32* %m_r548
  %m_c550 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_mat551 = load i32, i32* %m_c550
  %m_mat552 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v553 = load double*, double** %m_mat552
  %m_r554 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v555 = load i32, i32* %m_r554
  %m_c556 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v557 = load i32, i32* %m_c556
  %i558 = alloca i32
  store i32 0, i32* %i558
  br label %while559

while559:                                         ; preds = %merge581, %merge543
  %i_v587 = load i32, i32* %i558
  %bool_val588 = icmp sle i32 %i_v587, %tmp513
  br i1 %bool_val588, label %while_body560, label %merge586

while_body560:                                    ; preds = %while559
  %j561 = alloca i32
  store i32 0, i32* %j561
  br label %while562

while562:                                         ; preds = %while_body563, %while_body560
  %j_v582 = load i32, i32* %j561
  %bool_val583 = icmp sle i32 %j_v582, %tmp514
  br i1 %bool_val583, label %while_body563, label %merge581

while_body563:                                    ; preds = %while562
  %j_v564 = load i32, i32* %j561
  %i_v565 = load i32, i32* %i558
  %tmp566 = mul i32 %c_mat551, %i_v565
  %index567 = add i32 %j_v564, %tmp566
  %element_ptr568 = getelementptr double, double* %mat_mat547, i32 %index567
  %j_v569 = load i32, i32* %j561
  %tmp570 = sub i32 %j_v569, 0
  %tmp571 = add i32 %tmp570, 0
  %i_v572 = load i32, i32* %i558
  %tmp573 = sub i32 %i_v572, 0
  %tmp574 = add i32 %tmp573, 0
  %tmp575 = mul i32 %c_v557, %tmp574
  %index576 = add i32 %tmp571, %tmp575
  %element_ptr577 = getelementptr double, double* %mat_v553, i32 %index576
  %tmp_element578 = load double, double* %element_ptr577
  store double %tmp_element578, double* %element_ptr568
  %j_v579 = load i32, i32* %j561
  %tmp580 = add i32 %j_v579, 1
  store i32 %tmp580, i32* %j561
  br label %while562

merge581:                                         ; preds = %while562
  %i_v584 = load i32, i32* %i558
  %tmp585 = add i32 %i_v584, 1
  store i32 %tmp585, i32* %i558
  br label %while559

merge586:                                         ; preds = %while559
  %m_r589 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat590 = load i32, i32* %m_r589
  %m_c591 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat592 = load i32, i32* %m_c591
  br i1 false, label %then594, label %else596

merge593:                                         ; preds = %else596, %then594
  %tmp597 = sub i32 %r_mat590, 1
  %tmp602 = icmp slt i32 %tmp597, 1
  br i1 %tmp602, label %then599, label %else601

then594:                                          ; preds = %merge586
  %printf595 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge593

else596:                                          ; preds = %merge586
  br label %merge593

merge598:                                         ; preds = %else601, %then599
  %a603 = load i32, i32* %a
  %tmp608 = icmp sgt i32 0, %a603
  br i1 %tmp608, label %then605, label %else607

then599:                                          ; preds = %merge593
  %printf600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge598

else601:                                          ; preds = %merge593
  br label %merge598

merge604:                                         ; preds = %else607, %then605
  %tmp609 = sub i32 %r_mat590, 1
  %tmp614 = icmp slt i32 %tmp609, %a603
  br i1 %tmp614, label %then611, label %else613

then605:                                          ; preds = %merge598
  %printf606 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge604

else607:                                          ; preds = %merge598
  br label %merge604

merge610:                                         ; preds = %else613, %then611
  br i1 false, label %then616, label %else618

then611:                                          ; preds = %merge604
  %printf612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge610

else613:                                          ; preds = %merge604
  br label %merge610

merge615:                                         ; preds = %else618, %then616
  %tmp619 = sub i32 %c_mat592, 1
  %tmp624 = icmp slt i32 %tmp619, 1
  br i1 %tmp624, label %then621, label %else623

then616:                                          ; preds = %merge610
  %printf617 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge615

else618:                                          ; preds = %merge610
  br label %merge615

merge620:                                         ; preds = %else623, %then621
  %b625 = load i32, i32* %b
  %tmp630 = icmp sgt i32 0, %b625
  br i1 %tmp630, label %then627, label %else629

then621:                                          ; preds = %merge615
  %printf622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge620

else623:                                          ; preds = %merge615
  br label %merge620

merge626:                                         ; preds = %else629, %then627
  %tmp631 = sub i32 %c_mat592, 1
  %tmp636 = icmp slt i32 %tmp631, %b625
  br i1 %tmp636, label %then633, label %else635

then627:                                          ; preds = %merge620
  %printf628 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge626

else629:                                          ; preds = %merge620
  br label %merge626

merge632:                                         ; preds = %else635, %then633
  %tmp637 = sub i32 %a603, 1
  %tmp638 = add i32 %tmp637, 1
  %m_r639 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat640 = load i32, i32* %m_r639
  %tmp645 = icmp ne i32 %tmp638, %r_mat640
  br i1 %tmp645, label %then642, label %else644

then633:                                          ; preds = %merge626
  %printf634 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge632

else635:                                          ; preds = %merge626
  br label %merge632

merge641:                                         ; preds = %else644, %then642
  %tmp646 = sub i32 %b625, 1
  %tmp647 = add i32 %tmp646, 1
  %m_r648 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %r_mat649 = load i32, i32* %m_r648
  %tmp654 = icmp ne i32 %tmp647, %r_mat649
  br i1 %tmp654, label %then651, label %else653

then642:                                          ; preds = %merge632
  %printf643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge641

else644:                                          ; preds = %merge632
  br label %merge641

merge650:                                         ; preds = %else653, %then651
  %m_mat655 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat656 = load double*, double** %m_mat655
  %m_r657 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat658 = load i32, i32* %m_r657
  %m_c659 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat660 = load i32, i32* %m_c659
  %m_mat661 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_v662 = load double*, double** %m_mat661
  %m_r663 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_v664 = load i32, i32* %m_r663
  %m_c665 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_v666 = load i32, i32* %m_c665
  %i667 = alloca i32
  store i32 1, i32* %i667
  br label %while668

then651:                                          ; preds = %merge641
  %printf652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge650

else653:                                          ; preds = %merge641
  br label %merge650

while668:                                         ; preds = %merge690, %merge650
  %i_v696 = load i32, i32* %i667
  %bool_val697 = icmp sle i32 %i_v696, %a603
  br i1 %bool_val697, label %while_body669, label %merge695

while_body669:                                    ; preds = %while668
  %j670 = alloca i32
  store i32 1, i32* %j670
  br label %while671

while671:                                         ; preds = %while_body672, %while_body669
  %j_v691 = load i32, i32* %j670
  %bool_val692 = icmp sle i32 %j_v691, %b625
  br i1 %bool_val692, label %while_body672, label %merge690

while_body672:                                    ; preds = %while671
  %j_v673 = load i32, i32* %j670
  %i_v674 = load i32, i32* %i667
  %tmp675 = mul i32 %c_mat660, %i_v674
  %index676 = add i32 %j_v673, %tmp675
  %element_ptr677 = getelementptr double, double* %mat_mat656, i32 %index676
  %j_v678 = load i32, i32* %j670
  %tmp679 = sub i32 %j_v678, 1
  %tmp680 = add i32 %tmp679, 0
  %i_v681 = load i32, i32* %i667
  %tmp682 = sub i32 %i_v681, 1
  %tmp683 = add i32 %tmp682, 0
  %tmp684 = mul i32 %c_v666, %tmp683
  %index685 = add i32 %tmp680, %tmp684
  %element_ptr686 = getelementptr double, double* %mat_v662, i32 %index685
  %tmp_element687 = load double, double* %element_ptr686
  store double %tmp_element687, double* %element_ptr677
  %j_v688 = load i32, i32* %j670
  %tmp689 = add i32 %j_v688, 1
  store i32 %tmp689, i32* %j670
  br label %while671

merge690:                                         ; preds = %while671
  %i_v693 = load i32, i32* %i667
  %tmp694 = add i32 %i_v693, 1
  store i32 %tmp694, i32* %i667
  br label %while668

merge695:                                         ; preds = %while668
  %i698 = alloca i32
  %tmp699 = load i32, i32* %i698
  store i32 0, i32* %i698
  %j700 = alloca i32
  %tmp701 = load i32, i32* %j700
  store i32 0, i32* %j700
  %i702 = load i32, i32* %i698
  %a703 = load i32, i32* %a
  %tmp704 = icmp slt i32 %i702, %a703
  %tmp705 = load i32, i32* %i698
  store i32 0, i32* %i698
  br label %while706

while706:                                         ; preds = %merge908, %merge695
  %i916 = load i32, i32* %i698
  %a917 = load i32, i32* %a
  %tmp918 = icmp slt i32 %i916, %a917
  br i1 %tmp918, label %while_body707, label %merge915

while_body707:                                    ; preds = %while706
  %j708 = load i32, i32* %j700
  %b709 = load i32, i32* %b
  %tmp710 = icmp slt i32 %j708, %b709
  %tmp711 = load i32, i32* %j700
  store i32 0, i32* %j700
  br label %while712

while712:                                         ; preds = %merge896, %while_body707
  %j909 = load i32, i32* %j700
  %b910 = load i32, i32* %b
  %tmp911 = icmp slt i32 %j909, %b910
  br i1 %tmp911, label %while_body713, label %merge908

while_body713:                                    ; preds = %while712
  %k = alloca double
  %tmp714 = load double, double* %k
  store double 0.000000e+00, double* %k
  %m_r715 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat716 = load i32, i32* %m_r715
  %m_c717 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat718 = load i32, i32* %m_c717
  %i719 = load i32, i32* %i698
  %tmp724 = icmp sgt i32 0, %i719
  br i1 %tmp724, label %then721, label %else723

merge720:                                         ; preds = %else723, %then721
  %tmp725 = sub i32 %r_mat716, 1
  %tmp730 = icmp slt i32 %tmp725, %i719
  br i1 %tmp730, label %then727, label %else729

then721:                                          ; preds = %while_body713
  %printf722 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge720

else723:                                          ; preds = %while_body713
  br label %merge720

merge726:                                         ; preds = %else729, %then727
  %i731 = load i32, i32* %i698
  %tmp732 = add i32 %i731, 2
  %tmp737 = icmp sgt i32 0, %tmp732
  br i1 %tmp737, label %then734, label %else736

then727:                                          ; preds = %merge720
  %printf728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge726

else729:                                          ; preds = %merge720
  br label %merge726

merge733:                                         ; preds = %else736, %then734
  %tmp738 = sub i32 %r_mat716, 1
  %tmp743 = icmp slt i32 %tmp738, %tmp732
  br i1 %tmp743, label %then740, label %else742

then734:                                          ; preds = %merge726
  %printf735 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge733

else736:                                          ; preds = %merge726
  br label %merge733

merge739:                                         ; preds = %else742, %then740
  %j744 = load i32, i32* %j700
  %tmp749 = icmp sgt i32 0, %j744
  br i1 %tmp749, label %then746, label %else748

then740:                                          ; preds = %merge733
  %printf741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge739

else742:                                          ; preds = %merge733
  br label %merge739

merge745:                                         ; preds = %else748, %then746
  %tmp750 = sub i32 %c_mat718, 1
  %tmp755 = icmp slt i32 %tmp750, %j744
  br i1 %tmp755, label %then752, label %else754

then746:                                          ; preds = %merge739
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge739
  br label %merge745

merge751:                                         ; preds = %else754, %then752
  %j756 = load i32, i32* %j700
  %tmp757 = add i32 %j756, 2
  %tmp762 = icmp sgt i32 0, %tmp757
  br i1 %tmp762, label %then759, label %else761

then752:                                          ; preds = %merge745
  %printf753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge751

else754:                                          ; preds = %merge745
  br label %merge751

merge758:                                         ; preds = %else761, %then759
  %tmp763 = sub i32 %c_mat718, 1
  %tmp768 = icmp slt i32 %tmp763, %tmp757
  br i1 %tmp768, label %then765, label %else767

then759:                                          ; preds = %merge751
  %printf760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge758

else761:                                          ; preds = %merge751
  br label %merge758

merge764:                                         ; preds = %else767, %then765
  %tmp769 = sub i32 %tmp732, %i719
  %tmp770 = sub i32 %tmp757, %j744
  %tmp771 = add i32 %tmp770, 1
  %tmp772 = add i32 %tmp769, 1
  %size773 = mul i32 %tmp772, %tmp771
  %system_mat774 = alloca double, i32 %size773
  %m775 = alloca %matrix_t
  %m_mat776 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  store double* %system_mat774, double** %m_mat776
  %m_r777 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  store i32 %tmp772, i32* %m_r777
  %m_c778 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  store i32 %tmp771, i32* %m_c778
  %tmp779 = sub i32 %tmp772, 1
  %tmp780 = sub i32 %tmp771, 1
  %i781 = alloca i32
  store i32 0, i32* %i781
  br label %while782

then765:                                          ; preds = %merge758
  %printf766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge764

else767:                                          ; preds = %merge758
  br label %merge764

while782:                                         ; preds = %merge794, %merge764
  %i_v800 = load i32, i32* %i781
  %bool_val801 = icmp sle i32 %i_v800, %tmp779
  br i1 %bool_val801, label %while_body783, label %merge799

while_body783:                                    ; preds = %while782
  %j784 = alloca i32
  store i32 0, i32* %j784
  br label %while785

while785:                                         ; preds = %while_body786, %while_body783
  %j_v795 = load i32, i32* %j784
  %bool_val796 = icmp sle i32 %j_v795, %tmp780
  br i1 %bool_val796, label %while_body786, label %merge794

while_body786:                                    ; preds = %while785
  %j_v787 = load i32, i32* %j784
  %i_v788 = load i32, i32* %i781
  %tmp789 = mul i32 %tmp771, %i_v788
  %index790 = add i32 %j_v787, %tmp789
  %element_ptr791 = getelementptr double, double* %system_mat774, i32 %index790
  store double 0.000000e+00, double* %element_ptr791
  %j_v792 = load i32, i32* %j784
  %tmp793 = add i32 %j_v792, 1
  store i32 %tmp793, i32* %j784
  br label %while785

merge794:                                         ; preds = %while785
  %i_v797 = load i32, i32* %i781
  %tmp798 = add i32 %i_v797, 1
  store i32 %tmp798, i32* %i781
  br label %while782

merge799:                                         ; preds = %while782
  %m_mat802 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  %mat_mat803 = load double*, double** %m_mat802
  %m_r804 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  %r_mat805 = load i32, i32* %m_r804
  %m_c806 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  %c_mat807 = load i32, i32* %m_c806
  %m_mat808 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_v809 = load double*, double** %m_mat808
  %m_r810 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_v811 = load i32, i32* %m_r810
  %m_c812 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_v813 = load i32, i32* %m_c812
  %i814 = alloca i32
  store i32 0, i32* %i814
  br label %while815

while815:                                         ; preds = %merge837, %merge799
  %i_v843 = load i32, i32* %i814
  %bool_val844 = icmp sle i32 %i_v843, %tmp769
  br i1 %bool_val844, label %while_body816, label %merge842

while_body816:                                    ; preds = %while815
  %j817 = alloca i32
  store i32 0, i32* %j817
  br label %while818

while818:                                         ; preds = %while_body819, %while_body816
  %j_v838 = load i32, i32* %j817
  %bool_val839 = icmp sle i32 %j_v838, %tmp770
  br i1 %bool_val839, label %while_body819, label %merge837

while_body819:                                    ; preds = %while818
  %j_v820 = load i32, i32* %j817
  %i_v821 = load i32, i32* %i814
  %tmp822 = mul i32 %c_mat807, %i_v821
  %index823 = add i32 %j_v820, %tmp822
  %element_ptr824 = getelementptr double, double* %mat_mat803, i32 %index823
  %j_v825 = load i32, i32* %j817
  %tmp826 = sub i32 %j_v825, 0
  %tmp827 = add i32 %tmp826, %j744
  %i_v828 = load i32, i32* %i814
  %tmp829 = sub i32 %i_v828, 0
  %tmp830 = add i32 %tmp829, %i719
  %tmp831 = mul i32 %c_v813, %tmp830
  %index832 = add i32 %tmp827, %tmp831
  %element_ptr833 = getelementptr double, double* %mat_v809, i32 %index832
  %tmp_element834 = load double, double* %element_ptr833
  store double %tmp_element834, double* %element_ptr824
  %j_v835 = load i32, i32* %j817
  %tmp836 = add i32 %j_v835, 1
  store i32 %tmp836, i32* %j817
  br label %while818

merge837:                                         ; preds = %while818
  %i_v840 = load i32, i32* %i814
  %tmp841 = add i32 %i_v840, 1
  store i32 %tmp841, i32* %i814
  br label %while815

merge842:                                         ; preds = %while815
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m775, %matrix_t* %m61)
  %v_ptr845 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v846 = load double, double* %v_ptr845
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp847 = load double, double* %k
  store double %v846, double* %k
  %k848 = load double, double* %k
  %m_r849 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat850 = load i32, i32* %m_r849
  %m_c851 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat852 = load i32, i32* %m_c851
  %i853 = load i32, i32* %i698
  %tmp858 = icmp sgt i32 0, %i853
  br i1 %tmp858, label %then855, label %else857

merge854:                                         ; preds = %else857, %then855
  %tmp859 = sub i32 %r_mat850, 1
  %tmp864 = icmp slt i32 %tmp859, %i853
  br i1 %tmp864, label %then861, label %else863

then855:                                          ; preds = %merge842
  %printf856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge854

else857:                                          ; preds = %merge842
  br label %merge854

merge860:                                         ; preds = %else863, %then861
  %i865 = load i32, i32* %i698
  %tmp870 = icmp sgt i32 0, %i865
  br i1 %tmp870, label %then867, label %else869

then861:                                          ; preds = %merge854
  %printf862 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge860

else863:                                          ; preds = %merge854
  br label %merge860

merge866:                                         ; preds = %else869, %then867
  %tmp871 = sub i32 %r_mat850, 1
  %tmp876 = icmp slt i32 %tmp871, %i865
  br i1 %tmp876, label %then873, label %else875

then867:                                          ; preds = %merge860
  %printf868 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge866

else869:                                          ; preds = %merge860
  br label %merge866

merge872:                                         ; preds = %else875, %then873
  %j877 = load i32, i32* %j700
  %tmp882 = icmp sgt i32 0, %j877
  br i1 %tmp882, label %then879, label %else881

then873:                                          ; preds = %merge866
  %printf874 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge872

else875:                                          ; preds = %merge866
  br label %merge872

merge878:                                         ; preds = %else881, %then879
  %tmp883 = sub i32 %c_mat852, 1
  %tmp888 = icmp slt i32 %tmp883, %j877
  br i1 %tmp888, label %then885, label %else887

then879:                                          ; preds = %merge872
  %printf880 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge878

else881:                                          ; preds = %merge872
  br label %merge878

merge884:                                         ; preds = %else887, %then885
  %j889 = load i32, i32* %j700
  %tmp894 = icmp sgt i32 0, %j889
  br i1 %tmp894, label %then891, label %else893

then885:                                          ; preds = %merge878
  %printf886 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge884

else887:                                          ; preds = %merge878
  br label %merge884

merge890:                                         ; preds = %else893, %then891
  %tmp895 = sub i32 %c_mat852, 1
  %tmp900 = icmp slt i32 %tmp895, %j889
  br i1 %tmp900, label %then897, label %else899

then891:                                          ; preds = %merge884
  %printf892 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge890

else893:                                          ; preds = %merge884
  br label %merge890

merge896:                                         ; preds = %else899, %then897
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat901 = load double*, double** %mat
  %tmp902 = mul i32 %c_mat852, %i853
  %index903 = add i32 %j877, %tmp902
  %element_ptr904 = getelementptr double, double* %mat901, i32 %index903
  store double %k848, double* %element_ptr904
  %j905 = load i32, i32* %j700
  %tmp906 = add i32 %j905, 1
  %tmp907 = load i32, i32* %j700
  store i32 %tmp906, i32* %j700
  br label %while712

then897:                                          ; preds = %merge890
  %printf898 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge896

else899:                                          ; preds = %merge890
  br label %merge896

merge908:                                         ; preds = %while712
  %i912 = load i32, i32* %i698
  %tmp913 = add i32 %i912, 1
  %tmp914 = load i32, i32* %i698
  store i32 %tmp913, i32* %i698
  br label %while706

merge915:                                         ; preds = %while706
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r919 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat920 = load i32, i32* %m_r919
  %m_c921 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat922 = load i32, i32* %m_c921
  %size923 = mul i32 %r_mat920, %c_mat922
  %mallocsize = mul i32 %size923, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall924 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat925 = bitcast i8* %malloccall924 to double*
  %malloccall926 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m927 = bitcast i8* %malloccall926 to %matrix_t*
  %m_mat928 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  store double* %system_mat925, double** %m_mat928
  %m_r929 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  store i32 %r_mat920, i32* %m_r929
  %m_c930 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  store i32 %c_mat922, i32* %m_c930
  %tmp931 = sub i32 %r_mat920, 1
  %tmp932 = sub i32 %c_mat922, 1
  %i933 = alloca i32
  store i32 0, i32* %i933
  br label %while934

while934:                                         ; preds = %merge946, %merge915
  %i_v952 = load i32, i32* %i933
  %bool_val953 = icmp sle i32 %i_v952, %tmp931
  br i1 %bool_val953, label %while_body935, label %merge951

while_body935:                                    ; preds = %while934
  %j936 = alloca i32
  store i32 0, i32* %j936
  br label %while937

while937:                                         ; preds = %while_body938, %while_body935
  %j_v947 = load i32, i32* %j936
  %bool_val948 = icmp sle i32 %j_v947, %tmp932
  br i1 %bool_val948, label %while_body938, label %merge946

while_body938:                                    ; preds = %while937
  %j_v939 = load i32, i32* %j936
  %i_v940 = load i32, i32* %i933
  %tmp941 = mul i32 %c_mat922, %i_v940
  %index942 = add i32 %j_v939, %tmp941
  %element_ptr943 = getelementptr double, double* %system_mat925, i32 %index942
  store double 0.000000e+00, double* %element_ptr943
  %j_v944 = load i32, i32* %j936
  %tmp945 = add i32 %j_v944, 1
  store i32 %tmp945, i32* %j936
  br label %while937

merge946:                                         ; preds = %while937
  %i_v949 = load i32, i32* %i933
  %tmp950 = add i32 %i_v949, 1
  store i32 %tmp950, i32* %i933
  br label %while934

merge951:                                         ; preds = %while934
  %tmp954 = sub i32 %c_mat922, 1
  %tmp955 = sub i32 %r_mat920, 1
  %m_mat956 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  %mat_mat957 = load double*, double** %m_mat956
  %m_r958 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  %r_mat959 = load i32, i32* %m_r958
  %m_c960 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  %c_mat961 = load i32, i32* %m_c960
  %m_mat962 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_v963 = load double*, double** %m_mat962
  %m_r964 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_v965 = load i32, i32* %m_r964
  %m_c966 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_v967 = load i32, i32* %m_c966
  %i968 = alloca i32
  store i32 0, i32* %i968
  br label %while969

while969:                                         ; preds = %merge991, %merge951
  %i_v997 = load i32, i32* %i968
  %bool_val998 = icmp sle i32 %i_v997, %tmp955
  br i1 %bool_val998, label %while_body970, label %merge996

while_body970:                                    ; preds = %while969
  %j971 = alloca i32
  store i32 0, i32* %j971
  br label %while972

while972:                                         ; preds = %while_body973, %while_body970
  %j_v992 = load i32, i32* %j971
  %bool_val993 = icmp sle i32 %j_v992, %tmp954
  br i1 %bool_val993, label %while_body973, label %merge991

while_body973:                                    ; preds = %while972
  %j_v974 = load i32, i32* %j971
  %i_v975 = load i32, i32* %i968
  %tmp976 = mul i32 %c_mat961, %i_v975
  %index977 = add i32 %j_v974, %tmp976
  %element_ptr978 = getelementptr double, double* %mat_mat957, i32 %index977
  %j_v979 = load i32, i32* %j971
  %tmp980 = sub i32 %j_v979, 0
  %tmp981 = add i32 %tmp980, 0
  %i_v982 = load i32, i32* %i968
  %tmp983 = sub i32 %i_v982, 0
  %tmp984 = add i32 %tmp983, 0
  %tmp985 = mul i32 %c_v967, %tmp984
  %index986 = add i32 %tmp981, %tmp985
  %element_ptr987 = getelementptr double, double* %mat_v963, i32 %index986
  %tmp_element988 = load double, double* %element_ptr987
  store double %tmp_element988, double* %element_ptr978
  %j_v989 = load i32, i32* %j971
  %tmp990 = add i32 %j_v989, 1
  store i32 %tmp990, i32* %j971
  br label %while972

merge991:                                         ; preds = %while972
  %i_v994 = load i32, i32* %i968
  %tmp995 = add i32 %i_v994, 1
  store i32 %tmp995, i32* %i968
  br label %while969

merge996:                                         ; preds = %while969
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m927, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp999 = alloca %return_t.0
  ret %return_t.0* %tmp999
}

define %return_t.1* @f(i8*, %matrix_t*, %matrix_t*, %matrix_t*, double) {
entry:
  %name = alloca i8*
  store i8* %0, i8** %name
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %m_r133 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 1
  %r_mat134 = load i32, i32* %m_r133
  %m_c135 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 2
  %c_mat136 = load i32, i32* %m_c135
  %size137 = mul i32 %r_mat134, %c_mat136
  %system_mat138 = alloca double, i32 %size137
  %m139 = alloca %matrix_t
  %m_mat140 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  store double* %system_mat138, double** %m_mat140
  %m_r141 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  store i32 %r_mat134, i32* %m_r141
  %m_c142 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  store i32 %c_mat136, i32* %m_c142
  %tmp143 = sub i32 %r_mat134, 1
  %tmp144 = sub i32 %c_mat136, 1
  %i145 = alloca i32
  store i32 0, i32* %i145
  br label %while146

while146:                                         ; preds = %merge158, %merge130
  %i_v164 = load i32, i32* %i145
  %bool_val165 = icmp sle i32 %i_v164, %tmp143
  br i1 %bool_val165, label %while_body147, label %merge163

while_body147:                                    ; preds = %while146
  %j148 = alloca i32
  store i32 0, i32* %j148
  br label %while149

while149:                                         ; preds = %while_body150, %while_body147
  %j_v159 = load i32, i32* %j148
  %bool_val160 = icmp sle i32 %j_v159, %tmp144
  br i1 %bool_val160, label %while_body150, label %merge158

while_body150:                                    ; preds = %while149
  %j_v151 = load i32, i32* %j148
  %i_v152 = load i32, i32* %i145
  %tmp153 = mul i32 %c_mat136, %i_v152
  %index154 = add i32 %j_v151, %tmp153
  %element_ptr155 = getelementptr double, double* %system_mat138, i32 %index154
  store double 0.000000e+00, double* %element_ptr155
  %j_v156 = load i32, i32* %j148
  %tmp157 = add i32 %j_v156, 1
  store i32 %tmp157, i32* %j148
  br label %while149

merge158:                                         ; preds = %while149
  %i_v161 = load i32, i32* %i145
  %tmp162 = add i32 %i_v161, 1
  store i32 %tmp162, i32* %i145
  br label %while146

merge163:                                         ; preds = %while146
  %tmp166 = sub i32 %c_mat136, 1
  %tmp167 = sub i32 %r_mat134, 1
  %m_mat168 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_mat169 = load double*, double** %m_mat168
  %m_r170 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat171 = load i32, i32* %m_r170
  %m_c172 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat173 = load i32, i32* %m_c172
  %m_mat174 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 0
  %mat_v175 = load double*, double** %m_mat174
  %m_r176 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 1
  %r_v177 = load i32, i32* %m_r176
  %m_c178 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 2
  %c_v179 = load i32, i32* %m_c178
  %i180 = alloca i32
  store i32 0, i32* %i180
  br label %while181

while181:                                         ; preds = %merge203, %merge163
  %i_v209 = load i32, i32* %i180
  %bool_val210 = icmp sle i32 %i_v209, %tmp167
  br i1 %bool_val210, label %while_body182, label %merge208

while_body182:                                    ; preds = %while181
  %j183 = alloca i32
  store i32 0, i32* %j183
  br label %while184

while184:                                         ; preds = %while_body185, %while_body182
  %j_v204 = load i32, i32* %j183
  %bool_val205 = icmp sle i32 %j_v204, %tmp166
  br i1 %bool_val205, label %while_body185, label %merge203

while_body185:                                    ; preds = %while184
  %j_v186 = load i32, i32* %j183
  %i_v187 = load i32, i32* %i180
  %tmp188 = mul i32 %c_mat173, %i_v187
  %index189 = add i32 %j_v186, %tmp188
  %element_ptr190 = getelementptr double, double* %mat_mat169, i32 %index189
  %j_v191 = load i32, i32* %j183
  %tmp192 = sub i32 %j_v191, 0
  %tmp193 = add i32 %tmp192, 0
  %i_v194 = load i32, i32* %i180
  %tmp195 = sub i32 %i_v194, 0
  %tmp196 = add i32 %tmp195, 0
  %tmp197 = mul i32 %c_v179, %tmp196
  %index198 = add i32 %tmp193, %tmp197
  %element_ptr199 = getelementptr double, double* %mat_v175, i32 %index198
  %tmp_element200 = load double, double* %element_ptr199
  store double %tmp_element200, double* %element_ptr190
  %j_v201 = load i32, i32* %j183
  %tmp202 = add i32 %j_v201, 1
  store i32 %tmp202, i32* %j183
  br label %while184

merge203:                                         ; preds = %while184
  %i_v206 = load i32, i32* %i180
  %tmp207 = add i32 %i_v206, 1
  store i32 %tmp207, i32* %i180
  br label %while181

merge208:                                         ; preds = %while181
  %d = alloca double
  store double %4, double* %d
  %name211 = load i8*, i8** %name
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* %name211)
  %printf212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @system_string.9, i32 0, i32 0))
  %printf213 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_r214 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat215 = load i32, i32* %m_r214
  %m_r216 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat217 = load i32, i32* %m_r216
  %tmp229 = icmp ne i32 %r_mat215, %r_mat217
  br i1 %tmp229, label %then, label %else

merge218:                                         ; preds = %merge224, %then
  %m_mat230 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat231 = load double*, double** %m_mat230
  %m_r232 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat233 = load i32, i32* %m_r232
  %tmp234 = sub i32 %r_mat233, 1
  %m_c235 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat236 = load i32, i32* %m_c235
  %tmp237 = sub i32 %c_mat236, 1
  %m_mat238 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_v239 = load double*, double** %m_mat238
  %size240 = mul i32 %r_mat233, %c_mat236
  %system_mat241 = alloca double, i32 %size240
  %m242 = alloca %matrix_t
  %m_mat243 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 0
  store double* %system_mat241, double** %m_mat243
  %m_r244 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 1
  store i32 %r_mat233, i32* %m_r244
  %m_c245 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 2
  store i32 %c_mat236, i32* %m_c245
  %tmp246 = sub i32 %r_mat233, 1
  %tmp247 = sub i32 %c_mat236, 1
  %i248 = alloca i32
  store i32 0, i32* %i248
  br label %while249

then:                                             ; preds = %merge208
  %printf219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge218

else:                                             ; preds = %merge208
  %m_c220 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat221 = load i32, i32* %m_c220
  %m_c222 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat223 = load i32, i32* %m_c222
  %tmp228 = icmp ne i32 %c_mat221, %c_mat223
  br i1 %tmp228, label %then225, label %else227

merge224:                                         ; preds = %else227, %then225
  br label %merge218

then225:                                          ; preds = %else
  %printf226 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge224

else227:                                          ; preds = %else
  br label %merge224

while249:                                         ; preds = %merge261, %merge218
  %i_v267 = load i32, i32* %i248
  %bool_val268 = icmp sle i32 %i_v267, %tmp246
  br i1 %bool_val268, label %while_body250, label %merge266

while_body250:                                    ; preds = %while249
  %j251 = alloca i32
  store i32 0, i32* %j251
  br label %while252

while252:                                         ; preds = %while_body253, %while_body250
  %j_v262 = load i32, i32* %j251
  %bool_val263 = icmp sle i32 %j_v262, %tmp247
  br i1 %bool_val263, label %while_body253, label %merge261

while_body253:                                    ; preds = %while252
  %j_v254 = load i32, i32* %j251
  %i_v255 = load i32, i32* %i248
  %tmp256 = mul i32 %c_mat236, %i_v255
  %index257 = add i32 %j_v254, %tmp256
  %element_ptr258 = getelementptr double, double* %system_mat241, i32 %index257
  store double 0.000000e+00, double* %element_ptr258
  %j_v259 = load i32, i32* %j251
  %tmp260 = add i32 %j_v259, 1
  store i32 %tmp260, i32* %j251
  br label %while252

merge261:                                         ; preds = %while252
  %i_v264 = load i32, i32* %i248
  %tmp265 = add i32 %i_v264, 1
  store i32 %tmp265, i32* %i248
  br label %while249

merge266:                                         ; preds = %while249
  %m_mat269 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 0
  %mat_mat270 = load double*, double** %m_mat269
  %i271 = alloca i32
  store i32 0, i32* %i271
  br label %while272

while272:                                         ; preds = %merge297, %merge266
  %i_v303 = load i32, i32* %i271
  %bool_val304 = icmp sle i32 %i_v303, %tmp234
  br i1 %bool_val304, label %while_body273, label %merge302

while_body273:                                    ; preds = %while272
  %j274 = alloca i32
  store i32 0, i32* %j274
  br label %while275

while275:                                         ; preds = %while_body276, %while_body273
  %j_v298 = load i32, i32* %j274
  %bool_val299 = icmp sle i32 %j_v298, %tmp237
  br i1 %bool_val299, label %while_body276, label %merge297

while_body276:                                    ; preds = %while275
  %j_v277 = load i32, i32* %j274
  %i_v278 = load i32, i32* %i271
  %tmp279 = mul i32 %c_mat236, %i_v278
  %index280 = add i32 %j_v277, %tmp279
  %element_ptr281 = getelementptr double, double* %mat_mat231, i32 %index280
  %tmp_element282 = load double, double* %element_ptr281
  %j_v283 = load i32, i32* %j274
  %i_v284 = load i32, i32* %i271
  %tmp285 = mul i32 %c_mat236, %i_v284
  %index286 = add i32 %j_v283, %tmp285
  %element_ptr287 = getelementptr double, double* %mat_v239, i32 %index286
  %tmp_element288 = load double, double* %element_ptr287
  %j_v289 = load i32, i32* %j274
  %i_v290 = load i32, i32* %i271
  %tmp291 = mul i32 %c_mat236, %i_v290
  %index292 = add i32 %j_v289, %tmp291
  %element_ptr293 = getelementptr double, double* %mat_mat270, i32 %index292
  %tmp_element294 = fadd double %tmp_element282, %tmp_element288
  store double %tmp_element294, double* %element_ptr293
  %j_v295 = load i32, i32* %j274
  %tmp296 = add i32 %j_v295, 1
  store i32 %tmp296, i32* %j274
  br label %while275

merge297:                                         ; preds = %while275
  %i_v300 = load i32, i32* %i271
  %tmp301 = add i32 %i_v300, 1
  store i32 %tmp301, i32* %i271
  br label %while272

merge302:                                         ; preds = %while272
  %m_c305 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 2
  %c_mat306 = load i32, i32* %m_c305
  %m_r307 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat308 = load i32, i32* %m_r307
  %tmp313 = icmp ne i32 %c_mat306, %r_mat308
  br i1 %tmp313, label %then310, label %else312

merge309:                                         ; preds = %else312, %then310
  %m_mat314 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 0
  %mat_mat315 = load double*, double** %m_mat314
  %m_mat316 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_v317 = load double*, double** %m_mat316
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 1
  %r_mat319 = load i32, i32* %m_r318
  %tmp320 = sub i32 %r_mat319, 1
  %m_c321 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat322 = load i32, i32* %m_c321
  %tmp323 = sub i32 %c_mat322, 1
  %m_l = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 2
  %l_mat = load i32, i32* %m_l
  %tmp324 = sub i32 %l_mat, 1
  %size325 = mul i32 %r_mat319, %c_mat322
  %system_mat326 = alloca double, i32 %size325
  %m327 = alloca %matrix_t
  %m_mat328 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  store double* %system_mat326, double** %m_mat328
  %m_r329 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  store i32 %r_mat319, i32* %m_r329
  %m_c330 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  store i32 %c_mat322, i32* %m_c330
  %tmp331 = sub i32 %r_mat319, 1
  %tmp332 = sub i32 %c_mat322, 1
  %i333 = alloca i32
  store i32 0, i32* %i333
  br label %while334

then310:                                          ; preds = %merge302
  %printf311 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge309

else312:                                          ; preds = %merge302
  br label %merge309

while334:                                         ; preds = %merge346, %merge309
  %i_v352 = load i32, i32* %i333
  %bool_val353 = icmp sle i32 %i_v352, %tmp331
  br i1 %bool_val353, label %while_body335, label %merge351

while_body335:                                    ; preds = %while334
  %j336 = alloca i32
  store i32 0, i32* %j336
  br label %while337

while337:                                         ; preds = %while_body338, %while_body335
  %j_v347 = load i32, i32* %j336
  %bool_val348 = icmp sle i32 %j_v347, %tmp332
  br i1 %bool_val348, label %while_body338, label %merge346

while_body338:                                    ; preds = %while337
  %j_v339 = load i32, i32* %j336
  %i_v340 = load i32, i32* %i333
  %tmp341 = mul i32 %c_mat322, %i_v340
  %index342 = add i32 %j_v339, %tmp341
  %element_ptr343 = getelementptr double, double* %system_mat326, i32 %index342
  store double 0.000000e+00, double* %element_ptr343
  %j_v344 = load i32, i32* %j336
  %tmp345 = add i32 %j_v344, 1
  store i32 %tmp345, i32* %j336
  br label %while337

merge346:                                         ; preds = %while337
  %i_v349 = load i32, i32* %i333
  %tmp350 = add i32 %i_v349, 1
  store i32 %tmp350, i32* %i333
  br label %while334

merge351:                                         ; preds = %while334
  %m_mat354 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat355 = load double*, double** %m_mat354
  %i356 = alloca i32
  store i32 0, i32* %i356
  br label %while357

while357:                                         ; preds = %merge392, %merge351
  %i_v398 = load i32, i32* %i356
  %bool_val399 = icmp sle i32 %i_v398, %tmp320
  br i1 %bool_val399, label %while_body358, label %merge397

while_body358:                                    ; preds = %while357
  %j359 = alloca i32
  store i32 0, i32* %j359
  br label %while360

while360:                                         ; preds = %merge386, %while_body358
  %j_v393 = load i32, i32* %j359
  %bool_val394 = icmp sle i32 %j_v393, %tmp323
  br i1 %bool_val394, label %while_body361, label %merge392

while_body361:                                    ; preds = %while360
  %j_v362 = load i32, i32* %j359
  %i_v363 = load i32, i32* %i356
  %tmp364 = mul i32 %c_mat322, %i_v363
  %index365 = add i32 %j_v362, %tmp364
  %element_ptr366 = getelementptr double, double* %mat_mat355, i32 %index365
  %tmp_element367 = alloca double
  store double 0.000000e+00, double* %tmp_element367
  %k = alloca i32
  store i32 0, i32* %k
  br label %while368

while368:                                         ; preds = %while_body369, %while_body361
  %k_v387 = load i32, i32* %k
  %bool_val388 = icmp sle i32 %k_v387, %tmp324
  br i1 %bool_val388, label %while_body369, label %merge386

while_body369:                                    ; preds = %while368
  %k_v = load i32, i32* %k
  %i_v370 = load i32, i32* %i356
  %tmp371 = mul i32 %l_mat, %i_v370
  %index372 = add i32 %k_v, %tmp371
  %element_ptr373 = getelementptr double, double* %mat_mat315, i32 %index372
  %tmp_element374 = load double, double* %element_ptr373
  %j_v375 = load i32, i32* %j359
  %k_v376 = load i32, i32* %k
  %tmp377 = mul i32 %c_mat322, %k_v376
  %index378 = add i32 %j_v375, %tmp377
  %element_ptr379 = getelementptr double, double* %mat_v317, i32 %index378
  %tmp_element380 = load double, double* %element_ptr379
  %tmp381 = load double, double* %tmp_element367
  %tmp382 = fmul double %tmp_element374, %tmp_element380
  %tmp383 = fadd double %tmp382, %tmp381
  store double %tmp383, double* %tmp_element367
  %k_v384 = load i32, i32* %k
  %tmp385 = add i32 %k_v384, 1
  store i32 %tmp385, i32* %k
  br label %while368

merge386:                                         ; preds = %while368
  %tmp389 = load double, double* %tmp_element367
  store double %tmp389, double* %element_ptr366
  %j_v390 = load i32, i32* %j359
  %tmp391 = add i32 %j_v390, 1
  store i32 %tmp391, i32* %j359
  br label %while360

merge392:                                         ; preds = %while360
  %i_v395 = load i32, i32* %i356
  %tmp396 = add i32 %i_v395, 1
  store i32 %tmp396, i32* %i356
  br label %while357

merge397:                                         ; preds = %while357
  %d400 = load double, double* %d
  %m_mat401 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat402 = load double*, double** %m_mat401
  %m_r403 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat404 = load i32, i32* %m_r403
  %tmp405 = sub i32 %r_mat404, 1
  %m_c406 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat407 = load i32, i32* %m_c406
  %tmp408 = sub i32 %c_mat407, 1
  %size409 = mul i32 %r_mat404, %c_mat407
  %system_mat410 = alloca double, i32 %size409
  %m411 = alloca %matrix_t
  %m_mat412 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 0
  store double* %system_mat410, double** %m_mat412
  %m_r413 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 1
  store i32 %r_mat404, i32* %m_r413
  %m_c414 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 2
  store i32 %c_mat407, i32* %m_c414
  %tmp415 = sub i32 %r_mat404, 1
  %tmp416 = sub i32 %c_mat407, 1
  %i417 = alloca i32
  store i32 0, i32* %i417
  br label %while418

while418:                                         ; preds = %merge430, %merge397
  %i_v436 = load i32, i32* %i417
  %bool_val437 = icmp sle i32 %i_v436, %tmp415
  br i1 %bool_val437, label %while_body419, label %merge435

while_body419:                                    ; preds = %while418
  %j420 = alloca i32
  store i32 0, i32* %j420
  br label %while421

while421:                                         ; preds = %while_body422, %while_body419
  %j_v431 = load i32, i32* %j420
  %bool_val432 = icmp sle i32 %j_v431, %tmp416
  br i1 %bool_val432, label %while_body422, label %merge430

while_body422:                                    ; preds = %while421
  %j_v423 = load i32, i32* %j420
  %i_v424 = load i32, i32* %i417
  %tmp425 = mul i32 %c_mat407, %i_v424
  %index426 = add i32 %j_v423, %tmp425
  %element_ptr427 = getelementptr double, double* %system_mat410, i32 %index426
  store double 0.000000e+00, double* %element_ptr427
  %j_v428 = load i32, i32* %j420
  %tmp429 = add i32 %j_v428, 1
  store i32 %tmp429, i32* %j420
  br label %while421

merge430:                                         ; preds = %while421
  %i_v433 = load i32, i32* %i417
  %tmp434 = add i32 %i_v433, 1
  store i32 %tmp434, i32* %i417
  br label %while418

merge435:                                         ; preds = %while418
  %m_mat438 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 0
  %mat_mat439 = load double*, double** %m_mat438
  %i440 = alloca i32
  store i32 0, i32* %i440
  br label %while441

while441:                                         ; preds = %merge460, %merge435
  %i_v466 = load i32, i32* %i440
  %bool_val467 = icmp sle i32 %i_v466, %tmp405
  br i1 %bool_val467, label %while_body442, label %merge465

while_body442:                                    ; preds = %while441
  %j443 = alloca i32
  store i32 0, i32* %j443
  br label %while444

while444:                                         ; preds = %while_body445, %while_body442
  %j_v461 = load i32, i32* %j443
  %bool_val462 = icmp sle i32 %j_v461, %tmp408
  br i1 %bool_val462, label %while_body445, label %merge460

while_body445:                                    ; preds = %while444
  %j_v446 = load i32, i32* %j443
  %i_v447 = load i32, i32* %i440
  %tmp448 = mul i32 %c_mat407, %i_v447
  %index449 = add i32 %j_v446, %tmp448
  %element_ptr450 = getelementptr double, double* %mat_mat402, i32 %index449
  %tmp_element451 = load double, double* %element_ptr450
  %j_v452 = load i32, i32* %j443
  %i_v453 = load i32, i32* %i440
  %tmp454 = mul i32 %c_mat407, %i_v453
  %index455 = add i32 %j_v452, %tmp454
  %element_ptr456 = getelementptr double, double* %mat_mat439, i32 %index455
  %tmp_element457 = fmul double %tmp_element451, %d400
  store double %tmp_element457, double* %element_ptr456
  %j_v458 = load i32, i32* %j443
  %tmp459 = add i32 %j_v458, 1
  store i32 %tmp459, i32* %j443
  br label %while444

merge460:                                         ; preds = %while444
  %i_v463 = load i32, i32* %i440
  %tmp464 = add i32 %i_v463, 1
  store i32 %tmp464, i32* %i440
  br label %while441

merge465:                                         ; preds = %while441
  %m_mat468 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 0
  %mat_mat469 = load double*, double** %m_mat468
  %m_r470 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 1
  %r_mat471 = load i32, i32* %m_r470
  %tmp472 = sub i32 %r_mat471, 1
  %m_c473 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 2
  %c_mat474 = load i32, i32* %m_c473
  %tmp475 = sub i32 %c_mat474, 1
  %size476 = mul i32 %r_mat471, %c_mat474
  %system_mat477 = alloca double, i32 %size476
  %m478 = alloca %matrix_t
  %m_mat479 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 0
  store double* %system_mat477, double** %m_mat479
  %m_r480 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 1
  store i32 %r_mat471, i32* %m_r480
  %m_c481 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 2
  store i32 %c_mat474, i32* %m_c481
  %tmp482 = sub i32 %r_mat471, 1
  %tmp483 = sub i32 %c_mat474, 1
  %i484 = alloca i32
  store i32 0, i32* %i484
  br label %while485

while485:                                         ; preds = %merge497, %merge465
  %i_v503 = load i32, i32* %i484
  %bool_val504 = icmp sle i32 %i_v503, %tmp482
  br i1 %bool_val504, label %while_body486, label %merge502

while_body486:                                    ; preds = %while485
  %j487 = alloca i32
  store i32 0, i32* %j487
  br label %while488

while488:                                         ; preds = %while_body489, %while_body486
  %j_v498 = load i32, i32* %j487
  %bool_val499 = icmp sle i32 %j_v498, %tmp483
  br i1 %bool_val499, label %while_body489, label %merge497

while_body489:                                    ; preds = %while488
  %j_v490 = load i32, i32* %j487
  %i_v491 = load i32, i32* %i484
  %tmp492 = mul i32 %c_mat474, %i_v491
  %index493 = add i32 %j_v490, %tmp492
  %element_ptr494 = getelementptr double, double* %system_mat477, i32 %index493
  store double 0.000000e+00, double* %element_ptr494
  %j_v495 = load i32, i32* %j487
  %tmp496 = add i32 %j_v495, 1
  store i32 %tmp496, i32* %j487
  br label %while488

merge497:                                         ; preds = %while488
  %i_v500 = load i32, i32* %i484
  %tmp501 = add i32 %i_v500, 1
  store i32 %tmp501, i32* %i484
  br label %while485

merge502:                                         ; preds = %while485
  %m_mat505 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 0
  %mat_mat506 = load double*, double** %m_mat505
  %i507 = alloca i32
  store i32 0, i32* %i507
  br label %while508

while508:                                         ; preds = %merge527, %merge502
  %i_v533 = load i32, i32* %i507
  %bool_val534 = icmp sle i32 %i_v533, %tmp472
  br i1 %bool_val534, label %while_body509, label %merge532

while_body509:                                    ; preds = %while508
  %j510 = alloca i32
  store i32 0, i32* %j510
  br label %while511

while511:                                         ; preds = %while_body512, %while_body509
  %j_v528 = load i32, i32* %j510
  %bool_val529 = icmp sle i32 %j_v528, %tmp475
  br i1 %bool_val529, label %while_body512, label %merge527

while_body512:                                    ; preds = %while511
  %j_v513 = load i32, i32* %j510
  %i_v514 = load i32, i32* %i507
  %tmp515 = mul i32 %c_mat474, %i_v514
  %index516 = add i32 %j_v513, %tmp515
  %element_ptr517 = getelementptr double, double* %mat_mat469, i32 %index516
  %tmp_element518 = load double, double* %element_ptr517
  %j_v519 = load i32, i32* %j510
  %i_v520 = load i32, i32* %i507
  %tmp521 = mul i32 %c_mat474, %i_v520
  %index522 = add i32 %j_v519, %tmp521
  %element_ptr523 = getelementptr double, double* %mat_mat506, i32 %index522
  %tmp_element524 = fmul double %tmp_element518, 5.000000e+00
  store double %tmp_element524, double* %element_ptr523
  %j_v525 = load i32, i32* %j510
  %tmp526 = add i32 %j_v525, 1
  store i32 %tmp526, i32* %j510
  br label %while511

merge527:                                         ; preds = %while511
  %i_v530 = load i32, i32* %i507
  %tmp531 = add i32 %i_v530, 1
  store i32 %tmp531, i32* %i507
  br label %while508

merge532:                                         ; preds = %while508
  %m_mat535 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 0
  %mat_mat536 = load double*, double** %m_mat535
  %m_r537 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 1
  %r_mat538 = load i32, i32* %m_r537
  %m_c539 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 2
  %c_mat540 = load i32, i32* %m_c539
  %tmp541 = sub i32 %r_mat538, 1
  %tmp542 = sub i32 %c_mat540, 1
  %i543 = alloca i32
  store i32 0, i32* %i543
  br label %while544

while544:                                         ; preds = %merge559, %merge532
  %i_v566 = load i32, i32* %i543
  %bool_val567 = icmp sle i32 %i_v566, %tmp541
  br i1 %bool_val567, label %while_body545, label %merge565

while_body545:                                    ; preds = %while544
  %j546 = alloca i32
  store i32 0, i32* %j546
  br label %while547

while547:                                         ; preds = %while_body548, %while_body545
  %j_v560 = load i32, i32* %j546
  %bool_val561 = icmp sle i32 %j_v560, %tmp542
  br i1 %bool_val561, label %while_body548, label %merge559

while_body548:                                    ; preds = %while547
  %j_v549 = load i32, i32* %j546
  %i_v550 = load i32, i32* %i543
  %tmp551 = mul i32 %c_mat540, %i_v550
  %index552 = add i32 %j_v549, %tmp551
  %element_ptr553 = getelementptr double, double* %mat_mat536, i32 %index552
  %tmp_element554 = load double, double* %element_ptr553
  %printf555 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element554)
  %printf556 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v557 = load i32, i32* %j546
  %tmp558 = add i32 %j_v557, 1
  store i32 %tmp558, i32* %j546
  br label %while547

merge559:                                         ; preds = %while547
  %printf562 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v563 = load i32, i32* %i543
  %tmp564 = add i32 %i_v563, 1
  store i32 %tmp564, i32* %i543
  br label %while544

merge565:                                         ; preds = %while544
  %printf568 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf569 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%return_t.1* getelementptr (%return_t.1, %return_t.1* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.1*
  %m_c570 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat571 = load i32, i32* %m_c570
  %m_r572 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat573 = load i32, i32* %m_r572
  %tmp578 = icmp ne i32 %c_mat571, %r_mat573
  br i1 %tmp578, label %then575, label %else577

merge574:                                         ; preds = %else577, %then575
  %m_mat579 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat580 = load double*, double** %m_mat579
  %m_mat581 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_v582 = load double*, double** %m_mat581
  %m_r583 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat584 = load i32, i32* %m_r583
  %tmp585 = sub i32 %r_mat584, 1
  %m_c586 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat587 = load i32, i32* %m_c586
  %tmp588 = sub i32 %c_mat587, 1
  %m_l589 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %l_mat590 = load i32, i32* %m_l589
  %tmp591 = sub i32 %l_mat590, 1
  %size592 = mul i32 %r_mat584, %c_mat587
  %system_mat593 = alloca double, i32 %size592
  %m594 = alloca %matrix_t
  %m_mat595 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 0
  store double* %system_mat593, double** %m_mat595
  %m_r596 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 1
  store i32 %r_mat584, i32* %m_r596
  %m_c597 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 2
  store i32 %c_mat587, i32* %m_c597
  %tmp598 = sub i32 %r_mat584, 1
  %tmp599 = sub i32 %c_mat587, 1
  %i600 = alloca i32
  store i32 0, i32* %i600
  br label %while601

then575:                                          ; preds = %merge565
  %printf576 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge574

else577:                                          ; preds = %merge565
  br label %merge574

while601:                                         ; preds = %merge613, %merge574
  %i_v619 = load i32, i32* %i600
  %bool_val620 = icmp sle i32 %i_v619, %tmp598
  br i1 %bool_val620, label %while_body602, label %merge618

while_body602:                                    ; preds = %while601
  %j603 = alloca i32
  store i32 0, i32* %j603
  br label %while604

while604:                                         ; preds = %while_body605, %while_body602
  %j_v614 = load i32, i32* %j603
  %bool_val615 = icmp sle i32 %j_v614, %tmp599
  br i1 %bool_val615, label %while_body605, label %merge613

while_body605:                                    ; preds = %while604
  %j_v606 = load i32, i32* %j603
  %i_v607 = load i32, i32* %i600
  %tmp608 = mul i32 %c_mat587, %i_v607
  %index609 = add i32 %j_v606, %tmp608
  %element_ptr610 = getelementptr double, double* %system_mat593, i32 %index609
  store double 0.000000e+00, double* %element_ptr610
  %j_v611 = load i32, i32* %j603
  %tmp612 = add i32 %j_v611, 1
  store i32 %tmp612, i32* %j603
  br label %while604

merge613:                                         ; preds = %while604
  %i_v616 = load i32, i32* %i600
  %tmp617 = add i32 %i_v616, 1
  store i32 %tmp617, i32* %i600
  br label %while601

merge618:                                         ; preds = %while601
  %m_mat621 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 0
  %mat_mat622 = load double*, double** %m_mat621
  %i623 = alloca i32
  store i32 0, i32* %i623
  br label %while624

while624:                                         ; preds = %merge661, %merge618
  %i_v667 = load i32, i32* %i623
  %bool_val668 = icmp sle i32 %i_v667, %tmp585
  br i1 %bool_val668, label %while_body625, label %merge666

while_body625:                                    ; preds = %while624
  %j626 = alloca i32
  store i32 0, i32* %j626
  br label %while627

while627:                                         ; preds = %merge655, %while_body625
  %j_v662 = load i32, i32* %j626
  %bool_val663 = icmp sle i32 %j_v662, %tmp588
  br i1 %bool_val663, label %while_body628, label %merge661

while_body628:                                    ; preds = %while627
  %j_v629 = load i32, i32* %j626
  %i_v630 = load i32, i32* %i623
  %tmp631 = mul i32 %c_mat587, %i_v630
  %index632 = add i32 %j_v629, %tmp631
  %element_ptr633 = getelementptr double, double* %mat_mat622, i32 %index632
  %tmp_element634 = alloca double
  store double 0.000000e+00, double* %tmp_element634
  %k635 = alloca i32
  store i32 0, i32* %k635
  br label %while636

while636:                                         ; preds = %while_body637, %while_body628
  %k_v656 = load i32, i32* %k635
  %bool_val657 = icmp sle i32 %k_v656, %tmp591
  br i1 %bool_val657, label %while_body637, label %merge655

while_body637:                                    ; preds = %while636
  %k_v638 = load i32, i32* %k635
  %i_v639 = load i32, i32* %i623
  %tmp640 = mul i32 %l_mat590, %i_v639
  %index641 = add i32 %k_v638, %tmp640
  %element_ptr642 = getelementptr double, double* %mat_mat580, i32 %index641
  %tmp_element643 = load double, double* %element_ptr642
  %j_v644 = load i32, i32* %j626
  %k_v645 = load i32, i32* %k635
  %tmp646 = mul i32 %c_mat587, %k_v645
  %index647 = add i32 %j_v644, %tmp646
  %element_ptr648 = getelementptr double, double* %mat_v582, i32 %index647
  %tmp_element649 = load double, double* %element_ptr648
  %tmp650 = load double, double* %tmp_element634
  %tmp651 = fmul double %tmp_element643, %tmp_element649
  %tmp652 = fadd double %tmp651, %tmp650
  store double %tmp652, double* %tmp_element634
  %k_v653 = load i32, i32* %k635
  %tmp654 = add i32 %k_v653, 1
  store i32 %tmp654, i32* %k635
  br label %while636

merge655:                                         ; preds = %while636
  %tmp658 = load double, double* %tmp_element634
  store double %tmp658, double* %element_ptr633
  %j_v659 = load i32, i32* %j626
  %tmp660 = add i32 %j_v659, 1
  store i32 %tmp660, i32* %j626
  br label %while627

merge661:                                         ; preds = %while627
  %i_v664 = load i32, i32* %i623
  %tmp665 = add i32 %i_v664, 1
  store i32 %tmp665, i32* %i623
  br label %while624

merge666:                                         ; preds = %while624
  %m_r669 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 1
  %r_mat670 = load i32, i32* %m_r669
  %m_c671 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 2
  %c_mat672 = load i32, i32* %m_c671
  %size673 = mul i32 %r_mat670, %c_mat672
  %mallocsize = mul i32 %size673, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall674 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat675 = bitcast i8* %malloccall674 to double*
  %malloccall676 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m677 = bitcast i8* %malloccall676 to %matrix_t*
  %m_mat678 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  store double* %system_mat675, double** %m_mat678
  %m_r679 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  store i32 %r_mat670, i32* %m_r679
  %m_c680 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  store i32 %c_mat672, i32* %m_c680
  %tmp681 = sub i32 %r_mat670, 1
  %tmp682 = sub i32 %c_mat672, 1
  %i683 = alloca i32
  store i32 0, i32* %i683
  br label %while684

while684:                                         ; preds = %merge696, %merge666
  %i_v702 = load i32, i32* %i683
  %bool_val703 = icmp sle i32 %i_v702, %tmp681
  br i1 %bool_val703, label %while_body685, label %merge701

while_body685:                                    ; preds = %while684
  %j686 = alloca i32
  store i32 0, i32* %j686
  br label %while687

while687:                                         ; preds = %while_body688, %while_body685
  %j_v697 = load i32, i32* %j686
  %bool_val698 = icmp sle i32 %j_v697, %tmp682
  br i1 %bool_val698, label %while_body688, label %merge696

while_body688:                                    ; preds = %while687
  %j_v689 = load i32, i32* %j686
  %i_v690 = load i32, i32* %i683
  %tmp691 = mul i32 %c_mat672, %i_v690
  %index692 = add i32 %j_v689, %tmp691
  %element_ptr693 = getelementptr double, double* %system_mat675, i32 %index692
  store double 0.000000e+00, double* %element_ptr693
  %j_v694 = load i32, i32* %j686
  %tmp695 = add i32 %j_v694, 1
  store i32 %tmp695, i32* %j686
  br label %while687

merge696:                                         ; preds = %while687
  %i_v699 = load i32, i32* %i683
  %tmp700 = add i32 %i_v699, 1
  store i32 %tmp700, i32* %i683
  br label %while684

merge701:                                         ; preds = %while684
  %tmp704 = sub i32 %c_mat672, 1
  %tmp705 = sub i32 %r_mat670, 1
  %m_mat706 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat707 = load double*, double** %m_mat706
  %m_r708 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat709 = load i32, i32* %m_r708
  %m_c710 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat711 = load i32, i32* %m_c710
  %m_mat712 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 0
  %mat_v713 = load double*, double** %m_mat712
  %m_r714 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 1
  %r_v715 = load i32, i32* %m_r714
  %m_c716 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 2
  %c_v717 = load i32, i32* %m_c716
  %i718 = alloca i32
  store i32 0, i32* %i718
  br label %while719

while719:                                         ; preds = %merge741, %merge701
  %i_v747 = load i32, i32* %i718
  %bool_val748 = icmp sle i32 %i_v747, %tmp705
  br i1 %bool_val748, label %while_body720, label %merge746

while_body720:                                    ; preds = %while719
  %j721 = alloca i32
  store i32 0, i32* %j721
  br label %while722

while722:                                         ; preds = %while_body723, %while_body720
  %j_v742 = load i32, i32* %j721
  %bool_val743 = icmp sle i32 %j_v742, %tmp704
  br i1 %bool_val743, label %while_body723, label %merge741

while_body723:                                    ; preds = %while722
  %j_v724 = load i32, i32* %j721
  %i_v725 = load i32, i32* %i718
  %tmp726 = mul i32 %c_mat711, %i_v725
  %index727 = add i32 %j_v724, %tmp726
  %element_ptr728 = getelementptr double, double* %mat_mat707, i32 %index727
  %j_v729 = load i32, i32* %j721
  %tmp730 = sub i32 %j_v729, 0
  %tmp731 = add i32 %tmp730, 0
  %i_v732 = load i32, i32* %i718
  %tmp733 = sub i32 %i_v732, 0
  %tmp734 = add i32 %tmp733, 0
  %tmp735 = mul i32 %c_v717, %tmp734
  %index736 = add i32 %tmp731, %tmp735
  %element_ptr737 = getelementptr double, double* %mat_v713, i32 %index736
  %tmp_element738 = load double, double* %element_ptr737
  store double %tmp_element738, double* %element_ptr728
  %j_v739 = load i32, i32* %j721
  %tmp740 = add i32 %j_v739, 1
  store i32 %tmp740, i32* %j721
  br label %while722

merge741:                                         ; preds = %while722
  %i_v744 = load i32, i32* %i718
  %tmp745 = add i32 %i_v744, 1
  store i32 %tmp745, i32* %i718
  br label %while719

merge746:                                         ; preds = %while719
  %return0 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 0
  store %matrix_t* %m677, %matrix_t** %return0
  %m_c749 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat750 = load i32, i32* %m_c749
  %m_r751 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat752 = load i32, i32* %m_r751
  %tmp757 = icmp ne i32 %c_mat750, %r_mat752
  br i1 %tmp757, label %then754, label %else756

merge753:                                         ; preds = %else756, %then754
  %m_mat758 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat759 = load double*, double** %m_mat758
  %m_mat760 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_v761 = load double*, double** %m_mat760
  %m_r762 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat763 = load i32, i32* %m_r762
  %tmp764 = sub i32 %r_mat763, 1
  %m_c765 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat766 = load i32, i32* %m_c765
  %tmp767 = sub i32 %c_mat766, 1
  %m_l768 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %l_mat769 = load i32, i32* %m_l768
  %tmp770 = sub i32 %l_mat769, 1
  %size771 = mul i32 %r_mat763, %c_mat766
  %system_mat772 = alloca double, i32 %size771
  %m773 = alloca %matrix_t
  %m_mat774 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 0
  store double* %system_mat772, double** %m_mat774
  %m_r775 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 1
  store i32 %r_mat763, i32* %m_r775
  %m_c776 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 2
  store i32 %c_mat766, i32* %m_c776
  %tmp777 = sub i32 %r_mat763, 1
  %tmp778 = sub i32 %c_mat766, 1
  %i779 = alloca i32
  store i32 0, i32* %i779
  br label %while780

then754:                                          ; preds = %merge746
  %printf755 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge753

else756:                                          ; preds = %merge746
  br label %merge753

while780:                                         ; preds = %merge792, %merge753
  %i_v798 = load i32, i32* %i779
  %bool_val799 = icmp sle i32 %i_v798, %tmp777
  br i1 %bool_val799, label %while_body781, label %merge797

while_body781:                                    ; preds = %while780
  %j782 = alloca i32
  store i32 0, i32* %j782
  br label %while783

while783:                                         ; preds = %while_body784, %while_body781
  %j_v793 = load i32, i32* %j782
  %bool_val794 = icmp sle i32 %j_v793, %tmp778
  br i1 %bool_val794, label %while_body784, label %merge792

while_body784:                                    ; preds = %while783
  %j_v785 = load i32, i32* %j782
  %i_v786 = load i32, i32* %i779
  %tmp787 = mul i32 %c_mat766, %i_v786
  %index788 = add i32 %j_v785, %tmp787
  %element_ptr789 = getelementptr double, double* %system_mat772, i32 %index788
  store double 0.000000e+00, double* %element_ptr789
  %j_v790 = load i32, i32* %j782
  %tmp791 = add i32 %j_v790, 1
  store i32 %tmp791, i32* %j782
  br label %while783

merge792:                                         ; preds = %while783
  %i_v795 = load i32, i32* %i779
  %tmp796 = add i32 %i_v795, 1
  store i32 %tmp796, i32* %i779
  br label %while780

merge797:                                         ; preds = %while780
  %m_mat800 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 0
  %mat_mat801 = load double*, double** %m_mat800
  %i802 = alloca i32
  store i32 0, i32* %i802
  br label %while803

while803:                                         ; preds = %merge840, %merge797
  %i_v846 = load i32, i32* %i802
  %bool_val847 = icmp sle i32 %i_v846, %tmp764
  br i1 %bool_val847, label %while_body804, label %merge845

while_body804:                                    ; preds = %while803
  %j805 = alloca i32
  store i32 0, i32* %j805
  br label %while806

while806:                                         ; preds = %merge834, %while_body804
  %j_v841 = load i32, i32* %j805
  %bool_val842 = icmp sle i32 %j_v841, %tmp767
  br i1 %bool_val842, label %while_body807, label %merge840

while_body807:                                    ; preds = %while806
  %j_v808 = load i32, i32* %j805
  %i_v809 = load i32, i32* %i802
  %tmp810 = mul i32 %c_mat766, %i_v809
  %index811 = add i32 %j_v808, %tmp810
  %element_ptr812 = getelementptr double, double* %mat_mat801, i32 %index811
  %tmp_element813 = alloca double
  store double 0.000000e+00, double* %tmp_element813
  %k814 = alloca i32
  store i32 0, i32* %k814
  br label %while815

while815:                                         ; preds = %while_body816, %while_body807
  %k_v835 = load i32, i32* %k814
  %bool_val836 = icmp sle i32 %k_v835, %tmp770
  br i1 %bool_val836, label %while_body816, label %merge834

while_body816:                                    ; preds = %while815
  %k_v817 = load i32, i32* %k814
  %i_v818 = load i32, i32* %i802
  %tmp819 = mul i32 %l_mat769, %i_v818
  %index820 = add i32 %k_v817, %tmp819
  %element_ptr821 = getelementptr double, double* %mat_mat759, i32 %index820
  %tmp_element822 = load double, double* %element_ptr821
  %j_v823 = load i32, i32* %j805
  %k_v824 = load i32, i32* %k814
  %tmp825 = mul i32 %c_mat766, %k_v824
  %index826 = add i32 %j_v823, %tmp825
  %element_ptr827 = getelementptr double, double* %mat_v761, i32 %index826
  %tmp_element828 = load double, double* %element_ptr827
  %tmp829 = load double, double* %tmp_element813
  %tmp830 = fmul double %tmp_element822, %tmp_element828
  %tmp831 = fadd double %tmp830, %tmp829
  store double %tmp831, double* %tmp_element813
  %k_v832 = load i32, i32* %k814
  %tmp833 = add i32 %k_v832, 1
  store i32 %tmp833, i32* %k814
  br label %while815

merge834:                                         ; preds = %while815
  %tmp837 = load double, double* %tmp_element813
  store double %tmp837, double* %element_ptr812
  %j_v838 = load i32, i32* %j805
  %tmp839 = add i32 %j_v838, 1
  store i32 %tmp839, i32* %j805
  br label %while806

merge840:                                         ; preds = %while806
  %i_v843 = load i32, i32* %i802
  %tmp844 = add i32 %i_v843, 1
  store i32 %tmp844, i32* %i802
  br label %while803

merge845:                                         ; preds = %while803
  %m_r848 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 1
  %r_mat849 = load i32, i32* %m_r848
  %m_c850 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 2
  %c_mat851 = load i32, i32* %m_c850
  %size852 = mul i32 %r_mat849, %c_mat851
  %mallocsize853 = mul i32 %size852, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall854 = tail call i8* @malloc(i32 %mallocsize853)
  %system_mat855 = bitcast i8* %malloccall854 to double*
  %malloccall856 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m857 = bitcast i8* %malloccall856 to %matrix_t*
  %m_mat858 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 0
  store double* %system_mat855, double** %m_mat858
  %m_r859 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 1
  store i32 %r_mat849, i32* %m_r859
  %m_c860 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 2
  store i32 %c_mat851, i32* %m_c860
  %tmp861 = sub i32 %r_mat849, 1
  %tmp862 = sub i32 %c_mat851, 1
  %i863 = alloca i32
  store i32 0, i32* %i863
  br label %while864

while864:                                         ; preds = %merge876, %merge845
  %i_v882 = load i32, i32* %i863
  %bool_val883 = icmp sle i32 %i_v882, %tmp861
  br i1 %bool_val883, label %while_body865, label %merge881

while_body865:                                    ; preds = %while864
  %j866 = alloca i32
  store i32 0, i32* %j866
  br label %while867

while867:                                         ; preds = %while_body868, %while_body865
  %j_v877 = load i32, i32* %j866
  %bool_val878 = icmp sle i32 %j_v877, %tmp862
  br i1 %bool_val878, label %while_body868, label %merge876

while_body868:                                    ; preds = %while867
  %j_v869 = load i32, i32* %j866
  %i_v870 = load i32, i32* %i863
  %tmp871 = mul i32 %c_mat851, %i_v870
  %index872 = add i32 %j_v869, %tmp871
  %element_ptr873 = getelementptr double, double* %system_mat855, i32 %index872
  store double 0.000000e+00, double* %element_ptr873
  %j_v874 = load i32, i32* %j866
  %tmp875 = add i32 %j_v874, 1
  store i32 %tmp875, i32* %j866
  br label %while867

merge876:                                         ; preds = %while867
  %i_v879 = load i32, i32* %i863
  %tmp880 = add i32 %i_v879, 1
  store i32 %tmp880, i32* %i863
  br label %while864

merge881:                                         ; preds = %while864
  %tmp884 = sub i32 %c_mat851, 1
  %tmp885 = sub i32 %r_mat849, 1
  %m_mat886 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 0
  %mat_mat887 = load double*, double** %m_mat886
  %m_r888 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 1
  %r_mat889 = load i32, i32* %m_r888
  %m_c890 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 2
  %c_mat891 = load i32, i32* %m_c890
  %m_mat892 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 0
  %mat_v893 = load double*, double** %m_mat892
  %m_r894 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 1
  %r_v895 = load i32, i32* %m_r894
  %m_c896 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 2
  %c_v897 = load i32, i32* %m_c896
  %i898 = alloca i32
  store i32 0, i32* %i898
  br label %while899

while899:                                         ; preds = %merge921, %merge881
  %i_v927 = load i32, i32* %i898
  %bool_val928 = icmp sle i32 %i_v927, %tmp885
  br i1 %bool_val928, label %while_body900, label %merge926

while_body900:                                    ; preds = %while899
  %j901 = alloca i32
  store i32 0, i32* %j901
  br label %while902

while902:                                         ; preds = %while_body903, %while_body900
  %j_v922 = load i32, i32* %j901
  %bool_val923 = icmp sle i32 %j_v922, %tmp884
  br i1 %bool_val923, label %while_body903, label %merge921

while_body903:                                    ; preds = %while902
  %j_v904 = load i32, i32* %j901
  %i_v905 = load i32, i32* %i898
  %tmp906 = mul i32 %c_mat891, %i_v905
  %index907 = add i32 %j_v904, %tmp906
  %element_ptr908 = getelementptr double, double* %mat_mat887, i32 %index907
  %j_v909 = load i32, i32* %j901
  %tmp910 = sub i32 %j_v909, 0
  %tmp911 = add i32 %tmp910, 0
  %i_v912 = load i32, i32* %i898
  %tmp913 = sub i32 %i_v912, 0
  %tmp914 = add i32 %tmp913, 0
  %tmp915 = mul i32 %c_v897, %tmp914
  %index916 = add i32 %tmp911, %tmp915
  %element_ptr917 = getelementptr double, double* %mat_v893, i32 %index916
  %tmp_element918 = load double, double* %element_ptr917
  store double %tmp_element918, double* %element_ptr908
  %j_v919 = load i32, i32* %j901
  %tmp920 = add i32 %j_v919, 1
  store i32 %tmp920, i32* %j901
  br label %while902

merge921:                                         ; preds = %while902
  %i_v924 = load i32, i32* %i898
  %tmp925 = add i32 %i_v924, 1
  store i32 %tmp925, i32* %i898
  br label %while899

merge926:                                         ; preds = %while899
  %return1 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 1
  store %matrix_t* %m857, %matrix_t** %return1
  %d929 = load double, double* %d
  %tmp930 = fmul double %d929, 5.000000e+00
  %return2 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 2
  store double %tmp930, double* %return2
  ret %return_t.1* %return
  %tmp931 = alloca %return_t.1
  ret %return_t.1* %tmp931
}

define %return_t.2* @f2(%matrix_t*, %matrix_t*, double) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %d = alloca double
  store double %2, double* %d
  %system_mat133 = alloca double, i32 0
  %m134 = alloca %matrix_t
  %m_mat135 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 0
  store double* %system_mat133, double** %m_mat135
  %m_r136 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 1
  store i32 0, i32* %m_r136
  %m_c137 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 2
  store i32 0, i32* %m_c137
  %i138 = alloca i32
  store i32 0, i32* %i138
  br label %while139

while139:                                         ; preds = %merge151, %merge130
  %i_v157 = load i32, i32* %i138
  %bool_val158 = icmp sle i32 %i_v157, -1
  br i1 %bool_val158, label %while_body140, label %merge156

while_body140:                                    ; preds = %while139
  %j141 = alloca i32
  store i32 0, i32* %j141
  br label %while142

while142:                                         ; preds = %while_body143, %while_body140
  %j_v152 = load i32, i32* %j141
  %bool_val153 = icmp sle i32 %j_v152, -1
  br i1 %bool_val153, label %while_body143, label %merge151

while_body143:                                    ; preds = %while142
  %j_v144 = load i32, i32* %j141
  %i_v145 = load i32, i32* %i138
  %tmp146 = mul i32 0, %i_v145
  %index147 = add i32 %j_v144, %tmp146
  %element_ptr148 = getelementptr double, double* %system_mat133, i32 %index147
  store double 0.000000e+00, double* %element_ptr148
  %j_v149 = load i32, i32* %j141
  %tmp150 = add i32 %j_v149, 1
  store i32 %tmp150, i32* %j141
  br label %while142

merge151:                                         ; preds = %while142
  %i_v154 = load i32, i32* %i138
  %tmp155 = add i32 %i_v154, 1
  store i32 %tmp155, i32* %i138
  br label %while139

merge156:                                         ; preds = %while139
  %system_mat159 = alloca double, i32 0
  %m160 = alloca %matrix_t
  %m_mat161 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 0
  store double* %system_mat159, double** %m_mat161
  %m_r162 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 1
  store i32 0, i32* %m_r162
  %m_c163 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 2
  store i32 0, i32* %m_c163
  %i164 = alloca i32
  store i32 0, i32* %i164
  br label %while165

while165:                                         ; preds = %merge177, %merge156
  %i_v183 = load i32, i32* %i164
  %bool_val184 = icmp sle i32 %i_v183, -1
  br i1 %bool_val184, label %while_body166, label %merge182

while_body166:                                    ; preds = %while165
  %j167 = alloca i32
  store i32 0, i32* %j167
  br label %while168

while168:                                         ; preds = %while_body169, %while_body166
  %j_v178 = load i32, i32* %j167
  %bool_val179 = icmp sle i32 %j_v178, -1
  br i1 %bool_val179, label %while_body169, label %merge177

while_body169:                                    ; preds = %while168
  %j_v170 = load i32, i32* %j167
  %i_v171 = load i32, i32* %i164
  %tmp172 = mul i32 0, %i_v171
  %index173 = add i32 %j_v170, %tmp172
  %element_ptr174 = getelementptr double, double* %system_mat159, i32 %index173
  store double 0.000000e+00, double* %element_ptr174
  %j_v175 = load i32, i32* %j167
  %tmp176 = add i32 %j_v175, 1
  store i32 %tmp176, i32* %j167
  br label %while168

merge177:                                         ; preds = %while168
  %i_v180 = load i32, i32* %i164
  %tmp181 = add i32 %i_v180, 1
  store i32 %tmp181, i32* %i164
  br label %while165

merge182:                                         ; preds = %while165
  %d2 = alloca double
  %tmp185 = load double, double* %d2
  store double 0.000000e+00, double* %d2
  %d186 = load double, double* %d
  %f_result = call %return_t.1* @f(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @system_string.12, i32 0, i32 0), %matrix_t* %m, %matrix_t* %m, %matrix_t* %m61, double %d186)
  %v_ptr = getelementptr inbounds %return_t.1, %return_t.1* %f_result, i32 0, i32 0
  %v = load %matrix_t*, %matrix_t** %v_ptr
  %m_mat187 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_mat188 = load double*, double** %m_mat187
  %m_r189 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_mat190 = load i32, i32* %m_r189
  %m_c191 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_mat192 = load i32, i32* %m_c191
  %size193 = mul i32 %r_mat190, %c_mat192
  %system_mat194 = alloca double, i32 %size193
  %m195 = alloca %matrix_t
  %m_mat196 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 0
  store double* %system_mat194, double** %m_mat196
  %m_r197 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 1
  store i32 %r_mat190, i32* %m_r197
  %m_c198 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 2
  store i32 %c_mat192, i32* %m_c198
  %tmp199 = sub i32 %r_mat190, 1
  %tmp200 = sub i32 %c_mat192, 1
  %i201 = alloca i32
  store i32 0, i32* %i201
  br label %while202

while202:                                         ; preds = %merge214, %merge182
  %i_v220 = load i32, i32* %i201
  %bool_val221 = icmp sle i32 %i_v220, %tmp199
  br i1 %bool_val221, label %while_body203, label %merge219

while_body203:                                    ; preds = %while202
  %j204 = alloca i32
  store i32 0, i32* %j204
  br label %while205

while205:                                         ; preds = %while_body206, %while_body203
  %j_v215 = load i32, i32* %j204
  %bool_val216 = icmp sle i32 %j_v215, %tmp200
  br i1 %bool_val216, label %while_body206, label %merge214

while_body206:                                    ; preds = %while205
  %j_v207 = load i32, i32* %j204
  %i_v208 = load i32, i32* %i201
  %tmp209 = mul i32 %c_mat192, %i_v208
  %index210 = add i32 %j_v207, %tmp209
  %element_ptr211 = getelementptr double, double* %system_mat194, i32 %index210
  store double 0.000000e+00, double* %element_ptr211
  %j_v212 = load i32, i32* %j204
  %tmp213 = add i32 %j_v212, 1
  store i32 %tmp213, i32* %j204
  br label %while205

merge214:                                         ; preds = %while205
  %i_v217 = load i32, i32* %i201
  %tmp218 = add i32 %i_v217, 1
  store i32 %tmp218, i32* %i201
  br label %while202

merge219:                                         ; preds = %while202
  %tmp222 = sub i32 %c_mat192, 1
  %tmp223 = sub i32 %r_mat190, 1
  %m_mat224 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 0
  %mat_mat225 = load double*, double** %m_mat224
  %m_r226 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 1
  %r_mat227 = load i32, i32* %m_r226
  %m_c228 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 2
  %c_mat229 = load i32, i32* %m_c228
  %m_mat230 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_v231 = load double*, double** %m_mat230
  %m_r232 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_v233 = load i32, i32* %m_r232
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_v235 = load i32, i32* %m_c234
  %i236 = alloca i32
  store i32 0, i32* %i236
  br label %while237

while237:                                         ; preds = %merge259, %merge219
  %i_v265 = load i32, i32* %i236
  %bool_val266 = icmp sle i32 %i_v265, %tmp223
  br i1 %bool_val266, label %while_body238, label %merge264

while_body238:                                    ; preds = %while237
  %j239 = alloca i32
  store i32 0, i32* %j239
  br label %while240

while240:                                         ; preds = %while_body241, %while_body238
  %j_v260 = load i32, i32* %j239
  %bool_val261 = icmp sle i32 %j_v260, %tmp222
  br i1 %bool_val261, label %while_body241, label %merge259

while_body241:                                    ; preds = %while240
  %j_v242 = load i32, i32* %j239
  %i_v243 = load i32, i32* %i236
  %tmp244 = mul i32 %c_mat229, %i_v243
  %index245 = add i32 %j_v242, %tmp244
  %element_ptr246 = getelementptr double, double* %mat_mat225, i32 %index245
  %j_v247 = load i32, i32* %j239
  %tmp248 = sub i32 %j_v247, 0
  %tmp249 = add i32 %tmp248, 0
  %i_v250 = load i32, i32* %i236
  %tmp251 = sub i32 %i_v250, 0
  %tmp252 = add i32 %tmp251, 0
  %tmp253 = mul i32 %c_v235, %tmp252
  %index254 = add i32 %tmp249, %tmp253
  %element_ptr255 = getelementptr double, double* %mat_v231, i32 %index254
  %tmp_element256 = load double, double* %element_ptr255
  store double %tmp_element256, double* %element_ptr246
  %j_v257 = load i32, i32* %j239
  %tmp258 = add i32 %j_v257, 1
  store i32 %tmp258, i32* %j239
  br label %while240

merge259:                                         ; preds = %while240
  %i_v262 = load i32, i32* %i236
  %tmp263 = add i32 %i_v262, 1
  store i32 %tmp263, i32* %i236
  br label %while237

merge264:                                         ; preds = %while237
  %3 = bitcast double* %mat_mat188 to i8*
  tail call void @free(i8* %3)
  %4 = bitcast %matrix_t* %v to i8*
  tail call void @free(i8* %4)
  %m_r267 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 1
  %r_mat268 = load i32, i32* %m_r267
  %m_c269 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 2
  %c_mat270 = load i32, i32* %m_c269
  %size271 = mul i32 %r_mat268, %c_mat270
  %system_mat272 = alloca double, i32 %size271
  %m273 = alloca %matrix_t
  %m_mat274 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 0
  store double* %system_mat272, double** %m_mat274
  %m_r275 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 1
  store i32 %r_mat268, i32* %m_r275
  %m_c276 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 2
  store i32 %c_mat270, i32* %m_c276
  %tmp277 = sub i32 %r_mat268, 1
  %tmp278 = sub i32 %c_mat270, 1
  %i279 = alloca i32
  store i32 0, i32* %i279
  br label %while280

while280:                                         ; preds = %merge292, %merge264
  %i_v298 = load i32, i32* %i279
  %bool_val299 = icmp sle i32 %i_v298, %tmp277
  br i1 %bool_val299, label %while_body281, label %merge297

while_body281:                                    ; preds = %while280
  %j282 = alloca i32
  store i32 0, i32* %j282
  br label %while283

while283:                                         ; preds = %while_body284, %while_body281
  %j_v293 = load i32, i32* %j282
  %bool_val294 = icmp sle i32 %j_v293, %tmp278
  br i1 %bool_val294, label %while_body284, label %merge292

while_body284:                                    ; preds = %while283
  %j_v285 = load i32, i32* %j282
  %i_v286 = load i32, i32* %i279
  %tmp287 = mul i32 %c_mat270, %i_v286
  %index288 = add i32 %j_v285, %tmp287
  %element_ptr289 = getelementptr double, double* %system_mat272, i32 %index288
  store double 0.000000e+00, double* %element_ptr289
  %j_v290 = load i32, i32* %j282
  %tmp291 = add i32 %j_v290, 1
  store i32 %tmp291, i32* %j282
  br label %while283

merge292:                                         ; preds = %while283
  %i_v295 = load i32, i32* %i279
  %tmp296 = add i32 %i_v295, 1
  store i32 %tmp296, i32* %i279
  br label %while280

merge297:                                         ; preds = %while280
  %tmp300 = sub i32 %c_mat270, 1
  %tmp301 = sub i32 %r_mat268, 1
  %m_mat302 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 0
  %mat_mat303 = load double*, double** %m_mat302
  %m_r304 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 1
  %r_mat305 = load i32, i32* %m_r304
  %m_c306 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 2
  %c_mat307 = load i32, i32* %m_c306
  %m_mat308 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 0
  %mat_v309 = load double*, double** %m_mat308
  %m_r310 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 1
  %r_v311 = load i32, i32* %m_r310
  %m_c312 = getelementptr inbounds %matrix_t, %matrix_t* %m195, i32 0, i32 2
  %c_v313 = load i32, i32* %m_c312
  %i314 = alloca i32
  store i32 0, i32* %i314
  br label %while315

while315:                                         ; preds = %merge337, %merge297
  %i_v343 = load i32, i32* %i314
  %bool_val344 = icmp sle i32 %i_v343, %tmp301
  br i1 %bool_val344, label %while_body316, label %merge342

while_body316:                                    ; preds = %while315
  %j317 = alloca i32
  store i32 0, i32* %j317
  br label %while318

while318:                                         ; preds = %while_body319, %while_body316
  %j_v338 = load i32, i32* %j317
  %bool_val339 = icmp sle i32 %j_v338, %tmp300
  br i1 %bool_val339, label %while_body319, label %merge337

while_body319:                                    ; preds = %while318
  %j_v320 = load i32, i32* %j317
  %i_v321 = load i32, i32* %i314
  %tmp322 = mul i32 %c_mat307, %i_v321
  %index323 = add i32 %j_v320, %tmp322
  %element_ptr324 = getelementptr double, double* %mat_mat303, i32 %index323
  %j_v325 = load i32, i32* %j317
  %tmp326 = sub i32 %j_v325, 0
  %tmp327 = add i32 %tmp326, 0
  %i_v328 = load i32, i32* %i314
  %tmp329 = sub i32 %i_v328, 0
  %tmp330 = add i32 %tmp329, 0
  %tmp331 = mul i32 %c_v313, %tmp330
  %index332 = add i32 %tmp327, %tmp331
  %element_ptr333 = getelementptr double, double* %mat_v309, i32 %index332
  %tmp_element334 = load double, double* %element_ptr333
  store double %tmp_element334, double* %element_ptr324
  %j_v335 = load i32, i32* %j317
  %tmp336 = add i32 %j_v335, 1
  store i32 %tmp336, i32* %j317
  br label %while318

merge337:                                         ; preds = %while318
  %i_v340 = load i32, i32* %i314
  %tmp341 = add i32 %i_v340, 1
  store i32 %tmp341, i32* %i314
  br label %while315

merge342:                                         ; preds = %while315
  %v_ptr345 = getelementptr inbounds %return_t.1, %return_t.1* %f_result, i32 0, i32 1
  %v346 = load %matrix_t*, %matrix_t** %v_ptr345
  %m_mat347 = getelementptr inbounds %matrix_t, %matrix_t* %v346, i32 0, i32 0
  %mat_mat348 = load double*, double** %m_mat347
  %m_r349 = getelementptr inbounds %matrix_t, %matrix_t* %v346, i32 0, i32 1
  %r_mat350 = load i32, i32* %m_r349
  %m_c351 = getelementptr inbounds %matrix_t, %matrix_t* %v346, i32 0, i32 2
  %c_mat352 = load i32, i32* %m_c351
  %size353 = mul i32 %r_mat350, %c_mat352
  %system_mat354 = alloca double, i32 %size353
  %m355 = alloca %matrix_t
  %m_mat356 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 0
  store double* %system_mat354, double** %m_mat356
  %m_r357 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 1
  store i32 %r_mat350, i32* %m_r357
  %m_c358 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 2
  store i32 %c_mat352, i32* %m_c358
  %tmp359 = sub i32 %r_mat350, 1
  %tmp360 = sub i32 %c_mat352, 1
  %i361 = alloca i32
  store i32 0, i32* %i361
  br label %while362

while362:                                         ; preds = %merge374, %merge342
  %i_v380 = load i32, i32* %i361
  %bool_val381 = icmp sle i32 %i_v380, %tmp359
  br i1 %bool_val381, label %while_body363, label %merge379

while_body363:                                    ; preds = %while362
  %j364 = alloca i32
  store i32 0, i32* %j364
  br label %while365

while365:                                         ; preds = %while_body366, %while_body363
  %j_v375 = load i32, i32* %j364
  %bool_val376 = icmp sle i32 %j_v375, %tmp360
  br i1 %bool_val376, label %while_body366, label %merge374

while_body366:                                    ; preds = %while365
  %j_v367 = load i32, i32* %j364
  %i_v368 = load i32, i32* %i361
  %tmp369 = mul i32 %c_mat352, %i_v368
  %index370 = add i32 %j_v367, %tmp369
  %element_ptr371 = getelementptr double, double* %system_mat354, i32 %index370
  store double 0.000000e+00, double* %element_ptr371
  %j_v372 = load i32, i32* %j364
  %tmp373 = add i32 %j_v372, 1
  store i32 %tmp373, i32* %j364
  br label %while365

merge374:                                         ; preds = %while365
  %i_v377 = load i32, i32* %i361
  %tmp378 = add i32 %i_v377, 1
  store i32 %tmp378, i32* %i361
  br label %while362

merge379:                                         ; preds = %while362
  %tmp382 = sub i32 %c_mat352, 1
  %tmp383 = sub i32 %r_mat350, 1
  %m_mat384 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 0
  %mat_mat385 = load double*, double** %m_mat384
  %m_r386 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 1
  %r_mat387 = load i32, i32* %m_r386
  %m_c388 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 2
  %c_mat389 = load i32, i32* %m_c388
  %m_mat390 = getelementptr inbounds %matrix_t, %matrix_t* %v346, i32 0, i32 0
  %mat_v391 = load double*, double** %m_mat390
  %m_r392 = getelementptr inbounds %matrix_t, %matrix_t* %v346, i32 0, i32 1
  %r_v393 = load i32, i32* %m_r392
  %m_c394 = getelementptr inbounds %matrix_t, %matrix_t* %v346, i32 0, i32 2
  %c_v395 = load i32, i32* %m_c394
  %i396 = alloca i32
  store i32 0, i32* %i396
  br label %while397

while397:                                         ; preds = %merge419, %merge379
  %i_v425 = load i32, i32* %i396
  %bool_val426 = icmp sle i32 %i_v425, %tmp383
  br i1 %bool_val426, label %while_body398, label %merge424

while_body398:                                    ; preds = %while397
  %j399 = alloca i32
  store i32 0, i32* %j399
  br label %while400

while400:                                         ; preds = %while_body401, %while_body398
  %j_v420 = load i32, i32* %j399
  %bool_val421 = icmp sle i32 %j_v420, %tmp382
  br i1 %bool_val421, label %while_body401, label %merge419

while_body401:                                    ; preds = %while400
  %j_v402 = load i32, i32* %j399
  %i_v403 = load i32, i32* %i396
  %tmp404 = mul i32 %c_mat389, %i_v403
  %index405 = add i32 %j_v402, %tmp404
  %element_ptr406 = getelementptr double, double* %mat_mat385, i32 %index405
  %j_v407 = load i32, i32* %j399
  %tmp408 = sub i32 %j_v407, 0
  %tmp409 = add i32 %tmp408, 0
  %i_v410 = load i32, i32* %i396
  %tmp411 = sub i32 %i_v410, 0
  %tmp412 = add i32 %tmp411, 0
  %tmp413 = mul i32 %c_v395, %tmp412
  %index414 = add i32 %tmp409, %tmp413
  %element_ptr415 = getelementptr double, double* %mat_v391, i32 %index414
  %tmp_element416 = load double, double* %element_ptr415
  store double %tmp_element416, double* %element_ptr406
  %j_v417 = load i32, i32* %j399
  %tmp418 = add i32 %j_v417, 1
  store i32 %tmp418, i32* %j399
  br label %while400

merge419:                                         ; preds = %while400
  %i_v422 = load i32, i32* %i396
  %tmp423 = add i32 %i_v422, 1
  store i32 %tmp423, i32* %i396
  br label %while397

merge424:                                         ; preds = %while397
  %5 = bitcast double* %mat_mat348 to i8*
  tail call void @free(i8* %5)
  %6 = bitcast %matrix_t* %v346 to i8*
  tail call void @free(i8* %6)
  %m_r427 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 1
  %r_mat428 = load i32, i32* %m_r427
  %m_c429 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 2
  %c_mat430 = load i32, i32* %m_c429
  %size431 = mul i32 %r_mat428, %c_mat430
  %system_mat432 = alloca double, i32 %size431
  %m433 = alloca %matrix_t
  %m_mat434 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 0
  store double* %system_mat432, double** %m_mat434
  %m_r435 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 1
  store i32 %r_mat428, i32* %m_r435
  %m_c436 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 2
  store i32 %c_mat430, i32* %m_c436
  %tmp437 = sub i32 %r_mat428, 1
  %tmp438 = sub i32 %c_mat430, 1
  %i439 = alloca i32
  store i32 0, i32* %i439
  br label %while440

while440:                                         ; preds = %merge452, %merge424
  %i_v458 = load i32, i32* %i439
  %bool_val459 = icmp sle i32 %i_v458, %tmp437
  br i1 %bool_val459, label %while_body441, label %merge457

while_body441:                                    ; preds = %while440
  %j442 = alloca i32
  store i32 0, i32* %j442
  br label %while443

while443:                                         ; preds = %while_body444, %while_body441
  %j_v453 = load i32, i32* %j442
  %bool_val454 = icmp sle i32 %j_v453, %tmp438
  br i1 %bool_val454, label %while_body444, label %merge452

while_body444:                                    ; preds = %while443
  %j_v445 = load i32, i32* %j442
  %i_v446 = load i32, i32* %i439
  %tmp447 = mul i32 %c_mat430, %i_v446
  %index448 = add i32 %j_v445, %tmp447
  %element_ptr449 = getelementptr double, double* %system_mat432, i32 %index448
  store double 0.000000e+00, double* %element_ptr449
  %j_v450 = load i32, i32* %j442
  %tmp451 = add i32 %j_v450, 1
  store i32 %tmp451, i32* %j442
  br label %while443

merge452:                                         ; preds = %while443
  %i_v455 = load i32, i32* %i439
  %tmp456 = add i32 %i_v455, 1
  store i32 %tmp456, i32* %i439
  br label %while440

merge457:                                         ; preds = %while440
  %tmp460 = sub i32 %c_mat430, 1
  %tmp461 = sub i32 %r_mat428, 1
  %m_mat462 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 0
  %mat_mat463 = load double*, double** %m_mat462
  %m_r464 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 1
  %r_mat465 = load i32, i32* %m_r464
  %m_c466 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 2
  %c_mat467 = load i32, i32* %m_c466
  %m_mat468 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 0
  %mat_v469 = load double*, double** %m_mat468
  %m_r470 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 1
  %r_v471 = load i32, i32* %m_r470
  %m_c472 = getelementptr inbounds %matrix_t, %matrix_t* %m355, i32 0, i32 2
  %c_v473 = load i32, i32* %m_c472
  %i474 = alloca i32
  store i32 0, i32* %i474
  br label %while475

while475:                                         ; preds = %merge497, %merge457
  %i_v503 = load i32, i32* %i474
  %bool_val504 = icmp sle i32 %i_v503, %tmp461
  br i1 %bool_val504, label %while_body476, label %merge502

while_body476:                                    ; preds = %while475
  %j477 = alloca i32
  store i32 0, i32* %j477
  br label %while478

while478:                                         ; preds = %while_body479, %while_body476
  %j_v498 = load i32, i32* %j477
  %bool_val499 = icmp sle i32 %j_v498, %tmp460
  br i1 %bool_val499, label %while_body479, label %merge497

while_body479:                                    ; preds = %while478
  %j_v480 = load i32, i32* %j477
  %i_v481 = load i32, i32* %i474
  %tmp482 = mul i32 %c_mat467, %i_v481
  %index483 = add i32 %j_v480, %tmp482
  %element_ptr484 = getelementptr double, double* %mat_mat463, i32 %index483
  %j_v485 = load i32, i32* %j477
  %tmp486 = sub i32 %j_v485, 0
  %tmp487 = add i32 %tmp486, 0
  %i_v488 = load i32, i32* %i474
  %tmp489 = sub i32 %i_v488, 0
  %tmp490 = add i32 %tmp489, 0
  %tmp491 = mul i32 %c_v473, %tmp490
  %index492 = add i32 %tmp487, %tmp491
  %element_ptr493 = getelementptr double, double* %mat_v469, i32 %index492
  %tmp_element494 = load double, double* %element_ptr493
  store double %tmp_element494, double* %element_ptr484
  %j_v495 = load i32, i32* %j477
  %tmp496 = add i32 %j_v495, 1
  store i32 %tmp496, i32* %j477
  br label %while478

merge497:                                         ; preds = %while478
  %i_v500 = load i32, i32* %i474
  %tmp501 = add i32 %i_v500, 1
  store i32 %tmp501, i32* %i474
  br label %while475

merge502:                                         ; preds = %while475
  %v_ptr505 = getelementptr inbounds %return_t.1, %return_t.1* %f_result, i32 0, i32 2
  %v506 = load double, double* %v_ptr505
  %tmp507 = load double, double* %d2
  store double %v506, double* %d2
  %7 = bitcast %return_t.1* %f_result to i8*
  tail call void @free(i8* %7)
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_r508 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 1
  %r_mat509 = load i32, i32* %m_r508
  %m_r510 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 1
  %r_mat511 = load i32, i32* %m_r510
  %tmp523 = icmp ne i32 %r_mat509, %r_mat511
  br i1 %tmp523, label %then, label %else

merge512:                                         ; preds = %merge518, %then
  %m_mat524 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 0
  %mat_mat525 = load double*, double** %m_mat524
  %m_r526 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 1
  %r_mat527 = load i32, i32* %m_r526
  %tmp528 = sub i32 %r_mat527, 1
  %m_c529 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 2
  %c_mat530 = load i32, i32* %m_c529
  %tmp531 = sub i32 %c_mat530, 1
  %m_mat532 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 0
  %mat_v533 = load double*, double** %m_mat532
  %size534 = mul i32 %r_mat527, %c_mat530
  %system_mat535 = alloca double, i32 %size534
  %m536 = alloca %matrix_t
  %m_mat537 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 0
  store double* %system_mat535, double** %m_mat537
  %m_r538 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 1
  store i32 %r_mat527, i32* %m_r538
  %m_c539 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 2
  store i32 %c_mat530, i32* %m_c539
  %tmp540 = sub i32 %r_mat527, 1
  %tmp541 = sub i32 %c_mat530, 1
  %i542 = alloca i32
  store i32 0, i32* %i542
  br label %while543

then:                                             ; preds = %merge502
  %printf513 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge512

else:                                             ; preds = %merge502
  %m_c514 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 2
  %c_mat515 = load i32, i32* %m_c514
  %m_c516 = getelementptr inbounds %matrix_t, %matrix_t* %m433, i32 0, i32 2
  %c_mat517 = load i32, i32* %m_c516
  %tmp522 = icmp ne i32 %c_mat515, %c_mat517
  br i1 %tmp522, label %then519, label %else521

merge518:                                         ; preds = %else521, %then519
  br label %merge512

then519:                                          ; preds = %else
  %printf520 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge518

else521:                                          ; preds = %else
  br label %merge518

while543:                                         ; preds = %merge555, %merge512
  %i_v561 = load i32, i32* %i542
  %bool_val562 = icmp sle i32 %i_v561, %tmp540
  br i1 %bool_val562, label %while_body544, label %merge560

while_body544:                                    ; preds = %while543
  %j545 = alloca i32
  store i32 0, i32* %j545
  br label %while546

while546:                                         ; preds = %while_body547, %while_body544
  %j_v556 = load i32, i32* %j545
  %bool_val557 = icmp sle i32 %j_v556, %tmp541
  br i1 %bool_val557, label %while_body547, label %merge555

while_body547:                                    ; preds = %while546
  %j_v548 = load i32, i32* %j545
  %i_v549 = load i32, i32* %i542
  %tmp550 = mul i32 %c_mat530, %i_v549
  %index551 = add i32 %j_v548, %tmp550
  %element_ptr552 = getelementptr double, double* %system_mat535, i32 %index551
  store double 0.000000e+00, double* %element_ptr552
  %j_v553 = load i32, i32* %j545
  %tmp554 = add i32 %j_v553, 1
  store i32 %tmp554, i32* %j545
  br label %while546

merge555:                                         ; preds = %while546
  %i_v558 = load i32, i32* %i542
  %tmp559 = add i32 %i_v558, 1
  store i32 %tmp559, i32* %i542
  br label %while543

merge560:                                         ; preds = %while543
  %m_mat563 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 0
  %mat_mat564 = load double*, double** %m_mat563
  %i565 = alloca i32
  store i32 0, i32* %i565
  br label %while566

while566:                                         ; preds = %merge591, %merge560
  %i_v597 = load i32, i32* %i565
  %bool_val598 = icmp sle i32 %i_v597, %tmp528
  br i1 %bool_val598, label %while_body567, label %merge596

while_body567:                                    ; preds = %while566
  %j568 = alloca i32
  store i32 0, i32* %j568
  br label %while569

while569:                                         ; preds = %while_body570, %while_body567
  %j_v592 = load i32, i32* %j568
  %bool_val593 = icmp sle i32 %j_v592, %tmp531
  br i1 %bool_val593, label %while_body570, label %merge591

while_body570:                                    ; preds = %while569
  %j_v571 = load i32, i32* %j568
  %i_v572 = load i32, i32* %i565
  %tmp573 = mul i32 %c_mat530, %i_v572
  %index574 = add i32 %j_v571, %tmp573
  %element_ptr575 = getelementptr double, double* %mat_mat525, i32 %index574
  %tmp_element576 = load double, double* %element_ptr575
  %j_v577 = load i32, i32* %j568
  %i_v578 = load i32, i32* %i565
  %tmp579 = mul i32 %c_mat530, %i_v578
  %index580 = add i32 %j_v577, %tmp579
  %element_ptr581 = getelementptr double, double* %mat_v533, i32 %index580
  %tmp_element582 = load double, double* %element_ptr581
  %j_v583 = load i32, i32* %j568
  %i_v584 = load i32, i32* %i565
  %tmp585 = mul i32 %c_mat530, %i_v584
  %index586 = add i32 %j_v583, %tmp585
  %element_ptr587 = getelementptr double, double* %mat_mat564, i32 %index586
  %tmp_element588 = fadd double %tmp_element576, %tmp_element582
  store double %tmp_element588, double* %element_ptr587
  %j_v589 = load i32, i32* %j568
  %tmp590 = add i32 %j_v589, 1
  store i32 %tmp590, i32* %j568
  br label %while569

merge591:                                         ; preds = %while569
  %i_v594 = load i32, i32* %i565
  %tmp595 = add i32 %i_v594, 1
  store i32 %tmp595, i32* %i565
  br label %while566

merge596:                                         ; preds = %while566
  %d2599 = load double, double* %d2
  %m_mat600 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 0
  %mat_mat601 = load double*, double** %m_mat600
  %m_r602 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 1
  %r_mat603 = load i32, i32* %m_r602
  %tmp604 = sub i32 %r_mat603, 1
  %m_c605 = getelementptr inbounds %matrix_t, %matrix_t* %m536, i32 0, i32 2
  %c_mat606 = load i32, i32* %m_c605
  %tmp607 = sub i32 %c_mat606, 1
  %size608 = mul i32 %r_mat603, %c_mat606
  %system_mat609 = alloca double, i32 %size608
  %m610 = alloca %matrix_t
  %m_mat611 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 0
  store double* %system_mat609, double** %m_mat611
  %m_r612 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 1
  store i32 %r_mat603, i32* %m_r612
  %m_c613 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 2
  store i32 %c_mat606, i32* %m_c613
  %tmp614 = sub i32 %r_mat603, 1
  %tmp615 = sub i32 %c_mat606, 1
  %i616 = alloca i32
  store i32 0, i32* %i616
  br label %while617

while617:                                         ; preds = %merge629, %merge596
  %i_v635 = load i32, i32* %i616
  %bool_val636 = icmp sle i32 %i_v635, %tmp614
  br i1 %bool_val636, label %while_body618, label %merge634

while_body618:                                    ; preds = %while617
  %j619 = alloca i32
  store i32 0, i32* %j619
  br label %while620

while620:                                         ; preds = %while_body621, %while_body618
  %j_v630 = load i32, i32* %j619
  %bool_val631 = icmp sle i32 %j_v630, %tmp615
  br i1 %bool_val631, label %while_body621, label %merge629

while_body621:                                    ; preds = %while620
  %j_v622 = load i32, i32* %j619
  %i_v623 = load i32, i32* %i616
  %tmp624 = mul i32 %c_mat606, %i_v623
  %index625 = add i32 %j_v622, %tmp624
  %element_ptr626 = getelementptr double, double* %system_mat609, i32 %index625
  store double 0.000000e+00, double* %element_ptr626
  %j_v627 = load i32, i32* %j619
  %tmp628 = add i32 %j_v627, 1
  store i32 %tmp628, i32* %j619
  br label %while620

merge629:                                         ; preds = %while620
  %i_v632 = load i32, i32* %i616
  %tmp633 = add i32 %i_v632, 1
  store i32 %tmp633, i32* %i616
  br label %while617

merge634:                                         ; preds = %while617
  %m_mat637 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 0
  %mat_mat638 = load double*, double** %m_mat637
  %i639 = alloca i32
  store i32 0, i32* %i639
  br label %while640

while640:                                         ; preds = %merge659, %merge634
  %i_v665 = load i32, i32* %i639
  %bool_val666 = icmp sle i32 %i_v665, %tmp604
  br i1 %bool_val666, label %while_body641, label %merge664

while_body641:                                    ; preds = %while640
  %j642 = alloca i32
  store i32 0, i32* %j642
  br label %while643

while643:                                         ; preds = %while_body644, %while_body641
  %j_v660 = load i32, i32* %j642
  %bool_val661 = icmp sle i32 %j_v660, %tmp607
  br i1 %bool_val661, label %while_body644, label %merge659

while_body644:                                    ; preds = %while643
  %j_v645 = load i32, i32* %j642
  %i_v646 = load i32, i32* %i639
  %tmp647 = mul i32 %c_mat606, %i_v646
  %index648 = add i32 %j_v645, %tmp647
  %element_ptr649 = getelementptr double, double* %mat_mat601, i32 %index648
  %tmp_element650 = load double, double* %element_ptr649
  %j_v651 = load i32, i32* %j642
  %i_v652 = load i32, i32* %i639
  %tmp653 = mul i32 %c_mat606, %i_v652
  %index654 = add i32 %j_v651, %tmp653
  %element_ptr655 = getelementptr double, double* %mat_mat638, i32 %index654
  %tmp_element656 = fmul double %tmp_element650, %d2599
  store double %tmp_element656, double* %element_ptr655
  %j_v657 = load i32, i32* %j642
  %tmp658 = add i32 %j_v657, 1
  store i32 %tmp658, i32* %j642
  br label %while643

merge659:                                         ; preds = %while643
  %i_v662 = load i32, i32* %i639
  %tmp663 = add i32 %i_v662, 1
  store i32 %tmp663, i32* %i639
  br label %while640

merge664:                                         ; preds = %while640
  %m_mat667 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 0
  %mat_mat668 = load double*, double** %m_mat667
  %m_r669 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 1
  %r_mat670 = load i32, i32* %m_r669
  %m_c671 = getelementptr inbounds %matrix_t, %matrix_t* %m610, i32 0, i32 2
  %c_mat672 = load i32, i32* %m_c671
  %tmp673 = sub i32 %r_mat670, 1
  %tmp674 = sub i32 %c_mat672, 1
  %i675 = alloca i32
  store i32 0, i32* %i675
  br label %while676

while676:                                         ; preds = %merge691, %merge664
  %i_v698 = load i32, i32* %i675
  %bool_val699 = icmp sle i32 %i_v698, %tmp673
  br i1 %bool_val699, label %while_body677, label %merge697

while_body677:                                    ; preds = %while676
  %j678 = alloca i32
  store i32 0, i32* %j678
  br label %while679

while679:                                         ; preds = %while_body680, %while_body677
  %j_v692 = load i32, i32* %j678
  %bool_val693 = icmp sle i32 %j_v692, %tmp674
  br i1 %bool_val693, label %while_body680, label %merge691

while_body680:                                    ; preds = %while679
  %j_v681 = load i32, i32* %j678
  %i_v682 = load i32, i32* %i675
  %tmp683 = mul i32 %c_mat672, %i_v682
  %index684 = add i32 %j_v681, %tmp683
  %element_ptr685 = getelementptr double, double* %mat_mat668, i32 %index684
  %tmp_element686 = load double, double* %element_ptr685
  %printf687 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element686)
  %printf688 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v689 = load i32, i32* %j678
  %tmp690 = add i32 %j_v689, 1
  store i32 %tmp690, i32* %j678
  br label %while679

merge691:                                         ; preds = %while679
  %printf694 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v695 = load i32, i32* %i675
  %tmp696 = add i32 %i_v695, 1
  store i32 %tmp696, i32* %i675
  br label %while676

merge697:                                         ; preds = %while676
  %printf700 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf701 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat702 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 0
  %mat_mat703 = load double*, double** %m_mat702
  %m_r704 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 1
  %r_mat705 = load i32, i32* %m_r704
  %tmp706 = sub i32 %r_mat705, 1
  %m_c707 = getelementptr inbounds %matrix_t, %matrix_t* %m273, i32 0, i32 2
  %c_mat708 = load i32, i32* %m_c707
  %tmp709 = sub i32 %c_mat708, 1
  %size710 = mul i32 %r_mat705, %c_mat708
  %system_mat711 = alloca double, i32 %size710
  %m712 = alloca %matrix_t
  %m_mat713 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 0
  store double* %system_mat711, double** %m_mat713
  %m_r714 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 1
  store i32 %r_mat705, i32* %m_r714
  %m_c715 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 2
  store i32 %c_mat708, i32* %m_c715
  %tmp716 = sub i32 %r_mat705, 1
  %tmp717 = sub i32 %c_mat708, 1
  %i718 = alloca i32
  store i32 0, i32* %i718
  br label %while719

while719:                                         ; preds = %merge731, %merge697
  %i_v737 = load i32, i32* %i718
  %bool_val738 = icmp sle i32 %i_v737, %tmp716
  br i1 %bool_val738, label %while_body720, label %merge736

while_body720:                                    ; preds = %while719
  %j721 = alloca i32
  store i32 0, i32* %j721
  br label %while722

while722:                                         ; preds = %while_body723, %while_body720
  %j_v732 = load i32, i32* %j721
  %bool_val733 = icmp sle i32 %j_v732, %tmp717
  br i1 %bool_val733, label %while_body723, label %merge731

while_body723:                                    ; preds = %while722
  %j_v724 = load i32, i32* %j721
  %i_v725 = load i32, i32* %i718
  %tmp726 = mul i32 %c_mat708, %i_v725
  %index727 = add i32 %j_v724, %tmp726
  %element_ptr728 = getelementptr double, double* %system_mat711, i32 %index727
  store double 0.000000e+00, double* %element_ptr728
  %j_v729 = load i32, i32* %j721
  %tmp730 = add i32 %j_v729, 1
  store i32 %tmp730, i32* %j721
  br label %while722

merge731:                                         ; preds = %while722
  %i_v734 = load i32, i32* %i718
  %tmp735 = add i32 %i_v734, 1
  store i32 %tmp735, i32* %i718
  br label %while719

merge736:                                         ; preds = %while719
  %m_mat739 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 0
  %mat_mat740 = load double*, double** %m_mat739
  %i741 = alloca i32
  store i32 0, i32* %i741
  br label %while742

while742:                                         ; preds = %merge761, %merge736
  %i_v767 = load i32, i32* %i741
  %bool_val768 = icmp sle i32 %i_v767, %tmp706
  br i1 %bool_val768, label %while_body743, label %merge766

while_body743:                                    ; preds = %while742
  %j744 = alloca i32
  store i32 0, i32* %j744
  br label %while745

while745:                                         ; preds = %while_body746, %while_body743
  %j_v762 = load i32, i32* %j744
  %bool_val763 = icmp sle i32 %j_v762, %tmp709
  br i1 %bool_val763, label %while_body746, label %merge761

while_body746:                                    ; preds = %while745
  %j_v747 = load i32, i32* %j744
  %i_v748 = load i32, i32* %i741
  %tmp749 = mul i32 %c_mat708, %i_v748
  %index750 = add i32 %j_v747, %tmp749
  %element_ptr751 = getelementptr double, double* %mat_mat703, i32 %index750
  %tmp_element752 = load double, double* %element_ptr751
  %j_v753 = load i32, i32* %j744
  %i_v754 = load i32, i32* %i741
  %tmp755 = mul i32 %c_mat708, %i_v754
  %index756 = add i32 %j_v753, %tmp755
  %element_ptr757 = getelementptr double, double* %mat_mat740, i32 %index756
  %tmp_element758 = fmul double %tmp_element752, 2.000000e+00
  store double %tmp_element758, double* %element_ptr757
  %j_v759 = load i32, i32* %j744
  %tmp760 = add i32 %j_v759, 1
  store i32 %tmp760, i32* %j744
  br label %while745

merge761:                                         ; preds = %while745
  %i_v764 = load i32, i32* %i741
  %tmp765 = add i32 %i_v764, 1
  store i32 %tmp765, i32* %i741
  br label %while742

merge766:                                         ; preds = %while742
  %d2769 = load double, double* %d2
  %m_mat770 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 0
  %mat_mat771 = load double*, double** %m_mat770
  %m_r772 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 1
  %r_mat773 = load i32, i32* %m_r772
  %tmp774 = sub i32 %r_mat773, 1
  %m_c775 = getelementptr inbounds %matrix_t, %matrix_t* %m712, i32 0, i32 2
  %c_mat776 = load i32, i32* %m_c775
  %tmp777 = sub i32 %c_mat776, 1
  %size778 = mul i32 %r_mat773, %c_mat776
  %system_mat779 = alloca double, i32 %size778
  %m780 = alloca %matrix_t
  %m_mat781 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 0
  store double* %system_mat779, double** %m_mat781
  %m_r782 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 1
  store i32 %r_mat773, i32* %m_r782
  %m_c783 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 2
  store i32 %c_mat776, i32* %m_c783
  %tmp784 = sub i32 %r_mat773, 1
  %tmp785 = sub i32 %c_mat776, 1
  %i786 = alloca i32
  store i32 0, i32* %i786
  br label %while787

while787:                                         ; preds = %merge799, %merge766
  %i_v805 = load i32, i32* %i786
  %bool_val806 = icmp sle i32 %i_v805, %tmp784
  br i1 %bool_val806, label %while_body788, label %merge804

while_body788:                                    ; preds = %while787
  %j789 = alloca i32
  store i32 0, i32* %j789
  br label %while790

while790:                                         ; preds = %while_body791, %while_body788
  %j_v800 = load i32, i32* %j789
  %bool_val801 = icmp sle i32 %j_v800, %tmp785
  br i1 %bool_val801, label %while_body791, label %merge799

while_body791:                                    ; preds = %while790
  %j_v792 = load i32, i32* %j789
  %i_v793 = load i32, i32* %i786
  %tmp794 = mul i32 %c_mat776, %i_v793
  %index795 = add i32 %j_v792, %tmp794
  %element_ptr796 = getelementptr double, double* %system_mat779, i32 %index795
  store double 0.000000e+00, double* %element_ptr796
  %j_v797 = load i32, i32* %j789
  %tmp798 = add i32 %j_v797, 1
  store i32 %tmp798, i32* %j789
  br label %while790

merge799:                                         ; preds = %while790
  %i_v802 = load i32, i32* %i786
  %tmp803 = add i32 %i_v802, 1
  store i32 %tmp803, i32* %i786
  br label %while787

merge804:                                         ; preds = %while787
  %m_mat807 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 0
  %mat_mat808 = load double*, double** %m_mat807
  %i809 = alloca i32
  store i32 0, i32* %i809
  br label %while810

while810:                                         ; preds = %merge829, %merge804
  %i_v835 = load i32, i32* %i809
  %bool_val836 = icmp sle i32 %i_v835, %tmp774
  br i1 %bool_val836, label %while_body811, label %merge834

while_body811:                                    ; preds = %while810
  %j812 = alloca i32
  store i32 0, i32* %j812
  br label %while813

while813:                                         ; preds = %while_body814, %while_body811
  %j_v830 = load i32, i32* %j812
  %bool_val831 = icmp sle i32 %j_v830, %tmp777
  br i1 %bool_val831, label %while_body814, label %merge829

while_body814:                                    ; preds = %while813
  %j_v815 = load i32, i32* %j812
  %i_v816 = load i32, i32* %i809
  %tmp817 = mul i32 %c_mat776, %i_v816
  %index818 = add i32 %j_v815, %tmp817
  %element_ptr819 = getelementptr double, double* %mat_mat771, i32 %index818
  %tmp_element820 = load double, double* %element_ptr819
  %j_v821 = load i32, i32* %j812
  %i_v822 = load i32, i32* %i809
  %tmp823 = mul i32 %c_mat776, %i_v822
  %index824 = add i32 %j_v821, %tmp823
  %element_ptr825 = getelementptr double, double* %mat_mat808, i32 %index824
  %tmp_element826 = fmul double %tmp_element820, %d2769
  store double %tmp_element826, double* %element_ptr825
  %j_v827 = load i32, i32* %j812
  %tmp828 = add i32 %j_v827, 1
  store i32 %tmp828, i32* %j812
  br label %while813

merge829:                                         ; preds = %while813
  %i_v832 = load i32, i32* %i809
  %tmp833 = add i32 %i_v832, 1
  store i32 %tmp833, i32* %i809
  br label %while810

merge834:                                         ; preds = %while810
  %m_mat837 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 0
  %mat_mat838 = load double*, double** %m_mat837
  %m_r839 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 1
  %r_mat840 = load i32, i32* %m_r839
  %m_c841 = getelementptr inbounds %matrix_t, %matrix_t* %m780, i32 0, i32 2
  %c_mat842 = load i32, i32* %m_c841
  %tmp843 = sub i32 %r_mat840, 1
  %tmp844 = sub i32 %c_mat842, 1
  %i845 = alloca i32
  store i32 0, i32* %i845
  br label %while846

while846:                                         ; preds = %merge861, %merge834
  %i_v868 = load i32, i32* %i845
  %bool_val869 = icmp sle i32 %i_v868, %tmp843
  br i1 %bool_val869, label %while_body847, label %merge867

while_body847:                                    ; preds = %while846
  %j848 = alloca i32
  store i32 0, i32* %j848
  br label %while849

while849:                                         ; preds = %while_body850, %while_body847
  %j_v862 = load i32, i32* %j848
  %bool_val863 = icmp sle i32 %j_v862, %tmp844
  br i1 %bool_val863, label %while_body850, label %merge861

while_body850:                                    ; preds = %while849
  %j_v851 = load i32, i32* %j848
  %i_v852 = load i32, i32* %i845
  %tmp853 = mul i32 %c_mat842, %i_v852
  %index854 = add i32 %j_v851, %tmp853
  %element_ptr855 = getelementptr double, double* %mat_mat838, i32 %index854
  %tmp_element856 = load double, double* %element_ptr855
  %printf857 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element856)
  %printf858 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v859 = load i32, i32* %j848
  %tmp860 = add i32 %j_v859, 1
  store i32 %tmp860, i32* %j848
  br label %while849

merge861:                                         ; preds = %while849
  %printf864 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v865 = load i32, i32* %i845
  %tmp866 = add i32 %i_v865, 1
  store i32 %tmp866, i32* %i845
  br label %while846

merge867:                                         ; preds = %while846
  %printf870 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%return_t.2* getelementptr (%return_t.2, %return_t.2* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.2*
  %return0 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 0
  store i32 1, i32* %return0
  %return1 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 1
  store double 2.000000e+00, double* %return1
  %return2 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @system_string.13, i32 0, i32 0), i8** %return2
  ret %return_t.2* %return
  %tmp871 = alloca %return_t.2
  ret %return_t.2* %tmp871
}
