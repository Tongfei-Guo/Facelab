; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }
%return_t.2 = type { i32, double, i8* }
%return_t.1 = type { %matrix_t*, %matrix_t*, double }
%matrix_size_t = type { i32, i32 }
%zero_matrix_t = type { %matrix_t* }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"
@system_string = private unnamed_addr constant [4 x i8] c" : \00"
@system_string.9 = private unnamed_addr constant [4 x i8] c" : \00"
@system_string.10 = private unnamed_addr constant [3 x i8] c"m1\00"
@system_string.11 = private unnamed_addr constant [5 x i8] c"haha\00"
@system_string.12 = private unnamed_addr constant [3 x i8] c"m1\00"
@system_string.13 = private unnamed_addr constant [5 x i8] c"haha\00"
@system_string.14 = private unnamed_addr constant [1 x i8] zeroinitializer
@system_string.15 = private unnamed_addr constant [3 x i8] c"m2\00"

define i32 @main() {
entry:
  %i = alloca i32
  store i32 0, i32* %i
  %d = alloca double
  store double 0.000000e+00, double* %d
  %s = alloca i8*
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @system_string.14, i32 0, i32 0), i8** %s
  %system_mat = alloca double, i32 4
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 0x4020666666666666, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 1.634000e+02, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 9.246000e+02, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 9.990000e+01, double* %element_ptr3
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 2, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 2, i32* %m_c
  %system_mat4 = alloca double, i32 4
  %element_ptr5 = getelementptr double, double* %system_mat4, i32 0
  store double 1.000000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat4, i32 1
  store double 2.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat4, i32 2
  store double 3.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat4, i32 3
  store double 4.000000e+00, double* %element_ptr8
  %m9 = alloca %matrix_t
  %m_mat10 = getelementptr inbounds %matrix_t, %matrix_t* %m9, i32 0, i32 0
  store double* %system_mat4, double** %m_mat10
  %m_r11 = getelementptr inbounds %matrix_t, %matrix_t* %m9, i32 0, i32 1
  store i32 2, i32* %m_r11
  %m_c12 = getelementptr inbounds %matrix_t, %matrix_t* %m9, i32 0, i32 2
  store i32 2, i32* %m_c12
  %f2_result = call %return_t.2* @f2(%matrix_t* %m9, %matrix_t* %m, double 4.000000e+00)
  %v_ptr = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp = load i32, i32* %i
  store i32 %v, i32* %i
  %v_ptr13 = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 1
  %v14 = load double, double* %v_ptr13
  %tmp15 = load double, double* %d
  store double %v14, double* %d
  %v_ptr16 = getelementptr inbounds %return_t.2, %return_t.2* %f2_result, i32 0, i32 2
  %v17 = load i8*, i8** %v_ptr16
  %tmp18 = load i8*, i8** %s
  store i8* %v17, i8** %s
  %0 = bitcast %return_t.2* %f2_result to i8*
  tail call void @free(i8* %0)
  %system_mat19 = alloca double, i32 4
  %element_ptr20 = getelementptr double, double* %system_mat19, i32 0
  store double 0x4020666666666666, double* %element_ptr20
  %element_ptr21 = getelementptr double, double* %system_mat19, i32 1
  store double 1.634000e+02, double* %element_ptr21
  %element_ptr22 = getelementptr double, double* %system_mat19, i32 2
  store double 9.246000e+02, double* %element_ptr22
  %element_ptr23 = getelementptr double, double* %system_mat19, i32 3
  store double 9.990000e+01, double* %element_ptr23
  %m24 = alloca %matrix_t
  %m_mat25 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 0
  store double* %system_mat19, double** %m_mat25
  %m_r26 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 1
  store i32 2, i32* %m_r26
  %m_c27 = getelementptr inbounds %matrix_t, %matrix_t* %m24, i32 0, i32 2
  store i32 2, i32* %m_c27
  %system_mat28 = alloca double, i32 4
  %element_ptr29 = getelementptr double, double* %system_mat28, i32 0
  store double 1.000000e+00, double* %element_ptr29
  %element_ptr30 = getelementptr double, double* %system_mat28, i32 1
  store double 2.000000e+00, double* %element_ptr30
  %element_ptr31 = getelementptr double, double* %system_mat28, i32 2
  store double 3.000000e+00, double* %element_ptr31
  %element_ptr32 = getelementptr double, double* %system_mat28, i32 3
  store double 4.000000e+00, double* %element_ptr32
  %m33 = alloca %matrix_t
  %m_mat34 = getelementptr inbounds %matrix_t, %matrix_t* %m33, i32 0, i32 0
  store double* %system_mat28, double** %m_mat34
  %m_r35 = getelementptr inbounds %matrix_t, %matrix_t* %m33, i32 0, i32 1
  store i32 2, i32* %m_r35
  %m_c36 = getelementptr inbounds %matrix_t, %matrix_t* %m33, i32 0, i32 2
  store i32 2, i32* %m_c36
  %system_mat37 = alloca double, i32 4
  %element_ptr38 = getelementptr double, double* %system_mat37, i32 0
  store double 1.000000e+00, double* %element_ptr38
  %element_ptr39 = getelementptr double, double* %system_mat37, i32 1
  store double 2.000000e+00, double* %element_ptr39
  %element_ptr40 = getelementptr double, double* %system_mat37, i32 2
  store double 3.000000e+00, double* %element_ptr40
  %element_ptr41 = getelementptr double, double* %system_mat37, i32 3
  store double 4.000000e+00, double* %element_ptr41
  %m42 = alloca %matrix_t
  %m_mat43 = getelementptr inbounds %matrix_t, %matrix_t* %m42, i32 0, i32 0
  store double* %system_mat37, double** %m_mat43
  %m_r44 = getelementptr inbounds %matrix_t, %matrix_t* %m42, i32 0, i32 1
  store i32 2, i32* %m_r44
  %m_c45 = getelementptr inbounds %matrix_t, %matrix_t* %m42, i32 0, i32 2
  store i32 2, i32* %m_c45
  %f_result = call %return_t.1* @f(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @system_string.15, i32 0, i32 0), %matrix_t* %m42, %matrix_t* %m33, %matrix_t* %m24, double 4.000000e+00)
  %i46 = load i32, i32* %i
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_int, i32 0, i32 0), i32 %i46)
  %printf47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %d48 = load double, double* %d
  %printf49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %d48)
  %printf50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %s51 = load i8*, i8** %s
  %printf52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* %s51)
  %printf53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %system_mat54 = alloca double, i32 4
  %element_ptr55 = getelementptr double, double* %system_mat54, i32 0
  store double 1.000000e+00, double* %element_ptr55
  %element_ptr56 = getelementptr double, double* %system_mat54, i32 1
  store double 2.000000e+00, double* %element_ptr56
  %element_ptr57 = getelementptr double, double* %system_mat54, i32 2
  store double 3.000000e+00, double* %element_ptr57
  %element_ptr58 = getelementptr double, double* %system_mat54, i32 3
  store double 4.000000e+00, double* %element_ptr58
  %m59 = alloca %matrix_t
  %m_mat60 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 0
  store double* %system_mat54, double** %m_mat60
  %m_r61 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 1
  store i32 2, i32* %m_r61
  %m_c62 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 2
  store i32 2, i32* %m_c62
  %system_mat63 = alloca double, i32 4
  %element_ptr64 = getelementptr double, double* %system_mat63, i32 0
  store double 1.000000e+00, double* %element_ptr64
  %element_ptr65 = getelementptr double, double* %system_mat63, i32 1
  store double 2.000000e+00, double* %element_ptr65
  %element_ptr66 = getelementptr double, double* %system_mat63, i32 2
  store double 3.000000e+00, double* %element_ptr66
  %element_ptr67 = getelementptr double, double* %system_mat63, i32 3
  store double 4.000000e+00, double* %element_ptr67
  %m68 = alloca %matrix_t
  %m_mat69 = getelementptr inbounds %matrix_t, %matrix_t* %m68, i32 0, i32 0
  store double* %system_mat63, double** %m_mat69
  %m_r70 = getelementptr inbounds %matrix_t, %matrix_t* %m68, i32 0, i32 1
  store i32 2, i32* %m_r70
  %m_c71 = getelementptr inbounds %matrix_t, %matrix_t* %m68, i32 0, i32 2
  store i32 2, i32* %m_c71
  %m_r72 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 1
  %r_mat = load i32, i32* %m_r72
  %m_r73 = getelementptr inbounds %matrix_t, %matrix_t* %m68, i32 0, i32 1
  %r_mat74 = load i32, i32* %m_r73
  %tmp84 = icmp ne i32 %r_mat, %r_mat74
  br i1 %tmp84, label %then, label %else

merge:                                            ; preds = %merge79, %then
  %m_mat85 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat85
  %m_r86 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 1
  %r_mat87 = load i32, i32* %m_r86
  %tmp88 = sub i32 %r_mat87, 1
  %m_c89 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 2
  %c_mat90 = load i32, i32* %m_c89
  %tmp91 = sub i32 %c_mat90, 1
  %m_mat92 = getelementptr inbounds %matrix_t, %matrix_t* %m68, i32 0, i32 0
  %mat_v = load double*, double** %m_mat92
  %result = alloca i1
  store i1 true, i1* %result
  %i93 = alloca i32
  store i32 0, i32* %i93
  br label %while

then:                                             ; preds = %entry
  %printf75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge

else:                                             ; preds = %entry
  %m_c76 = getelementptr inbounds %matrix_t, %matrix_t* %m59, i32 0, i32 2
  %c_mat = load i32, i32* %m_c76
  %m_c77 = getelementptr inbounds %matrix_t, %matrix_t* %m68, i32 0, i32 2
  %c_mat78 = load i32, i32* %m_c77
  %tmp83 = icmp ne i32 %c_mat, %c_mat78
  br i1 %tmp83, label %then80, label %else82

merge79:                                          ; preds = %else82, %then80
  br label %merge

then80:                                           ; preds = %else
  %printf81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge79

else82:                                           ; preds = %else
  br label %merge79

while:                                            ; preds = %merge110, %merge
  %i_v115 = load i32, i32* %i93
  %bool_val116 = icmp sle i32 %i_v115, %tmp88
  br i1 %bool_val116, label %while_body, label %merge114

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while94

while94:                                          ; preds = %merge104, %while_body
  %j_v111 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v111, %tmp91
  br i1 %bool_val, label %while_body95, label %merge110

while_body95:                                     ; preds = %while94
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i93
  %tmp96 = mul i32 %c_mat90, %i_v
  %index = add i32 %j_v, %tmp96
  %element_ptr97 = getelementptr double, double* %mat_mat, i32 %index
  %tmp_element = load double, double* %element_ptr97
  %j_v98 = load i32, i32* %j
  %i_v99 = load i32, i32* %i93
  %tmp100 = mul i32 %c_mat90, %i_v99
  %index101 = add i32 %j_v98, %tmp100
  %element_ptr102 = getelementptr double, double* %mat_v, i32 %index101
  %tmp_element103 = load double, double* %element_ptr102
  %tmp107 = fcmp one double %tmp_element, %tmp_element103
  br i1 %tmp107, label %then105, label %else106

merge104:                                         ; preds = %else106, %then105
  %j_v108 = load i32, i32* %j
  %tmp109 = add i32 %j_v108, 1
  store i32 %tmp109, i32* %j
  br label %while94

then105:                                          ; preds = %while_body95
  store i1 false, i1* %result
  br label %merge104

else106:                                          ; preds = %while_body95
  br label %merge104

merge110:                                         ; preds = %while94
  %i_v112 = load i32, i32* %i93
  %tmp113 = add i32 %i_v112, 1
  store i32 %tmp113, i32* %i93
  br label %while

merge114:                                         ; preds = %while
  %result117 = load i1, i1* %result
  %tmp123 = icmp ne i1 true, %result117
  br i1 %tmp123, label %then119, label %else121

merge118:                                         ; preds = %else121, %then119
  %printf124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %system_mat126 = alloca double, i32 4
  %element_ptr127 = getelementptr double, double* %system_mat126, i32 0
  store double 0x4020666666666666, double* %element_ptr127
  %element_ptr128 = getelementptr double, double* %system_mat126, i32 1
  store double 1.634000e+02, double* %element_ptr128
  %element_ptr129 = getelementptr double, double* %system_mat126, i32 2
  store double 9.246000e+02, double* %element_ptr129
  %element_ptr130 = getelementptr double, double* %system_mat126, i32 3
  store double 9.990000e+01, double* %element_ptr130
  %m131 = alloca %matrix_t
  %m_mat132 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 0
  store double* %system_mat126, double** %m_mat132
  %m_r133 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 1
  store i32 2, i32* %m_r133
  %m_c134 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 2
  store i32 2, i32* %m_c134
  %m_r135 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 1
  %r_mat136 = load i32, i32* %m_r135
  %m_c137 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 2
  %c_mat138 = load i32, i32* %m_c137
  %size = mul i32 %r_mat136, %c_mat138
  %system_mat139 = alloca double, i32 %size
  %m140 = alloca %matrix_t
  %m_mat141 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 0
  store double* %system_mat139, double** %m_mat141
  %m_r142 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 1
  store i32 %r_mat136, i32* %m_r142
  %m_c143 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 2
  store i32 %c_mat138, i32* %m_c143
  %tmp144 = sub i32 %r_mat136, 1
  %tmp145 = sub i32 %c_mat138, 1
  %i146 = alloca i32
  store i32 0, i32* %i146
  br label %while147

then119:                                          ; preds = %merge114
  %printf120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge118

else121:                                          ; preds = %merge114
  %printf122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge118

while147:                                         ; preds = %merge159, %merge118
  %i_v165 = load i32, i32* %i146
  %bool_val166 = icmp sle i32 %i_v165, %tmp144
  br i1 %bool_val166, label %while_body148, label %merge164

while_body148:                                    ; preds = %while147
  %j149 = alloca i32
  store i32 0, i32* %j149
  br label %while150

while150:                                         ; preds = %while_body151, %while_body148
  %j_v160 = load i32, i32* %j149
  %bool_val161 = icmp sle i32 %j_v160, %tmp145
  br i1 %bool_val161, label %while_body151, label %merge159

while_body151:                                    ; preds = %while150
  %j_v152 = load i32, i32* %j149
  %i_v153 = load i32, i32* %i146
  %tmp154 = mul i32 %c_mat138, %i_v153
  %index155 = add i32 %j_v152, %tmp154
  %element_ptr156 = getelementptr double, double* %system_mat139, i32 %index155
  store double 0.000000e+00, double* %element_ptr156
  %j_v157 = load i32, i32* %j149
  %tmp158 = add i32 %j_v157, 1
  store i32 %tmp158, i32* %j149
  br label %while150

merge159:                                         ; preds = %while150
  %i_v162 = load i32, i32* %i146
  %tmp163 = add i32 %i_v162, 1
  store i32 %tmp163, i32* %i146
  br label %while147

merge164:                                         ; preds = %while147
  %tmp167 = sub i32 %c_mat138, 1
  %tmp168 = sub i32 %r_mat136, 1
  %m_mat169 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 0
  %mat_mat170 = load double*, double** %m_mat169
  %m_r171 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 1
  %r_mat172 = load i32, i32* %m_r171
  %m_c173 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 2
  %c_mat174 = load i32, i32* %m_c173
  %m_mat175 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 0
  %mat_v176 = load double*, double** %m_mat175
  %m_r177 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 1
  %r_v = load i32, i32* %m_r177
  %m_c178 = getelementptr inbounds %matrix_t, %matrix_t* %m131, i32 0, i32 2
  %c_v = load i32, i32* %m_c178
  %i179 = alloca i32
  store i32 0, i32* %i179
  br label %while180

while180:                                         ; preds = %merge202, %merge164
  %i_v208 = load i32, i32* %i179
  %bool_val209 = icmp sle i32 %i_v208, %tmp168
  br i1 %bool_val209, label %while_body181, label %merge207

while_body181:                                    ; preds = %while180
  %j182 = alloca i32
  store i32 0, i32* %j182
  br label %while183

while183:                                         ; preds = %while_body184, %while_body181
  %j_v203 = load i32, i32* %j182
  %bool_val204 = icmp sle i32 %j_v203, %tmp167
  br i1 %bool_val204, label %while_body184, label %merge202

while_body184:                                    ; preds = %while183
  %j_v185 = load i32, i32* %j182
  %i_v186 = load i32, i32* %i179
  %tmp187 = mul i32 %c_mat174, %i_v186
  %index188 = add i32 %j_v185, %tmp187
  %element_ptr189 = getelementptr double, double* %mat_mat170, i32 %index188
  %j_v190 = load i32, i32* %j182
  %tmp191 = sub i32 %j_v190, 0
  %tmp192 = add i32 %tmp191, 0
  %i_v193 = load i32, i32* %i179
  %tmp194 = sub i32 %i_v193, 0
  %tmp195 = add i32 %tmp194, 0
  %tmp196 = mul i32 %c_v, %tmp195
  %index197 = add i32 %tmp192, %tmp196
  %element_ptr198 = getelementptr double, double* %mat_v176, i32 %index197
  %tmp_element199 = load double, double* %element_ptr198
  store double %tmp_element199, double* %element_ptr189
  %j_v200 = load i32, i32* %j182
  %tmp201 = add i32 %j_v200, 1
  store i32 %tmp201, i32* %j182
  br label %while183

merge202:                                         ; preds = %while183
  %i_v205 = load i32, i32* %i179
  %tmp206 = add i32 %i_v205, 1
  store i32 %tmp206, i32* %i179
  br label %while180

merge207:                                         ; preds = %while180
  %system_mat210 = alloca double, i32 4
  %element_ptr211 = getelementptr double, double* %system_mat210, i32 0
  store double 1.000000e+00, double* %element_ptr211
  %element_ptr212 = getelementptr double, double* %system_mat210, i32 1
  store double 2.000000e+00, double* %element_ptr212
  %element_ptr213 = getelementptr double, double* %system_mat210, i32 2
  store double 3.000000e+00, double* %element_ptr213
  %element_ptr214 = getelementptr double, double* %system_mat210, i32 3
  store double 4.000000e+00, double* %element_ptr214
  %m215 = alloca %matrix_t
  %m_mat216 = getelementptr inbounds %matrix_t, %matrix_t* %m215, i32 0, i32 0
  store double* %system_mat210, double** %m_mat216
  %m_r217 = getelementptr inbounds %matrix_t, %matrix_t* %m215, i32 0, i32 1
  store i32 2, i32* %m_r217
  %m_c218 = getelementptr inbounds %matrix_t, %matrix_t* %m215, i32 0, i32 2
  store i32 2, i32* %m_c218
  %m_r219 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 1
  %r_mat220 = load i32, i32* %m_r219
  %m_r221 = getelementptr inbounds %matrix_t, %matrix_t* %m215, i32 0, i32 1
  %r_mat222 = load i32, i32* %m_r221
  %tmp236 = icmp ne i32 %r_mat220, %r_mat222
  br i1 %tmp236, label %then224, label %else226

merge223:                                         ; preds = %merge231, %then224
  %m_mat237 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 0
  %mat_mat238 = load double*, double** %m_mat237
  %m_r239 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 1
  %r_mat240 = load i32, i32* %m_r239
  %tmp241 = sub i32 %r_mat240, 1
  %m_c242 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 2
  %c_mat243 = load i32, i32* %m_c242
  %tmp244 = sub i32 %c_mat243, 1
  %m_mat245 = getelementptr inbounds %matrix_t, %matrix_t* %m215, i32 0, i32 0
  %mat_v246 = load double*, double** %m_mat245
  %result247 = alloca i1
  store i1 true, i1* %result247
  %i248 = alloca i32
  store i32 0, i32* %i248
  br label %while249

then224:                                          ; preds = %merge207
  %printf225 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge223

else226:                                          ; preds = %merge207
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m140, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %m_c229 = getelementptr inbounds %matrix_t, %matrix_t* %m215, i32 0, i32 2
  %c_mat230 = load i32, i32* %m_c229
  %tmp235 = icmp ne i32 %c_mat228, %c_mat230
  br i1 %tmp235, label %then232, label %else234

merge231:                                         ; preds = %else234, %then232
  br label %merge223

then232:                                          ; preds = %else226
  %printf233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge231

else234:                                          ; preds = %else226
  br label %merge231

while249:                                         ; preds = %merge272, %merge223
  %i_v278 = load i32, i32* %i248
  %bool_val279 = icmp sle i32 %i_v278, %tmp241
  br i1 %bool_val279, label %while_body250, label %merge277

while_body250:                                    ; preds = %while249
  %j251 = alloca i32
  store i32 0, i32* %j251
  br label %while252

while252:                                         ; preds = %merge266, %while_body250
  %j_v273 = load i32, i32* %j251
  %bool_val274 = icmp sle i32 %j_v273, %tmp244
  br i1 %bool_val274, label %while_body253, label %merge272

while_body253:                                    ; preds = %while252
  %j_v254 = load i32, i32* %j251
  %i_v255 = load i32, i32* %i248
  %tmp256 = mul i32 %c_mat243, %i_v255
  %index257 = add i32 %j_v254, %tmp256
  %element_ptr258 = getelementptr double, double* %mat_mat238, i32 %index257
  %tmp_element259 = load double, double* %element_ptr258
  %j_v260 = load i32, i32* %j251
  %i_v261 = load i32, i32* %i248
  %tmp262 = mul i32 %c_mat243, %i_v261
  %index263 = add i32 %j_v260, %tmp262
  %element_ptr264 = getelementptr double, double* %mat_v246, i32 %index263
  %tmp_element265 = load double, double* %element_ptr264
  %tmp269 = fcmp one double %tmp_element259, %tmp_element265
  br i1 %tmp269, label %then267, label %else268

merge266:                                         ; preds = %else268, %then267
  %j_v270 = load i32, i32* %j251
  %tmp271 = add i32 %j_v270, 1
  store i32 %tmp271, i32* %j251
  br label %while252

then267:                                          ; preds = %while_body253
  store i1 false, i1* %result247
  br label %merge266

else268:                                          ; preds = %while_body253
  br label %merge266

merge272:                                         ; preds = %while252
  %i_v275 = load i32, i32* %i248
  %tmp276 = add i32 %i_v275, 1
  store i32 %tmp276, i32* %i248
  br label %while249

merge277:                                         ; preds = %while249
  %result280 = load i1, i1* %result247
  %tmp286 = icmp ne i1 true, %result280
  br i1 %tmp286, label %then282, label %else284

merge281:                                         ; preds = %else284, %then282
  %printf287 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  ret i32 0

then282:                                          ; preds = %merge277
  %printf283 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge281

else284:                                          ; preds = %merge277
  %printf285 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge281
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  store double 0.000000e+00, double* %k
  %i133 = alloca i32
  store i32 0, i32* %i133
  %j134 = alloca i32
  store i32 0, i32* %j134
  %tmp135 = load i32, i32* %i133
  store i32 0, i32* %i133
  br label %while136

while136:                                         ; preds = %merge259, %merge130
  %i266 = load i32, i32* %i133
  %tmp267 = icmp slt i32 %i266, 3
  br i1 %tmp267, label %while_body137, label %merge265

while_body137:                                    ; preds = %while136
  %tmp138 = load i32, i32* %j134
  store i32 0, i32* %j134
  br label %while139

while139:                                         ; preds = %merge242, %while_body137
  %j260 = load i32, i32* %j134
  %tmp261 = icmp slt i32 %j260, 3
  br i1 %tmp261, label %while_body140, label %merge259

while_body140:                                    ; preds = %while139
  %k141 = load double, double* %k
  %m_r142 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat143 = load i32, i32* %m_r142
  %m_c144 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat145 = load i32, i32* %m_c144
  %i146 = load i32, i32* %i133
  %tmp148 = icmp sgt i32 0, %i146
  br i1 %tmp148, label %then, label %else

merge147:                                         ; preds = %else, %then
  %tmp149 = sub i32 %r_mat143, 1
  %tmp154 = icmp slt i32 %tmp149, %i146
  br i1 %tmp154, label %then151, label %else153

then:                                             ; preds = %while_body140
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge147

else:                                             ; preds = %while_body140
  br label %merge147

merge150:                                         ; preds = %else153, %then151
  %i155 = load i32, i32* %i133
  %tmp160 = icmp sgt i32 0, %i155
  br i1 %tmp160, label %then157, label %else159

then151:                                          ; preds = %merge147
  %printf152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge150

else153:                                          ; preds = %merge147
  br label %merge150

merge156:                                         ; preds = %else159, %then157
  %tmp161 = sub i32 %r_mat143, 1
  %tmp166 = icmp slt i32 %tmp161, %i155
  br i1 %tmp166, label %then163, label %else165

then157:                                          ; preds = %merge150
  %printf158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge156

else159:                                          ; preds = %merge150
  br label %merge156

merge162:                                         ; preds = %else165, %then163
  %j167 = load i32, i32* %j134
  %tmp172 = icmp sgt i32 0, %j167
  br i1 %tmp172, label %then169, label %else171

then163:                                          ; preds = %merge156
  %printf164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge162

else165:                                          ; preds = %merge156
  br label %merge162

merge168:                                         ; preds = %else171, %then169
  %tmp173 = sub i32 %c_mat145, 1
  %tmp178 = icmp slt i32 %tmp173, %j167
  br i1 %tmp178, label %then175, label %else177

then169:                                          ; preds = %merge162
  %printf170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge168

else171:                                          ; preds = %merge162
  br label %merge168

merge174:                                         ; preds = %else177, %then175
  %j179 = load i32, i32* %j134
  %tmp184 = icmp sgt i32 0, %j179
  br i1 %tmp184, label %then181, label %else183

then175:                                          ; preds = %merge168
  %printf176 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge174

else177:                                          ; preds = %merge168
  br label %merge174

merge180:                                         ; preds = %else183, %then181
  %tmp185 = sub i32 %c_mat145, 1
  %tmp190 = icmp slt i32 %tmp185, %j179
  br i1 %tmp190, label %then187, label %else189

then181:                                          ; preds = %merge174
  %printf182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge180

else183:                                          ; preds = %merge174
  br label %merge180

merge186:                                         ; preds = %else189, %then187
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat191 = load double*, double** %mat
  %tmp192 = mul i32 %c_mat145, %i146
  %index193 = add i32 %j167, %tmp192
  %element_ptr194 = getelementptr double, double* %mat191, i32 %index193
  %element = load double, double* %element_ptr194
  %m_r195 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat196 = load i32, i32* %m_r195
  %m_c197 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat198 = load i32, i32* %m_c197
  %i199 = load i32, i32* %i133
  %tmp204 = icmp sgt i32 0, %i199
  br i1 %tmp204, label %then201, label %else203

then187:                                          ; preds = %merge180
  %printf188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge186

else189:                                          ; preds = %merge180
  br label %merge186

merge200:                                         ; preds = %else203, %then201
  %tmp205 = sub i32 %r_mat196, 1
  %tmp210 = icmp slt i32 %tmp205, %i199
  br i1 %tmp210, label %then207, label %else209

then201:                                          ; preds = %merge186
  %printf202 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge200

else203:                                          ; preds = %merge186
  br label %merge200

merge206:                                         ; preds = %else209, %then207
  %i211 = load i32, i32* %i133
  %tmp216 = icmp sgt i32 0, %i211
  br i1 %tmp216, label %then213, label %else215

then207:                                          ; preds = %merge200
  %printf208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge206

else209:                                          ; preds = %merge200
  br label %merge206

merge212:                                         ; preds = %else215, %then213
  %tmp217 = sub i32 %r_mat196, 1
  %tmp222 = icmp slt i32 %tmp217, %i211
  br i1 %tmp222, label %then219, label %else221

then213:                                          ; preds = %merge206
  %printf214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge212

else215:                                          ; preds = %merge206
  br label %merge212

merge218:                                         ; preds = %else221, %then219
  %j223 = load i32, i32* %j134
  %tmp228 = icmp sgt i32 0, %j223
  br i1 %tmp228, label %then225, label %else227

then219:                                          ; preds = %merge212
  %printf220 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge218

else221:                                          ; preds = %merge212
  br label %merge218

merge224:                                         ; preds = %else227, %then225
  %tmp229 = sub i32 %c_mat198, 1
  %tmp234 = icmp slt i32 %tmp229, %j223
  br i1 %tmp234, label %then231, label %else233

then225:                                          ; preds = %merge218
  %printf226 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge224

else227:                                          ; preds = %merge218
  br label %merge224

merge230:                                         ; preds = %else233, %then231
  %j235 = load i32, i32* %j134
  %tmp240 = icmp sgt i32 0, %j235
  br i1 %tmp240, label %then237, label %else239

then231:                                          ; preds = %merge224
  %printf232 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge230

else233:                                          ; preds = %merge224
  br label %merge230

merge236:                                         ; preds = %else239, %then237
  %tmp241 = sub i32 %c_mat198, 1
  %tmp246 = icmp slt i32 %tmp241, %j235
  br i1 %tmp246, label %then243, label %else245

then237:                                          ; preds = %merge230
  %printf238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge236

else239:                                          ; preds = %merge230
  br label %merge236

merge242:                                         ; preds = %else245, %then243
  %mat247 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat248 = load double*, double** %mat247
  %tmp249 = mul i32 %c_mat198, %i199
  %index250 = add i32 %j223, %tmp249
  %element_ptr251 = getelementptr double, double* %mat248, i32 %index250
  %element252 = load double, double* %element_ptr251
  %tmp253 = fmul double %element, %element252
  %tmp254 = fadd double %k141, %tmp253
  %tmp255 = load double, double* %k
  store double %tmp254, double* %k
  %j256 = load i32, i32* %j134
  %tmp257 = add i32 %j256, 1
  %tmp258 = load i32, i32* %j134
  store i32 %tmp257, i32* %j134
  br label %while139

then243:                                          ; preds = %merge236
  %printf244 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge242

else245:                                          ; preds = %merge236
  br label %merge242

merge259:                                         ; preds = %while139
  %i262 = load i32, i32* %i133
  %tmp263 = add i32 %i262, 1
  %tmp264 = load i32, i32* %i133
  store i32 %tmp263, i32* %i133
  br label %while136

merge265:                                         ; preds = %while136
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k268 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k268, double* %return0
  ret %return_t* %return
  %tmp269 = alloca %return_t
  ret %return_t* %tmp269
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  store i32 0, i32* %a
  %b = alloca i32
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp133 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr134 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v135 = load i32, i32* %v_ptr134
  %tmp136 = load i32, i32* %b
  store i32 %v135, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b137 = load i32, i32* %b
  %tmp138 = add i32 %b137, 2
  %a139 = load i32, i32* %a
  %tmp140 = add i32 %a139, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp140, i32 %tmp138)
  %v_ptr141 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v142 = load %matrix_t*, %matrix_t** %v_ptr141
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat143 = getelementptr inbounds %matrix_t, %matrix_t* %v142, i32 0, i32 0
  %mat_mat144 = load double*, double** %m_mat143
  %m_r145 = getelementptr inbounds %matrix_t, %matrix_t* %v142, i32 0, i32 1
  %r_mat146 = load i32, i32* %m_r145
  %m_c147 = getelementptr inbounds %matrix_t, %matrix_t* %v142, i32 0, i32 2
  %c_mat148 = load i32, i32* %m_c147
  %size149 = mul i32 %r_mat146, %c_mat148
  %system_mat150 = alloca double, i32 %size149
  %m151 = alloca %matrix_t
  %m_mat152 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 0
  store double* %system_mat150, double** %m_mat152
  %m_r153 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 1
  store i32 %r_mat146, i32* %m_r153
  %m_c154 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 2
  store i32 %c_mat148, i32* %m_c154
  %tmp155 = sub i32 %r_mat146, 1
  %tmp156 = sub i32 %c_mat148, 1
  %i157 = alloca i32
  store i32 0, i32* %i157
  br label %while158

while158:                                         ; preds = %merge170, %merge130
  %i_v176 = load i32, i32* %i157
  %bool_val177 = icmp sle i32 %i_v176, %tmp155
  br i1 %bool_val177, label %while_body159, label %merge175

while_body159:                                    ; preds = %while158
  %j160 = alloca i32
  store i32 0, i32* %j160
  br label %while161

while161:                                         ; preds = %while_body162, %while_body159
  %j_v171 = load i32, i32* %j160
  %bool_val172 = icmp sle i32 %j_v171, %tmp156
  br i1 %bool_val172, label %while_body162, label %merge170

while_body162:                                    ; preds = %while161
  %j_v163 = load i32, i32* %j160
  %i_v164 = load i32, i32* %i157
  %tmp165 = mul i32 %c_mat148, %i_v164
  %index166 = add i32 %j_v163, %tmp165
  %element_ptr167 = getelementptr double, double* %system_mat150, i32 %index166
  store double 0.000000e+00, double* %element_ptr167
  %j_v168 = load i32, i32* %j160
  %tmp169 = add i32 %j_v168, 1
  store i32 %tmp169, i32* %j160
  br label %while161

merge170:                                         ; preds = %while161
  %i_v173 = load i32, i32* %i157
  %tmp174 = add i32 %i_v173, 1
  store i32 %tmp174, i32* %i157
  br label %while158

merge175:                                         ; preds = %while158
  %tmp178 = sub i32 %c_mat148, 1
  %tmp179 = sub i32 %r_mat146, 1
  %m_mat180 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 0
  %mat_mat181 = load double*, double** %m_mat180
  %m_r182 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 1
  %r_mat183 = load i32, i32* %m_r182
  %m_c184 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 2
  %c_mat185 = load i32, i32* %m_c184
  %m_mat186 = getelementptr inbounds %matrix_t, %matrix_t* %v142, i32 0, i32 0
  %mat_v187 = load double*, double** %m_mat186
  %m_r188 = getelementptr inbounds %matrix_t, %matrix_t* %v142, i32 0, i32 1
  %r_v189 = load i32, i32* %m_r188
  %m_c190 = getelementptr inbounds %matrix_t, %matrix_t* %v142, i32 0, i32 2
  %c_v191 = load i32, i32* %m_c190
  %i192 = alloca i32
  store i32 0, i32* %i192
  br label %while193

while193:                                         ; preds = %merge215, %merge175
  %i_v221 = load i32, i32* %i192
  %bool_val222 = icmp sle i32 %i_v221, %tmp179
  br i1 %bool_val222, label %while_body194, label %merge220

while_body194:                                    ; preds = %while193
  %j195 = alloca i32
  store i32 0, i32* %j195
  br label %while196

while196:                                         ; preds = %while_body197, %while_body194
  %j_v216 = load i32, i32* %j195
  %bool_val217 = icmp sle i32 %j_v216, %tmp178
  br i1 %bool_val217, label %while_body197, label %merge215

while_body197:                                    ; preds = %while196
  %j_v198 = load i32, i32* %j195
  %i_v199 = load i32, i32* %i192
  %tmp200 = mul i32 %c_mat185, %i_v199
  %index201 = add i32 %j_v198, %tmp200
  %element_ptr202 = getelementptr double, double* %mat_mat181, i32 %index201
  %j_v203 = load i32, i32* %j195
  %tmp204 = sub i32 %j_v203, 0
  %tmp205 = add i32 %tmp204, 0
  %i_v206 = load i32, i32* %i192
  %tmp207 = sub i32 %i_v206, 0
  %tmp208 = add i32 %tmp207, 0
  %tmp209 = mul i32 %c_v191, %tmp208
  %index210 = add i32 %tmp205, %tmp209
  %element_ptr211 = getelementptr double, double* %mat_v187, i32 %index210
  %tmp_element212 = load double, double* %element_ptr211
  store double %tmp_element212, double* %element_ptr202
  %j_v213 = load i32, i32* %j195
  %tmp214 = add i32 %j_v213, 1
  store i32 %tmp214, i32* %j195
  br label %while196

merge215:                                         ; preds = %while196
  %i_v218 = load i32, i32* %i192
  %tmp219 = add i32 %i_v218, 1
  store i32 %tmp219, i32* %i192
  br label %while193

merge220:                                         ; preds = %while193
  %4 = bitcast double* %mat_mat144 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v142 to i8*
  tail call void @free(i8* %5)
  %m_r223 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 1
  %r_mat224 = load i32, i32* %m_r223
  %m_c225 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 2
  %c_mat226 = load i32, i32* %m_c225
  %size227 = mul i32 %r_mat224, %c_mat226
  %system_mat228 = alloca double, i32 %size227
  %m229 = alloca %matrix_t
  %m_mat230 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 0
  store double* %system_mat228, double** %m_mat230
  %m_r231 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 1
  store i32 %r_mat224, i32* %m_r231
  %m_c232 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 2
  store i32 %c_mat226, i32* %m_c232
  %tmp233 = sub i32 %r_mat224, 1
  %tmp234 = sub i32 %c_mat226, 1
  %i235 = alloca i32
  store i32 0, i32* %i235
  br label %while236

while236:                                         ; preds = %merge248, %merge220
  %i_v254 = load i32, i32* %i235
  %bool_val255 = icmp sle i32 %i_v254, %tmp233
  br i1 %bool_val255, label %while_body237, label %merge253

while_body237:                                    ; preds = %while236
  %j238 = alloca i32
  store i32 0, i32* %j238
  br label %while239

while239:                                         ; preds = %while_body240, %while_body237
  %j_v249 = load i32, i32* %j238
  %bool_val250 = icmp sle i32 %j_v249, %tmp234
  br i1 %bool_val250, label %while_body240, label %merge248

while_body240:                                    ; preds = %while239
  %j_v241 = load i32, i32* %j238
  %i_v242 = load i32, i32* %i235
  %tmp243 = mul i32 %c_mat226, %i_v242
  %index244 = add i32 %j_v241, %tmp243
  %element_ptr245 = getelementptr double, double* %system_mat228, i32 %index244
  store double 0.000000e+00, double* %element_ptr245
  %j_v246 = load i32, i32* %j238
  %tmp247 = add i32 %j_v246, 1
  store i32 %tmp247, i32* %j238
  br label %while239

merge248:                                         ; preds = %while239
  %i_v251 = load i32, i32* %i235
  %tmp252 = add i32 %i_v251, 1
  store i32 %tmp252, i32* %i235
  br label %while236

merge253:                                         ; preds = %while236
  %tmp256 = sub i32 %c_mat226, 1
  %tmp257 = sub i32 %r_mat224, 1
  %m_mat258 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 0
  %mat_mat259 = load double*, double** %m_mat258
  %m_r260 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 1
  %r_mat261 = load i32, i32* %m_r260
  %m_c262 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 2
  %c_mat263 = load i32, i32* %m_c262
  %m_mat264 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 0
  %mat_v265 = load double*, double** %m_mat264
  %m_r266 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 1
  %r_v267 = load i32, i32* %m_r266
  %m_c268 = getelementptr inbounds %matrix_t, %matrix_t* %m151, i32 0, i32 2
  %c_v269 = load i32, i32* %m_c268
  %i270 = alloca i32
  store i32 0, i32* %i270
  br label %while271

while271:                                         ; preds = %merge293, %merge253
  %i_v299 = load i32, i32* %i270
  %bool_val300 = icmp sle i32 %i_v299, %tmp257
  br i1 %bool_val300, label %while_body272, label %merge298

while_body272:                                    ; preds = %while271
  %j273 = alloca i32
  store i32 0, i32* %j273
  br label %while274

while274:                                         ; preds = %while_body275, %while_body272
  %j_v294 = load i32, i32* %j273
  %bool_val295 = icmp sle i32 %j_v294, %tmp256
  br i1 %bool_val295, label %while_body275, label %merge293

while_body275:                                    ; preds = %while274
  %j_v276 = load i32, i32* %j273
  %i_v277 = load i32, i32* %i270
  %tmp278 = mul i32 %c_mat263, %i_v277
  %index279 = add i32 %j_v276, %tmp278
  %element_ptr280 = getelementptr double, double* %mat_mat259, i32 %index279
  %j_v281 = load i32, i32* %j273
  %tmp282 = sub i32 %j_v281, 0
  %tmp283 = add i32 %tmp282, 0
  %i_v284 = load i32, i32* %i270
  %tmp285 = sub i32 %i_v284, 0
  %tmp286 = add i32 %tmp285, 0
  %tmp287 = mul i32 %c_v269, %tmp286
  %index288 = add i32 %tmp283, %tmp287
  %element_ptr289 = getelementptr double, double* %mat_v265, i32 %index288
  %tmp_element290 = load double, double* %element_ptr289
  store double %tmp_element290, double* %element_ptr280
  %j_v291 = load i32, i32* %j273
  %tmp292 = add i32 %j_v291, 1
  store i32 %tmp292, i32* %j273
  br label %while274

merge293:                                         ; preds = %while274
  %i_v296 = load i32, i32* %i270
  %tmp297 = add i32 %i_v296, 1
  store i32 %tmp297, i32* %i270
  br label %while271

merge298:                                         ; preds = %while271
  %b301 = load i32, i32* %b
  %a302 = load i32, i32* %a
  %zeros_result303 = call %zero_matrix_t* @zeros(i32 %a302, i32 %b301)
  %v_ptr304 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result303, i32 0, i32 0
  %v305 = load %matrix_t*, %matrix_t** %v_ptr304
  %6 = bitcast %zero_matrix_t* %zeros_result303 to i8*
  tail call void @free(i8* %6)
  %m_mat306 = getelementptr inbounds %matrix_t, %matrix_t* %v305, i32 0, i32 0
  %mat_mat307 = load double*, double** %m_mat306
  %m_r308 = getelementptr inbounds %matrix_t, %matrix_t* %v305, i32 0, i32 1
  %r_mat309 = load i32, i32* %m_r308
  %m_c310 = getelementptr inbounds %matrix_t, %matrix_t* %v305, i32 0, i32 2
  %c_mat311 = load i32, i32* %m_c310
  %size312 = mul i32 %r_mat309, %c_mat311
  %system_mat313 = alloca double, i32 %size312
  %m314 = alloca %matrix_t
  %m_mat315 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 0
  store double* %system_mat313, double** %m_mat315
  %m_r316 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 1
  store i32 %r_mat309, i32* %m_r316
  %m_c317 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 2
  store i32 %c_mat311, i32* %m_c317
  %tmp318 = sub i32 %r_mat309, 1
  %tmp319 = sub i32 %c_mat311, 1
  %i320 = alloca i32
  store i32 0, i32* %i320
  br label %while321

while321:                                         ; preds = %merge333, %merge298
  %i_v339 = load i32, i32* %i320
  %bool_val340 = icmp sle i32 %i_v339, %tmp318
  br i1 %bool_val340, label %while_body322, label %merge338

while_body322:                                    ; preds = %while321
  %j323 = alloca i32
  store i32 0, i32* %j323
  br label %while324

while324:                                         ; preds = %while_body325, %while_body322
  %j_v334 = load i32, i32* %j323
  %bool_val335 = icmp sle i32 %j_v334, %tmp319
  br i1 %bool_val335, label %while_body325, label %merge333

while_body325:                                    ; preds = %while324
  %j_v326 = load i32, i32* %j323
  %i_v327 = load i32, i32* %i320
  %tmp328 = mul i32 %c_mat311, %i_v327
  %index329 = add i32 %j_v326, %tmp328
  %element_ptr330 = getelementptr double, double* %system_mat313, i32 %index329
  store double 0.000000e+00, double* %element_ptr330
  %j_v331 = load i32, i32* %j323
  %tmp332 = add i32 %j_v331, 1
  store i32 %tmp332, i32* %j323
  br label %while324

merge333:                                         ; preds = %while324
  %i_v336 = load i32, i32* %i320
  %tmp337 = add i32 %i_v336, 1
  store i32 %tmp337, i32* %i320
  br label %while321

merge338:                                         ; preds = %while321
  %tmp341 = sub i32 %c_mat311, 1
  %tmp342 = sub i32 %r_mat309, 1
  %m_mat343 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 0
  %mat_mat344 = load double*, double** %m_mat343
  %m_r345 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 1
  %r_mat346 = load i32, i32* %m_r345
  %m_c347 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 2
  %c_mat348 = load i32, i32* %m_c347
  %m_mat349 = getelementptr inbounds %matrix_t, %matrix_t* %v305, i32 0, i32 0
  %mat_v350 = load double*, double** %m_mat349
  %m_r351 = getelementptr inbounds %matrix_t, %matrix_t* %v305, i32 0, i32 1
  %r_v352 = load i32, i32* %m_r351
  %m_c353 = getelementptr inbounds %matrix_t, %matrix_t* %v305, i32 0, i32 2
  %c_v354 = load i32, i32* %m_c353
  %i355 = alloca i32
  store i32 0, i32* %i355
  br label %while356

while356:                                         ; preds = %merge378, %merge338
  %i_v384 = load i32, i32* %i355
  %bool_val385 = icmp sle i32 %i_v384, %tmp342
  br i1 %bool_val385, label %while_body357, label %merge383

while_body357:                                    ; preds = %while356
  %j358 = alloca i32
  store i32 0, i32* %j358
  br label %while359

while359:                                         ; preds = %while_body360, %while_body357
  %j_v379 = load i32, i32* %j358
  %bool_val380 = icmp sle i32 %j_v379, %tmp341
  br i1 %bool_val380, label %while_body360, label %merge378

while_body360:                                    ; preds = %while359
  %j_v361 = load i32, i32* %j358
  %i_v362 = load i32, i32* %i355
  %tmp363 = mul i32 %c_mat348, %i_v362
  %index364 = add i32 %j_v361, %tmp363
  %element_ptr365 = getelementptr double, double* %mat_mat344, i32 %index364
  %j_v366 = load i32, i32* %j358
  %tmp367 = sub i32 %j_v366, 0
  %tmp368 = add i32 %tmp367, 0
  %i_v369 = load i32, i32* %i355
  %tmp370 = sub i32 %i_v369, 0
  %tmp371 = add i32 %tmp370, 0
  %tmp372 = mul i32 %c_v354, %tmp371
  %index373 = add i32 %tmp368, %tmp372
  %element_ptr374 = getelementptr double, double* %mat_v350, i32 %index373
  %tmp_element375 = load double, double* %element_ptr374
  store double %tmp_element375, double* %element_ptr365
  %j_v376 = load i32, i32* %j358
  %tmp377 = add i32 %j_v376, 1
  store i32 %tmp377, i32* %j358
  br label %while359

merge378:                                         ; preds = %while359
  %i_v381 = load i32, i32* %i355
  %tmp382 = add i32 %i_v381, 1
  store i32 %tmp382, i32* %i355
  br label %while356

merge383:                                         ; preds = %while356
  %7 = bitcast double* %mat_mat307 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v305 to i8*
  tail call void @free(i8* %8)
  %m_r386 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 1
  %r_mat387 = load i32, i32* %m_r386
  %m_c388 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 2
  %c_mat389 = load i32, i32* %m_c388
  %size390 = mul i32 %r_mat387, %c_mat389
  %system_mat391 = alloca double, i32 %size390
  %m392 = alloca %matrix_t
  %m_mat393 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 0
  store double* %system_mat391, double** %m_mat393
  %m_r394 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 1
  store i32 %r_mat387, i32* %m_r394
  %m_c395 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 2
  store i32 %c_mat389, i32* %m_c395
  %tmp396 = sub i32 %r_mat387, 1
  %tmp397 = sub i32 %c_mat389, 1
  %i398 = alloca i32
  store i32 0, i32* %i398
  br label %while399

while399:                                         ; preds = %merge411, %merge383
  %i_v417 = load i32, i32* %i398
  %bool_val418 = icmp sle i32 %i_v417, %tmp396
  br i1 %bool_val418, label %while_body400, label %merge416

while_body400:                                    ; preds = %while399
  %j401 = alloca i32
  store i32 0, i32* %j401
  br label %while402

while402:                                         ; preds = %while_body403, %while_body400
  %j_v412 = load i32, i32* %j401
  %bool_val413 = icmp sle i32 %j_v412, %tmp397
  br i1 %bool_val413, label %while_body403, label %merge411

while_body403:                                    ; preds = %while402
  %j_v404 = load i32, i32* %j401
  %i_v405 = load i32, i32* %i398
  %tmp406 = mul i32 %c_mat389, %i_v405
  %index407 = add i32 %j_v404, %tmp406
  %element_ptr408 = getelementptr double, double* %system_mat391, i32 %index407
  store double 0.000000e+00, double* %element_ptr408
  %j_v409 = load i32, i32* %j401
  %tmp410 = add i32 %j_v409, 1
  store i32 %tmp410, i32* %j401
  br label %while402

merge411:                                         ; preds = %while402
  %i_v414 = load i32, i32* %i398
  %tmp415 = add i32 %i_v414, 1
  store i32 %tmp415, i32* %i398
  br label %while399

merge416:                                         ; preds = %while399
  %tmp419 = sub i32 %c_mat389, 1
  %tmp420 = sub i32 %r_mat387, 1
  %m_mat421 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 0
  %mat_mat422 = load double*, double** %m_mat421
  %m_r423 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 1
  %r_mat424 = load i32, i32* %m_r423
  %m_c425 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 2
  %c_mat426 = load i32, i32* %m_c425
  %m_mat427 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 0
  %mat_v428 = load double*, double** %m_mat427
  %m_r429 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 1
  %r_v430 = load i32, i32* %m_r429
  %m_c431 = getelementptr inbounds %matrix_t, %matrix_t* %m314, i32 0, i32 2
  %c_v432 = load i32, i32* %m_c431
  %i433 = alloca i32
  store i32 0, i32* %i433
  br label %while434

while434:                                         ; preds = %merge456, %merge416
  %i_v462 = load i32, i32* %i433
  %bool_val463 = icmp sle i32 %i_v462, %tmp420
  br i1 %bool_val463, label %while_body435, label %merge461

while_body435:                                    ; preds = %while434
  %j436 = alloca i32
  store i32 0, i32* %j436
  br label %while437

while437:                                         ; preds = %while_body438, %while_body435
  %j_v457 = load i32, i32* %j436
  %bool_val458 = icmp sle i32 %j_v457, %tmp419
  br i1 %bool_val458, label %while_body438, label %merge456

while_body438:                                    ; preds = %while437
  %j_v439 = load i32, i32* %j436
  %i_v440 = load i32, i32* %i433
  %tmp441 = mul i32 %c_mat426, %i_v440
  %index442 = add i32 %j_v439, %tmp441
  %element_ptr443 = getelementptr double, double* %mat_mat422, i32 %index442
  %j_v444 = load i32, i32* %j436
  %tmp445 = sub i32 %j_v444, 0
  %tmp446 = add i32 %tmp445, 0
  %i_v447 = load i32, i32* %i433
  %tmp448 = sub i32 %i_v447, 0
  %tmp449 = add i32 %tmp448, 0
  %tmp450 = mul i32 %c_v432, %tmp449
  %index451 = add i32 %tmp446, %tmp450
  %element_ptr452 = getelementptr double, double* %mat_v428, i32 %index451
  %tmp_element453 = load double, double* %element_ptr452
  store double %tmp_element453, double* %element_ptr443
  %j_v454 = load i32, i32* %j436
  %tmp455 = add i32 %j_v454, 1
  store i32 %tmp455, i32* %j436
  br label %while437

merge456:                                         ; preds = %while437
  %i_v459 = load i32, i32* %i433
  %tmp460 = add i32 %i_v459, 1
  store i32 %tmp460, i32* %i433
  br label %while434

merge461:                                         ; preds = %while434
  %m_r464 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat465 = load i32, i32* %m_r464
  %m_c466 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat467 = load i32, i32* %m_c466
  br i1 false, label %then, label %else

merge468:                                         ; preds = %else, %then
  %tmp469 = sub i32 %r_mat465, 1
  %tmp474 = icmp slt i32 %tmp469, 0
  br i1 %tmp474, label %then471, label %else473

then:                                             ; preds = %merge461
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge468

else:                                             ; preds = %merge461
  br label %merge468

merge470:                                         ; preds = %else473, %then471
  %a475 = load i32, i32* %a
  %tmp476 = sub i32 %a475, 1
  %tmp481 = icmp sgt i32 0, %tmp476
  br i1 %tmp481, label %then478, label %else480

then471:                                          ; preds = %merge468
  %printf472 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge470

else473:                                          ; preds = %merge468
  br label %merge470

merge477:                                         ; preds = %else480, %then478
  %tmp482 = sub i32 %r_mat465, 1
  %tmp487 = icmp slt i32 %tmp482, %tmp476
  br i1 %tmp487, label %then484, label %else486

then478:                                          ; preds = %merge470
  %printf479 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge477

else480:                                          ; preds = %merge470
  br label %merge477

merge483:                                         ; preds = %else486, %then484
  br i1 false, label %then489, label %else491

then484:                                          ; preds = %merge477
  %printf485 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge483

else486:                                          ; preds = %merge477
  br label %merge483

merge488:                                         ; preds = %else491, %then489
  %tmp492 = sub i32 %c_mat467, 1
  %tmp497 = icmp slt i32 %tmp492, 0
  br i1 %tmp497, label %then494, label %else496

then489:                                          ; preds = %merge483
  %printf490 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge488

else491:                                          ; preds = %merge483
  br label %merge488

merge493:                                         ; preds = %else496, %then494
  %b498 = load i32, i32* %b
  %tmp499 = sub i32 %b498, 1
  %tmp504 = icmp sgt i32 0, %tmp499
  br i1 %tmp504, label %then501, label %else503

then494:                                          ; preds = %merge488
  %printf495 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge493

else496:                                          ; preds = %merge488
  br label %merge493

merge500:                                         ; preds = %else503, %then501
  %tmp505 = sub i32 %c_mat467, 1
  %tmp510 = icmp slt i32 %tmp505, %tmp499
  br i1 %tmp510, label %then507, label %else509

then501:                                          ; preds = %merge493
  %printf502 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge500

else503:                                          ; preds = %merge493
  br label %merge500

merge506:                                         ; preds = %else509, %then507
  %tmp511 = sub i32 %tmp476, 0
  %tmp512 = sub i32 %tmp499, 0
  %tmp513 = add i32 %tmp512, 1
  %tmp514 = add i32 %tmp511, 1
  %size515 = mul i32 %tmp514, %tmp513
  %system_mat516 = alloca double, i32 %size515
  %m517 = alloca %matrix_t
  %m_mat518 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 0
  store double* %system_mat516, double** %m_mat518
  %m_r519 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 1
  store i32 %tmp514, i32* %m_r519
  %m_c520 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 2
  store i32 %tmp513, i32* %m_c520
  %tmp521 = sub i32 %tmp514, 1
  %tmp522 = sub i32 %tmp513, 1
  %i523 = alloca i32
  store i32 0, i32* %i523
  br label %while524

then507:                                          ; preds = %merge500
  %printf508 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge506

else509:                                          ; preds = %merge500
  br label %merge506

while524:                                         ; preds = %merge536, %merge506
  %i_v542 = load i32, i32* %i523
  %bool_val543 = icmp sle i32 %i_v542, %tmp521
  br i1 %bool_val543, label %while_body525, label %merge541

while_body525:                                    ; preds = %while524
  %j526 = alloca i32
  store i32 0, i32* %j526
  br label %while527

while527:                                         ; preds = %while_body528, %while_body525
  %j_v537 = load i32, i32* %j526
  %bool_val538 = icmp sle i32 %j_v537, %tmp522
  br i1 %bool_val538, label %while_body528, label %merge536

while_body528:                                    ; preds = %while527
  %j_v529 = load i32, i32* %j526
  %i_v530 = load i32, i32* %i523
  %tmp531 = mul i32 %tmp513, %i_v530
  %index532 = add i32 %j_v529, %tmp531
  %element_ptr533 = getelementptr double, double* %system_mat516, i32 %index532
  store double 0.000000e+00, double* %element_ptr533
  %j_v534 = load i32, i32* %j526
  %tmp535 = add i32 %j_v534, 1
  store i32 %tmp535, i32* %j526
  br label %while527

merge536:                                         ; preds = %while527
  %i_v539 = load i32, i32* %i523
  %tmp540 = add i32 %i_v539, 1
  store i32 %tmp540, i32* %i523
  br label %while524

merge541:                                         ; preds = %while524
  %m_mat544 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 0
  %mat_mat545 = load double*, double** %m_mat544
  %m_r546 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 1
  %r_mat547 = load i32, i32* %m_r546
  %m_c548 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 2
  %c_mat549 = load i32, i32* %m_c548
  %m_mat550 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v551 = load double*, double** %m_mat550
  %m_r552 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v553 = load i32, i32* %m_r552
  %m_c554 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v555 = load i32, i32* %m_c554
  %i556 = alloca i32
  store i32 0, i32* %i556
  br label %while557

while557:                                         ; preds = %merge579, %merge541
  %i_v585 = load i32, i32* %i556
  %bool_val586 = icmp sle i32 %i_v585, %tmp511
  br i1 %bool_val586, label %while_body558, label %merge584

while_body558:                                    ; preds = %while557
  %j559 = alloca i32
  store i32 0, i32* %j559
  br label %while560

while560:                                         ; preds = %while_body561, %while_body558
  %j_v580 = load i32, i32* %j559
  %bool_val581 = icmp sle i32 %j_v580, %tmp512
  br i1 %bool_val581, label %while_body561, label %merge579

while_body561:                                    ; preds = %while560
  %j_v562 = load i32, i32* %j559
  %i_v563 = load i32, i32* %i556
  %tmp564 = mul i32 %c_mat549, %i_v563
  %index565 = add i32 %j_v562, %tmp564
  %element_ptr566 = getelementptr double, double* %mat_mat545, i32 %index565
  %j_v567 = load i32, i32* %j559
  %tmp568 = sub i32 %j_v567, 0
  %tmp569 = add i32 %tmp568, 0
  %i_v570 = load i32, i32* %i556
  %tmp571 = sub i32 %i_v570, 0
  %tmp572 = add i32 %tmp571, 0
  %tmp573 = mul i32 %c_v555, %tmp572
  %index574 = add i32 %tmp569, %tmp573
  %element_ptr575 = getelementptr double, double* %mat_v551, i32 %index574
  %tmp_element576 = load double, double* %element_ptr575
  store double %tmp_element576, double* %element_ptr566
  %j_v577 = load i32, i32* %j559
  %tmp578 = add i32 %j_v577, 1
  store i32 %tmp578, i32* %j559
  br label %while560

merge579:                                         ; preds = %while560
  %i_v582 = load i32, i32* %i556
  %tmp583 = add i32 %i_v582, 1
  store i32 %tmp583, i32* %i556
  br label %while557

merge584:                                         ; preds = %while557
  %m_r587 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 1
  %r_mat588 = load i32, i32* %m_r587
  %m_c589 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 2
  %c_mat590 = load i32, i32* %m_c589
  br i1 false, label %then592, label %else594

merge591:                                         ; preds = %else594, %then592
  %tmp595 = sub i32 %r_mat588, 1
  %tmp600 = icmp slt i32 %tmp595, 1
  br i1 %tmp600, label %then597, label %else599

then592:                                          ; preds = %merge584
  %printf593 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge591

else594:                                          ; preds = %merge584
  br label %merge591

merge596:                                         ; preds = %else599, %then597
  %a601 = load i32, i32* %a
  %tmp606 = icmp sgt i32 0, %a601
  br i1 %tmp606, label %then603, label %else605

then597:                                          ; preds = %merge591
  %printf598 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge596

else599:                                          ; preds = %merge591
  br label %merge596

merge602:                                         ; preds = %else605, %then603
  %tmp607 = sub i32 %r_mat588, 1
  %tmp612 = icmp slt i32 %tmp607, %a601
  br i1 %tmp612, label %then609, label %else611

then603:                                          ; preds = %merge596
  %printf604 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge602

else605:                                          ; preds = %merge596
  br label %merge602

merge608:                                         ; preds = %else611, %then609
  br i1 false, label %then614, label %else616

then609:                                          ; preds = %merge602
  %printf610 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge608

else611:                                          ; preds = %merge602
  br label %merge608

merge613:                                         ; preds = %else616, %then614
  %tmp617 = sub i32 %c_mat590, 1
  %tmp622 = icmp slt i32 %tmp617, 1
  br i1 %tmp622, label %then619, label %else621

then614:                                          ; preds = %merge608
  %printf615 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge613

else616:                                          ; preds = %merge608
  br label %merge613

merge618:                                         ; preds = %else621, %then619
  %b623 = load i32, i32* %b
  %tmp628 = icmp sgt i32 0, %b623
  br i1 %tmp628, label %then625, label %else627

then619:                                          ; preds = %merge613
  %printf620 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge618

else621:                                          ; preds = %merge613
  br label %merge618

merge624:                                         ; preds = %else627, %then625
  %tmp629 = sub i32 %c_mat590, 1
  %tmp634 = icmp slt i32 %tmp629, %b623
  br i1 %tmp634, label %then631, label %else633

then625:                                          ; preds = %merge618
  %printf626 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge624

else627:                                          ; preds = %merge618
  br label %merge624

merge630:                                         ; preds = %else633, %then631
  %tmp635 = sub i32 %a601, 1
  %tmp636 = add i32 %tmp635, 1
  %m_r637 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 1
  %r_mat638 = load i32, i32* %m_r637
  %tmp643 = icmp ne i32 %tmp636, %r_mat638
  br i1 %tmp643, label %then640, label %else642

then631:                                          ; preds = %merge624
  %printf632 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge630

else633:                                          ; preds = %merge624
  br label %merge630

merge639:                                         ; preds = %else642, %then640
  %tmp644 = sub i32 %b623, 1
  %tmp645 = add i32 %tmp644, 1
  %m_r646 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 2
  %r_mat647 = load i32, i32* %m_r646
  %tmp652 = icmp ne i32 %tmp645, %r_mat647
  br i1 %tmp652, label %then649, label %else651

then640:                                          ; preds = %merge630
  %printf641 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge639

else642:                                          ; preds = %merge630
  br label %merge639

merge648:                                         ; preds = %else651, %then649
  %m_mat653 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 0
  %mat_mat654 = load double*, double** %m_mat653
  %m_r655 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 1
  %r_mat656 = load i32, i32* %m_r655
  %m_c657 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 2
  %c_mat658 = load i32, i32* %m_c657
  %m_mat659 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 0
  %mat_v660 = load double*, double** %m_mat659
  %m_r661 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 1
  %r_v662 = load i32, i32* %m_r661
  %m_c663 = getelementptr inbounds %matrix_t, %matrix_t* %m517, i32 0, i32 2
  %c_v664 = load i32, i32* %m_c663
  %i665 = alloca i32
  store i32 1, i32* %i665
  br label %while666

then649:                                          ; preds = %merge639
  %printf650 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge648

else651:                                          ; preds = %merge639
  br label %merge648

while666:                                         ; preds = %merge688, %merge648
  %i_v694 = load i32, i32* %i665
  %bool_val695 = icmp sle i32 %i_v694, %a601
  br i1 %bool_val695, label %while_body667, label %merge693

while_body667:                                    ; preds = %while666
  %j668 = alloca i32
  store i32 1, i32* %j668
  br label %while669

while669:                                         ; preds = %while_body670, %while_body667
  %j_v689 = load i32, i32* %j668
  %bool_val690 = icmp sle i32 %j_v689, %b623
  br i1 %bool_val690, label %while_body670, label %merge688

while_body670:                                    ; preds = %while669
  %j_v671 = load i32, i32* %j668
  %i_v672 = load i32, i32* %i665
  %tmp673 = mul i32 %c_mat658, %i_v672
  %index674 = add i32 %j_v671, %tmp673
  %element_ptr675 = getelementptr double, double* %mat_mat654, i32 %index674
  %j_v676 = load i32, i32* %j668
  %tmp677 = sub i32 %j_v676, 1
  %tmp678 = add i32 %tmp677, 0
  %i_v679 = load i32, i32* %i665
  %tmp680 = sub i32 %i_v679, 1
  %tmp681 = add i32 %tmp680, 0
  %tmp682 = mul i32 %c_v664, %tmp681
  %index683 = add i32 %tmp678, %tmp682
  %element_ptr684 = getelementptr double, double* %mat_v660, i32 %index683
  %tmp_element685 = load double, double* %element_ptr684
  store double %tmp_element685, double* %element_ptr675
  %j_v686 = load i32, i32* %j668
  %tmp687 = add i32 %j_v686, 1
  store i32 %tmp687, i32* %j668
  br label %while669

merge688:                                         ; preds = %while669
  %i_v691 = load i32, i32* %i665
  %tmp692 = add i32 %i_v691, 1
  store i32 %tmp692, i32* %i665
  br label %while666

merge693:                                         ; preds = %while666
  %i696 = alloca i32
  store i32 0, i32* %i696
  %j697 = alloca i32
  store i32 0, i32* %j697
  %tmp698 = load i32, i32* %i696
  store i32 0, i32* %i696
  br label %while699

while699:                                         ; preds = %merge897, %merge693
  %i905 = load i32, i32* %i696
  %a906 = load i32, i32* %a
  %tmp907 = icmp slt i32 %i905, %a906
  br i1 %tmp907, label %while_body700, label %merge904

while_body700:                                    ; preds = %while699
  %tmp701 = load i32, i32* %j697
  store i32 0, i32* %j697
  br label %while702

while702:                                         ; preds = %merge885, %while_body700
  %j898 = load i32, i32* %j697
  %b899 = load i32, i32* %b
  %tmp900 = icmp slt i32 %j898, %b899
  br i1 %tmp900, label %while_body703, label %merge897

while_body703:                                    ; preds = %while702
  %k = alloca double
  store double 0.000000e+00, double* %k
  %m_r704 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 1
  %r_mat705 = load i32, i32* %m_r704
  %m_c706 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 2
  %c_mat707 = load i32, i32* %m_c706
  %i708 = load i32, i32* %i696
  %tmp713 = icmp sgt i32 0, %i708
  br i1 %tmp713, label %then710, label %else712

merge709:                                         ; preds = %else712, %then710
  %tmp714 = sub i32 %r_mat705, 1
  %tmp719 = icmp slt i32 %tmp714, %i708
  br i1 %tmp719, label %then716, label %else718

then710:                                          ; preds = %while_body703
  %printf711 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge709

else712:                                          ; preds = %while_body703
  br label %merge709

merge715:                                         ; preds = %else718, %then716
  %i720 = load i32, i32* %i696
  %tmp721 = add i32 %i720, 2
  %tmp726 = icmp sgt i32 0, %tmp721
  br i1 %tmp726, label %then723, label %else725

then716:                                          ; preds = %merge709
  %printf717 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge715

else718:                                          ; preds = %merge709
  br label %merge715

merge722:                                         ; preds = %else725, %then723
  %tmp727 = sub i32 %r_mat705, 1
  %tmp732 = icmp slt i32 %tmp727, %tmp721
  br i1 %tmp732, label %then729, label %else731

then723:                                          ; preds = %merge715
  %printf724 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge722

else725:                                          ; preds = %merge715
  br label %merge722

merge728:                                         ; preds = %else731, %then729
  %j733 = load i32, i32* %j697
  %tmp738 = icmp sgt i32 0, %j733
  br i1 %tmp738, label %then735, label %else737

then729:                                          ; preds = %merge722
  %printf730 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge728

else731:                                          ; preds = %merge722
  br label %merge728

merge734:                                         ; preds = %else737, %then735
  %tmp739 = sub i32 %c_mat707, 1
  %tmp744 = icmp slt i32 %tmp739, %j733
  br i1 %tmp744, label %then741, label %else743

then735:                                          ; preds = %merge728
  %printf736 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge734

else737:                                          ; preds = %merge728
  br label %merge734

merge740:                                         ; preds = %else743, %then741
  %j745 = load i32, i32* %j697
  %tmp746 = add i32 %j745, 2
  %tmp751 = icmp sgt i32 0, %tmp746
  br i1 %tmp751, label %then748, label %else750

then741:                                          ; preds = %merge734
  %printf742 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge740

else743:                                          ; preds = %merge734
  br label %merge740

merge747:                                         ; preds = %else750, %then748
  %tmp752 = sub i32 %c_mat707, 1
  %tmp757 = icmp slt i32 %tmp752, %tmp746
  br i1 %tmp757, label %then754, label %else756

then748:                                          ; preds = %merge740
  %printf749 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge747

else750:                                          ; preds = %merge740
  br label %merge747

merge753:                                         ; preds = %else756, %then754
  %tmp758 = sub i32 %tmp721, %i708
  %tmp759 = sub i32 %tmp746, %j733
  %tmp760 = add i32 %tmp759, 1
  %tmp761 = add i32 %tmp758, 1
  %size762 = mul i32 %tmp761, %tmp760
  %system_mat763 = alloca double, i32 %size762
  %m764 = alloca %matrix_t
  %m_mat765 = getelementptr inbounds %matrix_t, %matrix_t* %m764, i32 0, i32 0
  store double* %system_mat763, double** %m_mat765
  %m_r766 = getelementptr inbounds %matrix_t, %matrix_t* %m764, i32 0, i32 1
  store i32 %tmp761, i32* %m_r766
  %m_c767 = getelementptr inbounds %matrix_t, %matrix_t* %m764, i32 0, i32 2
  store i32 %tmp760, i32* %m_c767
  %tmp768 = sub i32 %tmp761, 1
  %tmp769 = sub i32 %tmp760, 1
  %i770 = alloca i32
  store i32 0, i32* %i770
  br label %while771

then754:                                          ; preds = %merge747
  %printf755 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge753

else756:                                          ; preds = %merge747
  br label %merge753

while771:                                         ; preds = %merge783, %merge753
  %i_v789 = load i32, i32* %i770
  %bool_val790 = icmp sle i32 %i_v789, %tmp768
  br i1 %bool_val790, label %while_body772, label %merge788

while_body772:                                    ; preds = %while771
  %j773 = alloca i32
  store i32 0, i32* %j773
  br label %while774

while774:                                         ; preds = %while_body775, %while_body772
  %j_v784 = load i32, i32* %j773
  %bool_val785 = icmp sle i32 %j_v784, %tmp769
  br i1 %bool_val785, label %while_body775, label %merge783

while_body775:                                    ; preds = %while774
  %j_v776 = load i32, i32* %j773
  %i_v777 = load i32, i32* %i770
  %tmp778 = mul i32 %tmp760, %i_v777
  %index779 = add i32 %j_v776, %tmp778
  %element_ptr780 = getelementptr double, double* %system_mat763, i32 %index779
  store double 0.000000e+00, double* %element_ptr780
  %j_v781 = load i32, i32* %j773
  %tmp782 = add i32 %j_v781, 1
  store i32 %tmp782, i32* %j773
  br label %while774

merge783:                                         ; preds = %while774
  %i_v786 = load i32, i32* %i770
  %tmp787 = add i32 %i_v786, 1
  store i32 %tmp787, i32* %i770
  br label %while771

merge788:                                         ; preds = %while771
  %m_mat791 = getelementptr inbounds %matrix_t, %matrix_t* %m764, i32 0, i32 0
  %mat_mat792 = load double*, double** %m_mat791
  %m_r793 = getelementptr inbounds %matrix_t, %matrix_t* %m764, i32 0, i32 1
  %r_mat794 = load i32, i32* %m_r793
  %m_c795 = getelementptr inbounds %matrix_t, %matrix_t* %m764, i32 0, i32 2
  %c_mat796 = load i32, i32* %m_c795
  %m_mat797 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 0
  %mat_v798 = load double*, double** %m_mat797
  %m_r799 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 1
  %r_v800 = load i32, i32* %m_r799
  %m_c801 = getelementptr inbounds %matrix_t, %matrix_t* %m229, i32 0, i32 2
  %c_v802 = load i32, i32* %m_c801
  %i803 = alloca i32
  store i32 0, i32* %i803
  br label %while804

while804:                                         ; preds = %merge826, %merge788
  %i_v832 = load i32, i32* %i803
  %bool_val833 = icmp sle i32 %i_v832, %tmp758
  br i1 %bool_val833, label %while_body805, label %merge831

while_body805:                                    ; preds = %while804
  %j806 = alloca i32
  store i32 0, i32* %j806
  br label %while807

while807:                                         ; preds = %while_body808, %while_body805
  %j_v827 = load i32, i32* %j806
  %bool_val828 = icmp sle i32 %j_v827, %tmp759
  br i1 %bool_val828, label %while_body808, label %merge826

while_body808:                                    ; preds = %while807
  %j_v809 = load i32, i32* %j806
  %i_v810 = load i32, i32* %i803
  %tmp811 = mul i32 %c_mat796, %i_v810
  %index812 = add i32 %j_v809, %tmp811
  %element_ptr813 = getelementptr double, double* %mat_mat792, i32 %index812
  %j_v814 = load i32, i32* %j806
  %tmp815 = sub i32 %j_v814, 0
  %tmp816 = add i32 %tmp815, %j733
  %i_v817 = load i32, i32* %i803
  %tmp818 = sub i32 %i_v817, 0
  %tmp819 = add i32 %tmp818, %i708
  %tmp820 = mul i32 %c_v802, %tmp819
  %index821 = add i32 %tmp816, %tmp820
  %element_ptr822 = getelementptr double, double* %mat_v798, i32 %index821
  %tmp_element823 = load double, double* %element_ptr822
  store double %tmp_element823, double* %element_ptr813
  %j_v824 = load i32, i32* %j806
  %tmp825 = add i32 %j_v824, 1
  store i32 %tmp825, i32* %j806
  br label %while807

merge826:                                         ; preds = %while807
  %i_v829 = load i32, i32* %i803
  %tmp830 = add i32 %i_v829, 1
  store i32 %tmp830, i32* %i803
  br label %while804

merge831:                                         ; preds = %while804
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m764, %matrix_t* %m61)
  %v_ptr834 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v835 = load double, double* %v_ptr834
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp836 = load double, double* %k
  store double %v835, double* %k
  %k837 = load double, double* %k
  %m_r838 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 1
  %r_mat839 = load i32, i32* %m_r838
  %m_c840 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 2
  %c_mat841 = load i32, i32* %m_c840
  %i842 = load i32, i32* %i696
  %tmp847 = icmp sgt i32 0, %i842
  br i1 %tmp847, label %then844, label %else846

merge843:                                         ; preds = %else846, %then844
  %tmp848 = sub i32 %r_mat839, 1
  %tmp853 = icmp slt i32 %tmp848, %i842
  br i1 %tmp853, label %then850, label %else852

then844:                                          ; preds = %merge831
  %printf845 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge843

else846:                                          ; preds = %merge831
  br label %merge843

merge849:                                         ; preds = %else852, %then850
  %i854 = load i32, i32* %i696
  %tmp859 = icmp sgt i32 0, %i854
  br i1 %tmp859, label %then856, label %else858

then850:                                          ; preds = %merge843
  %printf851 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge849

else852:                                          ; preds = %merge843
  br label %merge849

merge855:                                         ; preds = %else858, %then856
  %tmp860 = sub i32 %r_mat839, 1
  %tmp865 = icmp slt i32 %tmp860, %i854
  br i1 %tmp865, label %then862, label %else864

then856:                                          ; preds = %merge849
  %printf857 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge855

else858:                                          ; preds = %merge849
  br label %merge855

merge861:                                         ; preds = %else864, %then862
  %j866 = load i32, i32* %j697
  %tmp871 = icmp sgt i32 0, %j866
  br i1 %tmp871, label %then868, label %else870

then862:                                          ; preds = %merge855
  %printf863 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge861

else864:                                          ; preds = %merge855
  br label %merge861

merge867:                                         ; preds = %else870, %then868
  %tmp872 = sub i32 %c_mat841, 1
  %tmp877 = icmp slt i32 %tmp872, %j866
  br i1 %tmp877, label %then874, label %else876

then868:                                          ; preds = %merge861
  %printf869 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge867

else870:                                          ; preds = %merge861
  br label %merge867

merge873:                                         ; preds = %else876, %then874
  %j878 = load i32, i32* %j697
  %tmp883 = icmp sgt i32 0, %j878
  br i1 %tmp883, label %then880, label %else882

then874:                                          ; preds = %merge867
  %printf875 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge873

else876:                                          ; preds = %merge867
  br label %merge873

merge879:                                         ; preds = %else882, %then880
  %tmp884 = sub i32 %c_mat841, 1
  %tmp889 = icmp slt i32 %tmp884, %j878
  br i1 %tmp889, label %then886, label %else888

then880:                                          ; preds = %merge873
  %printf881 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge879

else882:                                          ; preds = %merge873
  br label %merge879

merge885:                                         ; preds = %else888, %then886
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 0
  %mat890 = load double*, double** %mat
  %tmp891 = mul i32 %c_mat841, %i842
  %index892 = add i32 %j866, %tmp891
  %element_ptr893 = getelementptr double, double* %mat890, i32 %index892
  store double %k837, double* %element_ptr893
  %j894 = load i32, i32* %j697
  %tmp895 = add i32 %j894, 1
  %tmp896 = load i32, i32* %j697
  store i32 %tmp895, i32* %j697
  br label %while702

then886:                                          ; preds = %merge879
  %printf887 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge885

else888:                                          ; preds = %merge879
  br label %merge885

merge897:                                         ; preds = %while702
  %i901 = load i32, i32* %i696
  %tmp902 = add i32 %i901, 1
  %tmp903 = load i32, i32* %i696
  store i32 %tmp902, i32* %i696
  br label %while699

merge904:                                         ; preds = %while699
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r908 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 1
  %r_mat909 = load i32, i32* %m_r908
  %m_c910 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 2
  %c_mat911 = load i32, i32* %m_c910
  %size912 = mul i32 %r_mat909, %c_mat911
  %mallocsize = mul i32 %size912, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall913 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat914 = bitcast i8* %malloccall913 to double*
  %malloccall915 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m916 = bitcast i8* %malloccall915 to %matrix_t*
  %m_mat917 = getelementptr inbounds %matrix_t, %matrix_t* %m916, i32 0, i32 0
  store double* %system_mat914, double** %m_mat917
  %m_r918 = getelementptr inbounds %matrix_t, %matrix_t* %m916, i32 0, i32 1
  store i32 %r_mat909, i32* %m_r918
  %m_c919 = getelementptr inbounds %matrix_t, %matrix_t* %m916, i32 0, i32 2
  store i32 %c_mat911, i32* %m_c919
  %tmp920 = sub i32 %r_mat909, 1
  %tmp921 = sub i32 %c_mat911, 1
  %i922 = alloca i32
  store i32 0, i32* %i922
  br label %while923

while923:                                         ; preds = %merge935, %merge904
  %i_v941 = load i32, i32* %i922
  %bool_val942 = icmp sle i32 %i_v941, %tmp920
  br i1 %bool_val942, label %while_body924, label %merge940

while_body924:                                    ; preds = %while923
  %j925 = alloca i32
  store i32 0, i32* %j925
  br label %while926

while926:                                         ; preds = %while_body927, %while_body924
  %j_v936 = load i32, i32* %j925
  %bool_val937 = icmp sle i32 %j_v936, %tmp921
  br i1 %bool_val937, label %while_body927, label %merge935

while_body927:                                    ; preds = %while926
  %j_v928 = load i32, i32* %j925
  %i_v929 = load i32, i32* %i922
  %tmp930 = mul i32 %c_mat911, %i_v929
  %index931 = add i32 %j_v928, %tmp930
  %element_ptr932 = getelementptr double, double* %system_mat914, i32 %index931
  store double 0.000000e+00, double* %element_ptr932
  %j_v933 = load i32, i32* %j925
  %tmp934 = add i32 %j_v933, 1
  store i32 %tmp934, i32* %j925
  br label %while926

merge935:                                         ; preds = %while926
  %i_v938 = load i32, i32* %i922
  %tmp939 = add i32 %i_v938, 1
  store i32 %tmp939, i32* %i922
  br label %while923

merge940:                                         ; preds = %while923
  %tmp943 = sub i32 %c_mat911, 1
  %tmp944 = sub i32 %r_mat909, 1
  %m_mat945 = getelementptr inbounds %matrix_t, %matrix_t* %m916, i32 0, i32 0
  %mat_mat946 = load double*, double** %m_mat945
  %m_r947 = getelementptr inbounds %matrix_t, %matrix_t* %m916, i32 0, i32 1
  %r_mat948 = load i32, i32* %m_r947
  %m_c949 = getelementptr inbounds %matrix_t, %matrix_t* %m916, i32 0, i32 2
  %c_mat950 = load i32, i32* %m_c949
  %m_mat951 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 0
  %mat_v952 = load double*, double** %m_mat951
  %m_r953 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 1
  %r_v954 = load i32, i32* %m_r953
  %m_c955 = getelementptr inbounds %matrix_t, %matrix_t* %m392, i32 0, i32 2
  %c_v956 = load i32, i32* %m_c955
  %i957 = alloca i32
  store i32 0, i32* %i957
  br label %while958

while958:                                         ; preds = %merge980, %merge940
  %i_v986 = load i32, i32* %i957
  %bool_val987 = icmp sle i32 %i_v986, %tmp944
  br i1 %bool_val987, label %while_body959, label %merge985

while_body959:                                    ; preds = %while958
  %j960 = alloca i32
  store i32 0, i32* %j960
  br label %while961

while961:                                         ; preds = %while_body962, %while_body959
  %j_v981 = load i32, i32* %j960
  %bool_val982 = icmp sle i32 %j_v981, %tmp943
  br i1 %bool_val982, label %while_body962, label %merge980

while_body962:                                    ; preds = %while961
  %j_v963 = load i32, i32* %j960
  %i_v964 = load i32, i32* %i957
  %tmp965 = mul i32 %c_mat950, %i_v964
  %index966 = add i32 %j_v963, %tmp965
  %element_ptr967 = getelementptr double, double* %mat_mat946, i32 %index966
  %j_v968 = load i32, i32* %j960
  %tmp969 = sub i32 %j_v968, 0
  %tmp970 = add i32 %tmp969, 0
  %i_v971 = load i32, i32* %i957
  %tmp972 = sub i32 %i_v971, 0
  %tmp973 = add i32 %tmp972, 0
  %tmp974 = mul i32 %c_v956, %tmp973
  %index975 = add i32 %tmp970, %tmp974
  %element_ptr976 = getelementptr double, double* %mat_v952, i32 %index975
  %tmp_element977 = load double, double* %element_ptr976
  store double %tmp_element977, double* %element_ptr967
  %j_v978 = load i32, i32* %j960
  %tmp979 = add i32 %j_v978, 1
  store i32 %tmp979, i32* %j960
  br label %while961

merge980:                                         ; preds = %while961
  %i_v983 = load i32, i32* %i957
  %tmp984 = add i32 %i_v983, 1
  store i32 %tmp984, i32* %i957
  br label %while958

merge985:                                         ; preds = %while958
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m916, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp988 = alloca %return_t.0
  ret %return_t.0* %tmp988
}

define %return_t.1* @f(i8*, %matrix_t*, %matrix_t*, %matrix_t*, double) {
entry:
  %name = alloca i8*
  store i8* %0, i8** %name
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %m_r133 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 1
  %r_mat134 = load i32, i32* %m_r133
  %m_c135 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 2
  %c_mat136 = load i32, i32* %m_c135
  %size137 = mul i32 %r_mat134, %c_mat136
  %system_mat138 = alloca double, i32 %size137
  %m139 = alloca %matrix_t
  %m_mat140 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  store double* %system_mat138, double** %m_mat140
  %m_r141 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  store i32 %r_mat134, i32* %m_r141
  %m_c142 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  store i32 %c_mat136, i32* %m_c142
  %tmp143 = sub i32 %r_mat134, 1
  %tmp144 = sub i32 %c_mat136, 1
  %i145 = alloca i32
  store i32 0, i32* %i145
  br label %while146

while146:                                         ; preds = %merge158, %merge130
  %i_v164 = load i32, i32* %i145
  %bool_val165 = icmp sle i32 %i_v164, %tmp143
  br i1 %bool_val165, label %while_body147, label %merge163

while_body147:                                    ; preds = %while146
  %j148 = alloca i32
  store i32 0, i32* %j148
  br label %while149

while149:                                         ; preds = %while_body150, %while_body147
  %j_v159 = load i32, i32* %j148
  %bool_val160 = icmp sle i32 %j_v159, %tmp144
  br i1 %bool_val160, label %while_body150, label %merge158

while_body150:                                    ; preds = %while149
  %j_v151 = load i32, i32* %j148
  %i_v152 = load i32, i32* %i145
  %tmp153 = mul i32 %c_mat136, %i_v152
  %index154 = add i32 %j_v151, %tmp153
  %element_ptr155 = getelementptr double, double* %system_mat138, i32 %index154
  store double 0.000000e+00, double* %element_ptr155
  %j_v156 = load i32, i32* %j148
  %tmp157 = add i32 %j_v156, 1
  store i32 %tmp157, i32* %j148
  br label %while149

merge158:                                         ; preds = %while149
  %i_v161 = load i32, i32* %i145
  %tmp162 = add i32 %i_v161, 1
  store i32 %tmp162, i32* %i145
  br label %while146

merge163:                                         ; preds = %while146
  %tmp166 = sub i32 %c_mat136, 1
  %tmp167 = sub i32 %r_mat134, 1
  %m_mat168 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_mat169 = load double*, double** %m_mat168
  %m_r170 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat171 = load i32, i32* %m_r170
  %m_c172 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat173 = load i32, i32* %m_c172
  %m_mat174 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 0
  %mat_v175 = load double*, double** %m_mat174
  %m_r176 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 1
  %r_v177 = load i32, i32* %m_r176
  %m_c178 = getelementptr inbounds %matrix_t, %matrix_t* %3, i32 0, i32 2
  %c_v179 = load i32, i32* %m_c178
  %i180 = alloca i32
  store i32 0, i32* %i180
  br label %while181

while181:                                         ; preds = %merge203, %merge163
  %i_v209 = load i32, i32* %i180
  %bool_val210 = icmp sle i32 %i_v209, %tmp167
  br i1 %bool_val210, label %while_body182, label %merge208

while_body182:                                    ; preds = %while181
  %j183 = alloca i32
  store i32 0, i32* %j183
  br label %while184

while184:                                         ; preds = %while_body185, %while_body182
  %j_v204 = load i32, i32* %j183
  %bool_val205 = icmp sle i32 %j_v204, %tmp166
  br i1 %bool_val205, label %while_body185, label %merge203

while_body185:                                    ; preds = %while184
  %j_v186 = load i32, i32* %j183
  %i_v187 = load i32, i32* %i180
  %tmp188 = mul i32 %c_mat173, %i_v187
  %index189 = add i32 %j_v186, %tmp188
  %element_ptr190 = getelementptr double, double* %mat_mat169, i32 %index189
  %j_v191 = load i32, i32* %j183
  %tmp192 = sub i32 %j_v191, 0
  %tmp193 = add i32 %tmp192, 0
  %i_v194 = load i32, i32* %i180
  %tmp195 = sub i32 %i_v194, 0
  %tmp196 = add i32 %tmp195, 0
  %tmp197 = mul i32 %c_v179, %tmp196
  %index198 = add i32 %tmp193, %tmp197
  %element_ptr199 = getelementptr double, double* %mat_v175, i32 %index198
  %tmp_element200 = load double, double* %element_ptr199
  store double %tmp_element200, double* %element_ptr190
  %j_v201 = load i32, i32* %j183
  %tmp202 = add i32 %j_v201, 1
  store i32 %tmp202, i32* %j183
  br label %while184

merge203:                                         ; preds = %while184
  %i_v206 = load i32, i32* %i180
  %tmp207 = add i32 %i_v206, 1
  store i32 %tmp207, i32* %i180
  br label %while181

merge208:                                         ; preds = %while181
  %d = alloca double
  store double %4, double* %d
  %name211 = load i8*, i8** %name
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* %name211)
  %printf212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @system_string.9, i32 0, i32 0))
  %printf213 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_r214 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat215 = load i32, i32* %m_r214
  %m_r216 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat217 = load i32, i32* %m_r216
  %tmp229 = icmp ne i32 %r_mat215, %r_mat217
  br i1 %tmp229, label %then, label %else

merge218:                                         ; preds = %merge224, %then
  %m_mat230 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat231 = load double*, double** %m_mat230
  %m_r232 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat233 = load i32, i32* %m_r232
  %tmp234 = sub i32 %r_mat233, 1
  %m_c235 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat236 = load i32, i32* %m_c235
  %tmp237 = sub i32 %c_mat236, 1
  %m_mat238 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_v239 = load double*, double** %m_mat238
  %size240 = mul i32 %r_mat233, %c_mat236
  %system_mat241 = alloca double, i32 %size240
  %m242 = alloca %matrix_t
  %m_mat243 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 0
  store double* %system_mat241, double** %m_mat243
  %m_r244 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 1
  store i32 %r_mat233, i32* %m_r244
  %m_c245 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 2
  store i32 %c_mat236, i32* %m_c245
  %tmp246 = sub i32 %r_mat233, 1
  %tmp247 = sub i32 %c_mat236, 1
  %i248 = alloca i32
  store i32 0, i32* %i248
  br label %while249

then:                                             ; preds = %merge208
  %printf219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge218

else:                                             ; preds = %merge208
  %m_c220 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat221 = load i32, i32* %m_c220
  %m_c222 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat223 = load i32, i32* %m_c222
  %tmp228 = icmp ne i32 %c_mat221, %c_mat223
  br i1 %tmp228, label %then225, label %else227

merge224:                                         ; preds = %else227, %then225
  br label %merge218

then225:                                          ; preds = %else
  %printf226 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge224

else227:                                          ; preds = %else
  br label %merge224

while249:                                         ; preds = %merge261, %merge218
  %i_v267 = load i32, i32* %i248
  %bool_val268 = icmp sle i32 %i_v267, %tmp246
  br i1 %bool_val268, label %while_body250, label %merge266

while_body250:                                    ; preds = %while249
  %j251 = alloca i32
  store i32 0, i32* %j251
  br label %while252

while252:                                         ; preds = %while_body253, %while_body250
  %j_v262 = load i32, i32* %j251
  %bool_val263 = icmp sle i32 %j_v262, %tmp247
  br i1 %bool_val263, label %while_body253, label %merge261

while_body253:                                    ; preds = %while252
  %j_v254 = load i32, i32* %j251
  %i_v255 = load i32, i32* %i248
  %tmp256 = mul i32 %c_mat236, %i_v255
  %index257 = add i32 %j_v254, %tmp256
  %element_ptr258 = getelementptr double, double* %system_mat241, i32 %index257
  store double 0.000000e+00, double* %element_ptr258
  %j_v259 = load i32, i32* %j251
  %tmp260 = add i32 %j_v259, 1
  store i32 %tmp260, i32* %j251
  br label %while252

merge261:                                         ; preds = %while252
  %i_v264 = load i32, i32* %i248
  %tmp265 = add i32 %i_v264, 1
  store i32 %tmp265, i32* %i248
  br label %while249

merge266:                                         ; preds = %while249
  %m_mat269 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 0
  %mat_mat270 = load double*, double** %m_mat269
  %i271 = alloca i32
  store i32 0, i32* %i271
  br label %while272

while272:                                         ; preds = %merge297, %merge266
  %i_v303 = load i32, i32* %i271
  %bool_val304 = icmp sle i32 %i_v303, %tmp234
  br i1 %bool_val304, label %while_body273, label %merge302

while_body273:                                    ; preds = %while272
  %j274 = alloca i32
  store i32 0, i32* %j274
  br label %while275

while275:                                         ; preds = %while_body276, %while_body273
  %j_v298 = load i32, i32* %j274
  %bool_val299 = icmp sle i32 %j_v298, %tmp237
  br i1 %bool_val299, label %while_body276, label %merge297

while_body276:                                    ; preds = %while275
  %j_v277 = load i32, i32* %j274
  %i_v278 = load i32, i32* %i271
  %tmp279 = mul i32 %c_mat236, %i_v278
  %index280 = add i32 %j_v277, %tmp279
  %element_ptr281 = getelementptr double, double* %mat_mat231, i32 %index280
  %tmp_element282 = load double, double* %element_ptr281
  %j_v283 = load i32, i32* %j274
  %i_v284 = load i32, i32* %i271
  %tmp285 = mul i32 %c_mat236, %i_v284
  %index286 = add i32 %j_v283, %tmp285
  %element_ptr287 = getelementptr double, double* %mat_v239, i32 %index286
  %tmp_element288 = load double, double* %element_ptr287
  %j_v289 = load i32, i32* %j274
  %i_v290 = load i32, i32* %i271
  %tmp291 = mul i32 %c_mat236, %i_v290
  %index292 = add i32 %j_v289, %tmp291
  %element_ptr293 = getelementptr double, double* %mat_mat270, i32 %index292
  %tmp_element294 = fadd double %tmp_element282, %tmp_element288
  store double %tmp_element294, double* %element_ptr293
  %j_v295 = load i32, i32* %j274
  %tmp296 = add i32 %j_v295, 1
  store i32 %tmp296, i32* %j274
  br label %while275

merge297:                                         ; preds = %while275
  %i_v300 = load i32, i32* %i271
  %tmp301 = add i32 %i_v300, 1
  store i32 %tmp301, i32* %i271
  br label %while272

merge302:                                         ; preds = %while272
  %m_c305 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 2
  %c_mat306 = load i32, i32* %m_c305
  %m_r307 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat308 = load i32, i32* %m_r307
  %tmp313 = icmp ne i32 %c_mat306, %r_mat308
  br i1 %tmp313, label %then310, label %else312

merge309:                                         ; preds = %else312, %then310
  %m_mat314 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 0
  %mat_mat315 = load double*, double** %m_mat314
  %m_mat316 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_v317 = load double*, double** %m_mat316
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 1
  %r_mat319 = load i32, i32* %m_r318
  %tmp320 = sub i32 %r_mat319, 1
  %m_c321 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat322 = load i32, i32* %m_c321
  %tmp323 = sub i32 %c_mat322, 1
  %m_l = getelementptr inbounds %matrix_t, %matrix_t* %m242, i32 0, i32 2
  %l_mat = load i32, i32* %m_l
  %tmp324 = sub i32 %l_mat, 1
  %size325 = mul i32 %r_mat319, %c_mat322
  %system_mat326 = alloca double, i32 %size325
  %m327 = alloca %matrix_t
  %m_mat328 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  store double* %system_mat326, double** %m_mat328
  %m_r329 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  store i32 %r_mat319, i32* %m_r329
  %m_c330 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  store i32 %c_mat322, i32* %m_c330
  %tmp331 = sub i32 %r_mat319, 1
  %tmp332 = sub i32 %c_mat322, 1
  %i333 = alloca i32
  store i32 0, i32* %i333
  br label %while334

then310:                                          ; preds = %merge302
  %printf311 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge309

else312:                                          ; preds = %merge302
  br label %merge309

while334:                                         ; preds = %merge346, %merge309
  %i_v352 = load i32, i32* %i333
  %bool_val353 = icmp sle i32 %i_v352, %tmp331
  br i1 %bool_val353, label %while_body335, label %merge351

while_body335:                                    ; preds = %while334
  %j336 = alloca i32
  store i32 0, i32* %j336
  br label %while337

while337:                                         ; preds = %while_body338, %while_body335
  %j_v347 = load i32, i32* %j336
  %bool_val348 = icmp sle i32 %j_v347, %tmp332
  br i1 %bool_val348, label %while_body338, label %merge346

while_body338:                                    ; preds = %while337
  %j_v339 = load i32, i32* %j336
  %i_v340 = load i32, i32* %i333
  %tmp341 = mul i32 %c_mat322, %i_v340
  %index342 = add i32 %j_v339, %tmp341
  %element_ptr343 = getelementptr double, double* %system_mat326, i32 %index342
  store double 0.000000e+00, double* %element_ptr343
  %j_v344 = load i32, i32* %j336
  %tmp345 = add i32 %j_v344, 1
  store i32 %tmp345, i32* %j336
  br label %while337

merge346:                                         ; preds = %while337
  %i_v349 = load i32, i32* %i333
  %tmp350 = add i32 %i_v349, 1
  store i32 %tmp350, i32* %i333
  br label %while334

merge351:                                         ; preds = %while334
  %m_mat354 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat355 = load double*, double** %m_mat354
  %i356 = alloca i32
  store i32 0, i32* %i356
  br label %while357

while357:                                         ; preds = %merge392, %merge351
  %i_v398 = load i32, i32* %i356
  %bool_val399 = icmp sle i32 %i_v398, %tmp320
  br i1 %bool_val399, label %while_body358, label %merge397

while_body358:                                    ; preds = %while357
  %j359 = alloca i32
  store i32 0, i32* %j359
  br label %while360

while360:                                         ; preds = %merge386, %while_body358
  %j_v393 = load i32, i32* %j359
  %bool_val394 = icmp sle i32 %j_v393, %tmp323
  br i1 %bool_val394, label %while_body361, label %merge392

while_body361:                                    ; preds = %while360
  %j_v362 = load i32, i32* %j359
  %i_v363 = load i32, i32* %i356
  %tmp364 = mul i32 %c_mat322, %i_v363
  %index365 = add i32 %j_v362, %tmp364
  %element_ptr366 = getelementptr double, double* %mat_mat355, i32 %index365
  %tmp_element367 = alloca double
  store double 0.000000e+00, double* %tmp_element367
  %k = alloca i32
  store i32 0, i32* %k
  br label %while368

while368:                                         ; preds = %while_body369, %while_body361
  %k_v387 = load i32, i32* %k
  %bool_val388 = icmp sle i32 %k_v387, %tmp324
  br i1 %bool_val388, label %while_body369, label %merge386

while_body369:                                    ; preds = %while368
  %k_v = load i32, i32* %k
  %i_v370 = load i32, i32* %i356
  %tmp371 = mul i32 %l_mat, %i_v370
  %index372 = add i32 %k_v, %tmp371
  %element_ptr373 = getelementptr double, double* %mat_mat315, i32 %index372
  %tmp_element374 = load double, double* %element_ptr373
  %j_v375 = load i32, i32* %j359
  %k_v376 = load i32, i32* %k
  %tmp377 = mul i32 %c_mat322, %k_v376
  %index378 = add i32 %j_v375, %tmp377
  %element_ptr379 = getelementptr double, double* %mat_v317, i32 %index378
  %tmp_element380 = load double, double* %element_ptr379
  %tmp381 = load double, double* %tmp_element367
  %tmp382 = fmul double %tmp_element374, %tmp_element380
  %tmp383 = fadd double %tmp382, %tmp381
  store double %tmp383, double* %tmp_element367
  %k_v384 = load i32, i32* %k
  %tmp385 = add i32 %k_v384, 1
  store i32 %tmp385, i32* %k
  br label %while368

merge386:                                         ; preds = %while368
  %tmp389 = load double, double* %tmp_element367
  store double %tmp389, double* %element_ptr366
  %j_v390 = load i32, i32* %j359
  %tmp391 = add i32 %j_v390, 1
  store i32 %tmp391, i32* %j359
  br label %while360

merge392:                                         ; preds = %while360
  %i_v395 = load i32, i32* %i356
  %tmp396 = add i32 %i_v395, 1
  store i32 %tmp396, i32* %i356
  br label %while357

merge397:                                         ; preds = %while357
  %d400 = load double, double* %d
  %m_mat401 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat402 = load double*, double** %m_mat401
  %m_r403 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat404 = load i32, i32* %m_r403
  %tmp405 = sub i32 %r_mat404, 1
  %m_c406 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat407 = load i32, i32* %m_c406
  %tmp408 = sub i32 %c_mat407, 1
  %size409 = mul i32 %r_mat404, %c_mat407
  %system_mat410 = alloca double, i32 %size409
  %m411 = alloca %matrix_t
  %m_mat412 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 0
  store double* %system_mat410, double** %m_mat412
  %m_r413 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 1
  store i32 %r_mat404, i32* %m_r413
  %m_c414 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 2
  store i32 %c_mat407, i32* %m_c414
  %tmp415 = sub i32 %r_mat404, 1
  %tmp416 = sub i32 %c_mat407, 1
  %i417 = alloca i32
  store i32 0, i32* %i417
  br label %while418

while418:                                         ; preds = %merge430, %merge397
  %i_v436 = load i32, i32* %i417
  %bool_val437 = icmp sle i32 %i_v436, %tmp415
  br i1 %bool_val437, label %while_body419, label %merge435

while_body419:                                    ; preds = %while418
  %j420 = alloca i32
  store i32 0, i32* %j420
  br label %while421

while421:                                         ; preds = %while_body422, %while_body419
  %j_v431 = load i32, i32* %j420
  %bool_val432 = icmp sle i32 %j_v431, %tmp416
  br i1 %bool_val432, label %while_body422, label %merge430

while_body422:                                    ; preds = %while421
  %j_v423 = load i32, i32* %j420
  %i_v424 = load i32, i32* %i417
  %tmp425 = mul i32 %c_mat407, %i_v424
  %index426 = add i32 %j_v423, %tmp425
  %element_ptr427 = getelementptr double, double* %system_mat410, i32 %index426
  store double 0.000000e+00, double* %element_ptr427
  %j_v428 = load i32, i32* %j420
  %tmp429 = add i32 %j_v428, 1
  store i32 %tmp429, i32* %j420
  br label %while421

merge430:                                         ; preds = %while421
  %i_v433 = load i32, i32* %i417
  %tmp434 = add i32 %i_v433, 1
  store i32 %tmp434, i32* %i417
  br label %while418

merge435:                                         ; preds = %while418
  %m_mat438 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 0
  %mat_mat439 = load double*, double** %m_mat438
  %i440 = alloca i32
  store i32 0, i32* %i440
  br label %while441

while441:                                         ; preds = %merge460, %merge435
  %i_v466 = load i32, i32* %i440
  %bool_val467 = icmp sle i32 %i_v466, %tmp405
  br i1 %bool_val467, label %while_body442, label %merge465

while_body442:                                    ; preds = %while441
  %j443 = alloca i32
  store i32 0, i32* %j443
  br label %while444

while444:                                         ; preds = %while_body445, %while_body442
  %j_v461 = load i32, i32* %j443
  %bool_val462 = icmp sle i32 %j_v461, %tmp408
  br i1 %bool_val462, label %while_body445, label %merge460

while_body445:                                    ; preds = %while444
  %j_v446 = load i32, i32* %j443
  %i_v447 = load i32, i32* %i440
  %tmp448 = mul i32 %c_mat407, %i_v447
  %index449 = add i32 %j_v446, %tmp448
  %element_ptr450 = getelementptr double, double* %mat_mat402, i32 %index449
  %tmp_element451 = load double, double* %element_ptr450
  %j_v452 = load i32, i32* %j443
  %i_v453 = load i32, i32* %i440
  %tmp454 = mul i32 %c_mat407, %i_v453
  %index455 = add i32 %j_v452, %tmp454
  %element_ptr456 = getelementptr double, double* %mat_mat439, i32 %index455
  %tmp_element457 = fmul double %tmp_element451, %d400
  store double %tmp_element457, double* %element_ptr456
  %j_v458 = load i32, i32* %j443
  %tmp459 = add i32 %j_v458, 1
  store i32 %tmp459, i32* %j443
  br label %while444

merge460:                                         ; preds = %while444
  %i_v463 = load i32, i32* %i440
  %tmp464 = add i32 %i_v463, 1
  store i32 %tmp464, i32* %i440
  br label %while441

merge465:                                         ; preds = %while441
  %m_mat468 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 0
  %mat_mat469 = load double*, double** %m_mat468
  %m_r470 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 1
  %r_mat471 = load i32, i32* %m_r470
  %tmp472 = sub i32 %r_mat471, 1
  %m_c473 = getelementptr inbounds %matrix_t, %matrix_t* %m411, i32 0, i32 2
  %c_mat474 = load i32, i32* %m_c473
  %tmp475 = sub i32 %c_mat474, 1
  %size476 = mul i32 %r_mat471, %c_mat474
  %system_mat477 = alloca double, i32 %size476
  %m478 = alloca %matrix_t
  %m_mat479 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 0
  store double* %system_mat477, double** %m_mat479
  %m_r480 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 1
  store i32 %r_mat471, i32* %m_r480
  %m_c481 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 2
  store i32 %c_mat474, i32* %m_c481
  %tmp482 = sub i32 %r_mat471, 1
  %tmp483 = sub i32 %c_mat474, 1
  %i484 = alloca i32
  store i32 0, i32* %i484
  br label %while485

while485:                                         ; preds = %merge497, %merge465
  %i_v503 = load i32, i32* %i484
  %bool_val504 = icmp sle i32 %i_v503, %tmp482
  br i1 %bool_val504, label %while_body486, label %merge502

while_body486:                                    ; preds = %while485
  %j487 = alloca i32
  store i32 0, i32* %j487
  br label %while488

while488:                                         ; preds = %while_body489, %while_body486
  %j_v498 = load i32, i32* %j487
  %bool_val499 = icmp sle i32 %j_v498, %tmp483
  br i1 %bool_val499, label %while_body489, label %merge497

while_body489:                                    ; preds = %while488
  %j_v490 = load i32, i32* %j487
  %i_v491 = load i32, i32* %i484
  %tmp492 = mul i32 %c_mat474, %i_v491
  %index493 = add i32 %j_v490, %tmp492
  %element_ptr494 = getelementptr double, double* %system_mat477, i32 %index493
  store double 0.000000e+00, double* %element_ptr494
  %j_v495 = load i32, i32* %j487
  %tmp496 = add i32 %j_v495, 1
  store i32 %tmp496, i32* %j487
  br label %while488

merge497:                                         ; preds = %while488
  %i_v500 = load i32, i32* %i484
  %tmp501 = add i32 %i_v500, 1
  store i32 %tmp501, i32* %i484
  br label %while485

merge502:                                         ; preds = %while485
  %m_mat505 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 0
  %mat_mat506 = load double*, double** %m_mat505
  %i507 = alloca i32
  store i32 0, i32* %i507
  br label %while508

while508:                                         ; preds = %merge527, %merge502
  %i_v533 = load i32, i32* %i507
  %bool_val534 = icmp sle i32 %i_v533, %tmp472
  br i1 %bool_val534, label %while_body509, label %merge532

while_body509:                                    ; preds = %while508
  %j510 = alloca i32
  store i32 0, i32* %j510
  br label %while511

while511:                                         ; preds = %while_body512, %while_body509
  %j_v528 = load i32, i32* %j510
  %bool_val529 = icmp sle i32 %j_v528, %tmp475
  br i1 %bool_val529, label %while_body512, label %merge527

while_body512:                                    ; preds = %while511
  %j_v513 = load i32, i32* %j510
  %i_v514 = load i32, i32* %i507
  %tmp515 = mul i32 %c_mat474, %i_v514
  %index516 = add i32 %j_v513, %tmp515
  %element_ptr517 = getelementptr double, double* %mat_mat469, i32 %index516
  %tmp_element518 = load double, double* %element_ptr517
  %j_v519 = load i32, i32* %j510
  %i_v520 = load i32, i32* %i507
  %tmp521 = mul i32 %c_mat474, %i_v520
  %index522 = add i32 %j_v519, %tmp521
  %element_ptr523 = getelementptr double, double* %mat_mat506, i32 %index522
  %tmp_element524 = fmul double %tmp_element518, 5.000000e+00
  store double %tmp_element524, double* %element_ptr523
  %j_v525 = load i32, i32* %j510
  %tmp526 = add i32 %j_v525, 1
  store i32 %tmp526, i32* %j510
  br label %while511

merge527:                                         ; preds = %while511
  %i_v530 = load i32, i32* %i507
  %tmp531 = add i32 %i_v530, 1
  store i32 %tmp531, i32* %i507
  br label %while508

merge532:                                         ; preds = %while508
  %m_mat535 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 0
  %mat_mat536 = load double*, double** %m_mat535
  %m_r537 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 1
  %r_mat538 = load i32, i32* %m_r537
  %m_c539 = getelementptr inbounds %matrix_t, %matrix_t* %m478, i32 0, i32 2
  %c_mat540 = load i32, i32* %m_c539
  %tmp541 = sub i32 %r_mat538, 1
  %tmp542 = sub i32 %c_mat540, 1
  %i543 = alloca i32
  store i32 0, i32* %i543
  br label %while544

while544:                                         ; preds = %merge559, %merge532
  %i_v566 = load i32, i32* %i543
  %bool_val567 = icmp sle i32 %i_v566, %tmp541
  br i1 %bool_val567, label %while_body545, label %merge565

while_body545:                                    ; preds = %while544
  %j546 = alloca i32
  store i32 0, i32* %j546
  br label %while547

while547:                                         ; preds = %while_body548, %while_body545
  %j_v560 = load i32, i32* %j546
  %bool_val561 = icmp sle i32 %j_v560, %tmp542
  br i1 %bool_val561, label %while_body548, label %merge559

while_body548:                                    ; preds = %while547
  %j_v549 = load i32, i32* %j546
  %i_v550 = load i32, i32* %i543
  %tmp551 = mul i32 %c_mat540, %i_v550
  %index552 = add i32 %j_v549, %tmp551
  %element_ptr553 = getelementptr double, double* %mat_mat536, i32 %index552
  %tmp_element554 = load double, double* %element_ptr553
  %printf555 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element554)
  %printf556 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v557 = load i32, i32* %j546
  %tmp558 = add i32 %j_v557, 1
  store i32 %tmp558, i32* %j546
  br label %while547

merge559:                                         ; preds = %while547
  %printf562 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v563 = load i32, i32* %i543
  %tmp564 = add i32 %i_v563, 1
  store i32 %tmp564, i32* %i543
  br label %while544

merge565:                                         ; preds = %while544
  %printf568 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf569 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%return_t.1* getelementptr (%return_t.1, %return_t.1* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.1*
  %m_c570 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat571 = load i32, i32* %m_c570
  %m_r572 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat573 = load i32, i32* %m_r572
  %tmp578 = icmp ne i32 %c_mat571, %r_mat573
  br i1 %tmp578, label %then575, label %else577

merge574:                                         ; preds = %else577, %then575
  %m_mat579 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat580 = load double*, double** %m_mat579
  %m_mat581 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_v582 = load double*, double** %m_mat581
  %m_r583 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat584 = load i32, i32* %m_r583
  %tmp585 = sub i32 %r_mat584, 1
  %m_c586 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat587 = load i32, i32* %m_c586
  %tmp588 = sub i32 %c_mat587, 1
  %m_l589 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %l_mat590 = load i32, i32* %m_l589
  %tmp591 = sub i32 %l_mat590, 1
  %size592 = mul i32 %r_mat584, %c_mat587
  %system_mat593 = alloca double, i32 %size592
  %m594 = alloca %matrix_t
  %m_mat595 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 0
  store double* %system_mat593, double** %m_mat595
  %m_r596 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 1
  store i32 %r_mat584, i32* %m_r596
  %m_c597 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 2
  store i32 %c_mat587, i32* %m_c597
  %tmp598 = sub i32 %r_mat584, 1
  %tmp599 = sub i32 %c_mat587, 1
  %i600 = alloca i32
  store i32 0, i32* %i600
  br label %while601

then575:                                          ; preds = %merge565
  %printf576 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge574

else577:                                          ; preds = %merge565
  br label %merge574

while601:                                         ; preds = %merge613, %merge574
  %i_v619 = load i32, i32* %i600
  %bool_val620 = icmp sle i32 %i_v619, %tmp598
  br i1 %bool_val620, label %while_body602, label %merge618

while_body602:                                    ; preds = %while601
  %j603 = alloca i32
  store i32 0, i32* %j603
  br label %while604

while604:                                         ; preds = %while_body605, %while_body602
  %j_v614 = load i32, i32* %j603
  %bool_val615 = icmp sle i32 %j_v614, %tmp599
  br i1 %bool_val615, label %while_body605, label %merge613

while_body605:                                    ; preds = %while604
  %j_v606 = load i32, i32* %j603
  %i_v607 = load i32, i32* %i600
  %tmp608 = mul i32 %c_mat587, %i_v607
  %index609 = add i32 %j_v606, %tmp608
  %element_ptr610 = getelementptr double, double* %system_mat593, i32 %index609
  store double 0.000000e+00, double* %element_ptr610
  %j_v611 = load i32, i32* %j603
  %tmp612 = add i32 %j_v611, 1
  store i32 %tmp612, i32* %j603
  br label %while604

merge613:                                         ; preds = %while604
  %i_v616 = load i32, i32* %i600
  %tmp617 = add i32 %i_v616, 1
  store i32 %tmp617, i32* %i600
  br label %while601

merge618:                                         ; preds = %while601
  %m_mat621 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 0
  %mat_mat622 = load double*, double** %m_mat621
  %i623 = alloca i32
  store i32 0, i32* %i623
  br label %while624

while624:                                         ; preds = %merge661, %merge618
  %i_v667 = load i32, i32* %i623
  %bool_val668 = icmp sle i32 %i_v667, %tmp585
  br i1 %bool_val668, label %while_body625, label %merge666

while_body625:                                    ; preds = %while624
  %j626 = alloca i32
  store i32 0, i32* %j626
  br label %while627

while627:                                         ; preds = %merge655, %while_body625
  %j_v662 = load i32, i32* %j626
  %bool_val663 = icmp sle i32 %j_v662, %tmp588
  br i1 %bool_val663, label %while_body628, label %merge661

while_body628:                                    ; preds = %while627
  %j_v629 = load i32, i32* %j626
  %i_v630 = load i32, i32* %i623
  %tmp631 = mul i32 %c_mat587, %i_v630
  %index632 = add i32 %j_v629, %tmp631
  %element_ptr633 = getelementptr double, double* %mat_mat622, i32 %index632
  %tmp_element634 = alloca double
  store double 0.000000e+00, double* %tmp_element634
  %k635 = alloca i32
  store i32 0, i32* %k635
  br label %while636

while636:                                         ; preds = %while_body637, %while_body628
  %k_v656 = load i32, i32* %k635
  %bool_val657 = icmp sle i32 %k_v656, %tmp591
  br i1 %bool_val657, label %while_body637, label %merge655

while_body637:                                    ; preds = %while636
  %k_v638 = load i32, i32* %k635
  %i_v639 = load i32, i32* %i623
  %tmp640 = mul i32 %l_mat590, %i_v639
  %index641 = add i32 %k_v638, %tmp640
  %element_ptr642 = getelementptr double, double* %mat_mat580, i32 %index641
  %tmp_element643 = load double, double* %element_ptr642
  %j_v644 = load i32, i32* %j626
  %k_v645 = load i32, i32* %k635
  %tmp646 = mul i32 %c_mat587, %k_v645
  %index647 = add i32 %j_v644, %tmp646
  %element_ptr648 = getelementptr double, double* %mat_v582, i32 %index647
  %tmp_element649 = load double, double* %element_ptr648
  %tmp650 = load double, double* %tmp_element634
  %tmp651 = fmul double %tmp_element643, %tmp_element649
  %tmp652 = fadd double %tmp651, %tmp650
  store double %tmp652, double* %tmp_element634
  %k_v653 = load i32, i32* %k635
  %tmp654 = add i32 %k_v653, 1
  store i32 %tmp654, i32* %k635
  br label %while636

merge655:                                         ; preds = %while636
  %tmp658 = load double, double* %tmp_element634
  store double %tmp658, double* %element_ptr633
  %j_v659 = load i32, i32* %j626
  %tmp660 = add i32 %j_v659, 1
  store i32 %tmp660, i32* %j626
  br label %while627

merge661:                                         ; preds = %while627
  %i_v664 = load i32, i32* %i623
  %tmp665 = add i32 %i_v664, 1
  store i32 %tmp665, i32* %i623
  br label %while624

merge666:                                         ; preds = %while624
  %m_r669 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 1
  %r_mat670 = load i32, i32* %m_r669
  %m_c671 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 2
  %c_mat672 = load i32, i32* %m_c671
  %size673 = mul i32 %r_mat670, %c_mat672
  %mallocsize = mul i32 %size673, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall674 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat675 = bitcast i8* %malloccall674 to double*
  %malloccall676 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m677 = bitcast i8* %malloccall676 to %matrix_t*
  %m_mat678 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  store double* %system_mat675, double** %m_mat678
  %m_r679 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  store i32 %r_mat670, i32* %m_r679
  %m_c680 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  store i32 %c_mat672, i32* %m_c680
  %tmp681 = sub i32 %r_mat670, 1
  %tmp682 = sub i32 %c_mat672, 1
  %i683 = alloca i32
  store i32 0, i32* %i683
  br label %while684

while684:                                         ; preds = %merge696, %merge666
  %i_v702 = load i32, i32* %i683
  %bool_val703 = icmp sle i32 %i_v702, %tmp681
  br i1 %bool_val703, label %while_body685, label %merge701

while_body685:                                    ; preds = %while684
  %j686 = alloca i32
  store i32 0, i32* %j686
  br label %while687

while687:                                         ; preds = %while_body688, %while_body685
  %j_v697 = load i32, i32* %j686
  %bool_val698 = icmp sle i32 %j_v697, %tmp682
  br i1 %bool_val698, label %while_body688, label %merge696

while_body688:                                    ; preds = %while687
  %j_v689 = load i32, i32* %j686
  %i_v690 = load i32, i32* %i683
  %tmp691 = mul i32 %c_mat672, %i_v690
  %index692 = add i32 %j_v689, %tmp691
  %element_ptr693 = getelementptr double, double* %system_mat675, i32 %index692
  store double 0.000000e+00, double* %element_ptr693
  %j_v694 = load i32, i32* %j686
  %tmp695 = add i32 %j_v694, 1
  store i32 %tmp695, i32* %j686
  br label %while687

merge696:                                         ; preds = %while687
  %i_v699 = load i32, i32* %i683
  %tmp700 = add i32 %i_v699, 1
  store i32 %tmp700, i32* %i683
  br label %while684

merge701:                                         ; preds = %while684
  %tmp704 = sub i32 %c_mat672, 1
  %tmp705 = sub i32 %r_mat670, 1
  %m_mat706 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat707 = load double*, double** %m_mat706
  %m_r708 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat709 = load i32, i32* %m_r708
  %m_c710 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat711 = load i32, i32* %m_c710
  %m_mat712 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 0
  %mat_v713 = load double*, double** %m_mat712
  %m_r714 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 1
  %r_v715 = load i32, i32* %m_r714
  %m_c716 = getelementptr inbounds %matrix_t, %matrix_t* %m594, i32 0, i32 2
  %c_v717 = load i32, i32* %m_c716
  %i718 = alloca i32
  store i32 0, i32* %i718
  br label %while719

while719:                                         ; preds = %merge741, %merge701
  %i_v747 = load i32, i32* %i718
  %bool_val748 = icmp sle i32 %i_v747, %tmp705
  br i1 %bool_val748, label %while_body720, label %merge746

while_body720:                                    ; preds = %while719
  %j721 = alloca i32
  store i32 0, i32* %j721
  br label %while722

while722:                                         ; preds = %while_body723, %while_body720
  %j_v742 = load i32, i32* %j721
  %bool_val743 = icmp sle i32 %j_v742, %tmp704
  br i1 %bool_val743, label %while_body723, label %merge741

while_body723:                                    ; preds = %while722
  %j_v724 = load i32, i32* %j721
  %i_v725 = load i32, i32* %i718
  %tmp726 = mul i32 %c_mat711, %i_v725
  %index727 = add i32 %j_v724, %tmp726
  %element_ptr728 = getelementptr double, double* %mat_mat707, i32 %index727
  %j_v729 = load i32, i32* %j721
  %tmp730 = sub i32 %j_v729, 0
  %tmp731 = add i32 %tmp730, 0
  %i_v732 = load i32, i32* %i718
  %tmp733 = sub i32 %i_v732, 0
  %tmp734 = add i32 %tmp733, 0
  %tmp735 = mul i32 %c_v717, %tmp734
  %index736 = add i32 %tmp731, %tmp735
  %element_ptr737 = getelementptr double, double* %mat_v713, i32 %index736
  %tmp_element738 = load double, double* %element_ptr737
  store double %tmp_element738, double* %element_ptr728
  %j_v739 = load i32, i32* %j721
  %tmp740 = add i32 %j_v739, 1
  store i32 %tmp740, i32* %j721
  br label %while722

merge741:                                         ; preds = %while722
  %i_v744 = load i32, i32* %i718
  %tmp745 = add i32 %i_v744, 1
  store i32 %tmp745, i32* %i718
  br label %while719

merge746:                                         ; preds = %while719
  %return0 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 0
  store %matrix_t* %m677, %matrix_t** %return0
  %m_c749 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat750 = load i32, i32* %m_c749
  %m_r751 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 1
  %r_mat752 = load i32, i32* %m_r751
  %tmp757 = icmp ne i32 %c_mat750, %r_mat752
  br i1 %tmp757, label %then754, label %else756

merge753:                                         ; preds = %else756, %then754
  %m_mat758 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat759 = load double*, double** %m_mat758
  %m_mat760 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 0
  %mat_v761 = load double*, double** %m_mat760
  %m_r762 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat763 = load i32, i32* %m_r762
  %tmp764 = sub i32 %r_mat763, 1
  %m_c765 = getelementptr inbounds %matrix_t, %matrix_t* %m139, i32 0, i32 2
  %c_mat766 = load i32, i32* %m_c765
  %tmp767 = sub i32 %c_mat766, 1
  %m_l768 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %l_mat769 = load i32, i32* %m_l768
  %tmp770 = sub i32 %l_mat769, 1
  %size771 = mul i32 %r_mat763, %c_mat766
  %system_mat772 = alloca double, i32 %size771
  %m773 = alloca %matrix_t
  %m_mat774 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 0
  store double* %system_mat772, double** %m_mat774
  %m_r775 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 1
  store i32 %r_mat763, i32* %m_r775
  %m_c776 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 2
  store i32 %c_mat766, i32* %m_c776
  %tmp777 = sub i32 %r_mat763, 1
  %tmp778 = sub i32 %c_mat766, 1
  %i779 = alloca i32
  store i32 0, i32* %i779
  br label %while780

then754:                                          ; preds = %merge746
  %printf755 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge753

else756:                                          ; preds = %merge746
  br label %merge753

while780:                                         ; preds = %merge792, %merge753
  %i_v798 = load i32, i32* %i779
  %bool_val799 = icmp sle i32 %i_v798, %tmp777
  br i1 %bool_val799, label %while_body781, label %merge797

while_body781:                                    ; preds = %while780
  %j782 = alloca i32
  store i32 0, i32* %j782
  br label %while783

while783:                                         ; preds = %while_body784, %while_body781
  %j_v793 = load i32, i32* %j782
  %bool_val794 = icmp sle i32 %j_v793, %tmp778
  br i1 %bool_val794, label %while_body784, label %merge792

while_body784:                                    ; preds = %while783
  %j_v785 = load i32, i32* %j782
  %i_v786 = load i32, i32* %i779
  %tmp787 = mul i32 %c_mat766, %i_v786
  %index788 = add i32 %j_v785, %tmp787
  %element_ptr789 = getelementptr double, double* %system_mat772, i32 %index788
  store double 0.000000e+00, double* %element_ptr789
  %j_v790 = load i32, i32* %j782
  %tmp791 = add i32 %j_v790, 1
  store i32 %tmp791, i32* %j782
  br label %while783

merge792:                                         ; preds = %while783
  %i_v795 = load i32, i32* %i779
  %tmp796 = add i32 %i_v795, 1
  store i32 %tmp796, i32* %i779
  br label %while780

merge797:                                         ; preds = %while780
  %m_mat800 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 0
  %mat_mat801 = load double*, double** %m_mat800
  %i802 = alloca i32
  store i32 0, i32* %i802
  br label %while803

while803:                                         ; preds = %merge840, %merge797
  %i_v846 = load i32, i32* %i802
  %bool_val847 = icmp sle i32 %i_v846, %tmp764
  br i1 %bool_val847, label %while_body804, label %merge845

while_body804:                                    ; preds = %while803
  %j805 = alloca i32
  store i32 0, i32* %j805
  br label %while806

while806:                                         ; preds = %merge834, %while_body804
  %j_v841 = load i32, i32* %j805
  %bool_val842 = icmp sle i32 %j_v841, %tmp767
  br i1 %bool_val842, label %while_body807, label %merge840

while_body807:                                    ; preds = %while806
  %j_v808 = load i32, i32* %j805
  %i_v809 = load i32, i32* %i802
  %tmp810 = mul i32 %c_mat766, %i_v809
  %index811 = add i32 %j_v808, %tmp810
  %element_ptr812 = getelementptr double, double* %mat_mat801, i32 %index811
  %tmp_element813 = alloca double
  store double 0.000000e+00, double* %tmp_element813
  %k814 = alloca i32
  store i32 0, i32* %k814
  br label %while815

while815:                                         ; preds = %while_body816, %while_body807
  %k_v835 = load i32, i32* %k814
  %bool_val836 = icmp sle i32 %k_v835, %tmp770
  br i1 %bool_val836, label %while_body816, label %merge834

while_body816:                                    ; preds = %while815
  %k_v817 = load i32, i32* %k814
  %i_v818 = load i32, i32* %i802
  %tmp819 = mul i32 %l_mat769, %i_v818
  %index820 = add i32 %k_v817, %tmp819
  %element_ptr821 = getelementptr double, double* %mat_mat759, i32 %index820
  %tmp_element822 = load double, double* %element_ptr821
  %j_v823 = load i32, i32* %j805
  %k_v824 = load i32, i32* %k814
  %tmp825 = mul i32 %c_mat766, %k_v824
  %index826 = add i32 %j_v823, %tmp825
  %element_ptr827 = getelementptr double, double* %mat_v761, i32 %index826
  %tmp_element828 = load double, double* %element_ptr827
  %tmp829 = load double, double* %tmp_element813
  %tmp830 = fmul double %tmp_element822, %tmp_element828
  %tmp831 = fadd double %tmp830, %tmp829
  store double %tmp831, double* %tmp_element813
  %k_v832 = load i32, i32* %k814
  %tmp833 = add i32 %k_v832, 1
  store i32 %tmp833, i32* %k814
  br label %while815

merge834:                                         ; preds = %while815
  %tmp837 = load double, double* %tmp_element813
  store double %tmp837, double* %element_ptr812
  %j_v838 = load i32, i32* %j805
  %tmp839 = add i32 %j_v838, 1
  store i32 %tmp839, i32* %j805
  br label %while806

merge840:                                         ; preds = %while806
  %i_v843 = load i32, i32* %i802
  %tmp844 = add i32 %i_v843, 1
  store i32 %tmp844, i32* %i802
  br label %while803

merge845:                                         ; preds = %while803
  %m_r848 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 1
  %r_mat849 = load i32, i32* %m_r848
  %m_c850 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 2
  %c_mat851 = load i32, i32* %m_c850
  %size852 = mul i32 %r_mat849, %c_mat851
  %mallocsize853 = mul i32 %size852, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall854 = tail call i8* @malloc(i32 %mallocsize853)
  %system_mat855 = bitcast i8* %malloccall854 to double*
  %malloccall856 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m857 = bitcast i8* %malloccall856 to %matrix_t*
  %m_mat858 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 0
  store double* %system_mat855, double** %m_mat858
  %m_r859 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 1
  store i32 %r_mat849, i32* %m_r859
  %m_c860 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 2
  store i32 %c_mat851, i32* %m_c860
  %tmp861 = sub i32 %r_mat849, 1
  %tmp862 = sub i32 %c_mat851, 1
  %i863 = alloca i32
  store i32 0, i32* %i863
  br label %while864

while864:                                         ; preds = %merge876, %merge845
  %i_v882 = load i32, i32* %i863
  %bool_val883 = icmp sle i32 %i_v882, %tmp861
  br i1 %bool_val883, label %while_body865, label %merge881

while_body865:                                    ; preds = %while864
  %j866 = alloca i32
  store i32 0, i32* %j866
  br label %while867

while867:                                         ; preds = %while_body868, %while_body865
  %j_v877 = load i32, i32* %j866
  %bool_val878 = icmp sle i32 %j_v877, %tmp862
  br i1 %bool_val878, label %while_body868, label %merge876

while_body868:                                    ; preds = %while867
  %j_v869 = load i32, i32* %j866
  %i_v870 = load i32, i32* %i863
  %tmp871 = mul i32 %c_mat851, %i_v870
  %index872 = add i32 %j_v869, %tmp871
  %element_ptr873 = getelementptr double, double* %system_mat855, i32 %index872
  store double 0.000000e+00, double* %element_ptr873
  %j_v874 = load i32, i32* %j866
  %tmp875 = add i32 %j_v874, 1
  store i32 %tmp875, i32* %j866
  br label %while867

merge876:                                         ; preds = %while867
  %i_v879 = load i32, i32* %i863
  %tmp880 = add i32 %i_v879, 1
  store i32 %tmp880, i32* %i863
  br label %while864

merge881:                                         ; preds = %while864
  %tmp884 = sub i32 %c_mat851, 1
  %tmp885 = sub i32 %r_mat849, 1
  %m_mat886 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 0
  %mat_mat887 = load double*, double** %m_mat886
  %m_r888 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 1
  %r_mat889 = load i32, i32* %m_r888
  %m_c890 = getelementptr inbounds %matrix_t, %matrix_t* %m857, i32 0, i32 2
  %c_mat891 = load i32, i32* %m_c890
  %m_mat892 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 0
  %mat_v893 = load double*, double** %m_mat892
  %m_r894 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 1
  %r_v895 = load i32, i32* %m_r894
  %m_c896 = getelementptr inbounds %matrix_t, %matrix_t* %m773, i32 0, i32 2
  %c_v897 = load i32, i32* %m_c896
  %i898 = alloca i32
  store i32 0, i32* %i898
  br label %while899

while899:                                         ; preds = %merge921, %merge881
  %i_v927 = load i32, i32* %i898
  %bool_val928 = icmp sle i32 %i_v927, %tmp885
  br i1 %bool_val928, label %while_body900, label %merge926

while_body900:                                    ; preds = %while899
  %j901 = alloca i32
  store i32 0, i32* %j901
  br label %while902

while902:                                         ; preds = %while_body903, %while_body900
  %j_v922 = load i32, i32* %j901
  %bool_val923 = icmp sle i32 %j_v922, %tmp884
  br i1 %bool_val923, label %while_body903, label %merge921

while_body903:                                    ; preds = %while902
  %j_v904 = load i32, i32* %j901
  %i_v905 = load i32, i32* %i898
  %tmp906 = mul i32 %c_mat891, %i_v905
  %index907 = add i32 %j_v904, %tmp906
  %element_ptr908 = getelementptr double, double* %mat_mat887, i32 %index907
  %j_v909 = load i32, i32* %j901
  %tmp910 = sub i32 %j_v909, 0
  %tmp911 = add i32 %tmp910, 0
  %i_v912 = load i32, i32* %i898
  %tmp913 = sub i32 %i_v912, 0
  %tmp914 = add i32 %tmp913, 0
  %tmp915 = mul i32 %c_v897, %tmp914
  %index916 = add i32 %tmp911, %tmp915
  %element_ptr917 = getelementptr double, double* %mat_v893, i32 %index916
  %tmp_element918 = load double, double* %element_ptr917
  store double %tmp_element918, double* %element_ptr908
  %j_v919 = load i32, i32* %j901
  %tmp920 = add i32 %j_v919, 1
  store i32 %tmp920, i32* %j901
  br label %while902

merge921:                                         ; preds = %while902
  %i_v924 = load i32, i32* %i898
  %tmp925 = add i32 %i_v924, 1
  store i32 %tmp925, i32* %i898
  br label %while899

merge926:                                         ; preds = %while899
  %return1 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 1
  store %matrix_t* %m857, %matrix_t** %return1
  %d929 = load double, double* %d
  %tmp930 = fmul double %d929, 5.000000e+00
  %return2 = getelementptr inbounds %return_t.1, %return_t.1* %return, i32 0, i32 2
  store double %tmp930, double* %return2
  ret %return_t.1* %return
  %tmp931 = alloca %return_t.1
  ret %return_t.1* %tmp931
}

define %return_t.2* @f2(%matrix_t*, %matrix_t*, double) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %d = alloca double
  store double %2, double* %d
  %system_mat133 = alloca double, i32 0
  %m134 = alloca %matrix_t
  %m_mat135 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 0
  store double* %system_mat133, double** %m_mat135
  %m_r136 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 1
  store i32 0, i32* %m_r136
  %m_c137 = getelementptr inbounds %matrix_t, %matrix_t* %m134, i32 0, i32 2
  store i32 0, i32* %m_c137
  %i138 = alloca i32
  store i32 0, i32* %i138
  br label %while139

while139:                                         ; preds = %merge151, %merge130
  %i_v157 = load i32, i32* %i138
  %bool_val158 = icmp sle i32 %i_v157, -1
  br i1 %bool_val158, label %while_body140, label %merge156

while_body140:                                    ; preds = %while139
  %j141 = alloca i32
  store i32 0, i32* %j141
  br label %while142

while142:                                         ; preds = %while_body143, %while_body140
  %j_v152 = load i32, i32* %j141
  %bool_val153 = icmp sle i32 %j_v152, -1
  br i1 %bool_val153, label %while_body143, label %merge151

while_body143:                                    ; preds = %while142
  %j_v144 = load i32, i32* %j141
  %i_v145 = load i32, i32* %i138
  %tmp146 = mul i32 0, %i_v145
  %index147 = add i32 %j_v144, %tmp146
  %element_ptr148 = getelementptr double, double* %system_mat133, i32 %index147
  store double 0.000000e+00, double* %element_ptr148
  %j_v149 = load i32, i32* %j141
  %tmp150 = add i32 %j_v149, 1
  store i32 %tmp150, i32* %j141
  br label %while142

merge151:                                         ; preds = %while142
  %i_v154 = load i32, i32* %i138
  %tmp155 = add i32 %i_v154, 1
  store i32 %tmp155, i32* %i138
  br label %while139

merge156:                                         ; preds = %while139
  %system_mat159 = alloca double, i32 0
  %m160 = alloca %matrix_t
  %m_mat161 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 0
  store double* %system_mat159, double** %m_mat161
  %m_r162 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 1
  store i32 0, i32* %m_r162
  %m_c163 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 2
  store i32 0, i32* %m_c163
  %i164 = alloca i32
  store i32 0, i32* %i164
  br label %while165

while165:                                         ; preds = %merge177, %merge156
  %i_v183 = load i32, i32* %i164
  %bool_val184 = icmp sle i32 %i_v183, -1
  br i1 %bool_val184, label %while_body166, label %merge182

while_body166:                                    ; preds = %while165
  %j167 = alloca i32
  store i32 0, i32* %j167
  br label %while168

while168:                                         ; preds = %while_body169, %while_body166
  %j_v178 = load i32, i32* %j167
  %bool_val179 = icmp sle i32 %j_v178, -1
  br i1 %bool_val179, label %while_body169, label %merge177

while_body169:                                    ; preds = %while168
  %j_v170 = load i32, i32* %j167
  %i_v171 = load i32, i32* %i164
  %tmp172 = mul i32 0, %i_v171
  %index173 = add i32 %j_v170, %tmp172
  %element_ptr174 = getelementptr double, double* %system_mat159, i32 %index173
  store double 0.000000e+00, double* %element_ptr174
  %j_v175 = load i32, i32* %j167
  %tmp176 = add i32 %j_v175, 1
  store i32 %tmp176, i32* %j167
  br label %while168

merge177:                                         ; preds = %while168
  %i_v180 = load i32, i32* %i164
  %tmp181 = add i32 %i_v180, 1
  store i32 %tmp181, i32* %i164
  br label %while165

merge182:                                         ; preds = %while165
  %d2 = alloca double
  store double 0.000000e+00, double* %d2
  %d185 = load double, double* %d
  %f_result = call %return_t.1* @f(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @system_string.12, i32 0, i32 0), %matrix_t* %m, %matrix_t* %m, %matrix_t* %m61, double %d185)
  %v_ptr = getelementptr inbounds %return_t.1, %return_t.1* %f_result, i32 0, i32 0
  %v = load %matrix_t*, %matrix_t** %v_ptr
  %m_mat186 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_mat187 = load double*, double** %m_mat186
  %m_r188 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_mat189 = load i32, i32* %m_r188
  %m_c190 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_mat191 = load i32, i32* %m_c190
  %size192 = mul i32 %r_mat189, %c_mat191
  %system_mat193 = alloca double, i32 %size192
  %m194 = alloca %matrix_t
  %m_mat195 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 0
  store double* %system_mat193, double** %m_mat195
  %m_r196 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 1
  store i32 %r_mat189, i32* %m_r196
  %m_c197 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 2
  store i32 %c_mat191, i32* %m_c197
  %tmp198 = sub i32 %r_mat189, 1
  %tmp199 = sub i32 %c_mat191, 1
  %i200 = alloca i32
  store i32 0, i32* %i200
  br label %while201

while201:                                         ; preds = %merge213, %merge182
  %i_v219 = load i32, i32* %i200
  %bool_val220 = icmp sle i32 %i_v219, %tmp198
  br i1 %bool_val220, label %while_body202, label %merge218

while_body202:                                    ; preds = %while201
  %j203 = alloca i32
  store i32 0, i32* %j203
  br label %while204

while204:                                         ; preds = %while_body205, %while_body202
  %j_v214 = load i32, i32* %j203
  %bool_val215 = icmp sle i32 %j_v214, %tmp199
  br i1 %bool_val215, label %while_body205, label %merge213

while_body205:                                    ; preds = %while204
  %j_v206 = load i32, i32* %j203
  %i_v207 = load i32, i32* %i200
  %tmp208 = mul i32 %c_mat191, %i_v207
  %index209 = add i32 %j_v206, %tmp208
  %element_ptr210 = getelementptr double, double* %system_mat193, i32 %index209
  store double 0.000000e+00, double* %element_ptr210
  %j_v211 = load i32, i32* %j203
  %tmp212 = add i32 %j_v211, 1
  store i32 %tmp212, i32* %j203
  br label %while204

merge213:                                         ; preds = %while204
  %i_v216 = load i32, i32* %i200
  %tmp217 = add i32 %i_v216, 1
  store i32 %tmp217, i32* %i200
  br label %while201

merge218:                                         ; preds = %while201
  %tmp221 = sub i32 %c_mat191, 1
  %tmp222 = sub i32 %r_mat189, 1
  %m_mat223 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 0
  %mat_mat224 = load double*, double** %m_mat223
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %m_mat229 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_v230 = load double*, double** %m_mat229
  %m_r231 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_v232 = load i32, i32* %m_r231
  %m_c233 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_v234 = load i32, i32* %m_c233
  %i235 = alloca i32
  store i32 0, i32* %i235
  br label %while236

while236:                                         ; preds = %merge258, %merge218
  %i_v264 = load i32, i32* %i235
  %bool_val265 = icmp sle i32 %i_v264, %tmp222
  br i1 %bool_val265, label %while_body237, label %merge263

while_body237:                                    ; preds = %while236
  %j238 = alloca i32
  store i32 0, i32* %j238
  br label %while239

while239:                                         ; preds = %while_body240, %while_body237
  %j_v259 = load i32, i32* %j238
  %bool_val260 = icmp sle i32 %j_v259, %tmp221
  br i1 %bool_val260, label %while_body240, label %merge258

while_body240:                                    ; preds = %while239
  %j_v241 = load i32, i32* %j238
  %i_v242 = load i32, i32* %i235
  %tmp243 = mul i32 %c_mat228, %i_v242
  %index244 = add i32 %j_v241, %tmp243
  %element_ptr245 = getelementptr double, double* %mat_mat224, i32 %index244
  %j_v246 = load i32, i32* %j238
  %tmp247 = sub i32 %j_v246, 0
  %tmp248 = add i32 %tmp247, 0
  %i_v249 = load i32, i32* %i235
  %tmp250 = sub i32 %i_v249, 0
  %tmp251 = add i32 %tmp250, 0
  %tmp252 = mul i32 %c_v234, %tmp251
  %index253 = add i32 %tmp248, %tmp252
  %element_ptr254 = getelementptr double, double* %mat_v230, i32 %index253
  %tmp_element255 = load double, double* %element_ptr254
  store double %tmp_element255, double* %element_ptr245
  %j_v256 = load i32, i32* %j238
  %tmp257 = add i32 %j_v256, 1
  store i32 %tmp257, i32* %j238
  br label %while239

merge258:                                         ; preds = %while239
  %i_v261 = load i32, i32* %i235
  %tmp262 = add i32 %i_v261, 1
  store i32 %tmp262, i32* %i235
  br label %while236

merge263:                                         ; preds = %while236
  %3 = bitcast double* %mat_mat187 to i8*
  tail call void @free(i8* %3)
  %4 = bitcast %matrix_t* %v to i8*
  tail call void @free(i8* %4)
  %m_r266 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 1
  %r_mat267 = load i32, i32* %m_r266
  %m_c268 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 2
  %c_mat269 = load i32, i32* %m_c268
  %size270 = mul i32 %r_mat267, %c_mat269
  %system_mat271 = alloca double, i32 %size270
  %m272 = alloca %matrix_t
  %m_mat273 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 0
  store double* %system_mat271, double** %m_mat273
  %m_r274 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 1
  store i32 %r_mat267, i32* %m_r274
  %m_c275 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 2
  store i32 %c_mat269, i32* %m_c275
  %tmp276 = sub i32 %r_mat267, 1
  %tmp277 = sub i32 %c_mat269, 1
  %i278 = alloca i32
  store i32 0, i32* %i278
  br label %while279

while279:                                         ; preds = %merge291, %merge263
  %i_v297 = load i32, i32* %i278
  %bool_val298 = icmp sle i32 %i_v297, %tmp276
  br i1 %bool_val298, label %while_body280, label %merge296

while_body280:                                    ; preds = %while279
  %j281 = alloca i32
  store i32 0, i32* %j281
  br label %while282

while282:                                         ; preds = %while_body283, %while_body280
  %j_v292 = load i32, i32* %j281
  %bool_val293 = icmp sle i32 %j_v292, %tmp277
  br i1 %bool_val293, label %while_body283, label %merge291

while_body283:                                    ; preds = %while282
  %j_v284 = load i32, i32* %j281
  %i_v285 = load i32, i32* %i278
  %tmp286 = mul i32 %c_mat269, %i_v285
  %index287 = add i32 %j_v284, %tmp286
  %element_ptr288 = getelementptr double, double* %system_mat271, i32 %index287
  store double 0.000000e+00, double* %element_ptr288
  %j_v289 = load i32, i32* %j281
  %tmp290 = add i32 %j_v289, 1
  store i32 %tmp290, i32* %j281
  br label %while282

merge291:                                         ; preds = %while282
  %i_v294 = load i32, i32* %i278
  %tmp295 = add i32 %i_v294, 1
  store i32 %tmp295, i32* %i278
  br label %while279

merge296:                                         ; preds = %while279
  %tmp299 = sub i32 %c_mat269, 1
  %tmp300 = sub i32 %r_mat267, 1
  %m_mat301 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 0
  %mat_mat302 = load double*, double** %m_mat301
  %m_r303 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 1
  %r_mat304 = load i32, i32* %m_r303
  %m_c305 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 2
  %c_mat306 = load i32, i32* %m_c305
  %m_mat307 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 0
  %mat_v308 = load double*, double** %m_mat307
  %m_r309 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 1
  %r_v310 = load i32, i32* %m_r309
  %m_c311 = getelementptr inbounds %matrix_t, %matrix_t* %m194, i32 0, i32 2
  %c_v312 = load i32, i32* %m_c311
  %i313 = alloca i32
  store i32 0, i32* %i313
  br label %while314

while314:                                         ; preds = %merge336, %merge296
  %i_v342 = load i32, i32* %i313
  %bool_val343 = icmp sle i32 %i_v342, %tmp300
  br i1 %bool_val343, label %while_body315, label %merge341

while_body315:                                    ; preds = %while314
  %j316 = alloca i32
  store i32 0, i32* %j316
  br label %while317

while317:                                         ; preds = %while_body318, %while_body315
  %j_v337 = load i32, i32* %j316
  %bool_val338 = icmp sle i32 %j_v337, %tmp299
  br i1 %bool_val338, label %while_body318, label %merge336

while_body318:                                    ; preds = %while317
  %j_v319 = load i32, i32* %j316
  %i_v320 = load i32, i32* %i313
  %tmp321 = mul i32 %c_mat306, %i_v320
  %index322 = add i32 %j_v319, %tmp321
  %element_ptr323 = getelementptr double, double* %mat_mat302, i32 %index322
  %j_v324 = load i32, i32* %j316
  %tmp325 = sub i32 %j_v324, 0
  %tmp326 = add i32 %tmp325, 0
  %i_v327 = load i32, i32* %i313
  %tmp328 = sub i32 %i_v327, 0
  %tmp329 = add i32 %tmp328, 0
  %tmp330 = mul i32 %c_v312, %tmp329
  %index331 = add i32 %tmp326, %tmp330
  %element_ptr332 = getelementptr double, double* %mat_v308, i32 %index331
  %tmp_element333 = load double, double* %element_ptr332
  store double %tmp_element333, double* %element_ptr323
  %j_v334 = load i32, i32* %j316
  %tmp335 = add i32 %j_v334, 1
  store i32 %tmp335, i32* %j316
  br label %while317

merge336:                                         ; preds = %while317
  %i_v339 = load i32, i32* %i313
  %tmp340 = add i32 %i_v339, 1
  store i32 %tmp340, i32* %i313
  br label %while314

merge341:                                         ; preds = %while314
  %v_ptr344 = getelementptr inbounds %return_t.1, %return_t.1* %f_result, i32 0, i32 1
  %v345 = load %matrix_t*, %matrix_t** %v_ptr344
  %m_mat346 = getelementptr inbounds %matrix_t, %matrix_t* %v345, i32 0, i32 0
  %mat_mat347 = load double*, double** %m_mat346
  %m_r348 = getelementptr inbounds %matrix_t, %matrix_t* %v345, i32 0, i32 1
  %r_mat349 = load i32, i32* %m_r348
  %m_c350 = getelementptr inbounds %matrix_t, %matrix_t* %v345, i32 0, i32 2
  %c_mat351 = load i32, i32* %m_c350
  %size352 = mul i32 %r_mat349, %c_mat351
  %system_mat353 = alloca double, i32 %size352
  %m354 = alloca %matrix_t
  %m_mat355 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 0
  store double* %system_mat353, double** %m_mat355
  %m_r356 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 1
  store i32 %r_mat349, i32* %m_r356
  %m_c357 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 2
  store i32 %c_mat351, i32* %m_c357
  %tmp358 = sub i32 %r_mat349, 1
  %tmp359 = sub i32 %c_mat351, 1
  %i360 = alloca i32
  store i32 0, i32* %i360
  br label %while361

while361:                                         ; preds = %merge373, %merge341
  %i_v379 = load i32, i32* %i360
  %bool_val380 = icmp sle i32 %i_v379, %tmp358
  br i1 %bool_val380, label %while_body362, label %merge378

while_body362:                                    ; preds = %while361
  %j363 = alloca i32
  store i32 0, i32* %j363
  br label %while364

while364:                                         ; preds = %while_body365, %while_body362
  %j_v374 = load i32, i32* %j363
  %bool_val375 = icmp sle i32 %j_v374, %tmp359
  br i1 %bool_val375, label %while_body365, label %merge373

while_body365:                                    ; preds = %while364
  %j_v366 = load i32, i32* %j363
  %i_v367 = load i32, i32* %i360
  %tmp368 = mul i32 %c_mat351, %i_v367
  %index369 = add i32 %j_v366, %tmp368
  %element_ptr370 = getelementptr double, double* %system_mat353, i32 %index369
  store double 0.000000e+00, double* %element_ptr370
  %j_v371 = load i32, i32* %j363
  %tmp372 = add i32 %j_v371, 1
  store i32 %tmp372, i32* %j363
  br label %while364

merge373:                                         ; preds = %while364
  %i_v376 = load i32, i32* %i360
  %tmp377 = add i32 %i_v376, 1
  store i32 %tmp377, i32* %i360
  br label %while361

merge378:                                         ; preds = %while361
  %tmp381 = sub i32 %c_mat351, 1
  %tmp382 = sub i32 %r_mat349, 1
  %m_mat383 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 0
  %mat_mat384 = load double*, double** %m_mat383
  %m_r385 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 1
  %r_mat386 = load i32, i32* %m_r385
  %m_c387 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 2
  %c_mat388 = load i32, i32* %m_c387
  %m_mat389 = getelementptr inbounds %matrix_t, %matrix_t* %v345, i32 0, i32 0
  %mat_v390 = load double*, double** %m_mat389
  %m_r391 = getelementptr inbounds %matrix_t, %matrix_t* %v345, i32 0, i32 1
  %r_v392 = load i32, i32* %m_r391
  %m_c393 = getelementptr inbounds %matrix_t, %matrix_t* %v345, i32 0, i32 2
  %c_v394 = load i32, i32* %m_c393
  %i395 = alloca i32
  store i32 0, i32* %i395
  br label %while396

while396:                                         ; preds = %merge418, %merge378
  %i_v424 = load i32, i32* %i395
  %bool_val425 = icmp sle i32 %i_v424, %tmp382
  br i1 %bool_val425, label %while_body397, label %merge423

while_body397:                                    ; preds = %while396
  %j398 = alloca i32
  store i32 0, i32* %j398
  br label %while399

while399:                                         ; preds = %while_body400, %while_body397
  %j_v419 = load i32, i32* %j398
  %bool_val420 = icmp sle i32 %j_v419, %tmp381
  br i1 %bool_val420, label %while_body400, label %merge418

while_body400:                                    ; preds = %while399
  %j_v401 = load i32, i32* %j398
  %i_v402 = load i32, i32* %i395
  %tmp403 = mul i32 %c_mat388, %i_v402
  %index404 = add i32 %j_v401, %tmp403
  %element_ptr405 = getelementptr double, double* %mat_mat384, i32 %index404
  %j_v406 = load i32, i32* %j398
  %tmp407 = sub i32 %j_v406, 0
  %tmp408 = add i32 %tmp407, 0
  %i_v409 = load i32, i32* %i395
  %tmp410 = sub i32 %i_v409, 0
  %tmp411 = add i32 %tmp410, 0
  %tmp412 = mul i32 %c_v394, %tmp411
  %index413 = add i32 %tmp408, %tmp412
  %element_ptr414 = getelementptr double, double* %mat_v390, i32 %index413
  %tmp_element415 = load double, double* %element_ptr414
  store double %tmp_element415, double* %element_ptr405
  %j_v416 = load i32, i32* %j398
  %tmp417 = add i32 %j_v416, 1
  store i32 %tmp417, i32* %j398
  br label %while399

merge418:                                         ; preds = %while399
  %i_v421 = load i32, i32* %i395
  %tmp422 = add i32 %i_v421, 1
  store i32 %tmp422, i32* %i395
  br label %while396

merge423:                                         ; preds = %while396
  %5 = bitcast double* %mat_mat347 to i8*
  tail call void @free(i8* %5)
  %6 = bitcast %matrix_t* %v345 to i8*
  tail call void @free(i8* %6)
  %m_r426 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 1
  %r_mat427 = load i32, i32* %m_r426
  %m_c428 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 2
  %c_mat429 = load i32, i32* %m_c428
  %size430 = mul i32 %r_mat427, %c_mat429
  %system_mat431 = alloca double, i32 %size430
  %m432 = alloca %matrix_t
  %m_mat433 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 0
  store double* %system_mat431, double** %m_mat433
  %m_r434 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 1
  store i32 %r_mat427, i32* %m_r434
  %m_c435 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 2
  store i32 %c_mat429, i32* %m_c435
  %tmp436 = sub i32 %r_mat427, 1
  %tmp437 = sub i32 %c_mat429, 1
  %i438 = alloca i32
  store i32 0, i32* %i438
  br label %while439

while439:                                         ; preds = %merge451, %merge423
  %i_v457 = load i32, i32* %i438
  %bool_val458 = icmp sle i32 %i_v457, %tmp436
  br i1 %bool_val458, label %while_body440, label %merge456

while_body440:                                    ; preds = %while439
  %j441 = alloca i32
  store i32 0, i32* %j441
  br label %while442

while442:                                         ; preds = %while_body443, %while_body440
  %j_v452 = load i32, i32* %j441
  %bool_val453 = icmp sle i32 %j_v452, %tmp437
  br i1 %bool_val453, label %while_body443, label %merge451

while_body443:                                    ; preds = %while442
  %j_v444 = load i32, i32* %j441
  %i_v445 = load i32, i32* %i438
  %tmp446 = mul i32 %c_mat429, %i_v445
  %index447 = add i32 %j_v444, %tmp446
  %element_ptr448 = getelementptr double, double* %system_mat431, i32 %index447
  store double 0.000000e+00, double* %element_ptr448
  %j_v449 = load i32, i32* %j441
  %tmp450 = add i32 %j_v449, 1
  store i32 %tmp450, i32* %j441
  br label %while442

merge451:                                         ; preds = %while442
  %i_v454 = load i32, i32* %i438
  %tmp455 = add i32 %i_v454, 1
  store i32 %tmp455, i32* %i438
  br label %while439

merge456:                                         ; preds = %while439
  %tmp459 = sub i32 %c_mat429, 1
  %tmp460 = sub i32 %r_mat427, 1
  %m_mat461 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 0
  %mat_mat462 = load double*, double** %m_mat461
  %m_r463 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 1
  %r_mat464 = load i32, i32* %m_r463
  %m_c465 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 2
  %c_mat466 = load i32, i32* %m_c465
  %m_mat467 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 0
  %mat_v468 = load double*, double** %m_mat467
  %m_r469 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 1
  %r_v470 = load i32, i32* %m_r469
  %m_c471 = getelementptr inbounds %matrix_t, %matrix_t* %m354, i32 0, i32 2
  %c_v472 = load i32, i32* %m_c471
  %i473 = alloca i32
  store i32 0, i32* %i473
  br label %while474

while474:                                         ; preds = %merge496, %merge456
  %i_v502 = load i32, i32* %i473
  %bool_val503 = icmp sle i32 %i_v502, %tmp460
  br i1 %bool_val503, label %while_body475, label %merge501

while_body475:                                    ; preds = %while474
  %j476 = alloca i32
  store i32 0, i32* %j476
  br label %while477

while477:                                         ; preds = %while_body478, %while_body475
  %j_v497 = load i32, i32* %j476
  %bool_val498 = icmp sle i32 %j_v497, %tmp459
  br i1 %bool_val498, label %while_body478, label %merge496

while_body478:                                    ; preds = %while477
  %j_v479 = load i32, i32* %j476
  %i_v480 = load i32, i32* %i473
  %tmp481 = mul i32 %c_mat466, %i_v480
  %index482 = add i32 %j_v479, %tmp481
  %element_ptr483 = getelementptr double, double* %mat_mat462, i32 %index482
  %j_v484 = load i32, i32* %j476
  %tmp485 = sub i32 %j_v484, 0
  %tmp486 = add i32 %tmp485, 0
  %i_v487 = load i32, i32* %i473
  %tmp488 = sub i32 %i_v487, 0
  %tmp489 = add i32 %tmp488, 0
  %tmp490 = mul i32 %c_v472, %tmp489
  %index491 = add i32 %tmp486, %tmp490
  %element_ptr492 = getelementptr double, double* %mat_v468, i32 %index491
  %tmp_element493 = load double, double* %element_ptr492
  store double %tmp_element493, double* %element_ptr483
  %j_v494 = load i32, i32* %j476
  %tmp495 = add i32 %j_v494, 1
  store i32 %tmp495, i32* %j476
  br label %while477

merge496:                                         ; preds = %while477
  %i_v499 = load i32, i32* %i473
  %tmp500 = add i32 %i_v499, 1
  store i32 %tmp500, i32* %i473
  br label %while474

merge501:                                         ; preds = %while474
  %v_ptr504 = getelementptr inbounds %return_t.1, %return_t.1* %f_result, i32 0, i32 2
  %v505 = load double, double* %v_ptr504
  %tmp506 = load double, double* %d2
  store double %v505, double* %d2
  %7 = bitcast %return_t.1* %f_result to i8*
  tail call void @free(i8* %7)
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_r507 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 1
  %r_mat508 = load i32, i32* %m_r507
  %m_r509 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 1
  %r_mat510 = load i32, i32* %m_r509
  %tmp522 = icmp ne i32 %r_mat508, %r_mat510
  br i1 %tmp522, label %then, label %else

merge511:                                         ; preds = %merge517, %then
  %m_mat523 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 0
  %mat_mat524 = load double*, double** %m_mat523
  %m_r525 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 1
  %r_mat526 = load i32, i32* %m_r525
  %tmp527 = sub i32 %r_mat526, 1
  %m_c528 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 2
  %c_mat529 = load i32, i32* %m_c528
  %tmp530 = sub i32 %c_mat529, 1
  %m_mat531 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 0
  %mat_v532 = load double*, double** %m_mat531
  %size533 = mul i32 %r_mat526, %c_mat529
  %system_mat534 = alloca double, i32 %size533
  %m535 = alloca %matrix_t
  %m_mat536 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 0
  store double* %system_mat534, double** %m_mat536
  %m_r537 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 1
  store i32 %r_mat526, i32* %m_r537
  %m_c538 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 2
  store i32 %c_mat529, i32* %m_c538
  %tmp539 = sub i32 %r_mat526, 1
  %tmp540 = sub i32 %c_mat529, 1
  %i541 = alloca i32
  store i32 0, i32* %i541
  br label %while542

then:                                             ; preds = %merge501
  %printf512 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge511

else:                                             ; preds = %merge501
  %m_c513 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 2
  %c_mat514 = load i32, i32* %m_c513
  %m_c515 = getelementptr inbounds %matrix_t, %matrix_t* %m432, i32 0, i32 2
  %c_mat516 = load i32, i32* %m_c515
  %tmp521 = icmp ne i32 %c_mat514, %c_mat516
  br i1 %tmp521, label %then518, label %else520

merge517:                                         ; preds = %else520, %then518
  br label %merge511

then518:                                          ; preds = %else
  %printf519 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge517

else520:                                          ; preds = %else
  br label %merge517

while542:                                         ; preds = %merge554, %merge511
  %i_v560 = load i32, i32* %i541
  %bool_val561 = icmp sle i32 %i_v560, %tmp539
  br i1 %bool_val561, label %while_body543, label %merge559

while_body543:                                    ; preds = %while542
  %j544 = alloca i32
  store i32 0, i32* %j544
  br label %while545

while545:                                         ; preds = %while_body546, %while_body543
  %j_v555 = load i32, i32* %j544
  %bool_val556 = icmp sle i32 %j_v555, %tmp540
  br i1 %bool_val556, label %while_body546, label %merge554

while_body546:                                    ; preds = %while545
  %j_v547 = load i32, i32* %j544
  %i_v548 = load i32, i32* %i541
  %tmp549 = mul i32 %c_mat529, %i_v548
  %index550 = add i32 %j_v547, %tmp549
  %element_ptr551 = getelementptr double, double* %system_mat534, i32 %index550
  store double 0.000000e+00, double* %element_ptr551
  %j_v552 = load i32, i32* %j544
  %tmp553 = add i32 %j_v552, 1
  store i32 %tmp553, i32* %j544
  br label %while545

merge554:                                         ; preds = %while545
  %i_v557 = load i32, i32* %i541
  %tmp558 = add i32 %i_v557, 1
  store i32 %tmp558, i32* %i541
  br label %while542

merge559:                                         ; preds = %while542
  %m_mat562 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 0
  %mat_mat563 = load double*, double** %m_mat562
  %i564 = alloca i32
  store i32 0, i32* %i564
  br label %while565

while565:                                         ; preds = %merge590, %merge559
  %i_v596 = load i32, i32* %i564
  %bool_val597 = icmp sle i32 %i_v596, %tmp527
  br i1 %bool_val597, label %while_body566, label %merge595

while_body566:                                    ; preds = %while565
  %j567 = alloca i32
  store i32 0, i32* %j567
  br label %while568

while568:                                         ; preds = %while_body569, %while_body566
  %j_v591 = load i32, i32* %j567
  %bool_val592 = icmp sle i32 %j_v591, %tmp530
  br i1 %bool_val592, label %while_body569, label %merge590

while_body569:                                    ; preds = %while568
  %j_v570 = load i32, i32* %j567
  %i_v571 = load i32, i32* %i564
  %tmp572 = mul i32 %c_mat529, %i_v571
  %index573 = add i32 %j_v570, %tmp572
  %element_ptr574 = getelementptr double, double* %mat_mat524, i32 %index573
  %tmp_element575 = load double, double* %element_ptr574
  %j_v576 = load i32, i32* %j567
  %i_v577 = load i32, i32* %i564
  %tmp578 = mul i32 %c_mat529, %i_v577
  %index579 = add i32 %j_v576, %tmp578
  %element_ptr580 = getelementptr double, double* %mat_v532, i32 %index579
  %tmp_element581 = load double, double* %element_ptr580
  %j_v582 = load i32, i32* %j567
  %i_v583 = load i32, i32* %i564
  %tmp584 = mul i32 %c_mat529, %i_v583
  %index585 = add i32 %j_v582, %tmp584
  %element_ptr586 = getelementptr double, double* %mat_mat563, i32 %index585
  %tmp_element587 = fadd double %tmp_element575, %tmp_element581
  store double %tmp_element587, double* %element_ptr586
  %j_v588 = load i32, i32* %j567
  %tmp589 = add i32 %j_v588, 1
  store i32 %tmp589, i32* %j567
  br label %while568

merge590:                                         ; preds = %while568
  %i_v593 = load i32, i32* %i564
  %tmp594 = add i32 %i_v593, 1
  store i32 %tmp594, i32* %i564
  br label %while565

merge595:                                         ; preds = %while565
  %d2598 = load double, double* %d2
  %m_mat599 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 0
  %mat_mat600 = load double*, double** %m_mat599
  %m_r601 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 1
  %r_mat602 = load i32, i32* %m_r601
  %tmp603 = sub i32 %r_mat602, 1
  %m_c604 = getelementptr inbounds %matrix_t, %matrix_t* %m535, i32 0, i32 2
  %c_mat605 = load i32, i32* %m_c604
  %tmp606 = sub i32 %c_mat605, 1
  %size607 = mul i32 %r_mat602, %c_mat605
  %system_mat608 = alloca double, i32 %size607
  %m609 = alloca %matrix_t
  %m_mat610 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 0
  store double* %system_mat608, double** %m_mat610
  %m_r611 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 1
  store i32 %r_mat602, i32* %m_r611
  %m_c612 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 2
  store i32 %c_mat605, i32* %m_c612
  %tmp613 = sub i32 %r_mat602, 1
  %tmp614 = sub i32 %c_mat605, 1
  %i615 = alloca i32
  store i32 0, i32* %i615
  br label %while616

while616:                                         ; preds = %merge628, %merge595
  %i_v634 = load i32, i32* %i615
  %bool_val635 = icmp sle i32 %i_v634, %tmp613
  br i1 %bool_val635, label %while_body617, label %merge633

while_body617:                                    ; preds = %while616
  %j618 = alloca i32
  store i32 0, i32* %j618
  br label %while619

while619:                                         ; preds = %while_body620, %while_body617
  %j_v629 = load i32, i32* %j618
  %bool_val630 = icmp sle i32 %j_v629, %tmp614
  br i1 %bool_val630, label %while_body620, label %merge628

while_body620:                                    ; preds = %while619
  %j_v621 = load i32, i32* %j618
  %i_v622 = load i32, i32* %i615
  %tmp623 = mul i32 %c_mat605, %i_v622
  %index624 = add i32 %j_v621, %tmp623
  %element_ptr625 = getelementptr double, double* %system_mat608, i32 %index624
  store double 0.000000e+00, double* %element_ptr625
  %j_v626 = load i32, i32* %j618
  %tmp627 = add i32 %j_v626, 1
  store i32 %tmp627, i32* %j618
  br label %while619

merge628:                                         ; preds = %while619
  %i_v631 = load i32, i32* %i615
  %tmp632 = add i32 %i_v631, 1
  store i32 %tmp632, i32* %i615
  br label %while616

merge633:                                         ; preds = %while616
  %m_mat636 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 0
  %mat_mat637 = load double*, double** %m_mat636
  %i638 = alloca i32
  store i32 0, i32* %i638
  br label %while639

while639:                                         ; preds = %merge658, %merge633
  %i_v664 = load i32, i32* %i638
  %bool_val665 = icmp sle i32 %i_v664, %tmp603
  br i1 %bool_val665, label %while_body640, label %merge663

while_body640:                                    ; preds = %while639
  %j641 = alloca i32
  store i32 0, i32* %j641
  br label %while642

while642:                                         ; preds = %while_body643, %while_body640
  %j_v659 = load i32, i32* %j641
  %bool_val660 = icmp sle i32 %j_v659, %tmp606
  br i1 %bool_val660, label %while_body643, label %merge658

while_body643:                                    ; preds = %while642
  %j_v644 = load i32, i32* %j641
  %i_v645 = load i32, i32* %i638
  %tmp646 = mul i32 %c_mat605, %i_v645
  %index647 = add i32 %j_v644, %tmp646
  %element_ptr648 = getelementptr double, double* %mat_mat600, i32 %index647
  %tmp_element649 = load double, double* %element_ptr648
  %j_v650 = load i32, i32* %j641
  %i_v651 = load i32, i32* %i638
  %tmp652 = mul i32 %c_mat605, %i_v651
  %index653 = add i32 %j_v650, %tmp652
  %element_ptr654 = getelementptr double, double* %mat_mat637, i32 %index653
  %tmp_element655 = fmul double %tmp_element649, %d2598
  store double %tmp_element655, double* %element_ptr654
  %j_v656 = load i32, i32* %j641
  %tmp657 = add i32 %j_v656, 1
  store i32 %tmp657, i32* %j641
  br label %while642

merge658:                                         ; preds = %while642
  %i_v661 = load i32, i32* %i638
  %tmp662 = add i32 %i_v661, 1
  store i32 %tmp662, i32* %i638
  br label %while639

merge663:                                         ; preds = %while639
  %m_mat666 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 0
  %mat_mat667 = load double*, double** %m_mat666
  %m_r668 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 1
  %r_mat669 = load i32, i32* %m_r668
  %m_c670 = getelementptr inbounds %matrix_t, %matrix_t* %m609, i32 0, i32 2
  %c_mat671 = load i32, i32* %m_c670
  %tmp672 = sub i32 %r_mat669, 1
  %tmp673 = sub i32 %c_mat671, 1
  %i674 = alloca i32
  store i32 0, i32* %i674
  br label %while675

while675:                                         ; preds = %merge690, %merge663
  %i_v697 = load i32, i32* %i674
  %bool_val698 = icmp sle i32 %i_v697, %tmp672
  br i1 %bool_val698, label %while_body676, label %merge696

while_body676:                                    ; preds = %while675
  %j677 = alloca i32
  store i32 0, i32* %j677
  br label %while678

while678:                                         ; preds = %while_body679, %while_body676
  %j_v691 = load i32, i32* %j677
  %bool_val692 = icmp sle i32 %j_v691, %tmp673
  br i1 %bool_val692, label %while_body679, label %merge690

while_body679:                                    ; preds = %while678
  %j_v680 = load i32, i32* %j677
  %i_v681 = load i32, i32* %i674
  %tmp682 = mul i32 %c_mat671, %i_v681
  %index683 = add i32 %j_v680, %tmp682
  %element_ptr684 = getelementptr double, double* %mat_mat667, i32 %index683
  %tmp_element685 = load double, double* %element_ptr684
  %printf686 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element685)
  %printf687 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v688 = load i32, i32* %j677
  %tmp689 = add i32 %j_v688, 1
  store i32 %tmp689, i32* %j677
  br label %while678

merge690:                                         ; preds = %while678
  %printf693 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v694 = load i32, i32* %i674
  %tmp695 = add i32 %i_v694, 1
  store i32 %tmp695, i32* %i674
  br label %while675

merge696:                                         ; preds = %while675
  %printf699 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf700 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat701 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 0
  %mat_mat702 = load double*, double** %m_mat701
  %m_r703 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 1
  %r_mat704 = load i32, i32* %m_r703
  %tmp705 = sub i32 %r_mat704, 1
  %m_c706 = getelementptr inbounds %matrix_t, %matrix_t* %m272, i32 0, i32 2
  %c_mat707 = load i32, i32* %m_c706
  %tmp708 = sub i32 %c_mat707, 1
  %size709 = mul i32 %r_mat704, %c_mat707
  %system_mat710 = alloca double, i32 %size709
  %m711 = alloca %matrix_t
  %m_mat712 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 0
  store double* %system_mat710, double** %m_mat712
  %m_r713 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 1
  store i32 %r_mat704, i32* %m_r713
  %m_c714 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 2
  store i32 %c_mat707, i32* %m_c714
  %tmp715 = sub i32 %r_mat704, 1
  %tmp716 = sub i32 %c_mat707, 1
  %i717 = alloca i32
  store i32 0, i32* %i717
  br label %while718

while718:                                         ; preds = %merge730, %merge696
  %i_v736 = load i32, i32* %i717
  %bool_val737 = icmp sle i32 %i_v736, %tmp715
  br i1 %bool_val737, label %while_body719, label %merge735

while_body719:                                    ; preds = %while718
  %j720 = alloca i32
  store i32 0, i32* %j720
  br label %while721

while721:                                         ; preds = %while_body722, %while_body719
  %j_v731 = load i32, i32* %j720
  %bool_val732 = icmp sle i32 %j_v731, %tmp716
  br i1 %bool_val732, label %while_body722, label %merge730

while_body722:                                    ; preds = %while721
  %j_v723 = load i32, i32* %j720
  %i_v724 = load i32, i32* %i717
  %tmp725 = mul i32 %c_mat707, %i_v724
  %index726 = add i32 %j_v723, %tmp725
  %element_ptr727 = getelementptr double, double* %system_mat710, i32 %index726
  store double 0.000000e+00, double* %element_ptr727
  %j_v728 = load i32, i32* %j720
  %tmp729 = add i32 %j_v728, 1
  store i32 %tmp729, i32* %j720
  br label %while721

merge730:                                         ; preds = %while721
  %i_v733 = load i32, i32* %i717
  %tmp734 = add i32 %i_v733, 1
  store i32 %tmp734, i32* %i717
  br label %while718

merge735:                                         ; preds = %while718
  %m_mat738 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 0
  %mat_mat739 = load double*, double** %m_mat738
  %i740 = alloca i32
  store i32 0, i32* %i740
  br label %while741

while741:                                         ; preds = %merge760, %merge735
  %i_v766 = load i32, i32* %i740
  %bool_val767 = icmp sle i32 %i_v766, %tmp705
  br i1 %bool_val767, label %while_body742, label %merge765

while_body742:                                    ; preds = %while741
  %j743 = alloca i32
  store i32 0, i32* %j743
  br label %while744

while744:                                         ; preds = %while_body745, %while_body742
  %j_v761 = load i32, i32* %j743
  %bool_val762 = icmp sle i32 %j_v761, %tmp708
  br i1 %bool_val762, label %while_body745, label %merge760

while_body745:                                    ; preds = %while744
  %j_v746 = load i32, i32* %j743
  %i_v747 = load i32, i32* %i740
  %tmp748 = mul i32 %c_mat707, %i_v747
  %index749 = add i32 %j_v746, %tmp748
  %element_ptr750 = getelementptr double, double* %mat_mat702, i32 %index749
  %tmp_element751 = load double, double* %element_ptr750
  %j_v752 = load i32, i32* %j743
  %i_v753 = load i32, i32* %i740
  %tmp754 = mul i32 %c_mat707, %i_v753
  %index755 = add i32 %j_v752, %tmp754
  %element_ptr756 = getelementptr double, double* %mat_mat739, i32 %index755
  %tmp_element757 = fmul double %tmp_element751, 2.000000e+00
  store double %tmp_element757, double* %element_ptr756
  %j_v758 = load i32, i32* %j743
  %tmp759 = add i32 %j_v758, 1
  store i32 %tmp759, i32* %j743
  br label %while744

merge760:                                         ; preds = %while744
  %i_v763 = load i32, i32* %i740
  %tmp764 = add i32 %i_v763, 1
  store i32 %tmp764, i32* %i740
  br label %while741

merge765:                                         ; preds = %while741
  %d2768 = load double, double* %d2
  %m_mat769 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 0
  %mat_mat770 = load double*, double** %m_mat769
  %m_r771 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 1
  %r_mat772 = load i32, i32* %m_r771
  %tmp773 = sub i32 %r_mat772, 1
  %m_c774 = getelementptr inbounds %matrix_t, %matrix_t* %m711, i32 0, i32 2
  %c_mat775 = load i32, i32* %m_c774
  %tmp776 = sub i32 %c_mat775, 1
  %size777 = mul i32 %r_mat772, %c_mat775
  %system_mat778 = alloca double, i32 %size777
  %m779 = alloca %matrix_t
  %m_mat780 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 0
  store double* %system_mat778, double** %m_mat780
  %m_r781 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 1
  store i32 %r_mat772, i32* %m_r781
  %m_c782 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 2
  store i32 %c_mat775, i32* %m_c782
  %tmp783 = sub i32 %r_mat772, 1
  %tmp784 = sub i32 %c_mat775, 1
  %i785 = alloca i32
  store i32 0, i32* %i785
  br label %while786

while786:                                         ; preds = %merge798, %merge765
  %i_v804 = load i32, i32* %i785
  %bool_val805 = icmp sle i32 %i_v804, %tmp783
  br i1 %bool_val805, label %while_body787, label %merge803

while_body787:                                    ; preds = %while786
  %j788 = alloca i32
  store i32 0, i32* %j788
  br label %while789

while789:                                         ; preds = %while_body790, %while_body787
  %j_v799 = load i32, i32* %j788
  %bool_val800 = icmp sle i32 %j_v799, %tmp784
  br i1 %bool_val800, label %while_body790, label %merge798

while_body790:                                    ; preds = %while789
  %j_v791 = load i32, i32* %j788
  %i_v792 = load i32, i32* %i785
  %tmp793 = mul i32 %c_mat775, %i_v792
  %index794 = add i32 %j_v791, %tmp793
  %element_ptr795 = getelementptr double, double* %system_mat778, i32 %index794
  store double 0.000000e+00, double* %element_ptr795
  %j_v796 = load i32, i32* %j788
  %tmp797 = add i32 %j_v796, 1
  store i32 %tmp797, i32* %j788
  br label %while789

merge798:                                         ; preds = %while789
  %i_v801 = load i32, i32* %i785
  %tmp802 = add i32 %i_v801, 1
  store i32 %tmp802, i32* %i785
  br label %while786

merge803:                                         ; preds = %while786
  %m_mat806 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 0
  %mat_mat807 = load double*, double** %m_mat806
  %i808 = alloca i32
  store i32 0, i32* %i808
  br label %while809

while809:                                         ; preds = %merge828, %merge803
  %i_v834 = load i32, i32* %i808
  %bool_val835 = icmp sle i32 %i_v834, %tmp773
  br i1 %bool_val835, label %while_body810, label %merge833

while_body810:                                    ; preds = %while809
  %j811 = alloca i32
  store i32 0, i32* %j811
  br label %while812

while812:                                         ; preds = %while_body813, %while_body810
  %j_v829 = load i32, i32* %j811
  %bool_val830 = icmp sle i32 %j_v829, %tmp776
  br i1 %bool_val830, label %while_body813, label %merge828

while_body813:                                    ; preds = %while812
  %j_v814 = load i32, i32* %j811
  %i_v815 = load i32, i32* %i808
  %tmp816 = mul i32 %c_mat775, %i_v815
  %index817 = add i32 %j_v814, %tmp816
  %element_ptr818 = getelementptr double, double* %mat_mat770, i32 %index817
  %tmp_element819 = load double, double* %element_ptr818
  %j_v820 = load i32, i32* %j811
  %i_v821 = load i32, i32* %i808
  %tmp822 = mul i32 %c_mat775, %i_v821
  %index823 = add i32 %j_v820, %tmp822
  %element_ptr824 = getelementptr double, double* %mat_mat807, i32 %index823
  %tmp_element825 = fmul double %tmp_element819, %d2768
  store double %tmp_element825, double* %element_ptr824
  %j_v826 = load i32, i32* %j811
  %tmp827 = add i32 %j_v826, 1
  store i32 %tmp827, i32* %j811
  br label %while812

merge828:                                         ; preds = %while812
  %i_v831 = load i32, i32* %i808
  %tmp832 = add i32 %i_v831, 1
  store i32 %tmp832, i32* %i808
  br label %while809

merge833:                                         ; preds = %while809
  %m_mat836 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 0
  %mat_mat837 = load double*, double** %m_mat836
  %m_r838 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 1
  %r_mat839 = load i32, i32* %m_r838
  %m_c840 = getelementptr inbounds %matrix_t, %matrix_t* %m779, i32 0, i32 2
  %c_mat841 = load i32, i32* %m_c840
  %tmp842 = sub i32 %r_mat839, 1
  %tmp843 = sub i32 %c_mat841, 1
  %i844 = alloca i32
  store i32 0, i32* %i844
  br label %while845

while845:                                         ; preds = %merge860, %merge833
  %i_v867 = load i32, i32* %i844
  %bool_val868 = icmp sle i32 %i_v867, %tmp842
  br i1 %bool_val868, label %while_body846, label %merge866

while_body846:                                    ; preds = %while845
  %j847 = alloca i32
  store i32 0, i32* %j847
  br label %while848

while848:                                         ; preds = %while_body849, %while_body846
  %j_v861 = load i32, i32* %j847
  %bool_val862 = icmp sle i32 %j_v861, %tmp843
  br i1 %bool_val862, label %while_body849, label %merge860

while_body849:                                    ; preds = %while848
  %j_v850 = load i32, i32* %j847
  %i_v851 = load i32, i32* %i844
  %tmp852 = mul i32 %c_mat841, %i_v851
  %index853 = add i32 %j_v850, %tmp852
  %element_ptr854 = getelementptr double, double* %mat_mat837, i32 %index853
  %tmp_element855 = load double, double* %element_ptr854
  %printf856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element855)
  %printf857 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v858 = load i32, i32* %j847
  %tmp859 = add i32 %j_v858, 1
  store i32 %tmp859, i32* %j847
  br label %while848

merge860:                                         ; preds = %while848
  %printf863 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v864 = load i32, i32* %i844
  %tmp865 = add i32 %i_v864, 1
  store i32 %tmp865, i32* %i844
  br label %while845

merge866:                                         ; preds = %while845
  %printf869 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%return_t.2* getelementptr (%return_t.2, %return_t.2* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.2*
  %return0 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 0
  store i32 1, i32* %return0
  %return1 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 1
  store double 2.000000e+00, double* %return1
  %return2 = getelementptr inbounds %return_t.2, %return_t.2* %return, i32 0, i32 2
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @system_string.13, i32 0, i32 0), i8** %return2
  ret %return_t.2* %return
  %tmp870 = alloca %return_t.2
  ret %return_t.2* %tmp870
}
