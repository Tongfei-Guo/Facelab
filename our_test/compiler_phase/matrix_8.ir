; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }
<<<<<<< HEAD
%return_t = type {}
=======
>>>>>>> 4667ed0b5742d3adfc4ba0aa43a8fa7ef07bbc52

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"

define i32 @main() {
entry:
<<<<<<< HEAD
  %system_mat = alloca double, i32 9
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 0.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 1.000000e-01, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 2.000000e-01, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 1.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 1.100000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 1.200000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 2.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 2.100000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 2.200000e+00, double* %element_ptr8
=======
  %system_mat = alloca double, i32 4
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double -1.100000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double -2.200000e+00, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 3.300000e+00, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double -4.400000e+00, double* %element_ptr3
>>>>>>> 4667ed0b5742d3adfc4ba0aa43a8fa7ef07bbc52
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
<<<<<<< HEAD
  store i32 3, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r9 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r9
  %m_c10 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c10
  %size = mul i32 %r_mat, %c_mat
  %system_mat11 = alloca double, i32 %size
  %m12 = alloca %matrix_t
  %m_mat13 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 0
  store double* %system_mat11, double** %m_mat13
  %m_r14 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 1
  store i32 %r_mat, i32* %m_r14
  %m_c15 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 2
  store i32 %c_mat, i32* %m_c15
  %tmp = sub i32 %r_mat, 1
  %tmp16 = sub i32 %c_mat, 1
=======
  store i32 2, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 2, i32* %m_c
  %m_r4 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r4
  %m_c5 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c5
  %size = mul i32 %r_mat, %c_mat
  %system_mat6 = alloca double, i32 %size
  %m7 = alloca %matrix_t
  %m_mat8 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 0
  store double* %system_mat6, double** %m_mat8
  %m_r9 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 1
  store i32 %r_mat, i32* %m_r9
  %m_c10 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 2
  store i32 %c_mat, i32* %m_c10
  %tmp = sub i32 %r_mat, 1
  %tmp11 = sub i32 %c_mat, 1
>>>>>>> 4667ed0b5742d3adfc4ba0aa43a8fa7ef07bbc52
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
<<<<<<< HEAD
  %i_v27 = load i32, i32* %i
  %bool_val28 = icmp sle i32 %i_v27, %tmp
  br i1 %bool_val28, label %while_body, label %merge26
=======
  %i_v22 = load i32, i32* %i
  %bool_val23 = icmp sle i32 %i_v22, %tmp
  br i1 %bool_val23, label %while_body, label %merge21
>>>>>>> 4667ed0b5742d3adfc4ba0aa43a8fa7ef07bbc52

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
<<<<<<< HEAD
  br label %while17

while17:                                          ; preds = %while_body18, %while_body
  %j_v23 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v23, %tmp16
  br i1 %bool_val, label %while_body18, label %merge

while_body18:                                     ; preds = %while17
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp19 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp19
  %element_ptr20 = getelementptr double, double* %system_mat11, i32 %index
  store double 0.000000e+00, double* %element_ptr20
  %j_v21 = load i32, i32* %j
  %tmp22 = add i32 %j_v21, 1
  store i32 %tmp22, i32* %j
  br label %while17

merge:                                            ; preds = %while17
  %i_v24 = load i32, i32* %i
  %tmp25 = add i32 %i_v24, 1
  store i32 %tmp25, i32* %i
  br label %while

merge26:                                          ; preds = %while
  %tmp29 = sub i32 %c_mat, 1
  %tmp30 = sub i32 %r_mat, 1
  %m_mat31 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat31
  %m_r32 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 1
  %r_mat33 = load i32, i32* %m_r32
  %m_c34 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 2
  %c_mat35 = load i32, i32* %m_c34
  %m_mat36 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat36
  %m_r37 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r37
  %m_c38 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c38
  %i39 = alloca i32
  store i32 0, i32* %i39
  br label %while40

while40:                                          ; preds = %merge61, %merge26
  %i_v67 = load i32, i32* %i39
  %bool_val68 = icmp sle i32 %i_v67, %tmp30
  br i1 %bool_val68, label %while_body41, label %merge66

while_body41:                                     ; preds = %while40
  %j42 = alloca i32
  store i32 0, i32* %j42
  br label %while43

while43:                                          ; preds = %while_body44, %while_body41
  %j_v62 = load i32, i32* %j42
  %bool_val63 = icmp sle i32 %j_v62, %tmp29
  br i1 %bool_val63, label %while_body44, label %merge61

while_body44:                                     ; preds = %while43
  %j_v45 = load i32, i32* %j42
  %i_v46 = load i32, i32* %i39
  %tmp47 = mul i32 %c_mat35, %i_v46
  %index48 = add i32 %j_v45, %tmp47
  %element_ptr49 = getelementptr double, double* %mat_mat, i32 %index48
  %j_v50 = load i32, i32* %j42
  %tmp51 = sub i32 %j_v50, 0
  %tmp52 = add i32 %tmp51, 0
  %i_v53 = load i32, i32* %i39
  %tmp54 = sub i32 %i_v53, 0
  %tmp55 = add i32 %tmp54, 0
  %tmp56 = mul i32 %c_v, %tmp55
  %index57 = add i32 %tmp52, %tmp56
  %element_ptr58 = getelementptr double, double* %mat_v, i32 %index57
  %tmp_element = load double, double* %element_ptr58
  store double %tmp_element, double* %element_ptr49
  %j_v59 = load i32, i32* %j42
  %tmp60 = add i32 %j_v59, 1
  store i32 %tmp60, i32* %j42
  br label %while43

merge61:                                          ; preds = %while43
  %i_v64 = load i32, i32* %i39
  %tmp65 = add i32 %i_v64, 1
  store i32 %tmp65, i32* %i39
  br label %while40

merge66:                                          ; preds = %while40
  %m_mat69 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 0
  %mat_mat70 = load double*, double** %m_mat69
  %m_r71 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 1
  %r_mat72 = load i32, i32* %m_r71
  %m_c73 = getelementptr inbounds %matrix_t, %matrix_t* %m12, i32 0, i32 2
  %c_mat74 = load i32, i32* %m_c73
  %tmp75 = sub i32 %r_mat72, 1
  %tmp76 = sub i32 %c_mat74, 1
  %i77 = alloca i32
  store i32 0, i32* %i77
  br label %while78

while78:                                          ; preds = %merge92, %merge66
  %i_v99 = load i32, i32* %i77
  %bool_val100 = icmp sle i32 %i_v99, %tmp75
  br i1 %bool_val100, label %while_body79, label %merge98

while_body79:                                     ; preds = %while78
  %j80 = alloca i32
  store i32 0, i32* %j80
  br label %while81

while81:                                          ; preds = %while_body82, %while_body79
  %j_v93 = load i32, i32* %j80
  %bool_val94 = icmp sle i32 %j_v93, %tmp76
  br i1 %bool_val94, label %while_body82, label %merge92

while_body82:                                     ; preds = %while81
  %j_v83 = load i32, i32* %j80
  %i_v84 = load i32, i32* %i77
  %tmp85 = mul i32 %c_mat74, %i_v84
  %index86 = add i32 %j_v83, %tmp85
  %element_ptr87 = getelementptr double, double* %mat_mat70, i32 %index86
  %tmp_element88 = load double, double* %element_ptr87
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element88)
  %printf89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v90 = load i32, i32* %j80
  %tmp91 = add i32 %j_v90, 1
  store i32 %tmp91, i32* %j80
  br label %while81

merge92:                                          ; preds = %while81
  %printf95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v96 = load i32, i32* %i77
  %tmp97 = add i32 %i_v96, 1
  store i32 %tmp97, i32* %i77
  br label %while78

merge98:                                          ; preds = %while78
  %printf101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %multiply_result = call %return_t* @multiply(%matrix_t* %m12)
=======
  br label %while12

while12:                                          ; preds = %while_body13, %while_body
  %j_v18 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v18, %tmp11
  br i1 %bool_val, label %while_body13, label %merge

while_body13:                                     ; preds = %while12
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp14 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp14
  %element_ptr15 = getelementptr double, double* %system_mat6, i32 %index
  store double 0.000000e+00, double* %element_ptr15
  %j_v16 = load i32, i32* %j
  %tmp17 = add i32 %j_v16, 1
  store i32 %tmp17, i32* %j
  br label %while12

merge:                                            ; preds = %while12
  %i_v19 = load i32, i32* %i
  %tmp20 = add i32 %i_v19, 1
  store i32 %tmp20, i32* %i
  br label %while

merge21:                                          ; preds = %while
  %tmp24 = sub i32 %c_mat, 1
  %tmp25 = sub i32 %r_mat, 1
  %m_mat26 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat26
  %m_r27 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 1
  %r_mat28 = load i32, i32* %m_r27
  %m_c29 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 2
  %c_mat30 = load i32, i32* %m_c29
  %m_mat31 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat31
  %m_r32 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r32
  %m_c33 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c33
  %i34 = alloca i32
  store i32 0, i32* %i34
  br label %while35

while35:                                          ; preds = %merge56, %merge21
  %i_v62 = load i32, i32* %i34
  %bool_val63 = icmp sle i32 %i_v62, %tmp25
  br i1 %bool_val63, label %while_body36, label %merge61

while_body36:                                     ; preds = %while35
  %j37 = alloca i32
  store i32 0, i32* %j37
  br label %while38

while38:                                          ; preds = %while_body39, %while_body36
  %j_v57 = load i32, i32* %j37
  %bool_val58 = icmp sle i32 %j_v57, %tmp24
  br i1 %bool_val58, label %while_body39, label %merge56

while_body39:                                     ; preds = %while38
  %j_v40 = load i32, i32* %j37
  %i_v41 = load i32, i32* %i34
  %tmp42 = mul i32 %c_mat30, %i_v41
  %index43 = add i32 %j_v40, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_mat, i32 %index43
  %j_v45 = load i32, i32* %j37
  %tmp46 = sub i32 %j_v45, 0
  %tmp47 = add i32 %tmp46, 0
  %i_v48 = load i32, i32* %i34
  %tmp49 = sub i32 %i_v48, 0
  %tmp50 = add i32 %tmp49, 0
  %tmp51 = mul i32 %c_v, %tmp50
  %index52 = add i32 %tmp47, %tmp51
  %element_ptr53 = getelementptr double, double* %mat_v, i32 %index52
  %tmp_element = load double, double* %element_ptr53
  store double %tmp_element, double* %element_ptr44
  %j_v54 = load i32, i32* %j37
  %tmp55 = add i32 %j_v54, 1
  store i32 %tmp55, i32* %j37
  br label %while38

merge56:                                          ; preds = %while38
  %i_v59 = load i32, i32* %i34
  %tmp60 = add i32 %i_v59, 1
  store i32 %tmp60, i32* %i34
  br label %while35

merge61:                                          ; preds = %while35
  %m_mat64 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 0
  %mat_mat65 = load double*, double** %m_mat64
  %m_r66 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 1
  %r_mat67 = load i32, i32* %m_r66
  %m_c68 = getelementptr inbounds %matrix_t, %matrix_t* %m7, i32 0, i32 2
  %c_mat69 = load i32, i32* %m_c68
  %tmp70 = sub i32 %r_mat67, 1
  %tmp71 = sub i32 %c_mat69, 1
  %i72 = alloca i32
  store i32 0, i32* %i72
  br label %while73

while73:                                          ; preds = %merge87, %merge61
  %i_v94 = load i32, i32* %i72
  %bool_val95 = icmp sle i32 %i_v94, %tmp70
  br i1 %bool_val95, label %while_body74, label %merge93

while_body74:                                     ; preds = %while73
  %j75 = alloca i32
  store i32 0, i32* %j75
  br label %while76

while76:                                          ; preds = %while_body77, %while_body74
  %j_v88 = load i32, i32* %j75
  %bool_val89 = icmp sle i32 %j_v88, %tmp71
  br i1 %bool_val89, label %while_body77, label %merge87

while_body77:                                     ; preds = %while76
  %j_v78 = load i32, i32* %j75
  %i_v79 = load i32, i32* %i72
  %tmp80 = mul i32 %c_mat69, %i_v79
  %index81 = add i32 %j_v78, %tmp80
  %element_ptr82 = getelementptr double, double* %mat_mat65, i32 %index81
  %tmp_element83 = load double, double* %element_ptr82
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element83)
  %printf84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v85 = load i32, i32* %j75
  %tmp86 = add i32 %j_v85, 1
  store i32 %tmp86, i32* %j75
  br label %while76

merge87:                                          ; preds = %while76
  %printf90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v91 = load i32, i32* %i72
  %tmp92 = add i32 %i_v91, 1
  store i32 %tmp92, i32* %i72
  br label %while73

merge93:                                          ; preds = %while73
  %printf96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
>>>>>>> 4667ed0b5742d3adfc4ba0aa43a8fa7ef07bbc52
  ret i32 0
}

declare i32 @printf(i8*, ...)
<<<<<<< HEAD

define %return_t* @multiply(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %system_mat55 = alloca double, i32 6
  %element_ptr56 = getelementptr double, double* %system_mat55, i32 0
  store double 0.000000e+00, double* %element_ptr56
  %element_ptr57 = getelementptr double, double* %system_mat55, i32 1
  store double 1.000000e-01, double* %element_ptr57
  %element_ptr58 = getelementptr double, double* %system_mat55, i32 2
  store double 1.000000e+00, double* %element_ptr58
  %element_ptr59 = getelementptr double, double* %system_mat55, i32 3
  store double 1.100000e+00, double* %element_ptr59
  %element_ptr60 = getelementptr double, double* %system_mat55, i32 4
  store double 2.100000e+00, double* %element_ptr60
  %element_ptr61 = getelementptr double, double* %system_mat55, i32 5
  store double 2.200000e+00, double* %element_ptr61
  %m62 = alloca %matrix_t
  %m_mat63 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 0
  store double* %system_mat55, double** %m_mat63
  %m_r64 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 1
  store i32 3, i32* %m_r64
  %m_c65 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 2
  store i32 2, i32* %m_c65
  %m_r66 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 1
  %r_mat67 = load i32, i32* %m_r66
  %m_c68 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 2
  %c_mat69 = load i32, i32* %m_c68
  %size70 = mul i32 %r_mat67, %c_mat69
  %system_mat71 = alloca double, i32 %size70
  %m72 = alloca %matrix_t
  %m_mat73 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 0
  store double* %system_mat71, double** %m_mat73
  %m_r74 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 1
  store i32 %r_mat67, i32* %m_r74
  %m_c75 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 2
  store i32 %c_mat69, i32* %m_c75
  %tmp76 = sub i32 %r_mat67, 1
  %tmp77 = sub i32 %c_mat69, 1
  %i78 = alloca i32
  store i32 0, i32* %i78
  br label %while79

while79:                                          ; preds = %merge91, %merge52
  %i_v97 = load i32, i32* %i78
  %bool_val98 = icmp sle i32 %i_v97, %tmp76
  br i1 %bool_val98, label %while_body80, label %merge96

while_body80:                                     ; preds = %while79
  %j81 = alloca i32
  store i32 0, i32* %j81
  br label %while82

while82:                                          ; preds = %while_body83, %while_body80
  %j_v92 = load i32, i32* %j81
  %bool_val93 = icmp sle i32 %j_v92, %tmp77
  br i1 %bool_val93, label %while_body83, label %merge91

while_body83:                                     ; preds = %while82
  %j_v84 = load i32, i32* %j81
  %i_v85 = load i32, i32* %i78
  %tmp86 = mul i32 %c_mat69, %i_v85
  %index87 = add i32 %j_v84, %tmp86
  %element_ptr88 = getelementptr double, double* %system_mat71, i32 %index87
  store double 0.000000e+00, double* %element_ptr88
  %j_v89 = load i32, i32* %j81
  %tmp90 = add i32 %j_v89, 1
  store i32 %tmp90, i32* %j81
  br label %while82

merge91:                                          ; preds = %while82
  %i_v94 = load i32, i32* %i78
  %tmp95 = add i32 %i_v94, 1
  store i32 %tmp95, i32* %i78
  br label %while79

merge96:                                          ; preds = %while79
  %tmp99 = sub i32 %c_mat69, 1
  %tmp100 = sub i32 %r_mat67, 1
  %m_mat101 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 0
  %mat_mat102 = load double*, double** %m_mat101
  %m_r103 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 1
  %r_mat104 = load i32, i32* %m_r103
  %m_c105 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 2
  %c_mat106 = load i32, i32* %m_c105
  %m_mat107 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 0
  %mat_v108 = load double*, double** %m_mat107
  %m_r109 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 1
  %r_v110 = load i32, i32* %m_r109
  %m_c111 = getelementptr inbounds %matrix_t, %matrix_t* %m62, i32 0, i32 2
  %c_v112 = load i32, i32* %m_c111
  %i113 = alloca i32
  store i32 0, i32* %i113
  br label %while114

while114:                                         ; preds = %merge136, %merge96
  %i_v142 = load i32, i32* %i113
  %bool_val143 = icmp sle i32 %i_v142, %tmp100
  br i1 %bool_val143, label %while_body115, label %merge141

while_body115:                                    ; preds = %while114
  %j116 = alloca i32
  store i32 0, i32* %j116
  br label %while117

while117:                                         ; preds = %while_body118, %while_body115
  %j_v137 = load i32, i32* %j116
  %bool_val138 = icmp sle i32 %j_v137, %tmp99
  br i1 %bool_val138, label %while_body118, label %merge136

while_body118:                                    ; preds = %while117
  %j_v119 = load i32, i32* %j116
  %i_v120 = load i32, i32* %i113
  %tmp121 = mul i32 %c_mat106, %i_v120
  %index122 = add i32 %j_v119, %tmp121
  %element_ptr123 = getelementptr double, double* %mat_mat102, i32 %index122
  %j_v124 = load i32, i32* %j116
  %tmp125 = sub i32 %j_v124, 0
  %tmp126 = add i32 %tmp125, 0
  %i_v127 = load i32, i32* %i113
  %tmp128 = sub i32 %i_v127, 0
  %tmp129 = add i32 %tmp128, 0
  %tmp130 = mul i32 %c_v112, %tmp129
  %index131 = add i32 %tmp126, %tmp130
  %element_ptr132 = getelementptr double, double* %mat_v108, i32 %index131
  %tmp_element133 = load double, double* %element_ptr132
  store double %tmp_element133, double* %element_ptr123
  %j_v134 = load i32, i32* %j116
  %tmp135 = add i32 %j_v134, 1
  store i32 %tmp135, i32* %j116
  br label %while117

merge136:                                         ; preds = %while117
  %i_v139 = load i32, i32* %i113
  %tmp140 = add i32 %i_v139, 1
  store i32 %tmp140, i32* %i113
  br label %while114

merge141:                                         ; preds = %while114
  %m_mat144 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat145 = load double*, double** %m_mat144
  %m_mat146 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 0
  %mat_v147 = load double*, double** %m_mat146
  %m_r148 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat149 = load i32, i32* %m_r148
  %tmp150 = sub i32 %r_mat149, 1
  %m_c151 = getelementptr inbounds %matrix_t, %matrix_t* %m72, i32 0, i32 2
  %c_mat152 = load i32, i32* %m_c151
  %tmp153 = sub i32 %c_mat152, 1
  %m_l = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %l_mat = load i32, i32* %m_l
  %tmp154 = sub i32 %l_mat, 1
  %size155 = mul i32 %r_mat149, %c_mat152
  %system_mat156 = alloca double, i32 %size155
  %m157 = alloca %matrix_t
  %m_mat158 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 0
  store double* %system_mat156, double** %m_mat158
  %m_r159 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 1
  store i32 %r_mat149, i32* %m_r159
  %m_c160 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 2
  store i32 %c_mat152, i32* %m_c160
  %tmp161 = sub i32 %r_mat149, 1
  %tmp162 = sub i32 %c_mat152, 1
  %i163 = alloca i32
  store i32 0, i32* %i163
  br label %while164

while164:                                         ; preds = %merge176, %merge141
  %i_v182 = load i32, i32* %i163
  %bool_val183 = icmp sle i32 %i_v182, %tmp161
  br i1 %bool_val183, label %while_body165, label %merge181

while_body165:                                    ; preds = %while164
  %j166 = alloca i32
  store i32 0, i32* %j166
  br label %while167

while167:                                         ; preds = %while_body168, %while_body165
  %j_v177 = load i32, i32* %j166
  %bool_val178 = icmp sle i32 %j_v177, %tmp162
  br i1 %bool_val178, label %while_body168, label %merge176

while_body168:                                    ; preds = %while167
  %j_v169 = load i32, i32* %j166
  %i_v170 = load i32, i32* %i163
  %tmp171 = mul i32 %c_mat152, %i_v170
  %index172 = add i32 %j_v169, %tmp171
  %element_ptr173 = getelementptr double, double* %system_mat156, i32 %index172
  store double 0.000000e+00, double* %element_ptr173
  %j_v174 = load i32, i32* %j166
  %tmp175 = add i32 %j_v174, 1
  store i32 %tmp175, i32* %j166
  br label %while167

merge176:                                         ; preds = %while167
  %i_v179 = load i32, i32* %i163
  %tmp180 = add i32 %i_v179, 1
  store i32 %tmp180, i32* %i163
  br label %while164

merge181:                                         ; preds = %while164
  %m_mat184 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 0
  %mat_mat185 = load double*, double** %m_mat184
  %i186 = alloca i32
  store i32 0, i32* %i186
  br label %while187

while187:                                         ; preds = %merge222, %merge181
  %i_v228 = load i32, i32* %i186
  %bool_val229 = icmp sle i32 %i_v228, %tmp150
  br i1 %bool_val229, label %while_body188, label %merge227

while_body188:                                    ; preds = %while187
  %j189 = alloca i32
  store i32 0, i32* %j189
  br label %while190

while190:                                         ; preds = %merge216, %while_body188
  %j_v223 = load i32, i32* %j189
  %bool_val224 = icmp sle i32 %j_v223, %tmp153
  br i1 %bool_val224, label %while_body191, label %merge222

while_body191:                                    ; preds = %while190
  %j_v192 = load i32, i32* %j189
  %i_v193 = load i32, i32* %i186
  %tmp194 = mul i32 %c_mat152, %i_v193
  %index195 = add i32 %j_v192, %tmp194
  %element_ptr196 = getelementptr double, double* %mat_mat185, i32 %index195
  %tmp_element197 = alloca double
  store double 0.000000e+00, double* %tmp_element197
  %k = alloca i32
  store i32 0, i32* %k
  br label %while198

while198:                                         ; preds = %while_body199, %while_body191
  %k_v217 = load i32, i32* %k
  %bool_val218 = icmp sle i32 %k_v217, %tmp154
  br i1 %bool_val218, label %while_body199, label %merge216

while_body199:                                    ; preds = %while198
  %k_v = load i32, i32* %k
  %i_v200 = load i32, i32* %i186
  %tmp201 = mul i32 %l_mat, %i_v200
  %index202 = add i32 %k_v, %tmp201
  %element_ptr203 = getelementptr double, double* %mat_mat145, i32 %index202
  %tmp_element204 = load double, double* %element_ptr203
  %j_v205 = load i32, i32* %j189
  %k_v206 = load i32, i32* %k
  %tmp207 = mul i32 %c_mat152, %k_v206
  %index208 = add i32 %j_v205, %tmp207
  %element_ptr209 = getelementptr double, double* %mat_v147, i32 %index208
  %tmp_element210 = load double, double* %element_ptr209
  %tmp211 = load double, double* %tmp_element197
  %tmp212 = fmul double %tmp_element204, %tmp_element210
  %tmp213 = fadd double %tmp212, %tmp211
  store double %tmp213, double* %tmp_element197
  %k_v214 = load i32, i32* %k
  %tmp215 = add i32 %k_v214, 1
  store i32 %tmp215, i32* %k
  br label %while198

merge216:                                         ; preds = %while198
  %tmp219 = load double, double* %tmp_element197
  store double %tmp219, double* %element_ptr196
  %j_v220 = load i32, i32* %j189
  %tmp221 = add i32 %j_v220, 1
  store i32 %tmp221, i32* %j189
  br label %while190

merge222:                                         ; preds = %while190
  %i_v225 = load i32, i32* %i186
  %tmp226 = add i32 %i_v225, 1
  store i32 %tmp226, i32* %i186
  br label %while187

merge227:                                         ; preds = %while187
  %m_mat230 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 0
  %mat_mat231 = load double*, double** %m_mat230
  %m_r232 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 1
  %r_mat233 = load i32, i32* %m_r232
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m157, i32 0, i32 2
  %c_mat235 = load i32, i32* %m_c234
  %tmp236 = sub i32 %r_mat233, 1
  %tmp237 = sub i32 %c_mat235, 1
  %i238 = alloca i32
  store i32 0, i32* %i238
  br label %while239

while239:                                         ; preds = %merge253, %merge227
  %i_v260 = load i32, i32* %i238
  %bool_val261 = icmp sle i32 %i_v260, %tmp236
  br i1 %bool_val261, label %while_body240, label %merge259

while_body240:                                    ; preds = %while239
  %j241 = alloca i32
  store i32 0, i32* %j241
  br label %while242

while242:                                         ; preds = %while_body243, %while_body240
  %j_v254 = load i32, i32* %j241
  %bool_val255 = icmp sle i32 %j_v254, %tmp237
  br i1 %bool_val255, label %while_body243, label %merge253

while_body243:                                    ; preds = %while242
  %j_v244 = load i32, i32* %j241
  %i_v245 = load i32, i32* %i238
  %tmp246 = mul i32 %c_mat235, %i_v245
  %index247 = add i32 %j_v244, %tmp246
  %element_ptr248 = getelementptr double, double* %mat_mat231, i32 %index247
  %tmp_element249 = load double, double* %element_ptr248
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element249)
  %printf250 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v251 = load i32, i32* %j241
  %tmp252 = add i32 %j_v251, 1
  store i32 %tmp252, i32* %j241
  br label %while242

merge253:                                         ; preds = %while242
  %printf256 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v257 = load i32, i32* %i238
  %tmp258 = add i32 %i_v257, 1
  store i32 %tmp258, i32* %i238
  br label %while239

merge259:                                         ; preds = %while239
  %printf262 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %tmp263 = alloca %return_t
  ret %return_t* %tmp263
}
=======
>>>>>>> 4667ed0b5742d3adfc4ba0aa43a8fa7ef07bbc52
