; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }
%matrix_size_t = type { i32, i32 }
%zero_matrix_t = type { %matrix_t* }
%int_to_double_t = type { double }
%double_to_int_t = type { i32 }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"

define i32 @main() {
entry:
  %system_mat = alloca double, i32 12
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 1.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 2.000000e+00, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 3.000000e+00, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 4.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 5.000000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 6.000000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 7.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 8.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 9.000000e+00, double* %element_ptr8
  %element_ptr9 = getelementptr double, double* %system_mat, i32 9
  store double 1.000000e+01, double* %element_ptr9
  %element_ptr10 = getelementptr double, double* %system_mat, i32 10
  store double 1.100000e+01, double* %element_ptr10
  %element_ptr11 = getelementptr double, double* %system_mat, i32 11
  store double 1.200000e+01, double* %element_ptr11
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r12 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r12
  %m_c13 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c13
  %size = mul i32 %r_mat, %c_mat
  %system_mat14 = alloca double, i32 %size
  %m15 = alloca %matrix_t
  %m_mat16 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  store double* %system_mat14, double** %m_mat16
  %m_r17 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  store i32 %r_mat, i32* %m_r17
  %m_c18 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  store i32 %c_mat, i32* %m_c18
  %tmp = sub i32 %r_mat, 1
  %tmp19 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v30 = load i32, i32* %i
  %bool_val31 = icmp sle i32 %i_v30, %tmp
  br i1 %bool_val31, label %while_body, label %merge29

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while20

while20:                                          ; preds = %while_body21, %while_body
  %j_v26 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v26, %tmp19
  br i1 %bool_val, label %while_body21, label %merge

while_body21:                                     ; preds = %while20
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp22 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp22
  %element_ptr23 = getelementptr double, double* %system_mat14, i32 %index
  store double 0.000000e+00, double* %element_ptr23
  %j_v24 = load i32, i32* %j
  %tmp25 = add i32 %j_v24, 1
  store i32 %tmp25, i32* %j
  br label %while20

merge:                                            ; preds = %while20
  %i_v27 = load i32, i32* %i
  %tmp28 = add i32 %i_v27, 1
  store i32 %tmp28, i32* %i
  br label %while

merge29:                                          ; preds = %while
  %tmp32 = sub i32 %c_mat, 1
  %tmp33 = sub i32 %r_mat, 1
  %m_mat34 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat34
  %m_r35 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat36 = load i32, i32* %m_r35
  %m_c37 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat38 = load i32, i32* %m_c37
  %m_mat39 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat39
  %m_r40 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r40
  %m_c41 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c41
  %i42 = alloca i32
  store i32 0, i32* %i42
  br label %while43

while43:                                          ; preds = %merge64, %merge29
  %i_v70 = load i32, i32* %i42
  %bool_val71 = icmp sle i32 %i_v70, %tmp33
  br i1 %bool_val71, label %while_body44, label %merge69

while_body44:                                     ; preds = %while43
  %j45 = alloca i32
  store i32 0, i32* %j45
  br label %while46

while46:                                          ; preds = %while_body47, %while_body44
  %j_v65 = load i32, i32* %j45
  %bool_val66 = icmp sle i32 %j_v65, %tmp32
  br i1 %bool_val66, label %while_body47, label %merge64

while_body47:                                     ; preds = %while46
  %j_v48 = load i32, i32* %j45
  %i_v49 = load i32, i32* %i42
  %tmp50 = mul i32 %c_mat38, %i_v49
  %index51 = add i32 %j_v48, %tmp50
  %element_ptr52 = getelementptr double, double* %mat_mat, i32 %index51
  %j_v53 = load i32, i32* %j45
  %tmp54 = sub i32 %j_v53, 0
  %tmp55 = add i32 %tmp54, 0
  %i_v56 = load i32, i32* %i42
  %tmp57 = sub i32 %i_v56, 0
  %tmp58 = add i32 %tmp57, 0
  %tmp59 = mul i32 %c_v, %tmp58
  %index60 = add i32 %tmp55, %tmp59
  %element_ptr61 = getelementptr double, double* %mat_v, i32 %index60
  %tmp_element = load double, double* %element_ptr61
  store double %tmp_element, double* %element_ptr52
  %j_v62 = load i32, i32* %j45
  %tmp63 = add i32 %j_v62, 1
  store i32 %tmp63, i32* %j45
  br label %while46

merge64:                                          ; preds = %while46
  %i_v67 = load i32, i32* %i42
  %tmp68 = add i32 %i_v67, 1
  store i32 %tmp68, i32* %i42
  br label %while43

merge69:                                          ; preds = %while43
  %m_r72 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat73 = load i32, i32* %m_r72
  %m_r74 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat75 = load i32, i32* %m_r74
  %tmp86 = icmp ne i32 %r_mat73, %r_mat75
  br i1 %tmp86, label %then, label %else

merge76:                                          ; preds = %merge81, %then
  %m_mat87 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat88 = load double*, double** %m_mat87
  %m_r89 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat90 = load i32, i32* %m_r89
  %tmp91 = sub i32 %r_mat90, 1
  %m_c92 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat93 = load i32, i32* %m_c92
  %tmp94 = sub i32 %c_mat93, 1
  %m_mat95 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v96 = load double*, double** %m_mat95
  %result = alloca i1
  store i1 true, i1* %result
  %i97 = alloca i32
  store i32 0, i32* %i97
  br label %while98

then:                                             ; preds = %merge69
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge76

else:                                             ; preds = %merge69
  %m_c77 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat78 = load i32, i32* %m_c77
  %m_c79 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat80 = load i32, i32* %m_c79
  %tmp85 = icmp ne i32 %c_mat78, %c_mat80
  br i1 %tmp85, label %then82, label %else84

merge81:                                          ; preds = %else84, %then82
  br label %merge76

then82:                                           ; preds = %else
  %printf83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge81

else84:                                           ; preds = %else
  br label %merge81

while98:                                          ; preds = %merge121, %merge76
  %i_v127 = load i32, i32* %i97
  %bool_val128 = icmp sle i32 %i_v127, %tmp91
  br i1 %bool_val128, label %while_body99, label %merge126

while_body99:                                     ; preds = %while98
  %j100 = alloca i32
  store i32 0, i32* %j100
  br label %while101

while101:                                         ; preds = %merge115, %while_body99
  %j_v122 = load i32, i32* %j100
  %bool_val123 = icmp sle i32 %j_v122, %tmp94
  br i1 %bool_val123, label %while_body102, label %merge121

while_body102:                                    ; preds = %while101
  %j_v103 = load i32, i32* %j100
  %i_v104 = load i32, i32* %i97
  %tmp105 = mul i32 %c_mat93, %i_v104
  %index106 = add i32 %j_v103, %tmp105
  %element_ptr107 = getelementptr double, double* %mat_mat88, i32 %index106
  %tmp_element108 = load double, double* %element_ptr107
  %j_v109 = load i32, i32* %j100
  %i_v110 = load i32, i32* %i97
  %tmp111 = mul i32 %c_mat93, %i_v110
  %index112 = add i32 %j_v109, %tmp111
  %element_ptr113 = getelementptr double, double* %mat_v96, i32 %index112
  %tmp_element114 = load double, double* %element_ptr113
  %tmp118 = fcmp one double %tmp_element108, %tmp_element114
  br i1 %tmp118, label %then116, label %else117

merge115:                                         ; preds = %else117, %then116
  %j_v119 = load i32, i32* %j100
  %tmp120 = add i32 %j_v119, 1
  store i32 %tmp120, i32* %j100
  br label %while101

then116:                                          ; preds = %while_body102
  store i1 false, i1* %result
  br label %merge115

else117:                                          ; preds = %while_body102
  br label %merge115

merge121:                                         ; preds = %while101
  %i_v124 = load i32, i32* %i97
  %tmp125 = add i32 %i_v124, 1
  store i32 %tmp125, i32* %i97
  br label %while98

merge126:                                         ; preds = %while98
  %result129 = load i1, i1* %result
  %tmp135 = icmp ne i1 true, %result129
  br i1 %tmp135, label %then131, label %else133

merge130:                                         ; preds = %else133, %then131
  %printf136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_r137 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat138 = load i32, i32* %m_r137
  %m_r139 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat140 = load i32, i32* %m_r139
  %tmp154 = icmp ne i32 %r_mat138, %r_mat140
  br i1 %tmp154, label %then142, label %else144

then131:                                          ; preds = %merge126
  %printf132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge130

else133:                                          ; preds = %merge126
  %printf134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge130

merge141:                                         ; preds = %merge149, %then142
  %result155 = alloca i1
  %m_mat156 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat157 = load double*, double** %m_mat156
  %m_r158 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat159 = load i32, i32* %m_r158
  %tmp160 = sub i32 %r_mat159, 1
  %m_c161 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat162 = load i32, i32* %m_c161
  %tmp163 = sub i32 %c_mat162, 1
  %m_mat164 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v165 = load double*, double** %m_mat164
  %result166 = alloca i1
  store i1 true, i1* %result166
  %i167 = alloca i32
  store i32 0, i32* %i167
  br label %while168

then142:                                          ; preds = %merge130
  %printf143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge141

else144:                                          ; preds = %merge130
  %m_c145 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat146 = load i32, i32* %m_c145
  %m_c147 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat148 = load i32, i32* %m_c147
  %tmp153 = icmp ne i32 %c_mat146, %c_mat148
  br i1 %tmp153, label %then150, label %else152

merge149:                                         ; preds = %else152, %then150
  br label %merge141

then150:                                          ; preds = %else144
  %printf151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge149

else152:                                          ; preds = %else144
  br label %merge149

while168:                                         ; preds = %merge191, %merge141
  %i_v197 = load i32, i32* %i167
  %bool_val198 = icmp sle i32 %i_v197, %tmp160
  br i1 %bool_val198, label %while_body169, label %merge196

while_body169:                                    ; preds = %while168
  %j170 = alloca i32
  store i32 0, i32* %j170
  br label %while171

while171:                                         ; preds = %merge185, %while_body169
  %j_v192 = load i32, i32* %j170
  %bool_val193 = icmp sle i32 %j_v192, %tmp163
  br i1 %bool_val193, label %while_body172, label %merge191

while_body172:                                    ; preds = %while171
  %j_v173 = load i32, i32* %j170
  %i_v174 = load i32, i32* %i167
  %tmp175 = mul i32 %c_mat162, %i_v174
  %index176 = add i32 %j_v173, %tmp175
  %element_ptr177 = getelementptr double, double* %mat_mat157, i32 %index176
  %tmp_element178 = load double, double* %element_ptr177
  %j_v179 = load i32, i32* %j170
  %i_v180 = load i32, i32* %i167
  %tmp181 = mul i32 %c_mat162, %i_v180
  %index182 = add i32 %j_v179, %tmp181
  %element_ptr183 = getelementptr double, double* %mat_v165, i32 %index182
  %tmp_element184 = load double, double* %element_ptr183
  %tmp188 = fcmp one double %tmp_element178, %tmp_element184
  br i1 %tmp188, label %then186, label %else187

merge185:                                         ; preds = %else187, %then186
  %j_v189 = load i32, i32* %j170
  %tmp190 = add i32 %j_v189, 1
  store i32 %tmp190, i32* %j170
  br label %while171

then186:                                          ; preds = %while_body172
  store i1 false, i1* %result166
  br label %merge185

else187:                                          ; preds = %while_body172
  br label %merge185

merge191:                                         ; preds = %while171
  %i_v194 = load i32, i32* %i167
  %tmp195 = add i32 %i_v194, 1
  store i32 %tmp195, i32* %i167
  br label %while168

merge196:                                         ; preds = %while168
  %result199 = load i1, i1* %result166
  %tmp203 = icmp ne i1 %result199, true
  br i1 %tmp203, label %then201, label %else202

merge200:                                         ; preds = %else202, %then201
  %result204 = load i1, i1* %result155
  %tmp210 = icmp ne i1 true, %result204
  br i1 %tmp210, label %then206, label %else208

then201:                                          ; preds = %merge196
  store i1 true, i1* %result155
  br label %merge200

else202:                                          ; preds = %merge196
  store i1 false, i1* %result155
  br label %merge200

merge205:                                         ; preds = %else208, %then206
  %printf211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat213 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat214 = load double*, double** %m_mat213
  %m_r215 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat216 = load i32, i32* %m_r215
  %tmp217 = sub i32 %r_mat216, 1
  %m_c218 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat219 = load i32, i32* %m_c218
  %tmp220 = sub i32 %c_mat219, 1
  %size221 = mul i32 %r_mat216, %c_mat219
  %system_mat222 = alloca double, i32 %size221
  %m223 = alloca %matrix_t
  %m_mat224 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 0
  store double* %system_mat222, double** %m_mat224
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 1
  store i32 %r_mat216, i32* %m_r225
  %m_c226 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 2
  store i32 %c_mat219, i32* %m_c226
  %tmp227 = sub i32 %r_mat216, 1
  %tmp228 = sub i32 %c_mat219, 1
  %i229 = alloca i32
  store i32 0, i32* %i229
  br label %while230

then206:                                          ; preds = %merge200
  %printf207 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge205

else208:                                          ; preds = %merge200
  %printf209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge205

while230:                                         ; preds = %merge242, %merge205
  %i_v248 = load i32, i32* %i229
  %bool_val249 = icmp sle i32 %i_v248, %tmp227
  br i1 %bool_val249, label %while_body231, label %merge247

while_body231:                                    ; preds = %while230
  %j232 = alloca i32
  store i32 0, i32* %j232
  br label %while233

while233:                                         ; preds = %while_body234, %while_body231
  %j_v243 = load i32, i32* %j232
  %bool_val244 = icmp sle i32 %j_v243, %tmp228
  br i1 %bool_val244, label %while_body234, label %merge242

while_body234:                                    ; preds = %while233
  %j_v235 = load i32, i32* %j232
  %i_v236 = load i32, i32* %i229
  %tmp237 = mul i32 %c_mat219, %i_v236
  %index238 = add i32 %j_v235, %tmp237
  %element_ptr239 = getelementptr double, double* %system_mat222, i32 %index238
  store double 0.000000e+00, double* %element_ptr239
  %j_v240 = load i32, i32* %j232
  %tmp241 = add i32 %j_v240, 1
  store i32 %tmp241, i32* %j232
  br label %while233

merge242:                                         ; preds = %while233
  %i_v245 = load i32, i32* %i229
  %tmp246 = add i32 %i_v245, 1
  store i32 %tmp246, i32* %i229
  br label %while230

merge247:                                         ; preds = %while230
  %m_mat250 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 0
  %mat_mat251 = load double*, double** %m_mat250
  %i252 = alloca i32
  store i32 0, i32* %i252
  br label %while253

while253:                                         ; preds = %merge272, %merge247
  %i_v278 = load i32, i32* %i252
  %bool_val279 = icmp sle i32 %i_v278, %tmp217
  br i1 %bool_val279, label %while_body254, label %merge277

while_body254:                                    ; preds = %while253
  %j255 = alloca i32
  store i32 0, i32* %j255
  br label %while256

while256:                                         ; preds = %while_body257, %while_body254
  %j_v273 = load i32, i32* %j255
  %bool_val274 = icmp sle i32 %j_v273, %tmp220
  br i1 %bool_val274, label %while_body257, label %merge272

while_body257:                                    ; preds = %while256
  %j_v258 = load i32, i32* %j255
  %i_v259 = load i32, i32* %i252
  %tmp260 = mul i32 %c_mat219, %i_v259
  %index261 = add i32 %j_v258, %tmp260
  %element_ptr262 = getelementptr double, double* %mat_mat214, i32 %index261
  %tmp_element263 = load double, double* %element_ptr262
  %j_v264 = load i32, i32* %j255
  %i_v265 = load i32, i32* %i252
  %tmp266 = mul i32 %c_mat219, %i_v265
  %index267 = add i32 %j_v264, %tmp266
  %element_ptr268 = getelementptr double, double* %mat_mat251, i32 %index267
  %tmp_element269 = fdiv double %tmp_element263, 1.500000e+00
  store double %tmp_element269, double* %element_ptr268
  %j_v270 = load i32, i32* %j255
  %tmp271 = add i32 %j_v270, 1
  store i32 %tmp271, i32* %j255
  br label %while256

merge272:                                         ; preds = %while256
  %i_v275 = load i32, i32* %i252
  %tmp276 = add i32 %i_v275, 1
  store i32 %tmp276, i32* %i252
  br label %while253

merge277:                                         ; preds = %while253
  %m_r280 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 1
  %r_mat281 = load i32, i32* %m_r280
  %m_c282 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 2
  %c_mat283 = load i32, i32* %m_c282
  %size284 = mul i32 %r_mat281, %c_mat283
  %system_mat285 = alloca double, i32 %size284
  %m286 = alloca %matrix_t
  %m_mat287 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 0
  store double* %system_mat285, double** %m_mat287
  %m_r288 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 1
  store i32 %r_mat281, i32* %m_r288
  %m_c289 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 2
  store i32 %c_mat283, i32* %m_c289
  %tmp290 = sub i32 %r_mat281, 1
  %tmp291 = sub i32 %c_mat283, 1
  %i292 = alloca i32
  store i32 0, i32* %i292
  br label %while293

while293:                                         ; preds = %merge305, %merge277
  %i_v311 = load i32, i32* %i292
  %bool_val312 = icmp sle i32 %i_v311, %tmp290
  br i1 %bool_val312, label %while_body294, label %merge310

while_body294:                                    ; preds = %while293
  %j295 = alloca i32
  store i32 0, i32* %j295
  br label %while296

while296:                                         ; preds = %while_body297, %while_body294
  %j_v306 = load i32, i32* %j295
  %bool_val307 = icmp sle i32 %j_v306, %tmp291
  br i1 %bool_val307, label %while_body297, label %merge305

while_body297:                                    ; preds = %while296
  %j_v298 = load i32, i32* %j295
  %i_v299 = load i32, i32* %i292
  %tmp300 = mul i32 %c_mat283, %i_v299
  %index301 = add i32 %j_v298, %tmp300
  %element_ptr302 = getelementptr double, double* %system_mat285, i32 %index301
  store double 0.000000e+00, double* %element_ptr302
  %j_v303 = load i32, i32* %j295
  %tmp304 = add i32 %j_v303, 1
  store i32 %tmp304, i32* %j295
  br label %while296

merge305:                                         ; preds = %while296
  %i_v308 = load i32, i32* %i292
  %tmp309 = add i32 %i_v308, 1
  store i32 %tmp309, i32* %i292
  br label %while293

merge310:                                         ; preds = %while293
  %tmp313 = sub i32 %c_mat283, 1
  %tmp314 = sub i32 %r_mat281, 1
  %m_mat315 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 0
  %mat_mat316 = load double*, double** %m_mat315
  %m_r317 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 1
  %r_mat318 = load i32, i32* %m_r317
  %m_c319 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 2
  %c_mat320 = load i32, i32* %m_c319
  %m_mat321 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 0
  %mat_v322 = load double*, double** %m_mat321
  %m_r323 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 1
  %r_v324 = load i32, i32* %m_r323
  %m_c325 = getelementptr inbounds %matrix_t, %matrix_t* %m223, i32 0, i32 2
  %c_v326 = load i32, i32* %m_c325
  %i327 = alloca i32
  store i32 0, i32* %i327
  br label %while328

while328:                                         ; preds = %merge350, %merge310
  %i_v356 = load i32, i32* %i327
  %bool_val357 = icmp sle i32 %i_v356, %tmp314
  br i1 %bool_val357, label %while_body329, label %merge355

while_body329:                                    ; preds = %while328
  %j330 = alloca i32
  store i32 0, i32* %j330
  br label %while331

while331:                                         ; preds = %while_body332, %while_body329
  %j_v351 = load i32, i32* %j330
  %bool_val352 = icmp sle i32 %j_v351, %tmp313
  br i1 %bool_val352, label %while_body332, label %merge350

while_body332:                                    ; preds = %while331
  %j_v333 = load i32, i32* %j330
  %i_v334 = load i32, i32* %i327
  %tmp335 = mul i32 %c_mat320, %i_v334
  %index336 = add i32 %j_v333, %tmp335
  %element_ptr337 = getelementptr double, double* %mat_mat316, i32 %index336
  %j_v338 = load i32, i32* %j330
  %tmp339 = sub i32 %j_v338, 0
  %tmp340 = add i32 %tmp339, 0
  %i_v341 = load i32, i32* %i327
  %tmp342 = sub i32 %i_v341, 0
  %tmp343 = add i32 %tmp342, 0
  %tmp344 = mul i32 %c_v326, %tmp343
  %index345 = add i32 %tmp340, %tmp344
  %element_ptr346 = getelementptr double, double* %mat_v322, i32 %index345
  %tmp_element347 = load double, double* %element_ptr346
  store double %tmp_element347, double* %element_ptr337
  %j_v348 = load i32, i32* %j330
  %tmp349 = add i32 %j_v348, 1
  store i32 %tmp349, i32* %j330
  br label %while331

merge350:                                         ; preds = %while331
  %i_v353 = load i32, i32* %i327
  %tmp354 = add i32 %i_v353, 1
  store i32 %tmp354, i32* %i327
  br label %while328

merge355:                                         ; preds = %while328
  %m_r358 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 1
  %r_mat359 = load i32, i32* %m_r358
  %m_r360 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat361 = load i32, i32* %m_r360
  %tmp375 = icmp ne i32 %r_mat359, %r_mat361
  br i1 %tmp375, label %then363, label %else365

merge362:                                         ; preds = %merge370, %then363
  %result376 = alloca i1
  %m_mat377 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 0
  %mat_mat378 = load double*, double** %m_mat377
  %m_r379 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 1
  %r_mat380 = load i32, i32* %m_r379
  %tmp381 = sub i32 %r_mat380, 1
  %m_c382 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 2
  %c_mat383 = load i32, i32* %m_c382
  %tmp384 = sub i32 %c_mat383, 1
  %m_mat385 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v386 = load double*, double** %m_mat385
  %result387 = alloca i1
  store i1 true, i1* %result387
  %i388 = alloca i32
  store i32 0, i32* %i388
  br label %while389

then363:                                          ; preds = %merge355
  %printf364 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge362

else365:                                          ; preds = %merge355
  %m_c366 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 2
  %c_mat367 = load i32, i32* %m_c366
  %m_c368 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat369 = load i32, i32* %m_c368
  %tmp374 = icmp ne i32 %c_mat367, %c_mat369
  br i1 %tmp374, label %then371, label %else373

merge370:                                         ; preds = %else373, %then371
  br label %merge362

then371:                                          ; preds = %else365
  %printf372 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge370

else373:                                          ; preds = %else365
  br label %merge370

while389:                                         ; preds = %merge412, %merge362
  %i_v418 = load i32, i32* %i388
  %bool_val419 = icmp sle i32 %i_v418, %tmp381
  br i1 %bool_val419, label %while_body390, label %merge417

while_body390:                                    ; preds = %while389
  %j391 = alloca i32
  store i32 0, i32* %j391
  br label %while392

while392:                                         ; preds = %merge406, %while_body390
  %j_v413 = load i32, i32* %j391
  %bool_val414 = icmp sle i32 %j_v413, %tmp384
  br i1 %bool_val414, label %while_body393, label %merge412

while_body393:                                    ; preds = %while392
  %j_v394 = load i32, i32* %j391
  %i_v395 = load i32, i32* %i388
  %tmp396 = mul i32 %c_mat383, %i_v395
  %index397 = add i32 %j_v394, %tmp396
  %element_ptr398 = getelementptr double, double* %mat_mat378, i32 %index397
  %tmp_element399 = load double, double* %element_ptr398
  %j_v400 = load i32, i32* %j391
  %i_v401 = load i32, i32* %i388
  %tmp402 = mul i32 %c_mat383, %i_v401
  %index403 = add i32 %j_v400, %tmp402
  %element_ptr404 = getelementptr double, double* %mat_v386, i32 %index403
  %tmp_element405 = load double, double* %element_ptr404
  %tmp409 = fcmp one double %tmp_element399, %tmp_element405
  br i1 %tmp409, label %then407, label %else408

merge406:                                         ; preds = %else408, %then407
  %j_v410 = load i32, i32* %j391
  %tmp411 = add i32 %j_v410, 1
  store i32 %tmp411, i32* %j391
  br label %while392

then407:                                          ; preds = %while_body393
  store i1 false, i1* %result387
  br label %merge406

else408:                                          ; preds = %while_body393
  br label %merge406

merge412:                                         ; preds = %while392
  %i_v415 = load i32, i32* %i388
  %tmp416 = add i32 %i_v415, 1
  store i32 %tmp416, i32* %i388
  br label %while389

merge417:                                         ; preds = %while389
  %result420 = load i1, i1* %result387
  %tmp424 = icmp ne i1 %result420, true
  br i1 %tmp424, label %then422, label %else423

merge421:                                         ; preds = %else423, %then422
  %result425 = load i1, i1* %result376
  %tmp431 = icmp ne i1 true, %result425
  br i1 %tmp431, label %then427, label %else429

then422:                                          ; preds = %merge417
  store i1 true, i1* %result376
  br label %merge421

else423:                                          ; preds = %merge417
  store i1 false, i1* %result376
  br label %merge421

merge426:                                         ; preds = %else429, %then427
  %printf432 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_r433 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 1
  %r_mat434 = load i32, i32* %m_r433
  %m_r435 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat436 = load i32, i32* %m_r435
  %tmp450 = icmp ne i32 %r_mat434, %r_mat436
  br i1 %tmp450, label %then438, label %else440

then427:                                          ; preds = %merge421
  %printf428 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge426

else429:                                          ; preds = %merge421
  %printf430 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge426

merge437:                                         ; preds = %merge445, %then438
  %m_mat451 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 0
  %mat_mat452 = load double*, double** %m_mat451
  %m_r453 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 1
  %r_mat454 = load i32, i32* %m_r453
  %tmp455 = sub i32 %r_mat454, 1
  %m_c456 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 2
  %c_mat457 = load i32, i32* %m_c456
  %tmp458 = sub i32 %c_mat457, 1
  %m_mat459 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v460 = load double*, double** %m_mat459
  %result461 = alloca i1
  store i1 true, i1* %result461
  %i462 = alloca i32
  store i32 0, i32* %i462
  br label %while463

then438:                                          ; preds = %merge426
  %printf439 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge437

else440:                                          ; preds = %merge426
  %m_c441 = getelementptr inbounds %matrix_t, %matrix_t* %m286, i32 0, i32 2
  %c_mat442 = load i32, i32* %m_c441
  %m_c443 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat444 = load i32, i32* %m_c443
  %tmp449 = icmp ne i32 %c_mat442, %c_mat444
  br i1 %tmp449, label %then446, label %else448

merge445:                                         ; preds = %else448, %then446
  br label %merge437

then446:                                          ; preds = %else440
  %printf447 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge445

else448:                                          ; preds = %else440
  br label %merge445

while463:                                         ; preds = %merge486, %merge437
  %i_v492 = load i32, i32* %i462
  %bool_val493 = icmp sle i32 %i_v492, %tmp455
  br i1 %bool_val493, label %while_body464, label %merge491

while_body464:                                    ; preds = %while463
  %j465 = alloca i32
  store i32 0, i32* %j465
  br label %while466

while466:                                         ; preds = %merge480, %while_body464
  %j_v487 = load i32, i32* %j465
  %bool_val488 = icmp sle i32 %j_v487, %tmp458
  br i1 %bool_val488, label %while_body467, label %merge486

while_body467:                                    ; preds = %while466
  %j_v468 = load i32, i32* %j465
  %i_v469 = load i32, i32* %i462
  %tmp470 = mul i32 %c_mat457, %i_v469
  %index471 = add i32 %j_v468, %tmp470
  %element_ptr472 = getelementptr double, double* %mat_mat452, i32 %index471
  %tmp_element473 = load double, double* %element_ptr472
  %j_v474 = load i32, i32* %j465
  %i_v475 = load i32, i32* %i462
  %tmp476 = mul i32 %c_mat457, %i_v475
  %index477 = add i32 %j_v474, %tmp476
  %element_ptr478 = getelementptr double, double* %mat_v460, i32 %index477
  %tmp_element479 = load double, double* %element_ptr478
  %tmp483 = fcmp one double %tmp_element473, %tmp_element479
  br i1 %tmp483, label %then481, label %else482

merge480:                                         ; preds = %else482, %then481
  %j_v484 = load i32, i32* %j465
  %tmp485 = add i32 %j_v484, 1
  store i32 %tmp485, i32* %j465
  br label %while466

then481:                                          ; preds = %while_body467
  store i1 false, i1* %result461
  br label %merge480

else482:                                          ; preds = %while_body467
  br label %merge480

merge486:                                         ; preds = %while466
  %i_v489 = load i32, i32* %i462
  %tmp490 = add i32 %i_v489, 1
  store i32 %tmp490, i32* %i462
  br label %while463

merge491:                                         ; preds = %while463
  %result494 = load i1, i1* %result461
  %tmp500 = icmp ne i1 true, %result494
  br i1 %tmp500, label %then496, label %else498

merge495:                                         ; preds = %else498, %then496
  %printf501 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf502 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat503 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat504 = load double*, double** %m_mat503
  %m_r505 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat506 = load i32, i32* %m_r505
  %tmp507 = sub i32 %r_mat506, 1
  %m_c508 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat509 = load i32, i32* %m_c508
  %tmp510 = sub i32 %c_mat509, 1
  %size511 = mul i32 %r_mat506, %c_mat509
  %system_mat512 = alloca double, i32 %size511
  %m513 = alloca %matrix_t
  %m_mat514 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 0
  store double* %system_mat512, double** %m_mat514
  %m_r515 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 1
  store i32 %r_mat506, i32* %m_r515
  %m_c516 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 2
  store i32 %c_mat509, i32* %m_c516
  %tmp517 = sub i32 %r_mat506, 1
  %tmp518 = sub i32 %c_mat509, 1
  %i519 = alloca i32
  store i32 0, i32* %i519
  br label %while520

then496:                                          ; preds = %merge491
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge495

else498:                                          ; preds = %merge491
  %printf499 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge495

while520:                                         ; preds = %merge532, %merge495
  %i_v538 = load i32, i32* %i519
  %bool_val539 = icmp sle i32 %i_v538, %tmp517
  br i1 %bool_val539, label %while_body521, label %merge537

while_body521:                                    ; preds = %while520
  %j522 = alloca i32
  store i32 0, i32* %j522
  br label %while523

while523:                                         ; preds = %while_body524, %while_body521
  %j_v533 = load i32, i32* %j522
  %bool_val534 = icmp sle i32 %j_v533, %tmp518
  br i1 %bool_val534, label %while_body524, label %merge532

while_body524:                                    ; preds = %while523
  %j_v525 = load i32, i32* %j522
  %i_v526 = load i32, i32* %i519
  %tmp527 = mul i32 %c_mat509, %i_v526
  %index528 = add i32 %j_v525, %tmp527
  %element_ptr529 = getelementptr double, double* %system_mat512, i32 %index528
  store double 0.000000e+00, double* %element_ptr529
  %j_v530 = load i32, i32* %j522
  %tmp531 = add i32 %j_v530, 1
  store i32 %tmp531, i32* %j522
  br label %while523

merge532:                                         ; preds = %while523
  %i_v535 = load i32, i32* %i519
  %tmp536 = add i32 %i_v535, 1
  store i32 %tmp536, i32* %i519
  br label %while520

merge537:                                         ; preds = %while520
  %m_mat540 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 0
  %mat_mat541 = load double*, double** %m_mat540
  %i542 = alloca i32
  store i32 0, i32* %i542
  br label %while543

while543:                                         ; preds = %merge562, %merge537
  %i_v568 = load i32, i32* %i542
  %bool_val569 = icmp sle i32 %i_v568, %tmp507
  br i1 %bool_val569, label %while_body544, label %merge567

while_body544:                                    ; preds = %while543
  %j545 = alloca i32
  store i32 0, i32* %j545
  br label %while546

while546:                                         ; preds = %while_body547, %while_body544
  %j_v563 = load i32, i32* %j545
  %bool_val564 = icmp sle i32 %j_v563, %tmp510
  br i1 %bool_val564, label %while_body547, label %merge562

while_body547:                                    ; preds = %while546
  %j_v548 = load i32, i32* %j545
  %i_v549 = load i32, i32* %i542
  %tmp550 = mul i32 %c_mat509, %i_v549
  %index551 = add i32 %j_v548, %tmp550
  %element_ptr552 = getelementptr double, double* %mat_mat504, i32 %index551
  %tmp_element553 = load double, double* %element_ptr552
  %j_v554 = load i32, i32* %j545
  %i_v555 = load i32, i32* %i542
  %tmp556 = mul i32 %c_mat509, %i_v555
  %index557 = add i32 %j_v554, %tmp556
  %element_ptr558 = getelementptr double, double* %mat_mat541, i32 %index557
  %tmp_element559 = fdiv double %tmp_element553, 1.000000e+00
  store double %tmp_element559, double* %element_ptr558
  %j_v560 = load i32, i32* %j545
  %tmp561 = add i32 %j_v560, 1
  store i32 %tmp561, i32* %j545
  br label %while546

merge562:                                         ; preds = %while546
  %i_v565 = load i32, i32* %i542
  %tmp566 = add i32 %i_v565, 1
  store i32 %tmp566, i32* %i542
  br label %while543

merge567:                                         ; preds = %while543
  %m_r570 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 1
  %r_mat571 = load i32, i32* %m_r570
  %m_c572 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 2
  %c_mat573 = load i32, i32* %m_c572
  %size574 = mul i32 %r_mat571, %c_mat573
  %system_mat575 = alloca double, i32 %size574
  %m576 = alloca %matrix_t
  %m_mat577 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 0
  store double* %system_mat575, double** %m_mat577
  %m_r578 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 1
  store i32 %r_mat571, i32* %m_r578
  %m_c579 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 2
  store i32 %c_mat573, i32* %m_c579
  %tmp580 = sub i32 %r_mat571, 1
  %tmp581 = sub i32 %c_mat573, 1
  %i582 = alloca i32
  store i32 0, i32* %i582
  br label %while583

while583:                                         ; preds = %merge595, %merge567
  %i_v601 = load i32, i32* %i582
  %bool_val602 = icmp sle i32 %i_v601, %tmp580
  br i1 %bool_val602, label %while_body584, label %merge600

while_body584:                                    ; preds = %while583
  %j585 = alloca i32
  store i32 0, i32* %j585
  br label %while586

while586:                                         ; preds = %while_body587, %while_body584
  %j_v596 = load i32, i32* %j585
  %bool_val597 = icmp sle i32 %j_v596, %tmp581
  br i1 %bool_val597, label %while_body587, label %merge595

while_body587:                                    ; preds = %while586
  %j_v588 = load i32, i32* %j585
  %i_v589 = load i32, i32* %i582
  %tmp590 = mul i32 %c_mat573, %i_v589
  %index591 = add i32 %j_v588, %tmp590
  %element_ptr592 = getelementptr double, double* %system_mat575, i32 %index591
  store double 0.000000e+00, double* %element_ptr592
  %j_v593 = load i32, i32* %j585
  %tmp594 = add i32 %j_v593, 1
  store i32 %tmp594, i32* %j585
  br label %while586

merge595:                                         ; preds = %while586
  %i_v598 = load i32, i32* %i582
  %tmp599 = add i32 %i_v598, 1
  store i32 %tmp599, i32* %i582
  br label %while583

merge600:                                         ; preds = %while583
  %tmp603 = sub i32 %c_mat573, 1
  %tmp604 = sub i32 %r_mat571, 1
  %m_mat605 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 0
  %mat_mat606 = load double*, double** %m_mat605
  %m_r607 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 1
  %r_mat608 = load i32, i32* %m_r607
  %m_c609 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 2
  %c_mat610 = load i32, i32* %m_c609
  %m_mat611 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 0
  %mat_v612 = load double*, double** %m_mat611
  %m_r613 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 1
  %r_v614 = load i32, i32* %m_r613
  %m_c615 = getelementptr inbounds %matrix_t, %matrix_t* %m513, i32 0, i32 2
  %c_v616 = load i32, i32* %m_c615
  %i617 = alloca i32
  store i32 0, i32* %i617
  br label %while618

while618:                                         ; preds = %merge640, %merge600
  %i_v646 = load i32, i32* %i617
  %bool_val647 = icmp sle i32 %i_v646, %tmp604
  br i1 %bool_val647, label %while_body619, label %merge645

while_body619:                                    ; preds = %while618
  %j620 = alloca i32
  store i32 0, i32* %j620
  br label %while621

while621:                                         ; preds = %while_body622, %while_body619
  %j_v641 = load i32, i32* %j620
  %bool_val642 = icmp sle i32 %j_v641, %tmp603
  br i1 %bool_val642, label %while_body622, label %merge640

while_body622:                                    ; preds = %while621
  %j_v623 = load i32, i32* %j620
  %i_v624 = load i32, i32* %i617
  %tmp625 = mul i32 %c_mat610, %i_v624
  %index626 = add i32 %j_v623, %tmp625
  %element_ptr627 = getelementptr double, double* %mat_mat606, i32 %index626
  %j_v628 = load i32, i32* %j620
  %tmp629 = sub i32 %j_v628, 0
  %tmp630 = add i32 %tmp629, 0
  %i_v631 = load i32, i32* %i617
  %tmp632 = sub i32 %i_v631, 0
  %tmp633 = add i32 %tmp632, 0
  %tmp634 = mul i32 %c_v616, %tmp633
  %index635 = add i32 %tmp630, %tmp634
  %element_ptr636 = getelementptr double, double* %mat_v612, i32 %index635
  %tmp_element637 = load double, double* %element_ptr636
  store double %tmp_element637, double* %element_ptr627
  %j_v638 = load i32, i32* %j620
  %tmp639 = add i32 %j_v638, 1
  store i32 %tmp639, i32* %j620
  br label %while621

merge640:                                         ; preds = %while621
  %i_v643 = load i32, i32* %i617
  %tmp644 = add i32 %i_v643, 1
  store i32 %tmp644, i32* %i617
  br label %while618

merge645:                                         ; preds = %while618
  %m_r648 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 1
  %r_mat649 = load i32, i32* %m_r648
  %m_r650 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat651 = load i32, i32* %m_r650
  %tmp665 = icmp ne i32 %r_mat649, %r_mat651
  br i1 %tmp665, label %then653, label %else655

merge652:                                         ; preds = %merge660, %then653
  %m_mat666 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 0
  %mat_mat667 = load double*, double** %m_mat666
  %m_r668 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 1
  %r_mat669 = load i32, i32* %m_r668
  %tmp670 = sub i32 %r_mat669, 1
  %m_c671 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 2
  %c_mat672 = load i32, i32* %m_c671
  %tmp673 = sub i32 %c_mat672, 1
  %m_mat674 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v675 = load double*, double** %m_mat674
  %result676 = alloca i1
  store i1 true, i1* %result676
  %i677 = alloca i32
  store i32 0, i32* %i677
  br label %while678

then653:                                          ; preds = %merge645
  %printf654 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge652

else655:                                          ; preds = %merge645
  %m_c656 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 2
  %c_mat657 = load i32, i32* %m_c656
  %m_c658 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat659 = load i32, i32* %m_c658
  %tmp664 = icmp ne i32 %c_mat657, %c_mat659
  br i1 %tmp664, label %then661, label %else663

merge660:                                         ; preds = %else663, %then661
  br label %merge652

then661:                                          ; preds = %else655
  %printf662 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge660

else663:                                          ; preds = %else655
  br label %merge660

while678:                                         ; preds = %merge701, %merge652
  %i_v707 = load i32, i32* %i677
  %bool_val708 = icmp sle i32 %i_v707, %tmp670
  br i1 %bool_val708, label %while_body679, label %merge706

while_body679:                                    ; preds = %while678
  %j680 = alloca i32
  store i32 0, i32* %j680
  br label %while681

while681:                                         ; preds = %merge695, %while_body679
  %j_v702 = load i32, i32* %j680
  %bool_val703 = icmp sle i32 %j_v702, %tmp673
  br i1 %bool_val703, label %while_body682, label %merge701

while_body682:                                    ; preds = %while681
  %j_v683 = load i32, i32* %j680
  %i_v684 = load i32, i32* %i677
  %tmp685 = mul i32 %c_mat672, %i_v684
  %index686 = add i32 %j_v683, %tmp685
  %element_ptr687 = getelementptr double, double* %mat_mat667, i32 %index686
  %tmp_element688 = load double, double* %element_ptr687
  %j_v689 = load i32, i32* %j680
  %i_v690 = load i32, i32* %i677
  %tmp691 = mul i32 %c_mat672, %i_v690
  %index692 = add i32 %j_v689, %tmp691
  %element_ptr693 = getelementptr double, double* %mat_v675, i32 %index692
  %tmp_element694 = load double, double* %element_ptr693
  %tmp698 = fcmp one double %tmp_element688, %tmp_element694
  br i1 %tmp698, label %then696, label %else697

merge695:                                         ; preds = %else697, %then696
  %j_v699 = load i32, i32* %j680
  %tmp700 = add i32 %j_v699, 1
  store i32 %tmp700, i32* %j680
  br label %while681

then696:                                          ; preds = %while_body682
  store i1 false, i1* %result676
  br label %merge695

else697:                                          ; preds = %while_body682
  br label %merge695

merge701:                                         ; preds = %while681
  %i_v704 = load i32, i32* %i677
  %tmp705 = add i32 %i_v704, 1
  store i32 %tmp705, i32* %i677
  br label %while678

merge706:                                         ; preds = %while678
  %result709 = load i1, i1* %result676
  %tmp715 = icmp ne i1 true, %result709
  br i1 %tmp715, label %then711, label %else713

merge710:                                         ; preds = %else713, %then711
  %printf716 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_r717 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 1
  %r_mat718 = load i32, i32* %m_r717
  %m_r719 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat720 = load i32, i32* %m_r719
  %tmp734 = icmp ne i32 %r_mat718, %r_mat720
  br i1 %tmp734, label %then722, label %else724

then711:                                          ; preds = %merge706
  %printf712 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge710

else713:                                          ; preds = %merge706
  %printf714 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge710

merge721:                                         ; preds = %merge729, %then722
  %result735 = alloca i1
  %m_mat736 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 0
  %mat_mat737 = load double*, double** %m_mat736
  %m_r738 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 1
  %r_mat739 = load i32, i32* %m_r738
  %tmp740 = sub i32 %r_mat739, 1
  %m_c741 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 2
  %c_mat742 = load i32, i32* %m_c741
  %tmp743 = sub i32 %c_mat742, 1
  %m_mat744 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v745 = load double*, double** %m_mat744
  %result746 = alloca i1
  store i1 true, i1* %result746
  %i747 = alloca i32
  store i32 0, i32* %i747
  br label %while748

then722:                                          ; preds = %merge710
  %printf723 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge721

else724:                                          ; preds = %merge710
  %m_c725 = getelementptr inbounds %matrix_t, %matrix_t* %m576, i32 0, i32 2
  %c_mat726 = load i32, i32* %m_c725
  %m_c727 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat728 = load i32, i32* %m_c727
  %tmp733 = icmp ne i32 %c_mat726, %c_mat728
  br i1 %tmp733, label %then730, label %else732

merge729:                                         ; preds = %else732, %then730
  br label %merge721

then730:                                          ; preds = %else724
  %printf731 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge729

else732:                                          ; preds = %else724
  br label %merge729

while748:                                         ; preds = %merge771, %merge721
  %i_v777 = load i32, i32* %i747
  %bool_val778 = icmp sle i32 %i_v777, %tmp740
  br i1 %bool_val778, label %while_body749, label %merge776

while_body749:                                    ; preds = %while748
  %j750 = alloca i32
  store i32 0, i32* %j750
  br label %while751

while751:                                         ; preds = %merge765, %while_body749
  %j_v772 = load i32, i32* %j750
  %bool_val773 = icmp sle i32 %j_v772, %tmp743
  br i1 %bool_val773, label %while_body752, label %merge771

while_body752:                                    ; preds = %while751
  %j_v753 = load i32, i32* %j750
  %i_v754 = load i32, i32* %i747
  %tmp755 = mul i32 %c_mat742, %i_v754
  %index756 = add i32 %j_v753, %tmp755
  %element_ptr757 = getelementptr double, double* %mat_mat737, i32 %index756
  %tmp_element758 = load double, double* %element_ptr757
  %j_v759 = load i32, i32* %j750
  %i_v760 = load i32, i32* %i747
  %tmp761 = mul i32 %c_mat742, %i_v760
  %index762 = add i32 %j_v759, %tmp761
  %element_ptr763 = getelementptr double, double* %mat_v745, i32 %index762
  %tmp_element764 = load double, double* %element_ptr763
  %tmp768 = fcmp one double %tmp_element758, %tmp_element764
  br i1 %tmp768, label %then766, label %else767

merge765:                                         ; preds = %else767, %then766
  %j_v769 = load i32, i32* %j750
  %tmp770 = add i32 %j_v769, 1
  store i32 %tmp770, i32* %j750
  br label %while751

then766:                                          ; preds = %while_body752
  store i1 false, i1* %result746
  br label %merge765

else767:                                          ; preds = %while_body752
  br label %merge765

merge771:                                         ; preds = %while751
  %i_v774 = load i32, i32* %i747
  %tmp775 = add i32 %i_v774, 1
  store i32 %tmp775, i32* %i747
  br label %while748

merge776:                                         ; preds = %while748
  %result779 = load i1, i1* %result746
  %tmp783 = icmp ne i1 %result779, true
  br i1 %tmp783, label %then781, label %else782

merge780:                                         ; preds = %else782, %then781
  %result784 = load i1, i1* %result735
  %tmp790 = icmp ne i1 true, %result784
  br i1 %tmp790, label %then786, label %else788

then781:                                          ; preds = %merge776
  store i1 true, i1* %result735
  br label %merge780

else782:                                          ; preds = %merge776
  store i1 false, i1* %result735
  br label %merge780

merge785:                                         ; preds = %else788, %then786
  %printf791 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf792 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat793 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat794 = load double*, double** %m_mat793
  %m_r795 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat796 = load i32, i32* %m_r795
  %tmp797 = sub i32 %r_mat796, 1
  %m_c798 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat799 = load i32, i32* %m_c798
  %tmp800 = sub i32 %c_mat799, 1
  %size801 = mul i32 %r_mat796, %c_mat799
  %system_mat802 = alloca double, i32 %size801
  %m803 = alloca %matrix_t
  %m_mat804 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 0
  store double* %system_mat802, double** %m_mat804
  %m_r805 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 1
  store i32 %r_mat796, i32* %m_r805
  %m_c806 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 2
  store i32 %c_mat799, i32* %m_c806
  %tmp807 = sub i32 %r_mat796, 1
  %tmp808 = sub i32 %c_mat799, 1
  %i809 = alloca i32
  store i32 0, i32* %i809
  br label %while810

then786:                                          ; preds = %merge780
  %printf787 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge785

else788:                                          ; preds = %merge780
  %printf789 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge785

while810:                                         ; preds = %merge822, %merge785
  %i_v828 = load i32, i32* %i809
  %bool_val829 = icmp sle i32 %i_v828, %tmp807
  br i1 %bool_val829, label %while_body811, label %merge827

while_body811:                                    ; preds = %while810
  %j812 = alloca i32
  store i32 0, i32* %j812
  br label %while813

while813:                                         ; preds = %while_body814, %while_body811
  %j_v823 = load i32, i32* %j812
  %bool_val824 = icmp sle i32 %j_v823, %tmp808
  br i1 %bool_val824, label %while_body814, label %merge822

while_body814:                                    ; preds = %while813
  %j_v815 = load i32, i32* %j812
  %i_v816 = load i32, i32* %i809
  %tmp817 = mul i32 %c_mat799, %i_v816
  %index818 = add i32 %j_v815, %tmp817
  %element_ptr819 = getelementptr double, double* %system_mat802, i32 %index818
  store double 0.000000e+00, double* %element_ptr819
  %j_v820 = load i32, i32* %j812
  %tmp821 = add i32 %j_v820, 1
  store i32 %tmp821, i32* %j812
  br label %while813

merge822:                                         ; preds = %while813
  %i_v825 = load i32, i32* %i809
  %tmp826 = add i32 %i_v825, 1
  store i32 %tmp826, i32* %i809
  br label %while810

merge827:                                         ; preds = %while810
  %m_mat830 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 0
  %mat_mat831 = load double*, double** %m_mat830
  %i832 = alloca i32
  store i32 0, i32* %i832
  br label %while833

while833:                                         ; preds = %merge852, %merge827
  %i_v858 = load i32, i32* %i832
  %bool_val859 = icmp sle i32 %i_v858, %tmp797
  br i1 %bool_val859, label %while_body834, label %merge857

while_body834:                                    ; preds = %while833
  %j835 = alloca i32
  store i32 0, i32* %j835
  br label %while836

while836:                                         ; preds = %while_body837, %while_body834
  %j_v853 = load i32, i32* %j835
  %bool_val854 = icmp sle i32 %j_v853, %tmp800
  br i1 %bool_val854, label %while_body837, label %merge852

while_body837:                                    ; preds = %while836
  %j_v838 = load i32, i32* %j835
  %i_v839 = load i32, i32* %i832
  %tmp840 = mul i32 %c_mat799, %i_v839
  %index841 = add i32 %j_v838, %tmp840
  %element_ptr842 = getelementptr double, double* %mat_mat794, i32 %index841
  %tmp_element843 = load double, double* %element_ptr842
  %j_v844 = load i32, i32* %j835
  %i_v845 = load i32, i32* %i832
  %tmp846 = mul i32 %c_mat799, %i_v845
  %index847 = add i32 %j_v844, %tmp846
  %element_ptr848 = getelementptr double, double* %mat_mat831, i32 %index847
  %tmp_element849 = fmul double %tmp_element843, 1.001000e+00
  store double %tmp_element849, double* %element_ptr848
  %j_v850 = load i32, i32* %j835
  %tmp851 = add i32 %j_v850, 1
  store i32 %tmp851, i32* %j835
  br label %while836

merge852:                                         ; preds = %while836
  %i_v855 = load i32, i32* %i832
  %tmp856 = add i32 %i_v855, 1
  store i32 %tmp856, i32* %i832
  br label %while833

merge857:                                         ; preds = %while833
  %m_r860 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 1
  %r_mat861 = load i32, i32* %m_r860
  %m_c862 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 2
  %c_mat863 = load i32, i32* %m_c862
  %size864 = mul i32 %r_mat861, %c_mat863
  %system_mat865 = alloca double, i32 %size864
  %m866 = alloca %matrix_t
  %m_mat867 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 0
  store double* %system_mat865, double** %m_mat867
  %m_r868 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 1
  store i32 %r_mat861, i32* %m_r868
  %m_c869 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 2
  store i32 %c_mat863, i32* %m_c869
  %tmp870 = sub i32 %r_mat861, 1
  %tmp871 = sub i32 %c_mat863, 1
  %i872 = alloca i32
  store i32 0, i32* %i872
  br label %while873

while873:                                         ; preds = %merge885, %merge857
  %i_v891 = load i32, i32* %i872
  %bool_val892 = icmp sle i32 %i_v891, %tmp870
  br i1 %bool_val892, label %while_body874, label %merge890

while_body874:                                    ; preds = %while873
  %j875 = alloca i32
  store i32 0, i32* %j875
  br label %while876

while876:                                         ; preds = %while_body877, %while_body874
  %j_v886 = load i32, i32* %j875
  %bool_val887 = icmp sle i32 %j_v886, %tmp871
  br i1 %bool_val887, label %while_body877, label %merge885

while_body877:                                    ; preds = %while876
  %j_v878 = load i32, i32* %j875
  %i_v879 = load i32, i32* %i872
  %tmp880 = mul i32 %c_mat863, %i_v879
  %index881 = add i32 %j_v878, %tmp880
  %element_ptr882 = getelementptr double, double* %system_mat865, i32 %index881
  store double 0.000000e+00, double* %element_ptr882
  %j_v883 = load i32, i32* %j875
  %tmp884 = add i32 %j_v883, 1
  store i32 %tmp884, i32* %j875
  br label %while876

merge885:                                         ; preds = %while876
  %i_v888 = load i32, i32* %i872
  %tmp889 = add i32 %i_v888, 1
  store i32 %tmp889, i32* %i872
  br label %while873

merge890:                                         ; preds = %while873
  %tmp893 = sub i32 %c_mat863, 1
  %tmp894 = sub i32 %r_mat861, 1
  %m_mat895 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 0
  %mat_mat896 = load double*, double** %m_mat895
  %m_r897 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 1
  %r_mat898 = load i32, i32* %m_r897
  %m_c899 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 2
  %c_mat900 = load i32, i32* %m_c899
  %m_mat901 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 0
  %mat_v902 = load double*, double** %m_mat901
  %m_r903 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 1
  %r_v904 = load i32, i32* %m_r903
  %m_c905 = getelementptr inbounds %matrix_t, %matrix_t* %m803, i32 0, i32 2
  %c_v906 = load i32, i32* %m_c905
  %i907 = alloca i32
  store i32 0, i32* %i907
  br label %while908

while908:                                         ; preds = %merge930, %merge890
  %i_v936 = load i32, i32* %i907
  %bool_val937 = icmp sle i32 %i_v936, %tmp894
  br i1 %bool_val937, label %while_body909, label %merge935

while_body909:                                    ; preds = %while908
  %j910 = alloca i32
  store i32 0, i32* %j910
  br label %while911

while911:                                         ; preds = %while_body912, %while_body909
  %j_v931 = load i32, i32* %j910
  %bool_val932 = icmp sle i32 %j_v931, %tmp893
  br i1 %bool_val932, label %while_body912, label %merge930

while_body912:                                    ; preds = %while911
  %j_v913 = load i32, i32* %j910
  %i_v914 = load i32, i32* %i907
  %tmp915 = mul i32 %c_mat900, %i_v914
  %index916 = add i32 %j_v913, %tmp915
  %element_ptr917 = getelementptr double, double* %mat_mat896, i32 %index916
  %j_v918 = load i32, i32* %j910
  %tmp919 = sub i32 %j_v918, 0
  %tmp920 = add i32 %tmp919, 0
  %i_v921 = load i32, i32* %i907
  %tmp922 = sub i32 %i_v921, 0
  %tmp923 = add i32 %tmp922, 0
  %tmp924 = mul i32 %c_v906, %tmp923
  %index925 = add i32 %tmp920, %tmp924
  %element_ptr926 = getelementptr double, double* %mat_v902, i32 %index925
  %tmp_element927 = load double, double* %element_ptr926
  store double %tmp_element927, double* %element_ptr917
  %j_v928 = load i32, i32* %j910
  %tmp929 = add i32 %j_v928, 1
  store i32 %tmp929, i32* %j910
  br label %while911

merge930:                                         ; preds = %while911
  %i_v933 = load i32, i32* %i907
  %tmp934 = add i32 %i_v933, 1
  store i32 %tmp934, i32* %i907
  br label %while908

merge935:                                         ; preds = %while908
  %m_r938 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 1
  %r_mat939 = load i32, i32* %m_r938
  %m_r940 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat941 = load i32, i32* %m_r940
  %tmp955 = icmp ne i32 %r_mat939, %r_mat941
  br i1 %tmp955, label %then943, label %else945

merge942:                                         ; preds = %merge950, %then943
  %result956 = alloca i1
  %m_mat957 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 0
  %mat_mat958 = load double*, double** %m_mat957
  %m_r959 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 1
  %r_mat960 = load i32, i32* %m_r959
  %tmp961 = sub i32 %r_mat960, 1
  %m_c962 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 2
  %c_mat963 = load i32, i32* %m_c962
  %tmp964 = sub i32 %c_mat963, 1
  %m_mat965 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v966 = load double*, double** %m_mat965
  %result967 = alloca i1
  store i1 true, i1* %result967
  %i968 = alloca i32
  store i32 0, i32* %i968
  br label %while969

then943:                                          ; preds = %merge935
  %printf944 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge942

else945:                                          ; preds = %merge935
  %m_c946 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 2
  %c_mat947 = load i32, i32* %m_c946
  %m_c948 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat949 = load i32, i32* %m_c948
  %tmp954 = icmp ne i32 %c_mat947, %c_mat949
  br i1 %tmp954, label %then951, label %else953

merge950:                                         ; preds = %else953, %then951
  br label %merge942

then951:                                          ; preds = %else945
  %printf952 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge950

else953:                                          ; preds = %else945
  br label %merge950

while969:                                         ; preds = %merge992, %merge942
  %i_v998 = load i32, i32* %i968
  %bool_val999 = icmp sle i32 %i_v998, %tmp961
  br i1 %bool_val999, label %while_body970, label %merge997

while_body970:                                    ; preds = %while969
  %j971 = alloca i32
  store i32 0, i32* %j971
  br label %while972

while972:                                         ; preds = %merge986, %while_body970
  %j_v993 = load i32, i32* %j971
  %bool_val994 = icmp sle i32 %j_v993, %tmp964
  br i1 %bool_val994, label %while_body973, label %merge992

while_body973:                                    ; preds = %while972
  %j_v974 = load i32, i32* %j971
  %i_v975 = load i32, i32* %i968
  %tmp976 = mul i32 %c_mat963, %i_v975
  %index977 = add i32 %j_v974, %tmp976
  %element_ptr978 = getelementptr double, double* %mat_mat958, i32 %index977
  %tmp_element979 = load double, double* %element_ptr978
  %j_v980 = load i32, i32* %j971
  %i_v981 = load i32, i32* %i968
  %tmp982 = mul i32 %c_mat963, %i_v981
  %index983 = add i32 %j_v980, %tmp982
  %element_ptr984 = getelementptr double, double* %mat_v966, i32 %index983
  %tmp_element985 = load double, double* %element_ptr984
  %tmp989 = fcmp one double %tmp_element979, %tmp_element985
  br i1 %tmp989, label %then987, label %else988

merge986:                                         ; preds = %else988, %then987
  %j_v990 = load i32, i32* %j971
  %tmp991 = add i32 %j_v990, 1
  store i32 %tmp991, i32* %j971
  br label %while972

then987:                                          ; preds = %while_body973
  store i1 false, i1* %result967
  br label %merge986

else988:                                          ; preds = %while_body973
  br label %merge986

merge992:                                         ; preds = %while972
  %i_v995 = load i32, i32* %i968
  %tmp996 = add i32 %i_v995, 1
  store i32 %tmp996, i32* %i968
  br label %while969

merge997:                                         ; preds = %while969
  %result1000 = load i1, i1* %result967
  %tmp1004 = icmp ne i1 %result1000, true
  br i1 %tmp1004, label %then1002, label %else1003

merge1001:                                        ; preds = %else1003, %then1002
  %result1005 = load i1, i1* %result956
  %tmp1011 = icmp ne i1 true, %result1005
  br i1 %tmp1011, label %then1007, label %else1009

then1002:                                         ; preds = %merge997
  store i1 true, i1* %result956
  br label %merge1001

else1003:                                         ; preds = %merge997
  store i1 false, i1* %result956
  br label %merge1001

merge1006:                                        ; preds = %else1009, %then1007
  %printf1012 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_r1013 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 1
  %r_mat1014 = load i32, i32* %m_r1013
  %m_r1015 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat1016 = load i32, i32* %m_r1015
  %tmp1030 = icmp ne i32 %r_mat1014, %r_mat1016
  br i1 %tmp1030, label %then1018, label %else1020

then1007:                                         ; preds = %merge1001
  %printf1008 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge1006

else1009:                                         ; preds = %merge1001
  %printf1010 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge1006

merge1017:                                        ; preds = %merge1025, %then1018
  %m_mat1031 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 0
  %mat_mat1032 = load double*, double** %m_mat1031
  %m_r1033 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 1
  %r_mat1034 = load i32, i32* %m_r1033
  %tmp1035 = sub i32 %r_mat1034, 1
  %m_c1036 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 2
  %c_mat1037 = load i32, i32* %m_c1036
  %tmp1038 = sub i32 %c_mat1037, 1
  %m_mat1039 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v1040 = load double*, double** %m_mat1039
  %result1041 = alloca i1
  store i1 true, i1* %result1041
  %i1042 = alloca i32
  store i32 0, i32* %i1042
  br label %while1043

then1018:                                         ; preds = %merge1006
  %printf1019 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge1017

else1020:                                         ; preds = %merge1006
  %m_c1021 = getelementptr inbounds %matrix_t, %matrix_t* %m866, i32 0, i32 2
  %c_mat1022 = load i32, i32* %m_c1021
  %m_c1023 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat1024 = load i32, i32* %m_c1023
  %tmp1029 = icmp ne i32 %c_mat1022, %c_mat1024
  br i1 %tmp1029, label %then1026, label %else1028

merge1025:                                        ; preds = %else1028, %then1026
  br label %merge1017

then1026:                                         ; preds = %else1020
  %printf1027 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge1025

else1028:                                         ; preds = %else1020
  br label %merge1025

while1043:                                        ; preds = %merge1066, %merge1017
  %i_v1072 = load i32, i32* %i1042
  %bool_val1073 = icmp sle i32 %i_v1072, %tmp1035
  br i1 %bool_val1073, label %while_body1044, label %merge1071

while_body1044:                                   ; preds = %while1043
  %j1045 = alloca i32
  store i32 0, i32* %j1045
  br label %while1046

while1046:                                        ; preds = %merge1060, %while_body1044
  %j_v1067 = load i32, i32* %j1045
  %bool_val1068 = icmp sle i32 %j_v1067, %tmp1038
  br i1 %bool_val1068, label %while_body1047, label %merge1066

while_body1047:                                   ; preds = %while1046
  %j_v1048 = load i32, i32* %j1045
  %i_v1049 = load i32, i32* %i1042
  %tmp1050 = mul i32 %c_mat1037, %i_v1049
  %index1051 = add i32 %j_v1048, %tmp1050
  %element_ptr1052 = getelementptr double, double* %mat_mat1032, i32 %index1051
  %tmp_element1053 = load double, double* %element_ptr1052
  %j_v1054 = load i32, i32* %j1045
  %i_v1055 = load i32, i32* %i1042
  %tmp1056 = mul i32 %c_mat1037, %i_v1055
  %index1057 = add i32 %j_v1054, %tmp1056
  %element_ptr1058 = getelementptr double, double* %mat_v1040, i32 %index1057
  %tmp_element1059 = load double, double* %element_ptr1058
  %tmp1063 = fcmp one double %tmp_element1053, %tmp_element1059
  br i1 %tmp1063, label %then1061, label %else1062

merge1060:                                        ; preds = %else1062, %then1061
  %j_v1064 = load i32, i32* %j1045
  %tmp1065 = add i32 %j_v1064, 1
  store i32 %tmp1065, i32* %j1045
  br label %while1046

then1061:                                         ; preds = %while_body1047
  store i1 false, i1* %result1041
  br label %merge1060

else1062:                                         ; preds = %while_body1047
  br label %merge1060

merge1066:                                        ; preds = %while1046
  %i_v1069 = load i32, i32* %i1042
  %tmp1070 = add i32 %i_v1069, 1
  store i32 %tmp1070, i32* %i1042
  br label %while1043

merge1071:                                        ; preds = %while1043
  %result1074 = load i1, i1* %result1041
  %tmp1080 = icmp ne i1 true, %result1074
  br i1 %tmp1080, label %then1076, label %else1078

merge1075:                                        ; preds = %else1078, %then1076
  %printf1081 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf1082 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat1083 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat1084 = load double*, double** %m_mat1083
  %m_r1085 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat1086 = load i32, i32* %m_r1085
  %tmp1087 = sub i32 %r_mat1086, 1
  %m_c1088 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat1089 = load i32, i32* %m_c1088
  %tmp1090 = sub i32 %c_mat1089, 1
  %size1091 = mul i32 %r_mat1086, %c_mat1089
  %system_mat1092 = alloca double, i32 %size1091
  %m1093 = alloca %matrix_t
  %m_mat1094 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 0
  store double* %system_mat1092, double** %m_mat1094
  %m_r1095 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 1
  store i32 %r_mat1086, i32* %m_r1095
  %m_c1096 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 2
  store i32 %c_mat1089, i32* %m_c1096
  %tmp1097 = sub i32 %r_mat1086, 1
  %tmp1098 = sub i32 %c_mat1089, 1
  %i1099 = alloca i32
  store i32 0, i32* %i1099
  br label %while1100

then1076:                                         ; preds = %merge1071
  %printf1077 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge1075

else1078:                                         ; preds = %merge1071
  %printf1079 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge1075

while1100:                                        ; preds = %merge1112, %merge1075
  %i_v1118 = load i32, i32* %i1099
  %bool_val1119 = icmp sle i32 %i_v1118, %tmp1097
  br i1 %bool_val1119, label %while_body1101, label %merge1117

while_body1101:                                   ; preds = %while1100
  %j1102 = alloca i32
  store i32 0, i32* %j1102
  br label %while1103

while1103:                                        ; preds = %while_body1104, %while_body1101
  %j_v1113 = load i32, i32* %j1102
  %bool_val1114 = icmp sle i32 %j_v1113, %tmp1098
  br i1 %bool_val1114, label %while_body1104, label %merge1112

while_body1104:                                   ; preds = %while1103
  %j_v1105 = load i32, i32* %j1102
  %i_v1106 = load i32, i32* %i1099
  %tmp1107 = mul i32 %c_mat1089, %i_v1106
  %index1108 = add i32 %j_v1105, %tmp1107
  %element_ptr1109 = getelementptr double, double* %system_mat1092, i32 %index1108
  store double 0.000000e+00, double* %element_ptr1109
  %j_v1110 = load i32, i32* %j1102
  %tmp1111 = add i32 %j_v1110, 1
  store i32 %tmp1111, i32* %j1102
  br label %while1103

merge1112:                                        ; preds = %while1103
  %i_v1115 = load i32, i32* %i1099
  %tmp1116 = add i32 %i_v1115, 1
  store i32 %tmp1116, i32* %i1099
  br label %while1100

merge1117:                                        ; preds = %while1100
  %m_mat1120 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 0
  %mat_mat1121 = load double*, double** %m_mat1120
  %i1122 = alloca i32
  store i32 0, i32* %i1122
  br label %while1123

while1123:                                        ; preds = %merge1142, %merge1117
  %i_v1148 = load i32, i32* %i1122
  %bool_val1149 = icmp sle i32 %i_v1148, %tmp1087
  br i1 %bool_val1149, label %while_body1124, label %merge1147

while_body1124:                                   ; preds = %while1123
  %j1125 = alloca i32
  store i32 0, i32* %j1125
  br label %while1126

while1126:                                        ; preds = %while_body1127, %while_body1124
  %j_v1143 = load i32, i32* %j1125
  %bool_val1144 = icmp sle i32 %j_v1143, %tmp1090
  br i1 %bool_val1144, label %while_body1127, label %merge1142

while_body1127:                                   ; preds = %while1126
  %j_v1128 = load i32, i32* %j1125
  %i_v1129 = load i32, i32* %i1122
  %tmp1130 = mul i32 %c_mat1089, %i_v1129
  %index1131 = add i32 %j_v1128, %tmp1130
  %element_ptr1132 = getelementptr double, double* %mat_mat1084, i32 %index1131
  %tmp_element1133 = load double, double* %element_ptr1132
  %j_v1134 = load i32, i32* %j1125
  %i_v1135 = load i32, i32* %i1122
  %tmp1136 = mul i32 %c_mat1089, %i_v1135
  %index1137 = add i32 %j_v1134, %tmp1136
  %element_ptr1138 = getelementptr double, double* %mat_mat1121, i32 %index1137
  %tmp_element1139 = fadd double %tmp_element1133, 0.000000e+00
  store double %tmp_element1139, double* %element_ptr1138
  %j_v1140 = load i32, i32* %j1125
  %tmp1141 = add i32 %j_v1140, 1
  store i32 %tmp1141, i32* %j1125
  br label %while1126

merge1142:                                        ; preds = %while1126
  %i_v1145 = load i32, i32* %i1122
  %tmp1146 = add i32 %i_v1145, 1
  store i32 %tmp1146, i32* %i1122
  br label %while1123

merge1147:                                        ; preds = %while1123
  %m_r1150 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 1
  %r_mat1151 = load i32, i32* %m_r1150
  %m_c1152 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 2
  %c_mat1153 = load i32, i32* %m_c1152
  %size1154 = mul i32 %r_mat1151, %c_mat1153
  %system_mat1155 = alloca double, i32 %size1154
  %m1156 = alloca %matrix_t
  %m_mat1157 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 0
  store double* %system_mat1155, double** %m_mat1157
  %m_r1158 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 1
  store i32 %r_mat1151, i32* %m_r1158
  %m_c1159 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 2
  store i32 %c_mat1153, i32* %m_c1159
  %tmp1160 = sub i32 %r_mat1151, 1
  %tmp1161 = sub i32 %c_mat1153, 1
  %i1162 = alloca i32
  store i32 0, i32* %i1162
  br label %while1163

while1163:                                        ; preds = %merge1175, %merge1147
  %i_v1181 = load i32, i32* %i1162
  %bool_val1182 = icmp sle i32 %i_v1181, %tmp1160
  br i1 %bool_val1182, label %while_body1164, label %merge1180

while_body1164:                                   ; preds = %while1163
  %j1165 = alloca i32
  store i32 0, i32* %j1165
  br label %while1166

while1166:                                        ; preds = %while_body1167, %while_body1164
  %j_v1176 = load i32, i32* %j1165
  %bool_val1177 = icmp sle i32 %j_v1176, %tmp1161
  br i1 %bool_val1177, label %while_body1167, label %merge1175

while_body1167:                                   ; preds = %while1166
  %j_v1168 = load i32, i32* %j1165
  %i_v1169 = load i32, i32* %i1162
  %tmp1170 = mul i32 %c_mat1153, %i_v1169
  %index1171 = add i32 %j_v1168, %tmp1170
  %element_ptr1172 = getelementptr double, double* %system_mat1155, i32 %index1171
  store double 0.000000e+00, double* %element_ptr1172
  %j_v1173 = load i32, i32* %j1165
  %tmp1174 = add i32 %j_v1173, 1
  store i32 %tmp1174, i32* %j1165
  br label %while1166

merge1175:                                        ; preds = %while1166
  %i_v1178 = load i32, i32* %i1162
  %tmp1179 = add i32 %i_v1178, 1
  store i32 %tmp1179, i32* %i1162
  br label %while1163

merge1180:                                        ; preds = %while1163
  %tmp1183 = sub i32 %c_mat1153, 1
  %tmp1184 = sub i32 %r_mat1151, 1
  %m_mat1185 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 0
  %mat_mat1186 = load double*, double** %m_mat1185
  %m_r1187 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 1
  %r_mat1188 = load i32, i32* %m_r1187
  %m_c1189 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 2
  %c_mat1190 = load i32, i32* %m_c1189
  %m_mat1191 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 0
  %mat_v1192 = load double*, double** %m_mat1191
  %m_r1193 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 1
  %r_v1194 = load i32, i32* %m_r1193
  %m_c1195 = getelementptr inbounds %matrix_t, %matrix_t* %m1093, i32 0, i32 2
  %c_v1196 = load i32, i32* %m_c1195
  %i1197 = alloca i32
  store i32 0, i32* %i1197
  br label %while1198

while1198:                                        ; preds = %merge1220, %merge1180
  %i_v1226 = load i32, i32* %i1197
  %bool_val1227 = icmp sle i32 %i_v1226, %tmp1184
  br i1 %bool_val1227, label %while_body1199, label %merge1225

while_body1199:                                   ; preds = %while1198
  %j1200 = alloca i32
  store i32 0, i32* %j1200
  br label %while1201

while1201:                                        ; preds = %while_body1202, %while_body1199
  %j_v1221 = load i32, i32* %j1200
  %bool_val1222 = icmp sle i32 %j_v1221, %tmp1183
  br i1 %bool_val1222, label %while_body1202, label %merge1220

while_body1202:                                   ; preds = %while1201
  %j_v1203 = load i32, i32* %j1200
  %i_v1204 = load i32, i32* %i1197
  %tmp1205 = mul i32 %c_mat1190, %i_v1204
  %index1206 = add i32 %j_v1203, %tmp1205
  %element_ptr1207 = getelementptr double, double* %mat_mat1186, i32 %index1206
  %j_v1208 = load i32, i32* %j1200
  %tmp1209 = sub i32 %j_v1208, 0
  %tmp1210 = add i32 %tmp1209, 0
  %i_v1211 = load i32, i32* %i1197
  %tmp1212 = sub i32 %i_v1211, 0
  %tmp1213 = add i32 %tmp1212, 0
  %tmp1214 = mul i32 %c_v1196, %tmp1213
  %index1215 = add i32 %tmp1210, %tmp1214
  %element_ptr1216 = getelementptr double, double* %mat_v1192, i32 %index1215
  %tmp_element1217 = load double, double* %element_ptr1216
  store double %tmp_element1217, double* %element_ptr1207
  %j_v1218 = load i32, i32* %j1200
  %tmp1219 = add i32 %j_v1218, 1
  store i32 %tmp1219, i32* %j1200
  br label %while1201

merge1220:                                        ; preds = %while1201
  %i_v1223 = load i32, i32* %i1197
  %tmp1224 = add i32 %i_v1223, 1
  store i32 %tmp1224, i32* %i1197
  br label %while1198

merge1225:                                        ; preds = %while1198
  %m_r1228 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 1
  %r_mat1229 = load i32, i32* %m_r1228
  %m_r1230 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat1231 = load i32, i32* %m_r1230
  %tmp1245 = icmp ne i32 %r_mat1229, %r_mat1231
  br i1 %tmp1245, label %then1233, label %else1235

merge1232:                                        ; preds = %merge1240, %then1233
  %m_mat1246 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 0
  %mat_mat1247 = load double*, double** %m_mat1246
  %m_r1248 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 1
  %r_mat1249 = load i32, i32* %m_r1248
  %tmp1250 = sub i32 %r_mat1249, 1
  %m_c1251 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 2
  %c_mat1252 = load i32, i32* %m_c1251
  %tmp1253 = sub i32 %c_mat1252, 1
  %m_mat1254 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v1255 = load double*, double** %m_mat1254
  %result1256 = alloca i1
  store i1 true, i1* %result1256
  %i1257 = alloca i32
  store i32 0, i32* %i1257
  br label %while1258

then1233:                                         ; preds = %merge1225
  %printf1234 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge1232

else1235:                                         ; preds = %merge1225
  %m_c1236 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 2
  %c_mat1237 = load i32, i32* %m_c1236
  %m_c1238 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat1239 = load i32, i32* %m_c1238
  %tmp1244 = icmp ne i32 %c_mat1237, %c_mat1239
  br i1 %tmp1244, label %then1241, label %else1243

merge1240:                                        ; preds = %else1243, %then1241
  br label %merge1232

then1241:                                         ; preds = %else1235
  %printf1242 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge1240

else1243:                                         ; preds = %else1235
  br label %merge1240

while1258:                                        ; preds = %merge1281, %merge1232
  %i_v1287 = load i32, i32* %i1257
  %bool_val1288 = icmp sle i32 %i_v1287, %tmp1250
  br i1 %bool_val1288, label %while_body1259, label %merge1286

while_body1259:                                   ; preds = %while1258
  %j1260 = alloca i32
  store i32 0, i32* %j1260
  br label %while1261

while1261:                                        ; preds = %merge1275, %while_body1259
  %j_v1282 = load i32, i32* %j1260
  %bool_val1283 = icmp sle i32 %j_v1282, %tmp1253
  br i1 %bool_val1283, label %while_body1262, label %merge1281

while_body1262:                                   ; preds = %while1261
  %j_v1263 = load i32, i32* %j1260
  %i_v1264 = load i32, i32* %i1257
  %tmp1265 = mul i32 %c_mat1252, %i_v1264
  %index1266 = add i32 %j_v1263, %tmp1265
  %element_ptr1267 = getelementptr double, double* %mat_mat1247, i32 %index1266
  %tmp_element1268 = load double, double* %element_ptr1267
  %j_v1269 = load i32, i32* %j1260
  %i_v1270 = load i32, i32* %i1257
  %tmp1271 = mul i32 %c_mat1252, %i_v1270
  %index1272 = add i32 %j_v1269, %tmp1271
  %element_ptr1273 = getelementptr double, double* %mat_v1255, i32 %index1272
  %tmp_element1274 = load double, double* %element_ptr1273
  %tmp1278 = fcmp one double %tmp_element1268, %tmp_element1274
  br i1 %tmp1278, label %then1276, label %else1277

merge1275:                                        ; preds = %else1277, %then1276
  %j_v1279 = load i32, i32* %j1260
  %tmp1280 = add i32 %j_v1279, 1
  store i32 %tmp1280, i32* %j1260
  br label %while1261

then1276:                                         ; preds = %while_body1262
  store i1 false, i1* %result1256
  br label %merge1275

else1277:                                         ; preds = %while_body1262
  br label %merge1275

merge1281:                                        ; preds = %while1261
  %i_v1284 = load i32, i32* %i1257
  %tmp1285 = add i32 %i_v1284, 1
  store i32 %tmp1285, i32* %i1257
  br label %while1258

merge1286:                                        ; preds = %while1258
  %result1289 = load i1, i1* %result1256
  %tmp1295 = icmp ne i1 true, %result1289
  br i1 %tmp1295, label %then1291, label %else1293

merge1290:                                        ; preds = %else1293, %then1291
  %printf1296 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_r1297 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 1
  %r_mat1298 = load i32, i32* %m_r1297
  %m_r1299 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat1300 = load i32, i32* %m_r1299
  %tmp1314 = icmp ne i32 %r_mat1298, %r_mat1300
  br i1 %tmp1314, label %then1302, label %else1304

then1291:                                         ; preds = %merge1286
  %printf1292 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge1290

else1293:                                         ; preds = %merge1286
  %printf1294 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge1290

merge1301:                                        ; preds = %merge1309, %then1302
  %result1315 = alloca i1
  %m_mat1316 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 0
  %mat_mat1317 = load double*, double** %m_mat1316
  %m_r1318 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 1
  %r_mat1319 = load i32, i32* %m_r1318
  %tmp1320 = sub i32 %r_mat1319, 1
  %m_c1321 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 2
  %c_mat1322 = load i32, i32* %m_c1321
  %tmp1323 = sub i32 %c_mat1322, 1
  %m_mat1324 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v1325 = load double*, double** %m_mat1324
  %result1326 = alloca i1
  store i1 true, i1* %result1326
  %i1327 = alloca i32
  store i32 0, i32* %i1327
  br label %while1328

then1302:                                         ; preds = %merge1290
  %printf1303 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge1301

else1304:                                         ; preds = %merge1290
  %m_c1305 = getelementptr inbounds %matrix_t, %matrix_t* %m1156, i32 0, i32 2
  %c_mat1306 = load i32, i32* %m_c1305
  %m_c1307 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat1308 = load i32, i32* %m_c1307
  %tmp1313 = icmp ne i32 %c_mat1306, %c_mat1308
  br i1 %tmp1313, label %then1310, label %else1312

merge1309:                                        ; preds = %else1312, %then1310
  br label %merge1301

then1310:                                         ; preds = %else1304
  %printf1311 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @fmt_str.6, i32 0, i32 0))
  call void @abort()
  br label %merge1309

else1312:                                         ; preds = %else1304
  br label %merge1309

while1328:                                        ; preds = %merge1351, %merge1301
  %i_v1357 = load i32, i32* %i1327
  %bool_val1358 = icmp sle i32 %i_v1357, %tmp1320
  br i1 %bool_val1358, label %while_body1329, label %merge1356

while_body1329:                                   ; preds = %while1328
  %j1330 = alloca i32
  store i32 0, i32* %j1330
  br label %while1331

while1331:                                        ; preds = %merge1345, %while_body1329
  %j_v1352 = load i32, i32* %j1330
  %bool_val1353 = icmp sle i32 %j_v1352, %tmp1323
  br i1 %bool_val1353, label %while_body1332, label %merge1351

while_body1332:                                   ; preds = %while1331
  %j_v1333 = load i32, i32* %j1330
  %i_v1334 = load i32, i32* %i1327
  %tmp1335 = mul i32 %c_mat1322, %i_v1334
  %index1336 = add i32 %j_v1333, %tmp1335
  %element_ptr1337 = getelementptr double, double* %mat_mat1317, i32 %index1336
  %tmp_element1338 = load double, double* %element_ptr1337
  %j_v1339 = load i32, i32* %j1330
  %i_v1340 = load i32, i32* %i1327
  %tmp1341 = mul i32 %c_mat1322, %i_v1340
  %index1342 = add i32 %j_v1339, %tmp1341
  %element_ptr1343 = getelementptr double, double* %mat_v1325, i32 %index1342
  %tmp_element1344 = load double, double* %element_ptr1343
  %tmp1348 = fcmp one double %tmp_element1338, %tmp_element1344
  br i1 %tmp1348, label %then1346, label %else1347

merge1345:                                        ; preds = %else1347, %then1346
  %j_v1349 = load i32, i32* %j1330
  %tmp1350 = add i32 %j_v1349, 1
  store i32 %tmp1350, i32* %j1330
  br label %while1331

then1346:                                         ; preds = %while_body1332
  store i1 false, i1* %result1326
  br label %merge1345

else1347:                                         ; preds = %while_body1332
  br label %merge1345

merge1351:                                        ; preds = %while1331
  %i_v1354 = load i32, i32* %i1327
  %tmp1355 = add i32 %i_v1354, 1
  store i32 %tmp1355, i32* %i1327
  br label %while1328

merge1356:                                        ; preds = %while1328
  %result1359 = load i1, i1* %result1326
  %tmp1363 = icmp ne i1 %result1359, true
  br i1 %tmp1363, label %then1361, label %else1362

merge1360:                                        ; preds = %else1362, %then1361
  %result1364 = load i1, i1* %result1315
  %tmp1370 = icmp ne i1 true, %result1364
  br i1 %tmp1370, label %then1366, label %else1368

then1361:                                         ; preds = %merge1356
  store i1 true, i1* %result1315
  br label %merge1360

else1362:                                         ; preds = %merge1356
  store i1 false, i1* %result1315
  br label %merge1360

merge1365:                                        ; preds = %else1368, %then1366
  %printf1371 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf1372 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  ret i32 0

then1366:                                         ; preds = %merge1360
  %printf1367 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge1365

else1368:                                         ; preds = %merge1360
  %printf1369 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge1365
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %int_to_double_t* @int2double(i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %int_to_double_t*
  %tmp = sitofp i32 %0 to double
  %converted_double = getelementptr inbounds %int_to_double_t, %int_to_double_t* %return, i32 0, i32 0
  store double %tmp, double* %converted_double
  ret %int_to_double_t* %return
}

define %double_to_int_t* @double2int(double) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %double_to_int_t*
  %tmp = fptosi double %0 to i32
  %converted_int = getelementptr inbounds %double_to_int_t, %double_to_int_t* %return, i32 0, i32 0
  store i32 %tmp, i32* %converted_int
  ret %double_to_int_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  %tmp133 = load double, double* %k
  store double 0.000000e+00, double* %k
  %i134 = alloca i32
  %tmp135 = load i32, i32* %i134
  store i32 0, i32* %i134
  %j136 = alloca i32
  %tmp137 = load i32, i32* %j136
  store i32 0, i32* %j136
  %i138 = load i32, i32* %i134
  %tmp139 = icmp slt i32 %i138, 3
  %tmp140 = load i32, i32* %i134
  store i32 0, i32* %i134
  br label %while141

while141:                                         ; preds = %merge266, %merge130
  %i273 = load i32, i32* %i134
  %tmp274 = icmp slt i32 %i273, 3
  br i1 %tmp274, label %while_body142, label %merge272

while_body142:                                    ; preds = %while141
  %j143 = load i32, i32* %j136
  %tmp144 = icmp slt i32 %j143, 3
  %tmp145 = load i32, i32* %j136
  store i32 0, i32* %j136
  br label %while146

while146:                                         ; preds = %merge249, %while_body142
  %j267 = load i32, i32* %j136
  %tmp268 = icmp slt i32 %j267, 3
  br i1 %tmp268, label %while_body147, label %merge266

while_body147:                                    ; preds = %while146
  %k148 = load double, double* %k
  %m_r149 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat150 = load i32, i32* %m_r149
  %m_c151 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat152 = load i32, i32* %m_c151
  %i153 = load i32, i32* %i134
  %tmp155 = icmp sgt i32 0, %i153
  br i1 %tmp155, label %then, label %else

merge154:                                         ; preds = %else, %then
  %tmp156 = sub i32 %r_mat150, 1
  %tmp161 = icmp slt i32 %tmp156, %i153
  br i1 %tmp161, label %then158, label %else160

then:                                             ; preds = %while_body147
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge154

else:                                             ; preds = %while_body147
  br label %merge154

merge157:                                         ; preds = %else160, %then158
  %i162 = load i32, i32* %i134
  %tmp167 = icmp sgt i32 0, %i162
  br i1 %tmp167, label %then164, label %else166

then158:                                          ; preds = %merge154
  %printf159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge157

else160:                                          ; preds = %merge154
  br label %merge157

merge163:                                         ; preds = %else166, %then164
  %tmp168 = sub i32 %r_mat150, 1
  %tmp173 = icmp slt i32 %tmp168, %i162
  br i1 %tmp173, label %then170, label %else172

then164:                                          ; preds = %merge157
  %printf165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge163

else166:                                          ; preds = %merge157
  br label %merge163

merge169:                                         ; preds = %else172, %then170
  %j174 = load i32, i32* %j136
  %tmp179 = icmp sgt i32 0, %j174
  br i1 %tmp179, label %then176, label %else178

then170:                                          ; preds = %merge163
  %printf171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge169

else172:                                          ; preds = %merge163
  br label %merge169

merge175:                                         ; preds = %else178, %then176
  %tmp180 = sub i32 %c_mat152, 1
  %tmp185 = icmp slt i32 %tmp180, %j174
  br i1 %tmp185, label %then182, label %else184

then176:                                          ; preds = %merge169
  %printf177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge175

else178:                                          ; preds = %merge169
  br label %merge175

merge181:                                         ; preds = %else184, %then182
  %j186 = load i32, i32* %j136
  %tmp191 = icmp sgt i32 0, %j186
  br i1 %tmp191, label %then188, label %else190

then182:                                          ; preds = %merge175
  %printf183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge181

else184:                                          ; preds = %merge175
  br label %merge181

merge187:                                         ; preds = %else190, %then188
  %tmp192 = sub i32 %c_mat152, 1
  %tmp197 = icmp slt i32 %tmp192, %j186
  br i1 %tmp197, label %then194, label %else196

then188:                                          ; preds = %merge181
  %printf189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge187

else190:                                          ; preds = %merge181
  br label %merge187

merge193:                                         ; preds = %else196, %then194
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat198 = load double*, double** %mat
  %tmp199 = mul i32 %c_mat152, %i153
  %index200 = add i32 %j174, %tmp199
  %element_ptr201 = getelementptr double, double* %mat198, i32 %index200
  %element = load double, double* %element_ptr201
  %m_r202 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat203 = load i32, i32* %m_r202
  %m_c204 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat205 = load i32, i32* %m_c204
  %i206 = load i32, i32* %i134
  %tmp211 = icmp sgt i32 0, %i206
  br i1 %tmp211, label %then208, label %else210

then194:                                          ; preds = %merge187
  %printf195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge193

else196:                                          ; preds = %merge187
  br label %merge193

merge207:                                         ; preds = %else210, %then208
  %tmp212 = sub i32 %r_mat203, 1
  %tmp217 = icmp slt i32 %tmp212, %i206
  br i1 %tmp217, label %then214, label %else216

then208:                                          ; preds = %merge193
  %printf209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge207

else210:                                          ; preds = %merge193
  br label %merge207

merge213:                                         ; preds = %else216, %then214
  %i218 = load i32, i32* %i134
  %tmp223 = icmp sgt i32 0, %i218
  br i1 %tmp223, label %then220, label %else222

then214:                                          ; preds = %merge207
  %printf215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge213

else216:                                          ; preds = %merge207
  br label %merge213

merge219:                                         ; preds = %else222, %then220
  %tmp224 = sub i32 %r_mat203, 1
  %tmp229 = icmp slt i32 %tmp224, %i218
  br i1 %tmp229, label %then226, label %else228

then220:                                          ; preds = %merge213
  %printf221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge219

else222:                                          ; preds = %merge213
  br label %merge219

merge225:                                         ; preds = %else228, %then226
  %j230 = load i32, i32* %j136
  %tmp235 = icmp sgt i32 0, %j230
  br i1 %tmp235, label %then232, label %else234

then226:                                          ; preds = %merge219
  %printf227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge225

else228:                                          ; preds = %merge219
  br label %merge225

merge231:                                         ; preds = %else234, %then232
  %tmp236 = sub i32 %c_mat205, 1
  %tmp241 = icmp slt i32 %tmp236, %j230
  br i1 %tmp241, label %then238, label %else240

then232:                                          ; preds = %merge225
  %printf233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge231

else234:                                          ; preds = %merge225
  br label %merge231

merge237:                                         ; preds = %else240, %then238
  %j242 = load i32, i32* %j136
  %tmp247 = icmp sgt i32 0, %j242
  br i1 %tmp247, label %then244, label %else246

then238:                                          ; preds = %merge231
  %printf239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge237

else240:                                          ; preds = %merge231
  br label %merge237

merge243:                                         ; preds = %else246, %then244
  %tmp248 = sub i32 %c_mat205, 1
  %tmp253 = icmp slt i32 %tmp248, %j242
  br i1 %tmp253, label %then250, label %else252

then244:                                          ; preds = %merge237
  %printf245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge243

else246:                                          ; preds = %merge237
  br label %merge243

merge249:                                         ; preds = %else252, %then250
  %mat254 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat255 = load double*, double** %mat254
  %tmp256 = mul i32 %c_mat205, %i206
  %index257 = add i32 %j230, %tmp256
  %element_ptr258 = getelementptr double, double* %mat255, i32 %index257
  %element259 = load double, double* %element_ptr258
  %tmp260 = fmul double %element, %element259
  %tmp261 = fadd double %k148, %tmp260
  %tmp262 = load double, double* %k
  store double %tmp261, double* %k
  %j263 = load i32, i32* %j136
  %tmp264 = add i32 %j263, 1
  %tmp265 = load i32, i32* %j136
  store i32 %tmp264, i32* %j136
  br label %while146

then250:                                          ; preds = %merge243
  %printf251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge249

else252:                                          ; preds = %merge243
  br label %merge249

merge266:                                         ; preds = %while146
  %i269 = load i32, i32* %i134
  %tmp270 = add i32 %i269, 1
  %tmp271 = load i32, i32* %i134
  store i32 %tmp270, i32* %i134
  br label %while141

merge272:                                         ; preds = %while141
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k275 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k275, double* %return0
  ret %return_t* %return
  %tmp276 = alloca %return_t
  ret %return_t* %tmp276
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  %tmp133 = load i32, i32* %a
  store i32 0, i32* %a
  %b = alloca i32
  %tmp134 = load i32, i32* %b
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp135 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr136 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v137 = load i32, i32* %v_ptr136
  %tmp138 = load i32, i32* %b
  store i32 %v137, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b139 = load i32, i32* %b
  %tmp140 = add i32 %b139, 2
  %a141 = load i32, i32* %a
  %tmp142 = add i32 %a141, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp142, i32 %tmp140)
  %v_ptr143 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v144 = load %matrix_t*, %matrix_t** %v_ptr143
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat145 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_mat146 = load double*, double** %m_mat145
  %m_r147 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_mat148 = load i32, i32* %m_r147
  %m_c149 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_mat150 = load i32, i32* %m_c149
  %size151 = mul i32 %r_mat148, %c_mat150
  %system_mat152 = alloca double, i32 %size151
  %m153 = alloca %matrix_t
  %m_mat154 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  store double* %system_mat152, double** %m_mat154
  %m_r155 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  store i32 %r_mat148, i32* %m_r155
  %m_c156 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  store i32 %c_mat150, i32* %m_c156
  %tmp157 = sub i32 %r_mat148, 1
  %tmp158 = sub i32 %c_mat150, 1
  %i159 = alloca i32
  store i32 0, i32* %i159
  br label %while160

while160:                                         ; preds = %merge172, %merge130
  %i_v178 = load i32, i32* %i159
  %bool_val179 = icmp sle i32 %i_v178, %tmp157
  br i1 %bool_val179, label %while_body161, label %merge177

while_body161:                                    ; preds = %while160
  %j162 = alloca i32
  store i32 0, i32* %j162
  br label %while163

while163:                                         ; preds = %while_body164, %while_body161
  %j_v173 = load i32, i32* %j162
  %bool_val174 = icmp sle i32 %j_v173, %tmp158
  br i1 %bool_val174, label %while_body164, label %merge172

while_body164:                                    ; preds = %while163
  %j_v165 = load i32, i32* %j162
  %i_v166 = load i32, i32* %i159
  %tmp167 = mul i32 %c_mat150, %i_v166
  %index168 = add i32 %j_v165, %tmp167
  %element_ptr169 = getelementptr double, double* %system_mat152, i32 %index168
  store double 0.000000e+00, double* %element_ptr169
  %j_v170 = load i32, i32* %j162
  %tmp171 = add i32 %j_v170, 1
  store i32 %tmp171, i32* %j162
  br label %while163

merge172:                                         ; preds = %while163
  %i_v175 = load i32, i32* %i159
  %tmp176 = add i32 %i_v175, 1
  store i32 %tmp176, i32* %i159
  br label %while160

merge177:                                         ; preds = %while160
  %tmp180 = sub i32 %c_mat150, 1
  %tmp181 = sub i32 %r_mat148, 1
  %m_mat182 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_mat183 = load double*, double** %m_mat182
  %m_r184 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat185 = load i32, i32* %m_r184
  %m_c186 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat187 = load i32, i32* %m_c186
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_v189 = load double*, double** %m_mat188
  %m_r190 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_v191 = load i32, i32* %m_r190
  %m_c192 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_v193 = load i32, i32* %m_c192
  %i194 = alloca i32
  store i32 0, i32* %i194
  br label %while195

while195:                                         ; preds = %merge217, %merge177
  %i_v223 = load i32, i32* %i194
  %bool_val224 = icmp sle i32 %i_v223, %tmp181
  br i1 %bool_val224, label %while_body196, label %merge222

while_body196:                                    ; preds = %while195
  %j197 = alloca i32
  store i32 0, i32* %j197
  br label %while198

while198:                                         ; preds = %while_body199, %while_body196
  %j_v218 = load i32, i32* %j197
  %bool_val219 = icmp sle i32 %j_v218, %tmp180
  br i1 %bool_val219, label %while_body199, label %merge217

while_body199:                                    ; preds = %while198
  %j_v200 = load i32, i32* %j197
  %i_v201 = load i32, i32* %i194
  %tmp202 = mul i32 %c_mat187, %i_v201
  %index203 = add i32 %j_v200, %tmp202
  %element_ptr204 = getelementptr double, double* %mat_mat183, i32 %index203
  %j_v205 = load i32, i32* %j197
  %tmp206 = sub i32 %j_v205, 0
  %tmp207 = add i32 %tmp206, 0
  %i_v208 = load i32, i32* %i194
  %tmp209 = sub i32 %i_v208, 0
  %tmp210 = add i32 %tmp209, 0
  %tmp211 = mul i32 %c_v193, %tmp210
  %index212 = add i32 %tmp207, %tmp211
  %element_ptr213 = getelementptr double, double* %mat_v189, i32 %index212
  %tmp_element214 = load double, double* %element_ptr213
  store double %tmp_element214, double* %element_ptr204
  %j_v215 = load i32, i32* %j197
  %tmp216 = add i32 %j_v215, 1
  store i32 %tmp216, i32* %j197
  br label %while198

merge217:                                         ; preds = %while198
  %i_v220 = load i32, i32* %i194
  %tmp221 = add i32 %i_v220, 1
  store i32 %tmp221, i32* %i194
  br label %while195

merge222:                                         ; preds = %while195
  %4 = bitcast double* %mat_mat146 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v144 to i8*
  tail call void @free(i8* %5)
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %size229 = mul i32 %r_mat226, %c_mat228
  %system_mat230 = alloca double, i32 %size229
  %m231 = alloca %matrix_t
  %m_mat232 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  store double* %system_mat230, double** %m_mat232
  %m_r233 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  store i32 %r_mat226, i32* %m_r233
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  store i32 %c_mat228, i32* %m_c234
  %tmp235 = sub i32 %r_mat226, 1
  %tmp236 = sub i32 %c_mat228, 1
  %i237 = alloca i32
  store i32 0, i32* %i237
  br label %while238

while238:                                         ; preds = %merge250, %merge222
  %i_v256 = load i32, i32* %i237
  %bool_val257 = icmp sle i32 %i_v256, %tmp235
  br i1 %bool_val257, label %while_body239, label %merge255

while_body239:                                    ; preds = %while238
  %j240 = alloca i32
  store i32 0, i32* %j240
  br label %while241

while241:                                         ; preds = %while_body242, %while_body239
  %j_v251 = load i32, i32* %j240
  %bool_val252 = icmp sle i32 %j_v251, %tmp236
  br i1 %bool_val252, label %while_body242, label %merge250

while_body242:                                    ; preds = %while241
  %j_v243 = load i32, i32* %j240
  %i_v244 = load i32, i32* %i237
  %tmp245 = mul i32 %c_mat228, %i_v244
  %index246 = add i32 %j_v243, %tmp245
  %element_ptr247 = getelementptr double, double* %system_mat230, i32 %index246
  store double 0.000000e+00, double* %element_ptr247
  %j_v248 = load i32, i32* %j240
  %tmp249 = add i32 %j_v248, 1
  store i32 %tmp249, i32* %j240
  br label %while241

merge250:                                         ; preds = %while241
  %i_v253 = load i32, i32* %i237
  %tmp254 = add i32 %i_v253, 1
  store i32 %tmp254, i32* %i237
  br label %while238

merge255:                                         ; preds = %while238
  %tmp258 = sub i32 %c_mat228, 1
  %tmp259 = sub i32 %r_mat226, 1
  %m_mat260 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat261 = load double*, double** %m_mat260
  %m_r262 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat263 = load i32, i32* %m_r262
  %m_c264 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat265 = load i32, i32* %m_c264
  %m_mat266 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_v267 = load double*, double** %m_mat266
  %m_r268 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_v269 = load i32, i32* %m_r268
  %m_c270 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_v271 = load i32, i32* %m_c270
  %i272 = alloca i32
  store i32 0, i32* %i272
  br label %while273

while273:                                         ; preds = %merge295, %merge255
  %i_v301 = load i32, i32* %i272
  %bool_val302 = icmp sle i32 %i_v301, %tmp259
  br i1 %bool_val302, label %while_body274, label %merge300

while_body274:                                    ; preds = %while273
  %j275 = alloca i32
  store i32 0, i32* %j275
  br label %while276

while276:                                         ; preds = %while_body277, %while_body274
  %j_v296 = load i32, i32* %j275
  %bool_val297 = icmp sle i32 %j_v296, %tmp258
  br i1 %bool_val297, label %while_body277, label %merge295

while_body277:                                    ; preds = %while276
  %j_v278 = load i32, i32* %j275
  %i_v279 = load i32, i32* %i272
  %tmp280 = mul i32 %c_mat265, %i_v279
  %index281 = add i32 %j_v278, %tmp280
  %element_ptr282 = getelementptr double, double* %mat_mat261, i32 %index281
  %j_v283 = load i32, i32* %j275
  %tmp284 = sub i32 %j_v283, 0
  %tmp285 = add i32 %tmp284, 0
  %i_v286 = load i32, i32* %i272
  %tmp287 = sub i32 %i_v286, 0
  %tmp288 = add i32 %tmp287, 0
  %tmp289 = mul i32 %c_v271, %tmp288
  %index290 = add i32 %tmp285, %tmp289
  %element_ptr291 = getelementptr double, double* %mat_v267, i32 %index290
  %tmp_element292 = load double, double* %element_ptr291
  store double %tmp_element292, double* %element_ptr282
  %j_v293 = load i32, i32* %j275
  %tmp294 = add i32 %j_v293, 1
  store i32 %tmp294, i32* %j275
  br label %while276

merge295:                                         ; preds = %while276
  %i_v298 = load i32, i32* %i272
  %tmp299 = add i32 %i_v298, 1
  store i32 %tmp299, i32* %i272
  br label %while273

merge300:                                         ; preds = %while273
  %b303 = load i32, i32* %b
  %a304 = load i32, i32* %a
  %zeros_result305 = call %zero_matrix_t* @zeros(i32 %a304, i32 %b303)
  %v_ptr306 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result305, i32 0, i32 0
  %v307 = load %matrix_t*, %matrix_t** %v_ptr306
  %6 = bitcast %zero_matrix_t* %zeros_result305 to i8*
  tail call void @free(i8* %6)
  %m_mat308 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_mat309 = load double*, double** %m_mat308
  %m_r310 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_mat311 = load i32, i32* %m_r310
  %m_c312 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_mat313 = load i32, i32* %m_c312
  %size314 = mul i32 %r_mat311, %c_mat313
  %system_mat315 = alloca double, i32 %size314
  %m316 = alloca %matrix_t
  %m_mat317 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  store double* %system_mat315, double** %m_mat317
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  store i32 %r_mat311, i32* %m_r318
  %m_c319 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  store i32 %c_mat313, i32* %m_c319
  %tmp320 = sub i32 %r_mat311, 1
  %tmp321 = sub i32 %c_mat313, 1
  %i322 = alloca i32
  store i32 0, i32* %i322
  br label %while323

while323:                                         ; preds = %merge335, %merge300
  %i_v341 = load i32, i32* %i322
  %bool_val342 = icmp sle i32 %i_v341, %tmp320
  br i1 %bool_val342, label %while_body324, label %merge340

while_body324:                                    ; preds = %while323
  %j325 = alloca i32
  store i32 0, i32* %j325
  br label %while326

while326:                                         ; preds = %while_body327, %while_body324
  %j_v336 = load i32, i32* %j325
  %bool_val337 = icmp sle i32 %j_v336, %tmp321
  br i1 %bool_val337, label %while_body327, label %merge335

while_body327:                                    ; preds = %while326
  %j_v328 = load i32, i32* %j325
  %i_v329 = load i32, i32* %i322
  %tmp330 = mul i32 %c_mat313, %i_v329
  %index331 = add i32 %j_v328, %tmp330
  %element_ptr332 = getelementptr double, double* %system_mat315, i32 %index331
  store double 0.000000e+00, double* %element_ptr332
  %j_v333 = load i32, i32* %j325
  %tmp334 = add i32 %j_v333, 1
  store i32 %tmp334, i32* %j325
  br label %while326

merge335:                                         ; preds = %while326
  %i_v338 = load i32, i32* %i322
  %tmp339 = add i32 %i_v338, 1
  store i32 %tmp339, i32* %i322
  br label %while323

merge340:                                         ; preds = %while323
  %tmp343 = sub i32 %c_mat313, 1
  %tmp344 = sub i32 %r_mat311, 1
  %m_mat345 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_mat346 = load double*, double** %m_mat345
  %m_r347 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat348 = load i32, i32* %m_r347
  %m_c349 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat350 = load i32, i32* %m_c349
  %m_mat351 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_v352 = load double*, double** %m_mat351
  %m_r353 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_v354 = load i32, i32* %m_r353
  %m_c355 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_v356 = load i32, i32* %m_c355
  %i357 = alloca i32
  store i32 0, i32* %i357
  br label %while358

while358:                                         ; preds = %merge380, %merge340
  %i_v386 = load i32, i32* %i357
  %bool_val387 = icmp sle i32 %i_v386, %tmp344
  br i1 %bool_val387, label %while_body359, label %merge385

while_body359:                                    ; preds = %while358
  %j360 = alloca i32
  store i32 0, i32* %j360
  br label %while361

while361:                                         ; preds = %while_body362, %while_body359
  %j_v381 = load i32, i32* %j360
  %bool_val382 = icmp sle i32 %j_v381, %tmp343
  br i1 %bool_val382, label %while_body362, label %merge380

while_body362:                                    ; preds = %while361
  %j_v363 = load i32, i32* %j360
  %i_v364 = load i32, i32* %i357
  %tmp365 = mul i32 %c_mat350, %i_v364
  %index366 = add i32 %j_v363, %tmp365
  %element_ptr367 = getelementptr double, double* %mat_mat346, i32 %index366
  %j_v368 = load i32, i32* %j360
  %tmp369 = sub i32 %j_v368, 0
  %tmp370 = add i32 %tmp369, 0
  %i_v371 = load i32, i32* %i357
  %tmp372 = sub i32 %i_v371, 0
  %tmp373 = add i32 %tmp372, 0
  %tmp374 = mul i32 %c_v356, %tmp373
  %index375 = add i32 %tmp370, %tmp374
  %element_ptr376 = getelementptr double, double* %mat_v352, i32 %index375
  %tmp_element377 = load double, double* %element_ptr376
  store double %tmp_element377, double* %element_ptr367
  %j_v378 = load i32, i32* %j360
  %tmp379 = add i32 %j_v378, 1
  store i32 %tmp379, i32* %j360
  br label %while361

merge380:                                         ; preds = %while361
  %i_v383 = load i32, i32* %i357
  %tmp384 = add i32 %i_v383, 1
  store i32 %tmp384, i32* %i357
  br label %while358

merge385:                                         ; preds = %while358
  %7 = bitcast double* %mat_mat309 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v307 to i8*
  tail call void @free(i8* %8)
  %m_r388 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat389 = load i32, i32* %m_r388
  %m_c390 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat391 = load i32, i32* %m_c390
  %size392 = mul i32 %r_mat389, %c_mat391
  %system_mat393 = alloca double, i32 %size392
  %m394 = alloca %matrix_t
  %m_mat395 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  store double* %system_mat393, double** %m_mat395
  %m_r396 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  store i32 %r_mat389, i32* %m_r396
  %m_c397 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  store i32 %c_mat391, i32* %m_c397
  %tmp398 = sub i32 %r_mat389, 1
  %tmp399 = sub i32 %c_mat391, 1
  %i400 = alloca i32
  store i32 0, i32* %i400
  br label %while401

while401:                                         ; preds = %merge413, %merge385
  %i_v419 = load i32, i32* %i400
  %bool_val420 = icmp sle i32 %i_v419, %tmp398
  br i1 %bool_val420, label %while_body402, label %merge418

while_body402:                                    ; preds = %while401
  %j403 = alloca i32
  store i32 0, i32* %j403
  br label %while404

while404:                                         ; preds = %while_body405, %while_body402
  %j_v414 = load i32, i32* %j403
  %bool_val415 = icmp sle i32 %j_v414, %tmp399
  br i1 %bool_val415, label %while_body405, label %merge413

while_body405:                                    ; preds = %while404
  %j_v406 = load i32, i32* %j403
  %i_v407 = load i32, i32* %i400
  %tmp408 = mul i32 %c_mat391, %i_v407
  %index409 = add i32 %j_v406, %tmp408
  %element_ptr410 = getelementptr double, double* %system_mat393, i32 %index409
  store double 0.000000e+00, double* %element_ptr410
  %j_v411 = load i32, i32* %j403
  %tmp412 = add i32 %j_v411, 1
  store i32 %tmp412, i32* %j403
  br label %while404

merge413:                                         ; preds = %while404
  %i_v416 = load i32, i32* %i400
  %tmp417 = add i32 %i_v416, 1
  store i32 %tmp417, i32* %i400
  br label %while401

merge418:                                         ; preds = %while401
  %tmp421 = sub i32 %c_mat391, 1
  %tmp422 = sub i32 %r_mat389, 1
  %m_mat423 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_mat424 = load double*, double** %m_mat423
  %m_r425 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat426 = load i32, i32* %m_r425
  %m_c427 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat428 = load i32, i32* %m_c427
  %m_mat429 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_v430 = load double*, double** %m_mat429
  %m_r431 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_v432 = load i32, i32* %m_r431
  %m_c433 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_v434 = load i32, i32* %m_c433
  %i435 = alloca i32
  store i32 0, i32* %i435
  br label %while436

while436:                                         ; preds = %merge458, %merge418
  %i_v464 = load i32, i32* %i435
  %bool_val465 = icmp sle i32 %i_v464, %tmp422
  br i1 %bool_val465, label %while_body437, label %merge463

while_body437:                                    ; preds = %while436
  %j438 = alloca i32
  store i32 0, i32* %j438
  br label %while439

while439:                                         ; preds = %while_body440, %while_body437
  %j_v459 = load i32, i32* %j438
  %bool_val460 = icmp sle i32 %j_v459, %tmp421
  br i1 %bool_val460, label %while_body440, label %merge458

while_body440:                                    ; preds = %while439
  %j_v441 = load i32, i32* %j438
  %i_v442 = load i32, i32* %i435
  %tmp443 = mul i32 %c_mat428, %i_v442
  %index444 = add i32 %j_v441, %tmp443
  %element_ptr445 = getelementptr double, double* %mat_mat424, i32 %index444
  %j_v446 = load i32, i32* %j438
  %tmp447 = sub i32 %j_v446, 0
  %tmp448 = add i32 %tmp447, 0
  %i_v449 = load i32, i32* %i435
  %tmp450 = sub i32 %i_v449, 0
  %tmp451 = add i32 %tmp450, 0
  %tmp452 = mul i32 %c_v434, %tmp451
  %index453 = add i32 %tmp448, %tmp452
  %element_ptr454 = getelementptr double, double* %mat_v430, i32 %index453
  %tmp_element455 = load double, double* %element_ptr454
  store double %tmp_element455, double* %element_ptr445
  %j_v456 = load i32, i32* %j438
  %tmp457 = add i32 %j_v456, 1
  store i32 %tmp457, i32* %j438
  br label %while439

merge458:                                         ; preds = %while439
  %i_v461 = load i32, i32* %i435
  %tmp462 = add i32 %i_v461, 1
  store i32 %tmp462, i32* %i435
  br label %while436

merge463:                                         ; preds = %while436
  %m_r466 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat467 = load i32, i32* %m_r466
  %m_c468 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat469 = load i32, i32* %m_c468
  br i1 false, label %then, label %else

merge470:                                         ; preds = %else, %then
  %tmp471 = sub i32 %r_mat467, 1
  %tmp476 = icmp slt i32 %tmp471, 0
  br i1 %tmp476, label %then473, label %else475

then:                                             ; preds = %merge463
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge470

else:                                             ; preds = %merge463
  br label %merge470

merge472:                                         ; preds = %else475, %then473
  %a477 = load i32, i32* %a
  %tmp478 = sub i32 %a477, 1
  %tmp483 = icmp sgt i32 0, %tmp478
  br i1 %tmp483, label %then480, label %else482

then473:                                          ; preds = %merge470
  %printf474 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge472

else475:                                          ; preds = %merge470
  br label %merge472

merge479:                                         ; preds = %else482, %then480
  %tmp484 = sub i32 %r_mat467, 1
  %tmp489 = icmp slt i32 %tmp484, %tmp478
  br i1 %tmp489, label %then486, label %else488

then480:                                          ; preds = %merge472
  %printf481 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge479

else482:                                          ; preds = %merge472
  br label %merge479

merge485:                                         ; preds = %else488, %then486
  br i1 false, label %then491, label %else493

then486:                                          ; preds = %merge479
  %printf487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge485

else488:                                          ; preds = %merge479
  br label %merge485

merge490:                                         ; preds = %else493, %then491
  %tmp494 = sub i32 %c_mat469, 1
  %tmp499 = icmp slt i32 %tmp494, 0
  br i1 %tmp499, label %then496, label %else498

then491:                                          ; preds = %merge485
  %printf492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge490

else493:                                          ; preds = %merge485
  br label %merge490

merge495:                                         ; preds = %else498, %then496
  %b500 = load i32, i32* %b
  %tmp501 = sub i32 %b500, 1
  %tmp506 = icmp sgt i32 0, %tmp501
  br i1 %tmp506, label %then503, label %else505

then496:                                          ; preds = %merge490
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge495

else498:                                          ; preds = %merge490
  br label %merge495

merge502:                                         ; preds = %else505, %then503
  %tmp507 = sub i32 %c_mat469, 1
  %tmp512 = icmp slt i32 %tmp507, %tmp501
  br i1 %tmp512, label %then509, label %else511

then503:                                          ; preds = %merge495
  %printf504 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge502

else505:                                          ; preds = %merge495
  br label %merge502

merge508:                                         ; preds = %else511, %then509
  %tmp513 = sub i32 %tmp478, 0
  %tmp514 = sub i32 %tmp501, 0
  %tmp515 = add i32 %tmp514, 1
  %tmp516 = add i32 %tmp513, 1
  %size517 = mul i32 %tmp516, %tmp515
  %system_mat518 = alloca double, i32 %size517
  %m519 = alloca %matrix_t
  %m_mat520 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  store double* %system_mat518, double** %m_mat520
  %m_r521 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  store i32 %tmp516, i32* %m_r521
  %m_c522 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  store i32 %tmp515, i32* %m_c522
  %tmp523 = sub i32 %tmp516, 1
  %tmp524 = sub i32 %tmp515, 1
  %i525 = alloca i32
  store i32 0, i32* %i525
  br label %while526

then509:                                          ; preds = %merge502
  %printf510 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge508

else511:                                          ; preds = %merge502
  br label %merge508

while526:                                         ; preds = %merge538, %merge508
  %i_v544 = load i32, i32* %i525
  %bool_val545 = icmp sle i32 %i_v544, %tmp523
  br i1 %bool_val545, label %while_body527, label %merge543

while_body527:                                    ; preds = %while526
  %j528 = alloca i32
  store i32 0, i32* %j528
  br label %while529

while529:                                         ; preds = %while_body530, %while_body527
  %j_v539 = load i32, i32* %j528
  %bool_val540 = icmp sle i32 %j_v539, %tmp524
  br i1 %bool_val540, label %while_body530, label %merge538

while_body530:                                    ; preds = %while529
  %j_v531 = load i32, i32* %j528
  %i_v532 = load i32, i32* %i525
  %tmp533 = mul i32 %tmp515, %i_v532
  %index534 = add i32 %j_v531, %tmp533
  %element_ptr535 = getelementptr double, double* %system_mat518, i32 %index534
  store double 0.000000e+00, double* %element_ptr535
  %j_v536 = load i32, i32* %j528
  %tmp537 = add i32 %j_v536, 1
  store i32 %tmp537, i32* %j528
  br label %while529

merge538:                                         ; preds = %while529
  %i_v541 = load i32, i32* %i525
  %tmp542 = add i32 %i_v541, 1
  store i32 %tmp542, i32* %i525
  br label %while526

merge543:                                         ; preds = %while526
  %m_mat546 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_mat547 = load double*, double** %m_mat546
  %m_r548 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat549 = load i32, i32* %m_r548
  %m_c550 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_mat551 = load i32, i32* %m_c550
  %m_mat552 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v553 = load double*, double** %m_mat552
  %m_r554 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v555 = load i32, i32* %m_r554
  %m_c556 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v557 = load i32, i32* %m_c556
  %i558 = alloca i32
  store i32 0, i32* %i558
  br label %while559

while559:                                         ; preds = %merge581, %merge543
  %i_v587 = load i32, i32* %i558
  %bool_val588 = icmp sle i32 %i_v587, %tmp513
  br i1 %bool_val588, label %while_body560, label %merge586

while_body560:                                    ; preds = %while559
  %j561 = alloca i32
  store i32 0, i32* %j561
  br label %while562

while562:                                         ; preds = %while_body563, %while_body560
  %j_v582 = load i32, i32* %j561
  %bool_val583 = icmp sle i32 %j_v582, %tmp514
  br i1 %bool_val583, label %while_body563, label %merge581

while_body563:                                    ; preds = %while562
  %j_v564 = load i32, i32* %j561
  %i_v565 = load i32, i32* %i558
  %tmp566 = mul i32 %c_mat551, %i_v565
  %index567 = add i32 %j_v564, %tmp566
  %element_ptr568 = getelementptr double, double* %mat_mat547, i32 %index567
  %j_v569 = load i32, i32* %j561
  %tmp570 = sub i32 %j_v569, 0
  %tmp571 = add i32 %tmp570, 0
  %i_v572 = load i32, i32* %i558
  %tmp573 = sub i32 %i_v572, 0
  %tmp574 = add i32 %tmp573, 0
  %tmp575 = mul i32 %c_v557, %tmp574
  %index576 = add i32 %tmp571, %tmp575
  %element_ptr577 = getelementptr double, double* %mat_v553, i32 %index576
  %tmp_element578 = load double, double* %element_ptr577
  store double %tmp_element578, double* %element_ptr568
  %j_v579 = load i32, i32* %j561
  %tmp580 = add i32 %j_v579, 1
  store i32 %tmp580, i32* %j561
  br label %while562

merge581:                                         ; preds = %while562
  %i_v584 = load i32, i32* %i558
  %tmp585 = add i32 %i_v584, 1
  store i32 %tmp585, i32* %i558
  br label %while559

merge586:                                         ; preds = %while559
  %m_r589 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat590 = load i32, i32* %m_r589
  %m_c591 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat592 = load i32, i32* %m_c591
  br i1 false, label %then594, label %else596

merge593:                                         ; preds = %else596, %then594
  %tmp597 = sub i32 %r_mat590, 1
  %tmp602 = icmp slt i32 %tmp597, 1
  br i1 %tmp602, label %then599, label %else601

then594:                                          ; preds = %merge586
  %printf595 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge593

else596:                                          ; preds = %merge586
  br label %merge593

merge598:                                         ; preds = %else601, %then599
  %a603 = load i32, i32* %a
  %tmp608 = icmp sgt i32 0, %a603
  br i1 %tmp608, label %then605, label %else607

then599:                                          ; preds = %merge593
  %printf600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge598

else601:                                          ; preds = %merge593
  br label %merge598

merge604:                                         ; preds = %else607, %then605
  %tmp609 = sub i32 %r_mat590, 1
  %tmp614 = icmp slt i32 %tmp609, %a603
  br i1 %tmp614, label %then611, label %else613

then605:                                          ; preds = %merge598
  %printf606 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge604

else607:                                          ; preds = %merge598
  br label %merge604

merge610:                                         ; preds = %else613, %then611
  br i1 false, label %then616, label %else618

then611:                                          ; preds = %merge604
  %printf612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge610

else613:                                          ; preds = %merge604
  br label %merge610

merge615:                                         ; preds = %else618, %then616
  %tmp619 = sub i32 %c_mat592, 1
  %tmp624 = icmp slt i32 %tmp619, 1
  br i1 %tmp624, label %then621, label %else623

then616:                                          ; preds = %merge610
  %printf617 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge615

else618:                                          ; preds = %merge610
  br label %merge615

merge620:                                         ; preds = %else623, %then621
  %b625 = load i32, i32* %b
  %tmp630 = icmp sgt i32 0, %b625
  br i1 %tmp630, label %then627, label %else629

then621:                                          ; preds = %merge615
  %printf622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge620

else623:                                          ; preds = %merge615
  br label %merge620

merge626:                                         ; preds = %else629, %then627
  %tmp631 = sub i32 %c_mat592, 1
  %tmp636 = icmp slt i32 %tmp631, %b625
  br i1 %tmp636, label %then633, label %else635

then627:                                          ; preds = %merge620
  %printf628 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge626

else629:                                          ; preds = %merge620
  br label %merge626

merge632:                                         ; preds = %else635, %then633
  %tmp637 = sub i32 %a603, 1
  %tmp638 = add i32 %tmp637, 1
  %m_r639 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat640 = load i32, i32* %m_r639
  %tmp645 = icmp ne i32 %tmp638, %r_mat640
  br i1 %tmp645, label %then642, label %else644

then633:                                          ; preds = %merge626
  %printf634 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge632

else635:                                          ; preds = %merge626
  br label %merge632

merge641:                                         ; preds = %else644, %then642
  %tmp646 = sub i32 %b625, 1
  %tmp647 = add i32 %tmp646, 1
  %m_r648 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %r_mat649 = load i32, i32* %m_r648
  %tmp654 = icmp ne i32 %tmp647, %r_mat649
  br i1 %tmp654, label %then651, label %else653

then642:                                          ; preds = %merge632
  %printf643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge641

else644:                                          ; preds = %merge632
  br label %merge641

merge650:                                         ; preds = %else653, %then651
  %m_mat655 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat656 = load double*, double** %m_mat655
  %m_r657 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat658 = load i32, i32* %m_r657
  %m_c659 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat660 = load i32, i32* %m_c659
  %m_mat661 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_v662 = load double*, double** %m_mat661
  %m_r663 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_v664 = load i32, i32* %m_r663
  %m_c665 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_v666 = load i32, i32* %m_c665
  %i667 = alloca i32
  store i32 1, i32* %i667
  br label %while668

then651:                                          ; preds = %merge641
  %printf652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge650

else653:                                          ; preds = %merge641
  br label %merge650

while668:                                         ; preds = %merge690, %merge650
  %i_v696 = load i32, i32* %i667
  %bool_val697 = icmp sle i32 %i_v696, %a603
  br i1 %bool_val697, label %while_body669, label %merge695

while_body669:                                    ; preds = %while668
  %j670 = alloca i32
  store i32 1, i32* %j670
  br label %while671

while671:                                         ; preds = %while_body672, %while_body669
  %j_v691 = load i32, i32* %j670
  %bool_val692 = icmp sle i32 %j_v691, %b625
  br i1 %bool_val692, label %while_body672, label %merge690

while_body672:                                    ; preds = %while671
  %j_v673 = load i32, i32* %j670
  %i_v674 = load i32, i32* %i667
  %tmp675 = mul i32 %c_mat660, %i_v674
  %index676 = add i32 %j_v673, %tmp675
  %element_ptr677 = getelementptr double, double* %mat_mat656, i32 %index676
  %j_v678 = load i32, i32* %j670
  %tmp679 = sub i32 %j_v678, 1
  %tmp680 = add i32 %tmp679, 0
  %i_v681 = load i32, i32* %i667
  %tmp682 = sub i32 %i_v681, 1
  %tmp683 = add i32 %tmp682, 0
  %tmp684 = mul i32 %c_v666, %tmp683
  %index685 = add i32 %tmp680, %tmp684
  %element_ptr686 = getelementptr double, double* %mat_v662, i32 %index685
  %tmp_element687 = load double, double* %element_ptr686
  store double %tmp_element687, double* %element_ptr677
  %j_v688 = load i32, i32* %j670
  %tmp689 = add i32 %j_v688, 1
  store i32 %tmp689, i32* %j670
  br label %while671

merge690:                                         ; preds = %while671
  %i_v693 = load i32, i32* %i667
  %tmp694 = add i32 %i_v693, 1
  store i32 %tmp694, i32* %i667
  br label %while668

merge695:                                         ; preds = %while668
  %i698 = alloca i32
  %tmp699 = load i32, i32* %i698
  store i32 0, i32* %i698
  %j700 = alloca i32
  %tmp701 = load i32, i32* %j700
  store i32 0, i32* %j700
  %i702 = load i32, i32* %i698
  %a703 = load i32, i32* %a
  %tmp704 = icmp slt i32 %i702, %a703
  %tmp705 = load i32, i32* %i698
  store i32 0, i32* %i698
  br label %while706

while706:                                         ; preds = %merge908, %merge695
  %i916 = load i32, i32* %i698
  %a917 = load i32, i32* %a
  %tmp918 = icmp slt i32 %i916, %a917
  br i1 %tmp918, label %while_body707, label %merge915

while_body707:                                    ; preds = %while706
  %j708 = load i32, i32* %j700
  %b709 = load i32, i32* %b
  %tmp710 = icmp slt i32 %j708, %b709
  %tmp711 = load i32, i32* %j700
  store i32 0, i32* %j700
  br label %while712

while712:                                         ; preds = %merge896, %while_body707
  %j909 = load i32, i32* %j700
  %b910 = load i32, i32* %b
  %tmp911 = icmp slt i32 %j909, %b910
  br i1 %tmp911, label %while_body713, label %merge908

while_body713:                                    ; preds = %while712
  %k = alloca double
  %tmp714 = load double, double* %k
  store double 0.000000e+00, double* %k
  %m_r715 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat716 = load i32, i32* %m_r715
  %m_c717 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat718 = load i32, i32* %m_c717
  %i719 = load i32, i32* %i698
  %tmp724 = icmp sgt i32 0, %i719
  br i1 %tmp724, label %then721, label %else723

merge720:                                         ; preds = %else723, %then721
  %tmp725 = sub i32 %r_mat716, 1
  %tmp730 = icmp slt i32 %tmp725, %i719
  br i1 %tmp730, label %then727, label %else729

then721:                                          ; preds = %while_body713
  %printf722 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge720

else723:                                          ; preds = %while_body713
  br label %merge720

merge726:                                         ; preds = %else729, %then727
  %i731 = load i32, i32* %i698
  %tmp732 = add i32 %i731, 2
  %tmp737 = icmp sgt i32 0, %tmp732
  br i1 %tmp737, label %then734, label %else736

then727:                                          ; preds = %merge720
  %printf728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge726

else729:                                          ; preds = %merge720
  br label %merge726

merge733:                                         ; preds = %else736, %then734
  %tmp738 = sub i32 %r_mat716, 1
  %tmp743 = icmp slt i32 %tmp738, %tmp732
  br i1 %tmp743, label %then740, label %else742

then734:                                          ; preds = %merge726
  %printf735 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge733

else736:                                          ; preds = %merge726
  br label %merge733

merge739:                                         ; preds = %else742, %then740
  %j744 = load i32, i32* %j700
  %tmp749 = icmp sgt i32 0, %j744
  br i1 %tmp749, label %then746, label %else748

then740:                                          ; preds = %merge733
  %printf741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge739

else742:                                          ; preds = %merge733
  br label %merge739

merge745:                                         ; preds = %else748, %then746
  %tmp750 = sub i32 %c_mat718, 1
  %tmp755 = icmp slt i32 %tmp750, %j744
  br i1 %tmp755, label %then752, label %else754

then746:                                          ; preds = %merge739
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge739
  br label %merge745

merge751:                                         ; preds = %else754, %then752
  %j756 = load i32, i32* %j700
  %tmp757 = add i32 %j756, 2
  %tmp762 = icmp sgt i32 0, %tmp757
  br i1 %tmp762, label %then759, label %else761

then752:                                          ; preds = %merge745
  %printf753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge751

else754:                                          ; preds = %merge745
  br label %merge751

merge758:                                         ; preds = %else761, %then759
  %tmp763 = sub i32 %c_mat718, 1
  %tmp768 = icmp slt i32 %tmp763, %tmp757
  br i1 %tmp768, label %then765, label %else767

then759:                                          ; preds = %merge751
  %printf760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge758

else761:                                          ; preds = %merge751
  br label %merge758

merge764:                                         ; preds = %else767, %then765
  %tmp769 = sub i32 %tmp732, %i719
  %tmp770 = sub i32 %tmp757, %j744
  %tmp771 = add i32 %tmp770, 1
  %tmp772 = add i32 %tmp769, 1
  %size773 = mul i32 %tmp772, %tmp771
  %system_mat774 = alloca double, i32 %size773
  %m775 = alloca %matrix_t
  %m_mat776 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  store double* %system_mat774, double** %m_mat776
  %m_r777 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  store i32 %tmp772, i32* %m_r777
  %m_c778 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  store i32 %tmp771, i32* %m_c778
  %tmp779 = sub i32 %tmp772, 1
  %tmp780 = sub i32 %tmp771, 1
  %i781 = alloca i32
  store i32 0, i32* %i781
  br label %while782

then765:                                          ; preds = %merge758
  %printf766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge764

else767:                                          ; preds = %merge758
  br label %merge764

while782:                                         ; preds = %merge794, %merge764
  %i_v800 = load i32, i32* %i781
  %bool_val801 = icmp sle i32 %i_v800, %tmp779
  br i1 %bool_val801, label %while_body783, label %merge799

while_body783:                                    ; preds = %while782
  %j784 = alloca i32
  store i32 0, i32* %j784
  br label %while785

while785:                                         ; preds = %while_body786, %while_body783
  %j_v795 = load i32, i32* %j784
  %bool_val796 = icmp sle i32 %j_v795, %tmp780
  br i1 %bool_val796, label %while_body786, label %merge794

while_body786:                                    ; preds = %while785
  %j_v787 = load i32, i32* %j784
  %i_v788 = load i32, i32* %i781
  %tmp789 = mul i32 %tmp771, %i_v788
  %index790 = add i32 %j_v787, %tmp789
  %element_ptr791 = getelementptr double, double* %system_mat774, i32 %index790
  store double 0.000000e+00, double* %element_ptr791
  %j_v792 = load i32, i32* %j784
  %tmp793 = add i32 %j_v792, 1
  store i32 %tmp793, i32* %j784
  br label %while785

merge794:                                         ; preds = %while785
  %i_v797 = load i32, i32* %i781
  %tmp798 = add i32 %i_v797, 1
  store i32 %tmp798, i32* %i781
  br label %while782

merge799:                                         ; preds = %while782
  %m_mat802 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  %mat_mat803 = load double*, double** %m_mat802
  %m_r804 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  %r_mat805 = load i32, i32* %m_r804
  %m_c806 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  %c_mat807 = load i32, i32* %m_c806
  %m_mat808 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_v809 = load double*, double** %m_mat808
  %m_r810 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_v811 = load i32, i32* %m_r810
  %m_c812 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_v813 = load i32, i32* %m_c812
  %i814 = alloca i32
  store i32 0, i32* %i814
  br label %while815

while815:                                         ; preds = %merge837, %merge799
  %i_v843 = load i32, i32* %i814
  %bool_val844 = icmp sle i32 %i_v843, %tmp769
  br i1 %bool_val844, label %while_body816, label %merge842

while_body816:                                    ; preds = %while815
  %j817 = alloca i32
  store i32 0, i32* %j817
  br label %while818

while818:                                         ; preds = %while_body819, %while_body816
  %j_v838 = load i32, i32* %j817
  %bool_val839 = icmp sle i32 %j_v838, %tmp770
  br i1 %bool_val839, label %while_body819, label %merge837

while_body819:                                    ; preds = %while818
  %j_v820 = load i32, i32* %j817
  %i_v821 = load i32, i32* %i814
  %tmp822 = mul i32 %c_mat807, %i_v821
  %index823 = add i32 %j_v820, %tmp822
  %element_ptr824 = getelementptr double, double* %mat_mat803, i32 %index823
  %j_v825 = load i32, i32* %j817
  %tmp826 = sub i32 %j_v825, 0
  %tmp827 = add i32 %tmp826, %j744
  %i_v828 = load i32, i32* %i814
  %tmp829 = sub i32 %i_v828, 0
  %tmp830 = add i32 %tmp829, %i719
  %tmp831 = mul i32 %c_v813, %tmp830
  %index832 = add i32 %tmp827, %tmp831
  %element_ptr833 = getelementptr double, double* %mat_v809, i32 %index832
  %tmp_element834 = load double, double* %element_ptr833
  store double %tmp_element834, double* %element_ptr824
  %j_v835 = load i32, i32* %j817
  %tmp836 = add i32 %j_v835, 1
  store i32 %tmp836, i32* %j817
  br label %while818

merge837:                                         ; preds = %while818
  %i_v840 = load i32, i32* %i814
  %tmp841 = add i32 %i_v840, 1
  store i32 %tmp841, i32* %i814
  br label %while815

merge842:                                         ; preds = %while815
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m775, %matrix_t* %m61)
  %v_ptr845 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v846 = load double, double* %v_ptr845
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp847 = load double, double* %k
  store double %v846, double* %k
  %k848 = load double, double* %k
  %m_r849 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat850 = load i32, i32* %m_r849
  %m_c851 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat852 = load i32, i32* %m_c851
  %i853 = load i32, i32* %i698
  %tmp858 = icmp sgt i32 0, %i853
  br i1 %tmp858, label %then855, label %else857

merge854:                                         ; preds = %else857, %then855
  %tmp859 = sub i32 %r_mat850, 1
  %tmp864 = icmp slt i32 %tmp859, %i853
  br i1 %tmp864, label %then861, label %else863

then855:                                          ; preds = %merge842
  %printf856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge854

else857:                                          ; preds = %merge842
  br label %merge854

merge860:                                         ; preds = %else863, %then861
  %i865 = load i32, i32* %i698
  %tmp870 = icmp sgt i32 0, %i865
  br i1 %tmp870, label %then867, label %else869

then861:                                          ; preds = %merge854
  %printf862 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge860

else863:                                          ; preds = %merge854
  br label %merge860

merge866:                                         ; preds = %else869, %then867
  %tmp871 = sub i32 %r_mat850, 1
  %tmp876 = icmp slt i32 %tmp871, %i865
  br i1 %tmp876, label %then873, label %else875

then867:                                          ; preds = %merge860
  %printf868 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge866

else869:                                          ; preds = %merge860
  br label %merge866

merge872:                                         ; preds = %else875, %then873
  %j877 = load i32, i32* %j700
  %tmp882 = icmp sgt i32 0, %j877
  br i1 %tmp882, label %then879, label %else881

then873:                                          ; preds = %merge866
  %printf874 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge872

else875:                                          ; preds = %merge866
  br label %merge872

merge878:                                         ; preds = %else881, %then879
  %tmp883 = sub i32 %c_mat852, 1
  %tmp888 = icmp slt i32 %tmp883, %j877
  br i1 %tmp888, label %then885, label %else887

then879:                                          ; preds = %merge872
  %printf880 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge878

else881:                                          ; preds = %merge872
  br label %merge878

merge884:                                         ; preds = %else887, %then885
  %j889 = load i32, i32* %j700
  %tmp894 = icmp sgt i32 0, %j889
  br i1 %tmp894, label %then891, label %else893

then885:                                          ; preds = %merge878
  %printf886 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge884

else887:                                          ; preds = %merge878
  br label %merge884

merge890:                                         ; preds = %else893, %then891
  %tmp895 = sub i32 %c_mat852, 1
  %tmp900 = icmp slt i32 %tmp895, %j889
  br i1 %tmp900, label %then897, label %else899

then891:                                          ; preds = %merge884
  %printf892 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge890

else893:                                          ; preds = %merge884
  br label %merge890

merge896:                                         ; preds = %else899, %then897
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat901 = load double*, double** %mat
  %tmp902 = mul i32 %c_mat852, %i853
  %index903 = add i32 %j877, %tmp902
  %element_ptr904 = getelementptr double, double* %mat901, i32 %index903
  store double %k848, double* %element_ptr904
  %j905 = load i32, i32* %j700
  %tmp906 = add i32 %j905, 1
  %tmp907 = load i32, i32* %j700
  store i32 %tmp906, i32* %j700
  br label %while712

then897:                                          ; preds = %merge890
  %printf898 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge896

else899:                                          ; preds = %merge890
  br label %merge896

merge908:                                         ; preds = %while712
  %i912 = load i32, i32* %i698
  %tmp913 = add i32 %i912, 1
  %tmp914 = load i32, i32* %i698
  store i32 %tmp913, i32* %i698
  br label %while706

merge915:                                         ; preds = %while706
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r919 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat920 = load i32, i32* %m_r919
  %m_c921 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat922 = load i32, i32* %m_c921
  %size923 = mul i32 %r_mat920, %c_mat922
  %mallocsize = mul i32 %size923, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall924 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat925 = bitcast i8* %malloccall924 to double*
  %malloccall926 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m927 = bitcast i8* %malloccall926 to %matrix_t*
  %m_mat928 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  store double* %system_mat925, double** %m_mat928
  %m_r929 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  store i32 %r_mat920, i32* %m_r929
  %m_c930 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  store i32 %c_mat922, i32* %m_c930
  %tmp931 = sub i32 %r_mat920, 1
  %tmp932 = sub i32 %c_mat922, 1
  %i933 = alloca i32
  store i32 0, i32* %i933
  br label %while934

while934:                                         ; preds = %merge946, %merge915
  %i_v952 = load i32, i32* %i933
  %bool_val953 = icmp sle i32 %i_v952, %tmp931
  br i1 %bool_val953, label %while_body935, label %merge951

while_body935:                                    ; preds = %while934
  %j936 = alloca i32
  store i32 0, i32* %j936
  br label %while937

while937:                                         ; preds = %while_body938, %while_body935
  %j_v947 = load i32, i32* %j936
  %bool_val948 = icmp sle i32 %j_v947, %tmp932
  br i1 %bool_val948, label %while_body938, label %merge946

while_body938:                                    ; preds = %while937
  %j_v939 = load i32, i32* %j936
  %i_v940 = load i32, i32* %i933
  %tmp941 = mul i32 %c_mat922, %i_v940
  %index942 = add i32 %j_v939, %tmp941
  %element_ptr943 = getelementptr double, double* %system_mat925, i32 %index942
  store double 0.000000e+00, double* %element_ptr943
  %j_v944 = load i32, i32* %j936
  %tmp945 = add i32 %j_v944, 1
  store i32 %tmp945, i32* %j936
  br label %while937

merge946:                                         ; preds = %while937
  %i_v949 = load i32, i32* %i933
  %tmp950 = add i32 %i_v949, 1
  store i32 %tmp950, i32* %i933
  br label %while934

merge951:                                         ; preds = %while934
  %tmp954 = sub i32 %c_mat922, 1
  %tmp955 = sub i32 %r_mat920, 1
  %m_mat956 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  %mat_mat957 = load double*, double** %m_mat956
  %m_r958 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  %r_mat959 = load i32, i32* %m_r958
  %m_c960 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  %c_mat961 = load i32, i32* %m_c960
  %m_mat962 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_v963 = load double*, double** %m_mat962
  %m_r964 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_v965 = load i32, i32* %m_r964
  %m_c966 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_v967 = load i32, i32* %m_c966
  %i968 = alloca i32
  store i32 0, i32* %i968
  br label %while969

while969:                                         ; preds = %merge991, %merge951
  %i_v997 = load i32, i32* %i968
  %bool_val998 = icmp sle i32 %i_v997, %tmp955
  br i1 %bool_val998, label %while_body970, label %merge996

while_body970:                                    ; preds = %while969
  %j971 = alloca i32
  store i32 0, i32* %j971
  br label %while972

while972:                                         ; preds = %while_body973, %while_body970
  %j_v992 = load i32, i32* %j971
  %bool_val993 = icmp sle i32 %j_v992, %tmp954
  br i1 %bool_val993, label %while_body973, label %merge991

while_body973:                                    ; preds = %while972
  %j_v974 = load i32, i32* %j971
  %i_v975 = load i32, i32* %i968
  %tmp976 = mul i32 %c_mat961, %i_v975
  %index977 = add i32 %j_v974, %tmp976
  %element_ptr978 = getelementptr double, double* %mat_mat957, i32 %index977
  %j_v979 = load i32, i32* %j971
  %tmp980 = sub i32 %j_v979, 0
  %tmp981 = add i32 %tmp980, 0
  %i_v982 = load i32, i32* %i968
  %tmp983 = sub i32 %i_v982, 0
  %tmp984 = add i32 %tmp983, 0
  %tmp985 = mul i32 %c_v967, %tmp984
  %index986 = add i32 %tmp981, %tmp985
  %element_ptr987 = getelementptr double, double* %mat_v963, i32 %index986
  %tmp_element988 = load double, double* %element_ptr987
  store double %tmp_element988, double* %element_ptr978
  %j_v989 = load i32, i32* %j971
  %tmp990 = add i32 %j_v989, 1
  store i32 %tmp990, i32* %j971
  br label %while972

merge991:                                         ; preds = %while972
  %i_v994 = load i32, i32* %i968
  %tmp995 = add i32 %i_v994, 1
  store i32 %tmp995, i32* %i968
  br label %while969

merge996:                                         ; preds = %while969
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m927, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp999 = alloca %return_t.0
  ret %return_t.0* %tmp999
}

define void @f(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_mat55 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat56 = load double*, double** %m_mat55
  %m_r57 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat58 = load i32, i32* %m_r57
  %m_c59 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat60 = load i32, i32* %m_c59
  %tmp61 = sub i32 %r_mat58, 1
  %tmp62 = sub i32 %c_mat60, 1
  %i63 = alloca i32
  store i32 0, i32* %i63
  br label %while64

while64:                                          ; preds = %merge78, %merge52
  %i_v85 = load i32, i32* %i63
  %bool_val86 = icmp sle i32 %i_v85, %tmp61
  br i1 %bool_val86, label %while_body65, label %merge84

while_body65:                                     ; preds = %while64
  %j66 = alloca i32
  store i32 0, i32* %j66
  br label %while67

while67:                                          ; preds = %while_body68, %while_body65
  %j_v79 = load i32, i32* %j66
  %bool_val80 = icmp sle i32 %j_v79, %tmp62
  br i1 %bool_val80, label %while_body68, label %merge78

while_body68:                                     ; preds = %while67
  %j_v69 = load i32, i32* %j66
  %i_v70 = load i32, i32* %i63
  %tmp71 = mul i32 %c_mat60, %i_v70
  %index72 = add i32 %j_v69, %tmp71
  %element_ptr73 = getelementptr double, double* %mat_mat56, i32 %index72
  %tmp_element74 = load double, double* %element_ptr73
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element74)
  %printf75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v76 = load i32, i32* %j66
  %tmp77 = add i32 %j_v76, 1
  store i32 %tmp77, i32* %j66
  br label %while67

merge78:                                          ; preds = %while67
  %printf81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v82 = load i32, i32* %i63
  %tmp83 = add i32 %i_v82, 1
  store i32 %tmp83, i32* %i63
  br label %while64

merge84:                                          ; preds = %while64
  %printf87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  ret void
}
