; ModuleID = 'MicroC'
source_filename = "MicroC"

%matrix_t = type { double*, i32, i32 }
%matrix_size_t = type { i32, i32 }
%zero_matrix_t = type { %matrix_t* }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"

define i32 @main() {
entry:
  %system_mat = alloca double, i32 12
  %element_ptr = getelementptr double, double* %system_mat, i32 0
  store double 1.000000e+00, double* %element_ptr
  %element_ptr1 = getelementptr double, double* %system_mat, i32 1
  store double 2.000000e+00, double* %element_ptr1
  %element_ptr2 = getelementptr double, double* %system_mat, i32 2
  store double 3.000000e+00, double* %element_ptr2
  %element_ptr3 = getelementptr double, double* %system_mat, i32 3
  store double 4.000000e+00, double* %element_ptr3
  %element_ptr4 = getelementptr double, double* %system_mat, i32 4
  store double 5.000000e+00, double* %element_ptr4
  %element_ptr5 = getelementptr double, double* %system_mat, i32 5
  store double 6.000000e+00, double* %element_ptr5
  %element_ptr6 = getelementptr double, double* %system_mat, i32 6
  store double 7.000000e+00, double* %element_ptr6
  %element_ptr7 = getelementptr double, double* %system_mat, i32 7
  store double 8.000000e+00, double* %element_ptr7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 8
  store double 9.000000e+00, double* %element_ptr8
  %element_ptr9 = getelementptr double, double* %system_mat, i32 9
  store double 1.000000e+01, double* %element_ptr9
  %element_ptr10 = getelementptr double, double* %system_mat, i32 10
  store double 1.100000e+01, double* %element_ptr10
  %element_ptr11 = getelementptr double, double* %system_mat, i32 11
  store double 1.200000e+01, double* %element_ptr11
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 3, i32* %m_c
  %m_r12 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat = load i32, i32* %m_r12
  %m_c13 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat = load i32, i32* %m_c13
  %size = mul i32 %r_mat, %c_mat
  %system_mat14 = alloca double, i32 %size
  %m15 = alloca %matrix_t
  %m_mat16 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  store double* %system_mat14, double** %m_mat16
  %m_r17 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  store i32 %r_mat, i32* %m_r17
  %m_c18 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  store i32 %c_mat, i32* %m_c18
  %tmp = sub i32 %r_mat, 1
  %tmp19 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v30 = load i32, i32* %i
  %bool_val31 = icmp sle i32 %i_v30, %tmp
  br i1 %bool_val31, label %while_body, label %merge29

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while20

while20:                                          ; preds = %while_body21, %while_body
  %j_v26 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v26, %tmp19
  br i1 %bool_val, label %while_body21, label %merge

while_body21:                                     ; preds = %while20
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp22 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp22
  %element_ptr23 = getelementptr double, double* %system_mat14, i32 %index
  store double 0.000000e+00, double* %element_ptr23
  %j_v24 = load i32, i32* %j
  %tmp25 = add i32 %j_v24, 1
  store i32 %tmp25, i32* %j
  br label %while20

merge:                                            ; preds = %while20
  %i_v27 = load i32, i32* %i
  %tmp28 = add i32 %i_v27, 1
  store i32 %tmp28, i32* %i
  br label %while

merge29:                                          ; preds = %while
  %tmp32 = sub i32 %c_mat, 1
  %tmp33 = sub i32 %r_mat, 1
  %m_mat34 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat34
  %m_r35 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat36 = load i32, i32* %m_r35
  %m_c37 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat38 = load i32, i32* %m_c37
  %m_mat39 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v = load double*, double** %m_mat39
  %m_r40 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v = load i32, i32* %m_r40
  %m_c41 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v = load i32, i32* %m_c41
  %i42 = alloca i32
  store i32 0, i32* %i42
  br label %while43

while43:                                          ; preds = %merge64, %merge29
  %i_v70 = load i32, i32* %i42
  %bool_val71 = icmp sle i32 %i_v70, %tmp33
  br i1 %bool_val71, label %while_body44, label %merge69

while_body44:                                     ; preds = %while43
  %j45 = alloca i32
  store i32 0, i32* %j45
  br label %while46

while46:                                          ; preds = %while_body47, %while_body44
  %j_v65 = load i32, i32* %j45
  %bool_val66 = icmp sle i32 %j_v65, %tmp32
  br i1 %bool_val66, label %while_body47, label %merge64

while_body47:                                     ; preds = %while46
  %j_v48 = load i32, i32* %j45
  %i_v49 = load i32, i32* %i42
  %tmp50 = mul i32 %c_mat38, %i_v49
  %index51 = add i32 %j_v48, %tmp50
  %element_ptr52 = getelementptr double, double* %mat_mat, i32 %index51
  %j_v53 = load i32, i32* %j45
  %tmp54 = sub i32 %j_v53, 0
  %tmp55 = add i32 %tmp54, 0
  %i_v56 = load i32, i32* %i42
  %tmp57 = sub i32 %i_v56, 0
  %tmp58 = add i32 %tmp57, 0
  %tmp59 = mul i32 %c_v, %tmp58
  %index60 = add i32 %tmp55, %tmp59
  %element_ptr61 = getelementptr double, double* %mat_v, i32 %index60
  %tmp_element = load double, double* %element_ptr61
  store double %tmp_element, double* %element_ptr52
  %j_v62 = load i32, i32* %j45
  %tmp63 = add i32 %j_v62, 1
  store i32 %tmp63, i32* %j45
  br label %while46

merge64:                                          ; preds = %while46
  %i_v67 = load i32, i32* %i42
  %tmp68 = add i32 %i_v67, 1
  store i32 %tmp68, i32* %i42
  br label %while43

merge69:                                          ; preds = %while43
  %m_mat72 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat73 = load double*, double** %m_mat72
  %m_r74 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat75 = load i32, i32* %m_r74
  %tmp76 = sub i32 %r_mat75, 1
  %m_c77 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat78 = load i32, i32* %m_c77
  %tmp79 = sub i32 %c_mat78, 1
  %m_mat80 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v81 = load double*, double** %m_mat80
  %result = alloca i1
  store i1 true, i1* %result
  %i82 = alloca i32
  store i32 0, i32* %i82
  br label %while83

while83:                                          ; preds = %merge104, %merge69
  %i_v110 = load i32, i32* %i82
  %bool_val111 = icmp sle i32 %i_v110, %tmp76
  br i1 %bool_val111, label %while_body84, label %merge109

while_body84:                                     ; preds = %while83
  %j85 = alloca i32
  store i32 0, i32* %j85
  br label %while86

while86:                                          ; preds = %merge100, %while_body84
  %j_v105 = load i32, i32* %j85
  %bool_val106 = icmp sle i32 %j_v105, %tmp79
  br i1 %bool_val106, label %while_body87, label %merge104

while_body87:                                     ; preds = %while86
  %j_v88 = load i32, i32* %j85
  %i_v89 = load i32, i32* %i82
  %tmp90 = mul i32 %c_mat78, %i_v89
  %index91 = add i32 %j_v88, %tmp90
  %element_ptr92 = getelementptr double, double* %mat_mat73, i32 %index91
  %tmp_element93 = load double, double* %element_ptr92
  %j_v94 = load i32, i32* %j85
  %i_v95 = load i32, i32* %i82
  %tmp96 = mul i32 %c_mat78, %i_v95
  %index97 = add i32 %j_v94, %tmp96
  %element_ptr98 = getelementptr double, double* %mat_v81, i32 %index97
  %tmp_element99 = load double, double* %element_ptr98
  %tmp101 = fcmp one double %tmp_element93, %tmp_element99
  br i1 %tmp101, label %then, label %else

merge100:                                         ; preds = %else, %then
  %j_v102 = load i32, i32* %j85
  %tmp103 = add i32 %j_v102, 1
  store i32 %tmp103, i32* %j85
  br label %while86

then:                                             ; preds = %while_body87
  store i1 false, i1* %result
  br label %merge100

else:                                             ; preds = %while_body87
  br label %merge100

merge104:                                         ; preds = %while86
  %i_v107 = load i32, i32* %i82
  %tmp108 = add i32 %i_v107, 1
  store i32 %tmp108, i32* %i82
  br label %while83

merge109:                                         ; preds = %while83
  %result112 = load i1, i1* %result
  %tmp117 = icmp ne i1 true, %result112
  br i1 %tmp117, label %then114, label %else115

merge113:                                         ; preds = %else115, %then114
  %printf118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %result119 = alloca i1
  %m_mat120 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat121 = load double*, double** %m_mat120
  %m_r122 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat123 = load i32, i32* %m_r122
  %tmp124 = sub i32 %r_mat123, 1
  %m_c125 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat126 = load i32, i32* %m_c125
  %tmp127 = sub i32 %c_mat126, 1
  %m_mat128 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v129 = load double*, double** %m_mat128
  %result130 = alloca i1
  store i1 true, i1* %result130
  %i131 = alloca i32
  store i32 0, i32* %i131
  br label %while132

then114:                                          ; preds = %merge109
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge113

else115:                                          ; preds = %merge109
  %printf116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge113

while132:                                         ; preds = %merge155, %merge113
  %i_v161 = load i32, i32* %i131
  %bool_val162 = icmp sle i32 %i_v161, %tmp124
  br i1 %bool_val162, label %while_body133, label %merge160

while_body133:                                    ; preds = %while132
  %j134 = alloca i32
  store i32 0, i32* %j134
  br label %while135

while135:                                         ; preds = %merge149, %while_body133
  %j_v156 = load i32, i32* %j134
  %bool_val157 = icmp sle i32 %j_v156, %tmp127
  br i1 %bool_val157, label %while_body136, label %merge155

while_body136:                                    ; preds = %while135
  %j_v137 = load i32, i32* %j134
  %i_v138 = load i32, i32* %i131
  %tmp139 = mul i32 %c_mat126, %i_v138
  %index140 = add i32 %j_v137, %tmp139
  %element_ptr141 = getelementptr double, double* %mat_mat121, i32 %index140
  %tmp_element142 = load double, double* %element_ptr141
  %j_v143 = load i32, i32* %j134
  %i_v144 = load i32, i32* %i131
  %tmp145 = mul i32 %c_mat126, %i_v144
  %index146 = add i32 %j_v143, %tmp145
  %element_ptr147 = getelementptr double, double* %mat_v129, i32 %index146
  %tmp_element148 = load double, double* %element_ptr147
  %tmp152 = fcmp one double %tmp_element142, %tmp_element148
  br i1 %tmp152, label %then150, label %else151

merge149:                                         ; preds = %else151, %then150
  %j_v153 = load i32, i32* %j134
  %tmp154 = add i32 %j_v153, 1
  store i32 %tmp154, i32* %j134
  br label %while135

then150:                                          ; preds = %while_body136
  store i1 false, i1* %result130
  br label %merge149

else151:                                          ; preds = %while_body136
  br label %merge149

merge155:                                         ; preds = %while135
  %i_v158 = load i32, i32* %i131
  %tmp159 = add i32 %i_v158, 1
  store i32 %tmp159, i32* %i131
  br label %while132

merge160:                                         ; preds = %while132
  %result163 = load i1, i1* %result130
  %tmp167 = icmp ne i1 %result163, true
  br i1 %tmp167, label %then165, label %else166

merge164:                                         ; preds = %else166, %then165
  %result168 = load i1, i1* %result119
  %tmp174 = icmp ne i1 true, %result168
  br i1 %tmp174, label %then170, label %else172

then165:                                          ; preds = %merge160
  store i1 true, i1* %result119
  br label %merge164

else166:                                          ; preds = %merge160
  store i1 false, i1* %result119
  br label %merge164

merge169:                                         ; preds = %else172, %then170
  %printf175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf176 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat177 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat178 = load double*, double** %m_mat177
  %m_r179 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat180 = load i32, i32* %m_r179
  %tmp181 = sub i32 %r_mat180, 1
  %m_c182 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat183 = load i32, i32* %m_c182
  %tmp184 = sub i32 %c_mat183, 1
  %size185 = mul i32 %r_mat180, %c_mat183
  %system_mat186 = alloca double, i32 %size185
  %m187 = alloca %matrix_t
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 0
  store double* %system_mat186, double** %m_mat188
  %m_r189 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 1
  store i32 %r_mat180, i32* %m_r189
  %m_c190 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 2
  store i32 %c_mat183, i32* %m_c190
  %tmp191 = sub i32 %r_mat180, 1
  %tmp192 = sub i32 %c_mat183, 1
  %i193 = alloca i32
  store i32 0, i32* %i193
  br label %while194

then170:                                          ; preds = %merge164
  %printf171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge169

else172:                                          ; preds = %merge164
  %printf173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge169

while194:                                         ; preds = %merge206, %merge169
  %i_v212 = load i32, i32* %i193
  %bool_val213 = icmp sle i32 %i_v212, %tmp191
  br i1 %bool_val213, label %while_body195, label %merge211

while_body195:                                    ; preds = %while194
  %j196 = alloca i32
  store i32 0, i32* %j196
  br label %while197

while197:                                         ; preds = %while_body198, %while_body195
  %j_v207 = load i32, i32* %j196
  %bool_val208 = icmp sle i32 %j_v207, %tmp192
  br i1 %bool_val208, label %while_body198, label %merge206

while_body198:                                    ; preds = %while197
  %j_v199 = load i32, i32* %j196
  %i_v200 = load i32, i32* %i193
  %tmp201 = mul i32 %c_mat183, %i_v200
  %index202 = add i32 %j_v199, %tmp201
  %element_ptr203 = getelementptr double, double* %system_mat186, i32 %index202
  store double 0.000000e+00, double* %element_ptr203
  %j_v204 = load i32, i32* %j196
  %tmp205 = add i32 %j_v204, 1
  store i32 %tmp205, i32* %j196
  br label %while197

merge206:                                         ; preds = %while197
  %i_v209 = load i32, i32* %i193
  %tmp210 = add i32 %i_v209, 1
  store i32 %tmp210, i32* %i193
  br label %while194

merge211:                                         ; preds = %while194
  %m_mat214 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 0
  %mat_mat215 = load double*, double** %m_mat214
  %i216 = alloca i32
  store i32 0, i32* %i216
  br label %while217

while217:                                         ; preds = %merge236, %merge211
  %i_v242 = load i32, i32* %i216
  %bool_val243 = icmp sle i32 %i_v242, %tmp181
  br i1 %bool_val243, label %while_body218, label %merge241

while_body218:                                    ; preds = %while217
  %j219 = alloca i32
  store i32 0, i32* %j219
  br label %while220

while220:                                         ; preds = %while_body221, %while_body218
  %j_v237 = load i32, i32* %j219
  %bool_val238 = icmp sle i32 %j_v237, %tmp184
  br i1 %bool_val238, label %while_body221, label %merge236

while_body221:                                    ; preds = %while220
  %j_v222 = load i32, i32* %j219
  %i_v223 = load i32, i32* %i216
  %tmp224 = mul i32 %c_mat183, %i_v223
  %index225 = add i32 %j_v222, %tmp224
  %element_ptr226 = getelementptr double, double* %mat_mat178, i32 %index225
  %tmp_element227 = load double, double* %element_ptr226
  %j_v228 = load i32, i32* %j219
  %i_v229 = load i32, i32* %i216
  %tmp230 = mul i32 %c_mat183, %i_v229
  %index231 = add i32 %j_v228, %tmp230
  %element_ptr232 = getelementptr double, double* %mat_mat215, i32 %index231
  %tmp_element233 = fdiv double %tmp_element227, 1.500000e+00
  store double %tmp_element233, double* %element_ptr232
  %j_v234 = load i32, i32* %j219
  %tmp235 = add i32 %j_v234, 1
  store i32 %tmp235, i32* %j219
  br label %while220

merge236:                                         ; preds = %while220
  %i_v239 = load i32, i32* %i216
  %tmp240 = add i32 %i_v239, 1
  store i32 %tmp240, i32* %i216
  br label %while217

merge241:                                         ; preds = %while217
  %m_r244 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 1
  %r_mat245 = load i32, i32* %m_r244
  %m_c246 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 2
  %c_mat247 = load i32, i32* %m_c246
  %size248 = mul i32 %r_mat245, %c_mat247
  %system_mat249 = alloca double, i32 %size248
  %m250 = alloca %matrix_t
  %m_mat251 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 0
  store double* %system_mat249, double** %m_mat251
  %m_r252 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 1
  store i32 %r_mat245, i32* %m_r252
  %m_c253 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 2
  store i32 %c_mat247, i32* %m_c253
  %tmp254 = sub i32 %r_mat245, 1
  %tmp255 = sub i32 %c_mat247, 1
  %i256 = alloca i32
  store i32 0, i32* %i256
  br label %while257

while257:                                         ; preds = %merge269, %merge241
  %i_v275 = load i32, i32* %i256
  %bool_val276 = icmp sle i32 %i_v275, %tmp254
  br i1 %bool_val276, label %while_body258, label %merge274

while_body258:                                    ; preds = %while257
  %j259 = alloca i32
  store i32 0, i32* %j259
  br label %while260

while260:                                         ; preds = %while_body261, %while_body258
  %j_v270 = load i32, i32* %j259
  %bool_val271 = icmp sle i32 %j_v270, %tmp255
  br i1 %bool_val271, label %while_body261, label %merge269

while_body261:                                    ; preds = %while260
  %j_v262 = load i32, i32* %j259
  %i_v263 = load i32, i32* %i256
  %tmp264 = mul i32 %c_mat247, %i_v263
  %index265 = add i32 %j_v262, %tmp264
  %element_ptr266 = getelementptr double, double* %system_mat249, i32 %index265
  store double 0.000000e+00, double* %element_ptr266
  %j_v267 = load i32, i32* %j259
  %tmp268 = add i32 %j_v267, 1
  store i32 %tmp268, i32* %j259
  br label %while260

merge269:                                         ; preds = %while260
  %i_v272 = load i32, i32* %i256
  %tmp273 = add i32 %i_v272, 1
  store i32 %tmp273, i32* %i256
  br label %while257

merge274:                                         ; preds = %while257
  %tmp277 = sub i32 %c_mat247, 1
  %tmp278 = sub i32 %r_mat245, 1
  %m_mat279 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 0
  %mat_mat280 = load double*, double** %m_mat279
  %m_r281 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 1
  %r_mat282 = load i32, i32* %m_r281
  %m_c283 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 2
  %c_mat284 = load i32, i32* %m_c283
  %m_mat285 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 0
  %mat_v286 = load double*, double** %m_mat285
  %m_r287 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 1
  %r_v288 = load i32, i32* %m_r287
  %m_c289 = getelementptr inbounds %matrix_t, %matrix_t* %m187, i32 0, i32 2
  %c_v290 = load i32, i32* %m_c289
  %i291 = alloca i32
  store i32 0, i32* %i291
  br label %while292

while292:                                         ; preds = %merge314, %merge274
  %i_v320 = load i32, i32* %i291
  %bool_val321 = icmp sle i32 %i_v320, %tmp278
  br i1 %bool_val321, label %while_body293, label %merge319

while_body293:                                    ; preds = %while292
  %j294 = alloca i32
  store i32 0, i32* %j294
  br label %while295

while295:                                         ; preds = %while_body296, %while_body293
  %j_v315 = load i32, i32* %j294
  %bool_val316 = icmp sle i32 %j_v315, %tmp277
  br i1 %bool_val316, label %while_body296, label %merge314

while_body296:                                    ; preds = %while295
  %j_v297 = load i32, i32* %j294
  %i_v298 = load i32, i32* %i291
  %tmp299 = mul i32 %c_mat284, %i_v298
  %index300 = add i32 %j_v297, %tmp299
  %element_ptr301 = getelementptr double, double* %mat_mat280, i32 %index300
  %j_v302 = load i32, i32* %j294
  %tmp303 = sub i32 %j_v302, 0
  %tmp304 = add i32 %tmp303, 0
  %i_v305 = load i32, i32* %i291
  %tmp306 = sub i32 %i_v305, 0
  %tmp307 = add i32 %tmp306, 0
  %tmp308 = mul i32 %c_v290, %tmp307
  %index309 = add i32 %tmp304, %tmp308
  %element_ptr310 = getelementptr double, double* %mat_v286, i32 %index309
  %tmp_element311 = load double, double* %element_ptr310
  store double %tmp_element311, double* %element_ptr301
  %j_v312 = load i32, i32* %j294
  %tmp313 = add i32 %j_v312, 1
  store i32 %tmp313, i32* %j294
  br label %while295

merge314:                                         ; preds = %while295
  %i_v317 = load i32, i32* %i291
  %tmp318 = add i32 %i_v317, 1
  store i32 %tmp318, i32* %i291
  br label %while292

merge319:                                         ; preds = %while292
  %result322 = alloca i1
  %m_mat323 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 0
  %mat_mat324 = load double*, double** %m_mat323
  %m_r325 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 1
  %r_mat326 = load i32, i32* %m_r325
  %tmp327 = sub i32 %r_mat326, 1
  %m_c328 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 2
  %c_mat329 = load i32, i32* %m_c328
  %tmp330 = sub i32 %c_mat329, 1
  %m_mat331 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v332 = load double*, double** %m_mat331
  %result333 = alloca i1
  store i1 true, i1* %result333
  %i334 = alloca i32
  store i32 0, i32* %i334
  br label %while335

while335:                                         ; preds = %merge358, %merge319
  %i_v364 = load i32, i32* %i334
  %bool_val365 = icmp sle i32 %i_v364, %tmp327
  br i1 %bool_val365, label %while_body336, label %merge363

while_body336:                                    ; preds = %while335
  %j337 = alloca i32
  store i32 0, i32* %j337
  br label %while338

while338:                                         ; preds = %merge352, %while_body336
  %j_v359 = load i32, i32* %j337
  %bool_val360 = icmp sle i32 %j_v359, %tmp330
  br i1 %bool_val360, label %while_body339, label %merge358

while_body339:                                    ; preds = %while338
  %j_v340 = load i32, i32* %j337
  %i_v341 = load i32, i32* %i334
  %tmp342 = mul i32 %c_mat329, %i_v341
  %index343 = add i32 %j_v340, %tmp342
  %element_ptr344 = getelementptr double, double* %mat_mat324, i32 %index343
  %tmp_element345 = load double, double* %element_ptr344
  %j_v346 = load i32, i32* %j337
  %i_v347 = load i32, i32* %i334
  %tmp348 = mul i32 %c_mat329, %i_v347
  %index349 = add i32 %j_v346, %tmp348
  %element_ptr350 = getelementptr double, double* %mat_v332, i32 %index349
  %tmp_element351 = load double, double* %element_ptr350
  %tmp355 = fcmp one double %tmp_element345, %tmp_element351
  br i1 %tmp355, label %then353, label %else354

merge352:                                         ; preds = %else354, %then353
  %j_v356 = load i32, i32* %j337
  %tmp357 = add i32 %j_v356, 1
  store i32 %tmp357, i32* %j337
  br label %while338

then353:                                          ; preds = %while_body339
  store i1 false, i1* %result333
  br label %merge352

else354:                                          ; preds = %while_body339
  br label %merge352

merge358:                                         ; preds = %while338
  %i_v361 = load i32, i32* %i334
  %tmp362 = add i32 %i_v361, 1
  store i32 %tmp362, i32* %i334
  br label %while335

merge363:                                         ; preds = %while335
  %result366 = load i1, i1* %result333
  %tmp370 = icmp ne i1 %result366, true
  br i1 %tmp370, label %then368, label %else369

merge367:                                         ; preds = %else369, %then368
  %result371 = load i1, i1* %result322
  %tmp377 = icmp ne i1 true, %result371
  br i1 %tmp377, label %then373, label %else375

then368:                                          ; preds = %merge363
  store i1 true, i1* %result322
  br label %merge367

else369:                                          ; preds = %merge363
  store i1 false, i1* %result322
  br label %merge367

merge372:                                         ; preds = %else375, %then373
  %printf378 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_mat379 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 0
  %mat_mat380 = load double*, double** %m_mat379
  %m_r381 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 1
  %r_mat382 = load i32, i32* %m_r381
  %tmp383 = sub i32 %r_mat382, 1
  %m_c384 = getelementptr inbounds %matrix_t, %matrix_t* %m250, i32 0, i32 2
  %c_mat385 = load i32, i32* %m_c384
  %tmp386 = sub i32 %c_mat385, 1
  %m_mat387 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v388 = load double*, double** %m_mat387
  %result389 = alloca i1
  store i1 true, i1* %result389
  %i390 = alloca i32
  store i32 0, i32* %i390
  br label %while391

then373:                                          ; preds = %merge367
  %printf374 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge372

else375:                                          ; preds = %merge367
  %printf376 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge372

while391:                                         ; preds = %merge414, %merge372
  %i_v420 = load i32, i32* %i390
  %bool_val421 = icmp sle i32 %i_v420, %tmp383
  br i1 %bool_val421, label %while_body392, label %merge419

while_body392:                                    ; preds = %while391
  %j393 = alloca i32
  store i32 0, i32* %j393
  br label %while394

while394:                                         ; preds = %merge408, %while_body392
  %j_v415 = load i32, i32* %j393
  %bool_val416 = icmp sle i32 %j_v415, %tmp386
  br i1 %bool_val416, label %while_body395, label %merge414

while_body395:                                    ; preds = %while394
  %j_v396 = load i32, i32* %j393
  %i_v397 = load i32, i32* %i390
  %tmp398 = mul i32 %c_mat385, %i_v397
  %index399 = add i32 %j_v396, %tmp398
  %element_ptr400 = getelementptr double, double* %mat_mat380, i32 %index399
  %tmp_element401 = load double, double* %element_ptr400
  %j_v402 = load i32, i32* %j393
  %i_v403 = load i32, i32* %i390
  %tmp404 = mul i32 %c_mat385, %i_v403
  %index405 = add i32 %j_v402, %tmp404
  %element_ptr406 = getelementptr double, double* %mat_v388, i32 %index405
  %tmp_element407 = load double, double* %element_ptr406
  %tmp411 = fcmp one double %tmp_element401, %tmp_element407
  br i1 %tmp411, label %then409, label %else410

merge408:                                         ; preds = %else410, %then409
  %j_v412 = load i32, i32* %j393
  %tmp413 = add i32 %j_v412, 1
  store i32 %tmp413, i32* %j393
  br label %while394

then409:                                          ; preds = %while_body395
  store i1 false, i1* %result389
  br label %merge408

else410:                                          ; preds = %while_body395
  br label %merge408

merge414:                                         ; preds = %while394
  %i_v417 = load i32, i32* %i390
  %tmp418 = add i32 %i_v417, 1
  store i32 %tmp418, i32* %i390
  br label %while391

merge419:                                         ; preds = %while391
  %result422 = load i1, i1* %result389
  %tmp428 = icmp ne i1 true, %result422
  br i1 %tmp428, label %then424, label %else426

merge423:                                         ; preds = %else426, %then424
  %printf429 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf430 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat431 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat432 = load double*, double** %m_mat431
  %m_r433 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat434 = load i32, i32* %m_r433
  %tmp435 = sub i32 %r_mat434, 1
  %m_c436 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat437 = load i32, i32* %m_c436
  %tmp438 = sub i32 %c_mat437, 1
  %size439 = mul i32 %r_mat434, %c_mat437
  %system_mat440 = alloca double, i32 %size439
  %m441 = alloca %matrix_t
  %m_mat442 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 0
  store double* %system_mat440, double** %m_mat442
  %m_r443 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 1
  store i32 %r_mat434, i32* %m_r443
  %m_c444 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 2
  store i32 %c_mat437, i32* %m_c444
  %tmp445 = sub i32 %r_mat434, 1
  %tmp446 = sub i32 %c_mat437, 1
  %i447 = alloca i32
  store i32 0, i32* %i447
  br label %while448

then424:                                          ; preds = %merge419
  %printf425 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge423

else426:                                          ; preds = %merge419
  %printf427 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge423

while448:                                         ; preds = %merge460, %merge423
  %i_v466 = load i32, i32* %i447
  %bool_val467 = icmp sle i32 %i_v466, %tmp445
  br i1 %bool_val467, label %while_body449, label %merge465

while_body449:                                    ; preds = %while448
  %j450 = alloca i32
  store i32 0, i32* %j450
  br label %while451

while451:                                         ; preds = %while_body452, %while_body449
  %j_v461 = load i32, i32* %j450
  %bool_val462 = icmp sle i32 %j_v461, %tmp446
  br i1 %bool_val462, label %while_body452, label %merge460

while_body452:                                    ; preds = %while451
  %j_v453 = load i32, i32* %j450
  %i_v454 = load i32, i32* %i447
  %tmp455 = mul i32 %c_mat437, %i_v454
  %index456 = add i32 %j_v453, %tmp455
  %element_ptr457 = getelementptr double, double* %system_mat440, i32 %index456
  store double 0.000000e+00, double* %element_ptr457
  %j_v458 = load i32, i32* %j450
  %tmp459 = add i32 %j_v458, 1
  store i32 %tmp459, i32* %j450
  br label %while451

merge460:                                         ; preds = %while451
  %i_v463 = load i32, i32* %i447
  %tmp464 = add i32 %i_v463, 1
  store i32 %tmp464, i32* %i447
  br label %while448

merge465:                                         ; preds = %while448
  %m_mat468 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 0
  %mat_mat469 = load double*, double** %m_mat468
  %i470 = alloca i32
  store i32 0, i32* %i470
  br label %while471

while471:                                         ; preds = %merge490, %merge465
  %i_v496 = load i32, i32* %i470
  %bool_val497 = icmp sle i32 %i_v496, %tmp435
  br i1 %bool_val497, label %while_body472, label %merge495

while_body472:                                    ; preds = %while471
  %j473 = alloca i32
  store i32 0, i32* %j473
  br label %while474

while474:                                         ; preds = %while_body475, %while_body472
  %j_v491 = load i32, i32* %j473
  %bool_val492 = icmp sle i32 %j_v491, %tmp438
  br i1 %bool_val492, label %while_body475, label %merge490

while_body475:                                    ; preds = %while474
  %j_v476 = load i32, i32* %j473
  %i_v477 = load i32, i32* %i470
  %tmp478 = mul i32 %c_mat437, %i_v477
  %index479 = add i32 %j_v476, %tmp478
  %element_ptr480 = getelementptr double, double* %mat_mat432, i32 %index479
  %tmp_element481 = load double, double* %element_ptr480
  %j_v482 = load i32, i32* %j473
  %i_v483 = load i32, i32* %i470
  %tmp484 = mul i32 %c_mat437, %i_v483
  %index485 = add i32 %j_v482, %tmp484
  %element_ptr486 = getelementptr double, double* %mat_mat469, i32 %index485
  %tmp_element487 = fdiv double %tmp_element481, 1.000000e+00
  store double %tmp_element487, double* %element_ptr486
  %j_v488 = load i32, i32* %j473
  %tmp489 = add i32 %j_v488, 1
  store i32 %tmp489, i32* %j473
  br label %while474

merge490:                                         ; preds = %while474
  %i_v493 = load i32, i32* %i470
  %tmp494 = add i32 %i_v493, 1
  store i32 %tmp494, i32* %i470
  br label %while471

merge495:                                         ; preds = %while471
  %m_r498 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 1
  %r_mat499 = load i32, i32* %m_r498
  %m_c500 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 2
  %c_mat501 = load i32, i32* %m_c500
  %size502 = mul i32 %r_mat499, %c_mat501
  %system_mat503 = alloca double, i32 %size502
  %m504 = alloca %matrix_t
  %m_mat505 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 0
  store double* %system_mat503, double** %m_mat505
  %m_r506 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 1
  store i32 %r_mat499, i32* %m_r506
  %m_c507 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 2
  store i32 %c_mat501, i32* %m_c507
  %tmp508 = sub i32 %r_mat499, 1
  %tmp509 = sub i32 %c_mat501, 1
  %i510 = alloca i32
  store i32 0, i32* %i510
  br label %while511

while511:                                         ; preds = %merge523, %merge495
  %i_v529 = load i32, i32* %i510
  %bool_val530 = icmp sle i32 %i_v529, %tmp508
  br i1 %bool_val530, label %while_body512, label %merge528

while_body512:                                    ; preds = %while511
  %j513 = alloca i32
  store i32 0, i32* %j513
  br label %while514

while514:                                         ; preds = %while_body515, %while_body512
  %j_v524 = load i32, i32* %j513
  %bool_val525 = icmp sle i32 %j_v524, %tmp509
  br i1 %bool_val525, label %while_body515, label %merge523

while_body515:                                    ; preds = %while514
  %j_v516 = load i32, i32* %j513
  %i_v517 = load i32, i32* %i510
  %tmp518 = mul i32 %c_mat501, %i_v517
  %index519 = add i32 %j_v516, %tmp518
  %element_ptr520 = getelementptr double, double* %system_mat503, i32 %index519
  store double 0.000000e+00, double* %element_ptr520
  %j_v521 = load i32, i32* %j513
  %tmp522 = add i32 %j_v521, 1
  store i32 %tmp522, i32* %j513
  br label %while514

merge523:                                         ; preds = %while514
  %i_v526 = load i32, i32* %i510
  %tmp527 = add i32 %i_v526, 1
  store i32 %tmp527, i32* %i510
  br label %while511

merge528:                                         ; preds = %while511
  %tmp531 = sub i32 %c_mat501, 1
  %tmp532 = sub i32 %r_mat499, 1
  %m_mat533 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 0
  %mat_mat534 = load double*, double** %m_mat533
  %m_r535 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 1
  %r_mat536 = load i32, i32* %m_r535
  %m_c537 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 2
  %c_mat538 = load i32, i32* %m_c537
  %m_mat539 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 0
  %mat_v540 = load double*, double** %m_mat539
  %m_r541 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 1
  %r_v542 = load i32, i32* %m_r541
  %m_c543 = getelementptr inbounds %matrix_t, %matrix_t* %m441, i32 0, i32 2
  %c_v544 = load i32, i32* %m_c543
  %i545 = alloca i32
  store i32 0, i32* %i545
  br label %while546

while546:                                         ; preds = %merge568, %merge528
  %i_v574 = load i32, i32* %i545
  %bool_val575 = icmp sle i32 %i_v574, %tmp532
  br i1 %bool_val575, label %while_body547, label %merge573

while_body547:                                    ; preds = %while546
  %j548 = alloca i32
  store i32 0, i32* %j548
  br label %while549

while549:                                         ; preds = %while_body550, %while_body547
  %j_v569 = load i32, i32* %j548
  %bool_val570 = icmp sle i32 %j_v569, %tmp531
  br i1 %bool_val570, label %while_body550, label %merge568

while_body550:                                    ; preds = %while549
  %j_v551 = load i32, i32* %j548
  %i_v552 = load i32, i32* %i545
  %tmp553 = mul i32 %c_mat538, %i_v552
  %index554 = add i32 %j_v551, %tmp553
  %element_ptr555 = getelementptr double, double* %mat_mat534, i32 %index554
  %j_v556 = load i32, i32* %j548
  %tmp557 = sub i32 %j_v556, 0
  %tmp558 = add i32 %tmp557, 0
  %i_v559 = load i32, i32* %i545
  %tmp560 = sub i32 %i_v559, 0
  %tmp561 = add i32 %tmp560, 0
  %tmp562 = mul i32 %c_v544, %tmp561
  %index563 = add i32 %tmp558, %tmp562
  %element_ptr564 = getelementptr double, double* %mat_v540, i32 %index563
  %tmp_element565 = load double, double* %element_ptr564
  store double %tmp_element565, double* %element_ptr555
  %j_v566 = load i32, i32* %j548
  %tmp567 = add i32 %j_v566, 1
  store i32 %tmp567, i32* %j548
  br label %while549

merge568:                                         ; preds = %while549
  %i_v571 = load i32, i32* %i545
  %tmp572 = add i32 %i_v571, 1
  store i32 %tmp572, i32* %i545
  br label %while546

merge573:                                         ; preds = %while546
  %m_mat576 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 0
  %mat_mat577 = load double*, double** %m_mat576
  %m_r578 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 1
  %r_mat579 = load i32, i32* %m_r578
  %tmp580 = sub i32 %r_mat579, 1
  %m_c581 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 2
  %c_mat582 = load i32, i32* %m_c581
  %tmp583 = sub i32 %c_mat582, 1
  %m_mat584 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v585 = load double*, double** %m_mat584
  %result586 = alloca i1
  store i1 true, i1* %result586
  %i587 = alloca i32
  store i32 0, i32* %i587
  br label %while588

while588:                                         ; preds = %merge611, %merge573
  %i_v617 = load i32, i32* %i587
  %bool_val618 = icmp sle i32 %i_v617, %tmp580
  br i1 %bool_val618, label %while_body589, label %merge616

while_body589:                                    ; preds = %while588
  %j590 = alloca i32
  store i32 0, i32* %j590
  br label %while591

while591:                                         ; preds = %merge605, %while_body589
  %j_v612 = load i32, i32* %j590
  %bool_val613 = icmp sle i32 %j_v612, %tmp583
  br i1 %bool_val613, label %while_body592, label %merge611

while_body592:                                    ; preds = %while591
  %j_v593 = load i32, i32* %j590
  %i_v594 = load i32, i32* %i587
  %tmp595 = mul i32 %c_mat582, %i_v594
  %index596 = add i32 %j_v593, %tmp595
  %element_ptr597 = getelementptr double, double* %mat_mat577, i32 %index596
  %tmp_element598 = load double, double* %element_ptr597
  %j_v599 = load i32, i32* %j590
  %i_v600 = load i32, i32* %i587
  %tmp601 = mul i32 %c_mat582, %i_v600
  %index602 = add i32 %j_v599, %tmp601
  %element_ptr603 = getelementptr double, double* %mat_v585, i32 %index602
  %tmp_element604 = load double, double* %element_ptr603
  %tmp608 = fcmp one double %tmp_element598, %tmp_element604
  br i1 %tmp608, label %then606, label %else607

merge605:                                         ; preds = %else607, %then606
  %j_v609 = load i32, i32* %j590
  %tmp610 = add i32 %j_v609, 1
  store i32 %tmp610, i32* %j590
  br label %while591

then606:                                          ; preds = %while_body592
  store i1 false, i1* %result586
  br label %merge605

else607:                                          ; preds = %while_body592
  br label %merge605

merge611:                                         ; preds = %while591
  %i_v614 = load i32, i32* %i587
  %tmp615 = add i32 %i_v614, 1
  store i32 %tmp615, i32* %i587
  br label %while588

merge616:                                         ; preds = %while588
  %result619 = load i1, i1* %result586
  %tmp625 = icmp ne i1 true, %result619
  br i1 %tmp625, label %then621, label %else623

merge620:                                         ; preds = %else623, %then621
  %printf626 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %result627 = alloca i1
  %m_mat628 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 0
  %mat_mat629 = load double*, double** %m_mat628
  %m_r630 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 1
  %r_mat631 = load i32, i32* %m_r630
  %tmp632 = sub i32 %r_mat631, 1
  %m_c633 = getelementptr inbounds %matrix_t, %matrix_t* %m504, i32 0, i32 2
  %c_mat634 = load i32, i32* %m_c633
  %tmp635 = sub i32 %c_mat634, 1
  %m_mat636 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v637 = load double*, double** %m_mat636
  %result638 = alloca i1
  store i1 true, i1* %result638
  %i639 = alloca i32
  store i32 0, i32* %i639
  br label %while640

then621:                                          ; preds = %merge616
  %printf622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge620

else623:                                          ; preds = %merge616
  %printf624 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge620

while640:                                         ; preds = %merge663, %merge620
  %i_v669 = load i32, i32* %i639
  %bool_val670 = icmp sle i32 %i_v669, %tmp632
  br i1 %bool_val670, label %while_body641, label %merge668

while_body641:                                    ; preds = %while640
  %j642 = alloca i32
  store i32 0, i32* %j642
  br label %while643

while643:                                         ; preds = %merge657, %while_body641
  %j_v664 = load i32, i32* %j642
  %bool_val665 = icmp sle i32 %j_v664, %tmp635
  br i1 %bool_val665, label %while_body644, label %merge663

while_body644:                                    ; preds = %while643
  %j_v645 = load i32, i32* %j642
  %i_v646 = load i32, i32* %i639
  %tmp647 = mul i32 %c_mat634, %i_v646
  %index648 = add i32 %j_v645, %tmp647
  %element_ptr649 = getelementptr double, double* %mat_mat629, i32 %index648
  %tmp_element650 = load double, double* %element_ptr649
  %j_v651 = load i32, i32* %j642
  %i_v652 = load i32, i32* %i639
  %tmp653 = mul i32 %c_mat634, %i_v652
  %index654 = add i32 %j_v651, %tmp653
  %element_ptr655 = getelementptr double, double* %mat_v637, i32 %index654
  %tmp_element656 = load double, double* %element_ptr655
  %tmp660 = fcmp one double %tmp_element650, %tmp_element656
  br i1 %tmp660, label %then658, label %else659

merge657:                                         ; preds = %else659, %then658
  %j_v661 = load i32, i32* %j642
  %tmp662 = add i32 %j_v661, 1
  store i32 %tmp662, i32* %j642
  br label %while643

then658:                                          ; preds = %while_body644
  store i1 false, i1* %result638
  br label %merge657

else659:                                          ; preds = %while_body644
  br label %merge657

merge663:                                         ; preds = %while643
  %i_v666 = load i32, i32* %i639
  %tmp667 = add i32 %i_v666, 1
  store i32 %tmp667, i32* %i639
  br label %while640

merge668:                                         ; preds = %while640
  %result671 = load i1, i1* %result638
  %tmp675 = icmp ne i1 %result671, true
  br i1 %tmp675, label %then673, label %else674

merge672:                                         ; preds = %else674, %then673
  %result676 = load i1, i1* %result627
  %tmp682 = icmp ne i1 true, %result676
  br i1 %tmp682, label %then678, label %else680

then673:                                          ; preds = %merge668
  store i1 true, i1* %result627
  br label %merge672

else674:                                          ; preds = %merge668
  store i1 false, i1* %result627
  br label %merge672

merge677:                                         ; preds = %else680, %then678
  %printf683 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf684 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat685 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat686 = load double*, double** %m_mat685
  %m_r687 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat688 = load i32, i32* %m_r687
  %tmp689 = sub i32 %r_mat688, 1
  %m_c690 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat691 = load i32, i32* %m_c690
  %tmp692 = sub i32 %c_mat691, 1
  %size693 = mul i32 %r_mat688, %c_mat691
  %system_mat694 = alloca double, i32 %size693
  %m695 = alloca %matrix_t
  %m_mat696 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 0
  store double* %system_mat694, double** %m_mat696
  %m_r697 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 1
  store i32 %r_mat688, i32* %m_r697
  %m_c698 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 2
  store i32 %c_mat691, i32* %m_c698
  %tmp699 = sub i32 %r_mat688, 1
  %tmp700 = sub i32 %c_mat691, 1
  %i701 = alloca i32
  store i32 0, i32* %i701
  br label %while702

then678:                                          ; preds = %merge672
  %printf679 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge677

else680:                                          ; preds = %merge672
  %printf681 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge677

while702:                                         ; preds = %merge714, %merge677
  %i_v720 = load i32, i32* %i701
  %bool_val721 = icmp sle i32 %i_v720, %tmp699
  br i1 %bool_val721, label %while_body703, label %merge719

while_body703:                                    ; preds = %while702
  %j704 = alloca i32
  store i32 0, i32* %j704
  br label %while705

while705:                                         ; preds = %while_body706, %while_body703
  %j_v715 = load i32, i32* %j704
  %bool_val716 = icmp sle i32 %j_v715, %tmp700
  br i1 %bool_val716, label %while_body706, label %merge714

while_body706:                                    ; preds = %while705
  %j_v707 = load i32, i32* %j704
  %i_v708 = load i32, i32* %i701
  %tmp709 = mul i32 %c_mat691, %i_v708
  %index710 = add i32 %j_v707, %tmp709
  %element_ptr711 = getelementptr double, double* %system_mat694, i32 %index710
  store double 0.000000e+00, double* %element_ptr711
  %j_v712 = load i32, i32* %j704
  %tmp713 = add i32 %j_v712, 1
  store i32 %tmp713, i32* %j704
  br label %while705

merge714:                                         ; preds = %while705
  %i_v717 = load i32, i32* %i701
  %tmp718 = add i32 %i_v717, 1
  store i32 %tmp718, i32* %i701
  br label %while702

merge719:                                         ; preds = %while702
  %m_mat722 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 0
  %mat_mat723 = load double*, double** %m_mat722
  %i724 = alloca i32
  store i32 0, i32* %i724
  br label %while725

while725:                                         ; preds = %merge744, %merge719
  %i_v750 = load i32, i32* %i724
  %bool_val751 = icmp sle i32 %i_v750, %tmp689
  br i1 %bool_val751, label %while_body726, label %merge749

while_body726:                                    ; preds = %while725
  %j727 = alloca i32
  store i32 0, i32* %j727
  br label %while728

while728:                                         ; preds = %while_body729, %while_body726
  %j_v745 = load i32, i32* %j727
  %bool_val746 = icmp sle i32 %j_v745, %tmp692
  br i1 %bool_val746, label %while_body729, label %merge744

while_body729:                                    ; preds = %while728
  %j_v730 = load i32, i32* %j727
  %i_v731 = load i32, i32* %i724
  %tmp732 = mul i32 %c_mat691, %i_v731
  %index733 = add i32 %j_v730, %tmp732
  %element_ptr734 = getelementptr double, double* %mat_mat686, i32 %index733
  %tmp_element735 = load double, double* %element_ptr734
  %j_v736 = load i32, i32* %j727
  %i_v737 = load i32, i32* %i724
  %tmp738 = mul i32 %c_mat691, %i_v737
  %index739 = add i32 %j_v736, %tmp738
  %element_ptr740 = getelementptr double, double* %mat_mat723, i32 %index739
  %tmp_element741 = fmul double %tmp_element735, 1.001000e+00
  store double %tmp_element741, double* %element_ptr740
  %j_v742 = load i32, i32* %j727
  %tmp743 = add i32 %j_v742, 1
  store i32 %tmp743, i32* %j727
  br label %while728

merge744:                                         ; preds = %while728
  %i_v747 = load i32, i32* %i724
  %tmp748 = add i32 %i_v747, 1
  store i32 %tmp748, i32* %i724
  br label %while725

merge749:                                         ; preds = %while725
  %m_r752 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 1
  %r_mat753 = load i32, i32* %m_r752
  %m_c754 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 2
  %c_mat755 = load i32, i32* %m_c754
  %size756 = mul i32 %r_mat753, %c_mat755
  %system_mat757 = alloca double, i32 %size756
  %m758 = alloca %matrix_t
  %m_mat759 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 0
  store double* %system_mat757, double** %m_mat759
  %m_r760 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 1
  store i32 %r_mat753, i32* %m_r760
  %m_c761 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 2
  store i32 %c_mat755, i32* %m_c761
  %tmp762 = sub i32 %r_mat753, 1
  %tmp763 = sub i32 %c_mat755, 1
  %i764 = alloca i32
  store i32 0, i32* %i764
  br label %while765

while765:                                         ; preds = %merge777, %merge749
  %i_v783 = load i32, i32* %i764
  %bool_val784 = icmp sle i32 %i_v783, %tmp762
  br i1 %bool_val784, label %while_body766, label %merge782

while_body766:                                    ; preds = %while765
  %j767 = alloca i32
  store i32 0, i32* %j767
  br label %while768

while768:                                         ; preds = %while_body769, %while_body766
  %j_v778 = load i32, i32* %j767
  %bool_val779 = icmp sle i32 %j_v778, %tmp763
  br i1 %bool_val779, label %while_body769, label %merge777

while_body769:                                    ; preds = %while768
  %j_v770 = load i32, i32* %j767
  %i_v771 = load i32, i32* %i764
  %tmp772 = mul i32 %c_mat755, %i_v771
  %index773 = add i32 %j_v770, %tmp772
  %element_ptr774 = getelementptr double, double* %system_mat757, i32 %index773
  store double 0.000000e+00, double* %element_ptr774
  %j_v775 = load i32, i32* %j767
  %tmp776 = add i32 %j_v775, 1
  store i32 %tmp776, i32* %j767
  br label %while768

merge777:                                         ; preds = %while768
  %i_v780 = load i32, i32* %i764
  %tmp781 = add i32 %i_v780, 1
  store i32 %tmp781, i32* %i764
  br label %while765

merge782:                                         ; preds = %while765
  %tmp785 = sub i32 %c_mat755, 1
  %tmp786 = sub i32 %r_mat753, 1
  %m_mat787 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 0
  %mat_mat788 = load double*, double** %m_mat787
  %m_r789 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 1
  %r_mat790 = load i32, i32* %m_r789
  %m_c791 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 2
  %c_mat792 = load i32, i32* %m_c791
  %m_mat793 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 0
  %mat_v794 = load double*, double** %m_mat793
  %m_r795 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 1
  %r_v796 = load i32, i32* %m_r795
  %m_c797 = getelementptr inbounds %matrix_t, %matrix_t* %m695, i32 0, i32 2
  %c_v798 = load i32, i32* %m_c797
  %i799 = alloca i32
  store i32 0, i32* %i799
  br label %while800

while800:                                         ; preds = %merge822, %merge782
  %i_v828 = load i32, i32* %i799
  %bool_val829 = icmp sle i32 %i_v828, %tmp786
  br i1 %bool_val829, label %while_body801, label %merge827

while_body801:                                    ; preds = %while800
  %j802 = alloca i32
  store i32 0, i32* %j802
  br label %while803

while803:                                         ; preds = %while_body804, %while_body801
  %j_v823 = load i32, i32* %j802
  %bool_val824 = icmp sle i32 %j_v823, %tmp785
  br i1 %bool_val824, label %while_body804, label %merge822

while_body804:                                    ; preds = %while803
  %j_v805 = load i32, i32* %j802
  %i_v806 = load i32, i32* %i799
  %tmp807 = mul i32 %c_mat792, %i_v806
  %index808 = add i32 %j_v805, %tmp807
  %element_ptr809 = getelementptr double, double* %mat_mat788, i32 %index808
  %j_v810 = load i32, i32* %j802
  %tmp811 = sub i32 %j_v810, 0
  %tmp812 = add i32 %tmp811, 0
  %i_v813 = load i32, i32* %i799
  %tmp814 = sub i32 %i_v813, 0
  %tmp815 = add i32 %tmp814, 0
  %tmp816 = mul i32 %c_v798, %tmp815
  %index817 = add i32 %tmp812, %tmp816
  %element_ptr818 = getelementptr double, double* %mat_v794, i32 %index817
  %tmp_element819 = load double, double* %element_ptr818
  store double %tmp_element819, double* %element_ptr809
  %j_v820 = load i32, i32* %j802
  %tmp821 = add i32 %j_v820, 1
  store i32 %tmp821, i32* %j802
  br label %while803

merge822:                                         ; preds = %while803
  %i_v825 = load i32, i32* %i799
  %tmp826 = add i32 %i_v825, 1
  store i32 %tmp826, i32* %i799
  br label %while800

merge827:                                         ; preds = %while800
  %result830 = alloca i1
  %m_mat831 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 0
  %mat_mat832 = load double*, double** %m_mat831
  %m_r833 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 1
  %r_mat834 = load i32, i32* %m_r833
  %tmp835 = sub i32 %r_mat834, 1
  %m_c836 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 2
  %c_mat837 = load i32, i32* %m_c836
  %tmp838 = sub i32 %c_mat837, 1
  %m_mat839 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v840 = load double*, double** %m_mat839
  %result841 = alloca i1
  store i1 true, i1* %result841
  %i842 = alloca i32
  store i32 0, i32* %i842
  br label %while843

while843:                                         ; preds = %merge866, %merge827
  %i_v872 = load i32, i32* %i842
  %bool_val873 = icmp sle i32 %i_v872, %tmp835
  br i1 %bool_val873, label %while_body844, label %merge871

while_body844:                                    ; preds = %while843
  %j845 = alloca i32
  store i32 0, i32* %j845
  br label %while846

while846:                                         ; preds = %merge860, %while_body844
  %j_v867 = load i32, i32* %j845
  %bool_val868 = icmp sle i32 %j_v867, %tmp838
  br i1 %bool_val868, label %while_body847, label %merge866

while_body847:                                    ; preds = %while846
  %j_v848 = load i32, i32* %j845
  %i_v849 = load i32, i32* %i842
  %tmp850 = mul i32 %c_mat837, %i_v849
  %index851 = add i32 %j_v848, %tmp850
  %element_ptr852 = getelementptr double, double* %mat_mat832, i32 %index851
  %tmp_element853 = load double, double* %element_ptr852
  %j_v854 = load i32, i32* %j845
  %i_v855 = load i32, i32* %i842
  %tmp856 = mul i32 %c_mat837, %i_v855
  %index857 = add i32 %j_v854, %tmp856
  %element_ptr858 = getelementptr double, double* %mat_v840, i32 %index857
  %tmp_element859 = load double, double* %element_ptr858
  %tmp863 = fcmp one double %tmp_element853, %tmp_element859
  br i1 %tmp863, label %then861, label %else862

merge860:                                         ; preds = %else862, %then861
  %j_v864 = load i32, i32* %j845
  %tmp865 = add i32 %j_v864, 1
  store i32 %tmp865, i32* %j845
  br label %while846

then861:                                          ; preds = %while_body847
  store i1 false, i1* %result841
  br label %merge860

else862:                                          ; preds = %while_body847
  br label %merge860

merge866:                                         ; preds = %while846
  %i_v869 = load i32, i32* %i842
  %tmp870 = add i32 %i_v869, 1
  store i32 %tmp870, i32* %i842
  br label %while843

merge871:                                         ; preds = %while843
  %result874 = load i1, i1* %result841
  %tmp878 = icmp ne i1 %result874, true
  br i1 %tmp878, label %then876, label %else877

merge875:                                         ; preds = %else877, %then876
  %result879 = load i1, i1* %result830
  %tmp885 = icmp ne i1 true, %result879
  br i1 %tmp885, label %then881, label %else883

then876:                                          ; preds = %merge871
  store i1 true, i1* %result830
  br label %merge875

else877:                                          ; preds = %merge871
  store i1 false, i1* %result830
  br label %merge875

merge880:                                         ; preds = %else883, %then881
  %printf886 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %m_mat887 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 0
  %mat_mat888 = load double*, double** %m_mat887
  %m_r889 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 1
  %r_mat890 = load i32, i32* %m_r889
  %tmp891 = sub i32 %r_mat890, 1
  %m_c892 = getelementptr inbounds %matrix_t, %matrix_t* %m758, i32 0, i32 2
  %c_mat893 = load i32, i32* %m_c892
  %tmp894 = sub i32 %c_mat893, 1
  %m_mat895 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v896 = load double*, double** %m_mat895
  %result897 = alloca i1
  store i1 true, i1* %result897
  %i898 = alloca i32
  store i32 0, i32* %i898
  br label %while899

then881:                                          ; preds = %merge875
  %printf882 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge880

else883:                                          ; preds = %merge875
  %printf884 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge880

while899:                                         ; preds = %merge922, %merge880
  %i_v928 = load i32, i32* %i898
  %bool_val929 = icmp sle i32 %i_v928, %tmp891
  br i1 %bool_val929, label %while_body900, label %merge927

while_body900:                                    ; preds = %while899
  %j901 = alloca i32
  store i32 0, i32* %j901
  br label %while902

while902:                                         ; preds = %merge916, %while_body900
  %j_v923 = load i32, i32* %j901
  %bool_val924 = icmp sle i32 %j_v923, %tmp894
  br i1 %bool_val924, label %while_body903, label %merge922

while_body903:                                    ; preds = %while902
  %j_v904 = load i32, i32* %j901
  %i_v905 = load i32, i32* %i898
  %tmp906 = mul i32 %c_mat893, %i_v905
  %index907 = add i32 %j_v904, %tmp906
  %element_ptr908 = getelementptr double, double* %mat_mat888, i32 %index907
  %tmp_element909 = load double, double* %element_ptr908
  %j_v910 = load i32, i32* %j901
  %i_v911 = load i32, i32* %i898
  %tmp912 = mul i32 %c_mat893, %i_v911
  %index913 = add i32 %j_v910, %tmp912
  %element_ptr914 = getelementptr double, double* %mat_v896, i32 %index913
  %tmp_element915 = load double, double* %element_ptr914
  %tmp919 = fcmp one double %tmp_element909, %tmp_element915
  br i1 %tmp919, label %then917, label %else918

merge916:                                         ; preds = %else918, %then917
  %j_v920 = load i32, i32* %j901
  %tmp921 = add i32 %j_v920, 1
  store i32 %tmp921, i32* %j901
  br label %while902

then917:                                          ; preds = %while_body903
  store i1 false, i1* %result897
  br label %merge916

else918:                                          ; preds = %while_body903
  br label %merge916

merge922:                                         ; preds = %while902
  %i_v925 = load i32, i32* %i898
  %tmp926 = add i32 %i_v925, 1
  store i32 %tmp926, i32* %i898
  br label %while899

merge927:                                         ; preds = %while899
  %result930 = load i1, i1* %result897
  %tmp936 = icmp ne i1 true, %result930
  br i1 %tmp936, label %then932, label %else934

merge931:                                         ; preds = %else934, %then932
  %printf937 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf938 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %m_mat939 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat940 = load double*, double** %m_mat939
  %m_r941 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat942 = load i32, i32* %m_r941
  %tmp943 = sub i32 %r_mat942, 1
  %m_c944 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat945 = load i32, i32* %m_c944
  %tmp946 = sub i32 %c_mat945, 1
  %size947 = mul i32 %r_mat942, %c_mat945
  %system_mat948 = alloca double, i32 %size947
  %m949 = alloca %matrix_t
  %m_mat950 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 0
  store double* %system_mat948, double** %m_mat950
  %m_r951 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 1
  store i32 %r_mat942, i32* %m_r951
  %m_c952 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 2
  store i32 %c_mat945, i32* %m_c952
  %tmp953 = sub i32 %r_mat942, 1
  %tmp954 = sub i32 %c_mat945, 1
  %i955 = alloca i32
  store i32 0, i32* %i955
  br label %while956

then932:                                          ; preds = %merge927
  %printf933 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge931

else934:                                          ; preds = %merge927
  %printf935 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge931

while956:                                         ; preds = %merge968, %merge931
  %i_v974 = load i32, i32* %i955
  %bool_val975 = icmp sle i32 %i_v974, %tmp953
  br i1 %bool_val975, label %while_body957, label %merge973

while_body957:                                    ; preds = %while956
  %j958 = alloca i32
  store i32 0, i32* %j958
  br label %while959

while959:                                         ; preds = %while_body960, %while_body957
  %j_v969 = load i32, i32* %j958
  %bool_val970 = icmp sle i32 %j_v969, %tmp954
  br i1 %bool_val970, label %while_body960, label %merge968

while_body960:                                    ; preds = %while959
  %j_v961 = load i32, i32* %j958
  %i_v962 = load i32, i32* %i955
  %tmp963 = mul i32 %c_mat945, %i_v962
  %index964 = add i32 %j_v961, %tmp963
  %element_ptr965 = getelementptr double, double* %system_mat948, i32 %index964
  store double 0.000000e+00, double* %element_ptr965
  %j_v966 = load i32, i32* %j958
  %tmp967 = add i32 %j_v966, 1
  store i32 %tmp967, i32* %j958
  br label %while959

merge968:                                         ; preds = %while959
  %i_v971 = load i32, i32* %i955
  %tmp972 = add i32 %i_v971, 1
  store i32 %tmp972, i32* %i955
  br label %while956

merge973:                                         ; preds = %while956
  %m_mat976 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 0
  %mat_mat977 = load double*, double** %m_mat976
  %i978 = alloca i32
  store i32 0, i32* %i978
  br label %while979

while979:                                         ; preds = %merge998, %merge973
  %i_v1004 = load i32, i32* %i978
  %bool_val1005 = icmp sle i32 %i_v1004, %tmp943
  br i1 %bool_val1005, label %while_body980, label %merge1003

while_body980:                                    ; preds = %while979
  %j981 = alloca i32
  store i32 0, i32* %j981
  br label %while982

while982:                                         ; preds = %while_body983, %while_body980
  %j_v999 = load i32, i32* %j981
  %bool_val1000 = icmp sle i32 %j_v999, %tmp946
  br i1 %bool_val1000, label %while_body983, label %merge998

while_body983:                                    ; preds = %while982
  %j_v984 = load i32, i32* %j981
  %i_v985 = load i32, i32* %i978
  %tmp986 = mul i32 %c_mat945, %i_v985
  %index987 = add i32 %j_v984, %tmp986
  %element_ptr988 = getelementptr double, double* %mat_mat940, i32 %index987
  %tmp_element989 = load double, double* %element_ptr988
  %j_v990 = load i32, i32* %j981
  %i_v991 = load i32, i32* %i978
  %tmp992 = mul i32 %c_mat945, %i_v991
  %index993 = add i32 %j_v990, %tmp992
  %element_ptr994 = getelementptr double, double* %mat_mat977, i32 %index993
  %tmp_element995 = fadd double %tmp_element989, 0.000000e+00
  store double %tmp_element995, double* %element_ptr994
  %j_v996 = load i32, i32* %j981
  %tmp997 = add i32 %j_v996, 1
  store i32 %tmp997, i32* %j981
  br label %while982

merge998:                                         ; preds = %while982
  %i_v1001 = load i32, i32* %i978
  %tmp1002 = add i32 %i_v1001, 1
  store i32 %tmp1002, i32* %i978
  br label %while979

merge1003:                                        ; preds = %while979
  %m_r1006 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 1
  %r_mat1007 = load i32, i32* %m_r1006
  %m_c1008 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 2
  %c_mat1009 = load i32, i32* %m_c1008
  %size1010 = mul i32 %r_mat1007, %c_mat1009
  %system_mat1011 = alloca double, i32 %size1010
  %m1012 = alloca %matrix_t
  %m_mat1013 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 0
  store double* %system_mat1011, double** %m_mat1013
  %m_r1014 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 1
  store i32 %r_mat1007, i32* %m_r1014
  %m_c1015 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 2
  store i32 %c_mat1009, i32* %m_c1015
  %tmp1016 = sub i32 %r_mat1007, 1
  %tmp1017 = sub i32 %c_mat1009, 1
  %i1018 = alloca i32
  store i32 0, i32* %i1018
  br label %while1019

while1019:                                        ; preds = %merge1031, %merge1003
  %i_v1037 = load i32, i32* %i1018
  %bool_val1038 = icmp sle i32 %i_v1037, %tmp1016
  br i1 %bool_val1038, label %while_body1020, label %merge1036

while_body1020:                                   ; preds = %while1019
  %j1021 = alloca i32
  store i32 0, i32* %j1021
  br label %while1022

while1022:                                        ; preds = %while_body1023, %while_body1020
  %j_v1032 = load i32, i32* %j1021
  %bool_val1033 = icmp sle i32 %j_v1032, %tmp1017
  br i1 %bool_val1033, label %while_body1023, label %merge1031

while_body1023:                                   ; preds = %while1022
  %j_v1024 = load i32, i32* %j1021
  %i_v1025 = load i32, i32* %i1018
  %tmp1026 = mul i32 %c_mat1009, %i_v1025
  %index1027 = add i32 %j_v1024, %tmp1026
  %element_ptr1028 = getelementptr double, double* %system_mat1011, i32 %index1027
  store double 0.000000e+00, double* %element_ptr1028
  %j_v1029 = load i32, i32* %j1021
  %tmp1030 = add i32 %j_v1029, 1
  store i32 %tmp1030, i32* %j1021
  br label %while1022

merge1031:                                        ; preds = %while1022
  %i_v1034 = load i32, i32* %i1018
  %tmp1035 = add i32 %i_v1034, 1
  store i32 %tmp1035, i32* %i1018
  br label %while1019

merge1036:                                        ; preds = %while1019
  %tmp1039 = sub i32 %c_mat1009, 1
  %tmp1040 = sub i32 %r_mat1007, 1
  %m_mat1041 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 0
  %mat_mat1042 = load double*, double** %m_mat1041
  %m_r1043 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 1
  %r_mat1044 = load i32, i32* %m_r1043
  %m_c1045 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 2
  %c_mat1046 = load i32, i32* %m_c1045
  %m_mat1047 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 0
  %mat_v1048 = load double*, double** %m_mat1047
  %m_r1049 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 1
  %r_v1050 = load i32, i32* %m_r1049
  %m_c1051 = getelementptr inbounds %matrix_t, %matrix_t* %m949, i32 0, i32 2
  %c_v1052 = load i32, i32* %m_c1051
  %i1053 = alloca i32
  store i32 0, i32* %i1053
  br label %while1054

while1054:                                        ; preds = %merge1076, %merge1036
  %i_v1082 = load i32, i32* %i1053
  %bool_val1083 = icmp sle i32 %i_v1082, %tmp1040
  br i1 %bool_val1083, label %while_body1055, label %merge1081

while_body1055:                                   ; preds = %while1054
  %j1056 = alloca i32
  store i32 0, i32* %j1056
  br label %while1057

while1057:                                        ; preds = %while_body1058, %while_body1055
  %j_v1077 = load i32, i32* %j1056
  %bool_val1078 = icmp sle i32 %j_v1077, %tmp1039
  br i1 %bool_val1078, label %while_body1058, label %merge1076

while_body1058:                                   ; preds = %while1057
  %j_v1059 = load i32, i32* %j1056
  %i_v1060 = load i32, i32* %i1053
  %tmp1061 = mul i32 %c_mat1046, %i_v1060
  %index1062 = add i32 %j_v1059, %tmp1061
  %element_ptr1063 = getelementptr double, double* %mat_mat1042, i32 %index1062
  %j_v1064 = load i32, i32* %j1056
  %tmp1065 = sub i32 %j_v1064, 0
  %tmp1066 = add i32 %tmp1065, 0
  %i_v1067 = load i32, i32* %i1053
  %tmp1068 = sub i32 %i_v1067, 0
  %tmp1069 = add i32 %tmp1068, 0
  %tmp1070 = mul i32 %c_v1052, %tmp1069
  %index1071 = add i32 %tmp1066, %tmp1070
  %element_ptr1072 = getelementptr double, double* %mat_v1048, i32 %index1071
  %tmp_element1073 = load double, double* %element_ptr1072
  store double %tmp_element1073, double* %element_ptr1063
  %j_v1074 = load i32, i32* %j1056
  %tmp1075 = add i32 %j_v1074, 1
  store i32 %tmp1075, i32* %j1056
  br label %while1057

merge1076:                                        ; preds = %while1057
  %i_v1079 = load i32, i32* %i1053
  %tmp1080 = add i32 %i_v1079, 1
  store i32 %tmp1080, i32* %i1053
  br label %while1054

merge1081:                                        ; preds = %while1054
  %m_mat1084 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 0
  %mat_mat1085 = load double*, double** %m_mat1084
  %m_r1086 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 1
  %r_mat1087 = load i32, i32* %m_r1086
  %tmp1088 = sub i32 %r_mat1087, 1
  %m_c1089 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 2
  %c_mat1090 = load i32, i32* %m_c1089
  %tmp1091 = sub i32 %c_mat1090, 1
  %m_mat1092 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v1093 = load double*, double** %m_mat1092
  %result1094 = alloca i1
  store i1 true, i1* %result1094
  %i1095 = alloca i32
  store i32 0, i32* %i1095
  br label %while1096

while1096:                                        ; preds = %merge1119, %merge1081
  %i_v1125 = load i32, i32* %i1095
  %bool_val1126 = icmp sle i32 %i_v1125, %tmp1088
  br i1 %bool_val1126, label %while_body1097, label %merge1124

while_body1097:                                   ; preds = %while1096
  %j1098 = alloca i32
  store i32 0, i32* %j1098
  br label %while1099

while1099:                                        ; preds = %merge1113, %while_body1097
  %j_v1120 = load i32, i32* %j1098
  %bool_val1121 = icmp sle i32 %j_v1120, %tmp1091
  br i1 %bool_val1121, label %while_body1100, label %merge1119

while_body1100:                                   ; preds = %while1099
  %j_v1101 = load i32, i32* %j1098
  %i_v1102 = load i32, i32* %i1095
  %tmp1103 = mul i32 %c_mat1090, %i_v1102
  %index1104 = add i32 %j_v1101, %tmp1103
  %element_ptr1105 = getelementptr double, double* %mat_mat1085, i32 %index1104
  %tmp_element1106 = load double, double* %element_ptr1105
  %j_v1107 = load i32, i32* %j1098
  %i_v1108 = load i32, i32* %i1095
  %tmp1109 = mul i32 %c_mat1090, %i_v1108
  %index1110 = add i32 %j_v1107, %tmp1109
  %element_ptr1111 = getelementptr double, double* %mat_v1093, i32 %index1110
  %tmp_element1112 = load double, double* %element_ptr1111
  %tmp1116 = fcmp one double %tmp_element1106, %tmp_element1112
  br i1 %tmp1116, label %then1114, label %else1115

merge1113:                                        ; preds = %else1115, %then1114
  %j_v1117 = load i32, i32* %j1098
  %tmp1118 = add i32 %j_v1117, 1
  store i32 %tmp1118, i32* %j1098
  br label %while1099

then1114:                                         ; preds = %while_body1100
  store i1 false, i1* %result1094
  br label %merge1113

else1115:                                         ; preds = %while_body1100
  br label %merge1113

merge1119:                                        ; preds = %while1099
  %i_v1122 = load i32, i32* %i1095
  %tmp1123 = add i32 %i_v1122, 1
  store i32 %tmp1123, i32* %i1095
  br label %while1096

merge1124:                                        ; preds = %while1096
  %result1127 = load i1, i1* %result1094
  %tmp1133 = icmp ne i1 true, %result1127
  br i1 %tmp1133, label %then1129, label %else1131

merge1128:                                        ; preds = %else1131, %then1129
  %printf1134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %result1135 = alloca i1
  %m_mat1136 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 0
  %mat_mat1137 = load double*, double** %m_mat1136
  %m_r1138 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 1
  %r_mat1139 = load i32, i32* %m_r1138
  %tmp1140 = sub i32 %r_mat1139, 1
  %m_c1141 = getelementptr inbounds %matrix_t, %matrix_t* %m1012, i32 0, i32 2
  %c_mat1142 = load i32, i32* %m_c1141
  %tmp1143 = sub i32 %c_mat1142, 1
  %m_mat1144 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v1145 = load double*, double** %m_mat1144
  %result1146 = alloca i1
  store i1 true, i1* %result1146
  %i1147 = alloca i32
  store i32 0, i32* %i1147
  br label %while1148

then1129:                                         ; preds = %merge1124
  %printf1130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge1128

else1131:                                         ; preds = %merge1124
  %printf1132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge1128

while1148:                                        ; preds = %merge1171, %merge1128
  %i_v1177 = load i32, i32* %i1147
  %bool_val1178 = icmp sle i32 %i_v1177, %tmp1140
  br i1 %bool_val1178, label %while_body1149, label %merge1176

while_body1149:                                   ; preds = %while1148
  %j1150 = alloca i32
  store i32 0, i32* %j1150
  br label %while1151

while1151:                                        ; preds = %merge1165, %while_body1149
  %j_v1172 = load i32, i32* %j1150
  %bool_val1173 = icmp sle i32 %j_v1172, %tmp1143
  br i1 %bool_val1173, label %while_body1152, label %merge1171

while_body1152:                                   ; preds = %while1151
  %j_v1153 = load i32, i32* %j1150
  %i_v1154 = load i32, i32* %i1147
  %tmp1155 = mul i32 %c_mat1142, %i_v1154
  %index1156 = add i32 %j_v1153, %tmp1155
  %element_ptr1157 = getelementptr double, double* %mat_mat1137, i32 %index1156
  %tmp_element1158 = load double, double* %element_ptr1157
  %j_v1159 = load i32, i32* %j1150
  %i_v1160 = load i32, i32* %i1147
  %tmp1161 = mul i32 %c_mat1142, %i_v1160
  %index1162 = add i32 %j_v1159, %tmp1161
  %element_ptr1163 = getelementptr double, double* %mat_v1145, i32 %index1162
  %tmp_element1164 = load double, double* %element_ptr1163
  %tmp1168 = fcmp one double %tmp_element1158, %tmp_element1164
  br i1 %tmp1168, label %then1166, label %else1167

merge1165:                                        ; preds = %else1167, %then1166
  %j_v1169 = load i32, i32* %j1150
  %tmp1170 = add i32 %j_v1169, 1
  store i32 %tmp1170, i32* %j1150
  br label %while1151

then1166:                                         ; preds = %while_body1152
  store i1 false, i1* %result1146
  br label %merge1165

else1167:                                         ; preds = %while_body1152
  br label %merge1165

merge1171:                                        ; preds = %while1151
  %i_v1174 = load i32, i32* %i1147
  %tmp1175 = add i32 %i_v1174, 1
  store i32 %tmp1175, i32* %i1147
  br label %while1148

merge1176:                                        ; preds = %while1148
  %result1179 = load i1, i1* %result1146
  %tmp1183 = icmp ne i1 %result1179, true
  br i1 %tmp1183, label %then1181, label %else1182

merge1180:                                        ; preds = %else1182, %then1181
  %result1184 = load i1, i1* %result1135
  %tmp1190 = icmp ne i1 true, %result1184
  br i1 %tmp1190, label %then1186, label %else1188

then1181:                                         ; preds = %merge1176
  store i1 true, i1* %result1135
  br label %merge1180

else1182:                                         ; preds = %merge1176
  store i1 false, i1* %result1135
  br label %merge1180

merge1185:                                        ; preds = %else1188, %then1186
  %printf1191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  %printf1192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  ret i32 0

then1186:                                         ; preds = %merge1180
  %printf1187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @fmt_str.5, i32 0, i32 0))
  br label %merge1185

else1188:                                         ; preds = %merge1180
  %printf1189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @fmt_str.4, i32 0, i32 0))
  br label %merge1185
}

declare i32 @printf(i8*, ...)

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  store double 0.000000e+00, double* %k
  %i133 = alloca i32
  store i32 0, i32* %i133
  %j134 = alloca i32
  store i32 0, i32* %j134
  store i32 0, i32* %i133
  br label %while135

while135:                                         ; preds = %merge170, %merge130
  %i176 = load i32, i32* %i133
  %tmp177 = icmp slt i32 %i176, 3
  br i1 %tmp177, label %while_body136, label %merge175

while_body136:                                    ; preds = %while135
  store i32 0, i32* %j134
  br label %while137

while137:                                         ; preds = %while_body138, %while_body136
  %j171 = load i32, i32* %j134
  %tmp172 = icmp slt i32 %j171, 3
  br i1 %tmp172, label %while_body138, label %merge170

while_body138:                                    ; preds = %while137
  %k139 = load double, double* %k
  %m_r140 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat141 = load i32, i32* %m_r140
  %m_c142 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat143 = load i32, i32* %m_c142
  %i144 = load i32, i32* %i133
  %i145 = load i32, i32* %i133
  %j146 = load i32, i32* %j134
  %j147 = load i32, i32* %j134
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat148 = load double*, double** %mat
  %tmp149 = mul i32 %c_mat143, %i144
  %index150 = add i32 %j146, %tmp149
  %element_ptr151 = getelementptr double, double* %mat148, i32 %index150
  %element = load double, double* %element_ptr151
  %m_r152 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat153 = load i32, i32* %m_r152
  %m_c154 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat155 = load i32, i32* %m_c154
  %i156 = load i32, i32* %i133
  %i157 = load i32, i32* %i133
  %j158 = load i32, i32* %j134
  %j159 = load i32, i32* %j134
  %mat160 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat161 = load double*, double** %mat160
  %tmp162 = mul i32 %c_mat155, %i156
  %index163 = add i32 %j158, %tmp162
  %element_ptr164 = getelementptr double, double* %mat161, i32 %index163
  %element165 = load double, double* %element_ptr164
  %tmp166 = fmul double %element, %element165
  %tmp167 = fadd double %k139, %tmp166
  store double %tmp167, double* %k
  %j168 = load i32, i32* %j134
  %tmp169 = add i32 %j168, 1
  store i32 %tmp169, i32* %j134
  br label %while137

merge170:                                         ; preds = %while137
  %i173 = load i32, i32* %i133
  %tmp174 = add i32 %i173, 1
  store i32 %tmp174, i32* %i133
  br label %while135

merge175:                                         ; preds = %while135
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k178 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k178, double* %return0
  ret %return_t* %return
  %tmp179 = alloca %return_t
  ret %return_t* %tmp179
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  store i32 0, i32* %a
  %b = alloca i32
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  store i32 %v, i32* %a
  %v_ptr133 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v134 = load i32, i32* %v_ptr133
  store i32 %v134, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b135 = load i32, i32* %b
  %tmp136 = add i32 %b135, 2
  %a137 = load i32, i32* %a
  %tmp138 = add i32 %a137, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp138, i32 %tmp136)
  %v_ptr139 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v140 = load %matrix_t*, %matrix_t** %v_ptr139
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat141 = getelementptr inbounds %matrix_t, %matrix_t* %v140, i32 0, i32 0
  %mat_mat142 = load double*, double** %m_mat141
  %m_r143 = getelementptr inbounds %matrix_t, %matrix_t* %v140, i32 0, i32 1
  %r_mat144 = load i32, i32* %m_r143
  %m_c145 = getelementptr inbounds %matrix_t, %matrix_t* %v140, i32 0, i32 2
  %c_mat146 = load i32, i32* %m_c145
  %size147 = mul i32 %r_mat144, %c_mat146
  %system_mat148 = alloca double, i32 %size147
  %m149 = alloca %matrix_t
  %m_mat150 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 0
  store double* %system_mat148, double** %m_mat150
  %m_r151 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 1
  store i32 %r_mat144, i32* %m_r151
  %m_c152 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 2
  store i32 %c_mat146, i32* %m_c152
  %tmp153 = sub i32 %r_mat144, 1
  %tmp154 = sub i32 %c_mat146, 1
  %i155 = alloca i32
  store i32 0, i32* %i155
  br label %while156

while156:                                         ; preds = %merge168, %merge130
  %i_v174 = load i32, i32* %i155
  %bool_val175 = icmp sle i32 %i_v174, %tmp153
  br i1 %bool_val175, label %while_body157, label %merge173

while_body157:                                    ; preds = %while156
  %j158 = alloca i32
  store i32 0, i32* %j158
  br label %while159

while159:                                         ; preds = %while_body160, %while_body157
  %j_v169 = load i32, i32* %j158
  %bool_val170 = icmp sle i32 %j_v169, %tmp154
  br i1 %bool_val170, label %while_body160, label %merge168

while_body160:                                    ; preds = %while159
  %j_v161 = load i32, i32* %j158
  %i_v162 = load i32, i32* %i155
  %tmp163 = mul i32 %c_mat146, %i_v162
  %index164 = add i32 %j_v161, %tmp163
  %element_ptr165 = getelementptr double, double* %system_mat148, i32 %index164
  store double 0.000000e+00, double* %element_ptr165
  %j_v166 = load i32, i32* %j158
  %tmp167 = add i32 %j_v166, 1
  store i32 %tmp167, i32* %j158
  br label %while159

merge168:                                         ; preds = %while159
  %i_v171 = load i32, i32* %i155
  %tmp172 = add i32 %i_v171, 1
  store i32 %tmp172, i32* %i155
  br label %while156

merge173:                                         ; preds = %while156
  %tmp176 = sub i32 %c_mat146, 1
  %tmp177 = sub i32 %r_mat144, 1
  %m_mat178 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 0
  %mat_mat179 = load double*, double** %m_mat178
  %m_r180 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 1
  %r_mat181 = load i32, i32* %m_r180
  %m_c182 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 2
  %c_mat183 = load i32, i32* %m_c182
  %m_mat184 = getelementptr inbounds %matrix_t, %matrix_t* %v140, i32 0, i32 0
  %mat_v185 = load double*, double** %m_mat184
  %m_r186 = getelementptr inbounds %matrix_t, %matrix_t* %v140, i32 0, i32 1
  %r_v187 = load i32, i32* %m_r186
  %m_c188 = getelementptr inbounds %matrix_t, %matrix_t* %v140, i32 0, i32 2
  %c_v189 = load i32, i32* %m_c188
  %i190 = alloca i32
  store i32 0, i32* %i190
  br label %while191

while191:                                         ; preds = %merge213, %merge173
  %i_v219 = load i32, i32* %i190
  %bool_val220 = icmp sle i32 %i_v219, %tmp177
  br i1 %bool_val220, label %while_body192, label %merge218

while_body192:                                    ; preds = %while191
  %j193 = alloca i32
  store i32 0, i32* %j193
  br label %while194

while194:                                         ; preds = %while_body195, %while_body192
  %j_v214 = load i32, i32* %j193
  %bool_val215 = icmp sle i32 %j_v214, %tmp176
  br i1 %bool_val215, label %while_body195, label %merge213

while_body195:                                    ; preds = %while194
  %j_v196 = load i32, i32* %j193
  %i_v197 = load i32, i32* %i190
  %tmp198 = mul i32 %c_mat183, %i_v197
  %index199 = add i32 %j_v196, %tmp198
  %element_ptr200 = getelementptr double, double* %mat_mat179, i32 %index199
  %j_v201 = load i32, i32* %j193
  %tmp202 = sub i32 %j_v201, 0
  %tmp203 = add i32 %tmp202, 0
  %i_v204 = load i32, i32* %i190
  %tmp205 = sub i32 %i_v204, 0
  %tmp206 = add i32 %tmp205, 0
  %tmp207 = mul i32 %c_v189, %tmp206
  %index208 = add i32 %tmp203, %tmp207
  %element_ptr209 = getelementptr double, double* %mat_v185, i32 %index208
  %tmp_element210 = load double, double* %element_ptr209
  store double %tmp_element210, double* %element_ptr200
  %j_v211 = load i32, i32* %j193
  %tmp212 = add i32 %j_v211, 1
  store i32 %tmp212, i32* %j193
  br label %while194

merge213:                                         ; preds = %while194
  %i_v216 = load i32, i32* %i190
  %tmp217 = add i32 %i_v216, 1
  store i32 %tmp217, i32* %i190
  br label %while191

merge218:                                         ; preds = %while191
  %4 = bitcast double* %mat_mat142 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v140 to i8*
  tail call void @free(i8* %5)
  %m_r221 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 1
  %r_mat222 = load i32, i32* %m_r221
  %m_c223 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 2
  %c_mat224 = load i32, i32* %m_c223
  %size225 = mul i32 %r_mat222, %c_mat224
  %system_mat226 = alloca double, i32 %size225
  %m227 = alloca %matrix_t
  %m_mat228 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 0
  store double* %system_mat226, double** %m_mat228
  %m_r229 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 1
  store i32 %r_mat222, i32* %m_r229
  %m_c230 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 2
  store i32 %c_mat224, i32* %m_c230
  %tmp231 = sub i32 %r_mat222, 1
  %tmp232 = sub i32 %c_mat224, 1
  %i233 = alloca i32
  store i32 0, i32* %i233
  br label %while234

while234:                                         ; preds = %merge246, %merge218
  %i_v252 = load i32, i32* %i233
  %bool_val253 = icmp sle i32 %i_v252, %tmp231
  br i1 %bool_val253, label %while_body235, label %merge251

while_body235:                                    ; preds = %while234
  %j236 = alloca i32
  store i32 0, i32* %j236
  br label %while237

while237:                                         ; preds = %while_body238, %while_body235
  %j_v247 = load i32, i32* %j236
  %bool_val248 = icmp sle i32 %j_v247, %tmp232
  br i1 %bool_val248, label %while_body238, label %merge246

while_body238:                                    ; preds = %while237
  %j_v239 = load i32, i32* %j236
  %i_v240 = load i32, i32* %i233
  %tmp241 = mul i32 %c_mat224, %i_v240
  %index242 = add i32 %j_v239, %tmp241
  %element_ptr243 = getelementptr double, double* %system_mat226, i32 %index242
  store double 0.000000e+00, double* %element_ptr243
  %j_v244 = load i32, i32* %j236
  %tmp245 = add i32 %j_v244, 1
  store i32 %tmp245, i32* %j236
  br label %while237

merge246:                                         ; preds = %while237
  %i_v249 = load i32, i32* %i233
  %tmp250 = add i32 %i_v249, 1
  store i32 %tmp250, i32* %i233
  br label %while234

merge251:                                         ; preds = %while234
  %tmp254 = sub i32 %c_mat224, 1
  %tmp255 = sub i32 %r_mat222, 1
  %m_mat256 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 0
  %mat_mat257 = load double*, double** %m_mat256
  %m_r258 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 1
  %r_mat259 = load i32, i32* %m_r258
  %m_c260 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 2
  %c_mat261 = load i32, i32* %m_c260
  %m_mat262 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 0
  %mat_v263 = load double*, double** %m_mat262
  %m_r264 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 1
  %r_v265 = load i32, i32* %m_r264
  %m_c266 = getelementptr inbounds %matrix_t, %matrix_t* %m149, i32 0, i32 2
  %c_v267 = load i32, i32* %m_c266
  %i268 = alloca i32
  store i32 0, i32* %i268
  br label %while269

while269:                                         ; preds = %merge291, %merge251
  %i_v297 = load i32, i32* %i268
  %bool_val298 = icmp sle i32 %i_v297, %tmp255
  br i1 %bool_val298, label %while_body270, label %merge296

while_body270:                                    ; preds = %while269
  %j271 = alloca i32
  store i32 0, i32* %j271
  br label %while272

while272:                                         ; preds = %while_body273, %while_body270
  %j_v292 = load i32, i32* %j271
  %bool_val293 = icmp sle i32 %j_v292, %tmp254
  br i1 %bool_val293, label %while_body273, label %merge291

while_body273:                                    ; preds = %while272
  %j_v274 = load i32, i32* %j271
  %i_v275 = load i32, i32* %i268
  %tmp276 = mul i32 %c_mat261, %i_v275
  %index277 = add i32 %j_v274, %tmp276
  %element_ptr278 = getelementptr double, double* %mat_mat257, i32 %index277
  %j_v279 = load i32, i32* %j271
  %tmp280 = sub i32 %j_v279, 0
  %tmp281 = add i32 %tmp280, 0
  %i_v282 = load i32, i32* %i268
  %tmp283 = sub i32 %i_v282, 0
  %tmp284 = add i32 %tmp283, 0
  %tmp285 = mul i32 %c_v267, %tmp284
  %index286 = add i32 %tmp281, %tmp285
  %element_ptr287 = getelementptr double, double* %mat_v263, i32 %index286
  %tmp_element288 = load double, double* %element_ptr287
  store double %tmp_element288, double* %element_ptr278
  %j_v289 = load i32, i32* %j271
  %tmp290 = add i32 %j_v289, 1
  store i32 %tmp290, i32* %j271
  br label %while272

merge291:                                         ; preds = %while272
  %i_v294 = load i32, i32* %i268
  %tmp295 = add i32 %i_v294, 1
  store i32 %tmp295, i32* %i268
  br label %while269

merge296:                                         ; preds = %while269
  %b299 = load i32, i32* %b
  %a300 = load i32, i32* %a
  %zeros_result301 = call %zero_matrix_t* @zeros(i32 %a300, i32 %b299)
  %v_ptr302 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result301, i32 0, i32 0
  %v303 = load %matrix_t*, %matrix_t** %v_ptr302
  %6 = bitcast %zero_matrix_t* %zeros_result301 to i8*
  tail call void @free(i8* %6)
  %m_mat304 = getelementptr inbounds %matrix_t, %matrix_t* %v303, i32 0, i32 0
  %mat_mat305 = load double*, double** %m_mat304
  %m_r306 = getelementptr inbounds %matrix_t, %matrix_t* %v303, i32 0, i32 1
  %r_mat307 = load i32, i32* %m_r306
  %m_c308 = getelementptr inbounds %matrix_t, %matrix_t* %v303, i32 0, i32 2
  %c_mat309 = load i32, i32* %m_c308
  %size310 = mul i32 %r_mat307, %c_mat309
  %system_mat311 = alloca double, i32 %size310
  %m312 = alloca %matrix_t
  %m_mat313 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 0
  store double* %system_mat311, double** %m_mat313
  %m_r314 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 1
  store i32 %r_mat307, i32* %m_r314
  %m_c315 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 2
  store i32 %c_mat309, i32* %m_c315
  %tmp316 = sub i32 %r_mat307, 1
  %tmp317 = sub i32 %c_mat309, 1
  %i318 = alloca i32
  store i32 0, i32* %i318
  br label %while319

while319:                                         ; preds = %merge331, %merge296
  %i_v337 = load i32, i32* %i318
  %bool_val338 = icmp sle i32 %i_v337, %tmp316
  br i1 %bool_val338, label %while_body320, label %merge336

while_body320:                                    ; preds = %while319
  %j321 = alloca i32
  store i32 0, i32* %j321
  br label %while322

while322:                                         ; preds = %while_body323, %while_body320
  %j_v332 = load i32, i32* %j321
  %bool_val333 = icmp sle i32 %j_v332, %tmp317
  br i1 %bool_val333, label %while_body323, label %merge331

while_body323:                                    ; preds = %while322
  %j_v324 = load i32, i32* %j321
  %i_v325 = load i32, i32* %i318
  %tmp326 = mul i32 %c_mat309, %i_v325
  %index327 = add i32 %j_v324, %tmp326
  %element_ptr328 = getelementptr double, double* %system_mat311, i32 %index327
  store double 0.000000e+00, double* %element_ptr328
  %j_v329 = load i32, i32* %j321
  %tmp330 = add i32 %j_v329, 1
  store i32 %tmp330, i32* %j321
  br label %while322

merge331:                                         ; preds = %while322
  %i_v334 = load i32, i32* %i318
  %tmp335 = add i32 %i_v334, 1
  store i32 %tmp335, i32* %i318
  br label %while319

merge336:                                         ; preds = %while319
  %tmp339 = sub i32 %c_mat309, 1
  %tmp340 = sub i32 %r_mat307, 1
  %m_mat341 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 0
  %mat_mat342 = load double*, double** %m_mat341
  %m_r343 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 1
  %r_mat344 = load i32, i32* %m_r343
  %m_c345 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 2
  %c_mat346 = load i32, i32* %m_c345
  %m_mat347 = getelementptr inbounds %matrix_t, %matrix_t* %v303, i32 0, i32 0
  %mat_v348 = load double*, double** %m_mat347
  %m_r349 = getelementptr inbounds %matrix_t, %matrix_t* %v303, i32 0, i32 1
  %r_v350 = load i32, i32* %m_r349
  %m_c351 = getelementptr inbounds %matrix_t, %matrix_t* %v303, i32 0, i32 2
  %c_v352 = load i32, i32* %m_c351
  %i353 = alloca i32
  store i32 0, i32* %i353
  br label %while354

while354:                                         ; preds = %merge376, %merge336
  %i_v382 = load i32, i32* %i353
  %bool_val383 = icmp sle i32 %i_v382, %tmp340
  br i1 %bool_val383, label %while_body355, label %merge381

while_body355:                                    ; preds = %while354
  %j356 = alloca i32
  store i32 0, i32* %j356
  br label %while357

while357:                                         ; preds = %while_body358, %while_body355
  %j_v377 = load i32, i32* %j356
  %bool_val378 = icmp sle i32 %j_v377, %tmp339
  br i1 %bool_val378, label %while_body358, label %merge376

while_body358:                                    ; preds = %while357
  %j_v359 = load i32, i32* %j356
  %i_v360 = load i32, i32* %i353
  %tmp361 = mul i32 %c_mat346, %i_v360
  %index362 = add i32 %j_v359, %tmp361
  %element_ptr363 = getelementptr double, double* %mat_mat342, i32 %index362
  %j_v364 = load i32, i32* %j356
  %tmp365 = sub i32 %j_v364, 0
  %tmp366 = add i32 %tmp365, 0
  %i_v367 = load i32, i32* %i353
  %tmp368 = sub i32 %i_v367, 0
  %tmp369 = add i32 %tmp368, 0
  %tmp370 = mul i32 %c_v352, %tmp369
  %index371 = add i32 %tmp366, %tmp370
  %element_ptr372 = getelementptr double, double* %mat_v348, i32 %index371
  %tmp_element373 = load double, double* %element_ptr372
  store double %tmp_element373, double* %element_ptr363
  %j_v374 = load i32, i32* %j356
  %tmp375 = add i32 %j_v374, 1
  store i32 %tmp375, i32* %j356
  br label %while357

merge376:                                         ; preds = %while357
  %i_v379 = load i32, i32* %i353
  %tmp380 = add i32 %i_v379, 1
  store i32 %tmp380, i32* %i353
  br label %while354

merge381:                                         ; preds = %while354
  %7 = bitcast double* %mat_mat305 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v303 to i8*
  tail call void @free(i8* %8)
  %m_r384 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 1
  %r_mat385 = load i32, i32* %m_r384
  %m_c386 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 2
  %c_mat387 = load i32, i32* %m_c386
  %size388 = mul i32 %r_mat385, %c_mat387
  %system_mat389 = alloca double, i32 %size388
  %m390 = alloca %matrix_t
  %m_mat391 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 0
  store double* %system_mat389, double** %m_mat391
  %m_r392 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 1
  store i32 %r_mat385, i32* %m_r392
  %m_c393 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 2
  store i32 %c_mat387, i32* %m_c393
  %tmp394 = sub i32 %r_mat385, 1
  %tmp395 = sub i32 %c_mat387, 1
  %i396 = alloca i32
  store i32 0, i32* %i396
  br label %while397

while397:                                         ; preds = %merge409, %merge381
  %i_v415 = load i32, i32* %i396
  %bool_val416 = icmp sle i32 %i_v415, %tmp394
  br i1 %bool_val416, label %while_body398, label %merge414

while_body398:                                    ; preds = %while397
  %j399 = alloca i32
  store i32 0, i32* %j399
  br label %while400

while400:                                         ; preds = %while_body401, %while_body398
  %j_v410 = load i32, i32* %j399
  %bool_val411 = icmp sle i32 %j_v410, %tmp395
  br i1 %bool_val411, label %while_body401, label %merge409

while_body401:                                    ; preds = %while400
  %j_v402 = load i32, i32* %j399
  %i_v403 = load i32, i32* %i396
  %tmp404 = mul i32 %c_mat387, %i_v403
  %index405 = add i32 %j_v402, %tmp404
  %element_ptr406 = getelementptr double, double* %system_mat389, i32 %index405
  store double 0.000000e+00, double* %element_ptr406
  %j_v407 = load i32, i32* %j399
  %tmp408 = add i32 %j_v407, 1
  store i32 %tmp408, i32* %j399
  br label %while400

merge409:                                         ; preds = %while400
  %i_v412 = load i32, i32* %i396
  %tmp413 = add i32 %i_v412, 1
  store i32 %tmp413, i32* %i396
  br label %while397

merge414:                                         ; preds = %while397
  %tmp417 = sub i32 %c_mat387, 1
  %tmp418 = sub i32 %r_mat385, 1
  %m_mat419 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 0
  %mat_mat420 = load double*, double** %m_mat419
  %m_r421 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 1
  %r_mat422 = load i32, i32* %m_r421
  %m_c423 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 2
  %c_mat424 = load i32, i32* %m_c423
  %m_mat425 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 0
  %mat_v426 = load double*, double** %m_mat425
  %m_r427 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 1
  %r_v428 = load i32, i32* %m_r427
  %m_c429 = getelementptr inbounds %matrix_t, %matrix_t* %m312, i32 0, i32 2
  %c_v430 = load i32, i32* %m_c429
  %i431 = alloca i32
  store i32 0, i32* %i431
  br label %while432

while432:                                         ; preds = %merge454, %merge414
  %i_v460 = load i32, i32* %i431
  %bool_val461 = icmp sle i32 %i_v460, %tmp418
  br i1 %bool_val461, label %while_body433, label %merge459

while_body433:                                    ; preds = %while432
  %j434 = alloca i32
  store i32 0, i32* %j434
  br label %while435

while435:                                         ; preds = %while_body436, %while_body433
  %j_v455 = load i32, i32* %j434
  %bool_val456 = icmp sle i32 %j_v455, %tmp417
  br i1 %bool_val456, label %while_body436, label %merge454

while_body436:                                    ; preds = %while435
  %j_v437 = load i32, i32* %j434
  %i_v438 = load i32, i32* %i431
  %tmp439 = mul i32 %c_mat424, %i_v438
  %index440 = add i32 %j_v437, %tmp439
  %element_ptr441 = getelementptr double, double* %mat_mat420, i32 %index440
  %j_v442 = load i32, i32* %j434
  %tmp443 = sub i32 %j_v442, 0
  %tmp444 = add i32 %tmp443, 0
  %i_v445 = load i32, i32* %i431
  %tmp446 = sub i32 %i_v445, 0
  %tmp447 = add i32 %tmp446, 0
  %tmp448 = mul i32 %c_v430, %tmp447
  %index449 = add i32 %tmp444, %tmp448
  %element_ptr450 = getelementptr double, double* %mat_v426, i32 %index449
  %tmp_element451 = load double, double* %element_ptr450
  store double %tmp_element451, double* %element_ptr441
  %j_v452 = load i32, i32* %j434
  %tmp453 = add i32 %j_v452, 1
  store i32 %tmp453, i32* %j434
  br label %while435

merge454:                                         ; preds = %while435
  %i_v457 = load i32, i32* %i431
  %tmp458 = add i32 %i_v457, 1
  store i32 %tmp458, i32* %i431
  br label %while432

merge459:                                         ; preds = %while432
  %m_r462 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat463 = load i32, i32* %m_r462
  %m_c464 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat465 = load i32, i32* %m_c464
  %a466 = load i32, i32* %a
  %tmp467 = sub i32 %a466, 1
  %b468 = load i32, i32* %b
  %tmp469 = sub i32 %b468, 1
  %tmp470 = sub i32 %tmp467, 0
  %tmp471 = sub i32 %tmp469, 0
  %tmp472 = add i32 %tmp471, 1
  %tmp473 = add i32 %tmp470, 1
  %size474 = mul i32 %tmp473, %tmp472
  %system_mat475 = alloca double, i32 %size474
  %m476 = alloca %matrix_t
  %m_mat477 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 0
  store double* %system_mat475, double** %m_mat477
  %m_r478 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 1
  store i32 %tmp473, i32* %m_r478
  %m_c479 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 2
  store i32 %tmp472, i32* %m_c479
  %tmp480 = sub i32 %tmp473, 1
  %tmp481 = sub i32 %tmp472, 1
  %i482 = alloca i32
  store i32 0, i32* %i482
  br label %while483

while483:                                         ; preds = %merge495, %merge459
  %i_v501 = load i32, i32* %i482
  %bool_val502 = icmp sle i32 %i_v501, %tmp480
  br i1 %bool_val502, label %while_body484, label %merge500

while_body484:                                    ; preds = %while483
  %j485 = alloca i32
  store i32 0, i32* %j485
  br label %while486

while486:                                         ; preds = %while_body487, %while_body484
  %j_v496 = load i32, i32* %j485
  %bool_val497 = icmp sle i32 %j_v496, %tmp481
  br i1 %bool_val497, label %while_body487, label %merge495

while_body487:                                    ; preds = %while486
  %j_v488 = load i32, i32* %j485
  %i_v489 = load i32, i32* %i482
  %tmp490 = mul i32 %tmp472, %i_v489
  %index491 = add i32 %j_v488, %tmp490
  %element_ptr492 = getelementptr double, double* %system_mat475, i32 %index491
  store double 0.000000e+00, double* %element_ptr492
  %j_v493 = load i32, i32* %j485
  %tmp494 = add i32 %j_v493, 1
  store i32 %tmp494, i32* %j485
  br label %while486

merge495:                                         ; preds = %while486
  %i_v498 = load i32, i32* %i482
  %tmp499 = add i32 %i_v498, 1
  store i32 %tmp499, i32* %i482
  br label %while483

merge500:                                         ; preds = %while483
  %m_mat503 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 0
  %mat_mat504 = load double*, double** %m_mat503
  %m_r505 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 1
  %r_mat506 = load i32, i32* %m_r505
  %m_c507 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 2
  %c_mat508 = load i32, i32* %m_c507
  %m_mat509 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v510 = load double*, double** %m_mat509
  %m_r511 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v512 = load i32, i32* %m_r511
  %m_c513 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v514 = load i32, i32* %m_c513
  %i515 = alloca i32
  store i32 0, i32* %i515
  br label %while516

while516:                                         ; preds = %merge538, %merge500
  %i_v544 = load i32, i32* %i515
  %bool_val545 = icmp sle i32 %i_v544, %tmp470
  br i1 %bool_val545, label %while_body517, label %merge543

while_body517:                                    ; preds = %while516
  %j518 = alloca i32
  store i32 0, i32* %j518
  br label %while519

while519:                                         ; preds = %while_body520, %while_body517
  %j_v539 = load i32, i32* %j518
  %bool_val540 = icmp sle i32 %j_v539, %tmp471
  br i1 %bool_val540, label %while_body520, label %merge538

while_body520:                                    ; preds = %while519
  %j_v521 = load i32, i32* %j518
  %i_v522 = load i32, i32* %i515
  %tmp523 = mul i32 %c_mat508, %i_v522
  %index524 = add i32 %j_v521, %tmp523
  %element_ptr525 = getelementptr double, double* %mat_mat504, i32 %index524
  %j_v526 = load i32, i32* %j518
  %tmp527 = sub i32 %j_v526, 0
  %tmp528 = add i32 %tmp527, 0
  %i_v529 = load i32, i32* %i515
  %tmp530 = sub i32 %i_v529, 0
  %tmp531 = add i32 %tmp530, 0
  %tmp532 = mul i32 %c_v514, %tmp531
  %index533 = add i32 %tmp528, %tmp532
  %element_ptr534 = getelementptr double, double* %mat_v510, i32 %index533
  %tmp_element535 = load double, double* %element_ptr534
  store double %tmp_element535, double* %element_ptr525
  %j_v536 = load i32, i32* %j518
  %tmp537 = add i32 %j_v536, 1
  store i32 %tmp537, i32* %j518
  br label %while519

merge538:                                         ; preds = %while519
  %i_v541 = load i32, i32* %i515
  %tmp542 = add i32 %i_v541, 1
  store i32 %tmp542, i32* %i515
  br label %while516

merge543:                                         ; preds = %while516
  %m_r546 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 1
  %r_mat547 = load i32, i32* %m_r546
  %m_c548 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 2
  %c_mat549 = load i32, i32* %m_c548
  %a550 = load i32, i32* %a
  %b551 = load i32, i32* %b
  %m_mat552 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 0
  %mat_mat553 = load double*, double** %m_mat552
  %m_r554 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 1
  %r_mat555 = load i32, i32* %m_r554
  %m_c556 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 2
  %c_mat557 = load i32, i32* %m_c556
  %m_mat558 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 0
  %mat_v559 = load double*, double** %m_mat558
  %m_r560 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 1
  %r_v561 = load i32, i32* %m_r560
  %m_c562 = getelementptr inbounds %matrix_t, %matrix_t* %m476, i32 0, i32 2
  %c_v563 = load i32, i32* %m_c562
  %i564 = alloca i32
  store i32 1, i32* %i564
  br label %while565

while565:                                         ; preds = %merge587, %merge543
  %i_v593 = load i32, i32* %i564
  %bool_val594 = icmp sle i32 %i_v593, %a550
  br i1 %bool_val594, label %while_body566, label %merge592

while_body566:                                    ; preds = %while565
  %j567 = alloca i32
  store i32 1, i32* %j567
  br label %while568

while568:                                         ; preds = %while_body569, %while_body566
  %j_v588 = load i32, i32* %j567
  %bool_val589 = icmp sle i32 %j_v588, %b551
  br i1 %bool_val589, label %while_body569, label %merge587

while_body569:                                    ; preds = %while568
  %j_v570 = load i32, i32* %j567
  %i_v571 = load i32, i32* %i564
  %tmp572 = mul i32 %c_mat557, %i_v571
  %index573 = add i32 %j_v570, %tmp572
  %element_ptr574 = getelementptr double, double* %mat_mat553, i32 %index573
  %j_v575 = load i32, i32* %j567
  %tmp576 = sub i32 %j_v575, 1
  %tmp577 = add i32 %tmp576, 0
  %i_v578 = load i32, i32* %i564
  %tmp579 = sub i32 %i_v578, 1
  %tmp580 = add i32 %tmp579, 0
  %tmp581 = mul i32 %c_v563, %tmp580
  %index582 = add i32 %tmp577, %tmp581
  %element_ptr583 = getelementptr double, double* %mat_v559, i32 %index582
  %tmp_element584 = load double, double* %element_ptr583
  store double %tmp_element584, double* %element_ptr574
  %j_v585 = load i32, i32* %j567
  %tmp586 = add i32 %j_v585, 1
  store i32 %tmp586, i32* %j567
  br label %while568

merge587:                                         ; preds = %while568
  %i_v590 = load i32, i32* %i564
  %tmp591 = add i32 %i_v590, 1
  store i32 %tmp591, i32* %i564
  br label %while565

merge592:                                         ; preds = %while565
  %i595 = alloca i32
  store i32 0, i32* %i595
  %j596 = alloca i32
  store i32 0, i32* %j596
  store i32 0, i32* %i595
  br label %while597

while597:                                         ; preds = %merge704, %merge592
  %i711 = load i32, i32* %i595
  %a712 = load i32, i32* %a
  %tmp713 = icmp slt i32 %i711, %a712
  br i1 %tmp713, label %while_body598, label %merge710

while_body598:                                    ; preds = %while597
  store i32 0, i32* %j596
  br label %while599

while599:                                         ; preds = %merge684, %while_body598
  %j705 = load i32, i32* %j596
  %b706 = load i32, i32* %b
  %tmp707 = icmp slt i32 %j705, %b706
  br i1 %tmp707, label %while_body600, label %merge704

while_body600:                                    ; preds = %while599
  %k = alloca double
  store double 0.000000e+00, double* %k
  %m_r601 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 1
  %r_mat602 = load i32, i32* %m_r601
  %m_c603 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 2
  %c_mat604 = load i32, i32* %m_c603
  %i605 = load i32, i32* %i595
  %i606 = load i32, i32* %i595
  %tmp607 = add i32 %i606, 2
  %j608 = load i32, i32* %j596
  %j609 = load i32, i32* %j596
  %tmp610 = add i32 %j609, 2
  %tmp611 = sub i32 %tmp607, %i605
  %tmp612 = sub i32 %tmp610, %j608
  %tmp613 = add i32 %tmp612, 1
  %tmp614 = add i32 %tmp611, 1
  %size615 = mul i32 %tmp614, %tmp613
  %system_mat616 = alloca double, i32 %size615
  %m617 = alloca %matrix_t
  %m_mat618 = getelementptr inbounds %matrix_t, %matrix_t* %m617, i32 0, i32 0
  store double* %system_mat616, double** %m_mat618
  %m_r619 = getelementptr inbounds %matrix_t, %matrix_t* %m617, i32 0, i32 1
  store i32 %tmp614, i32* %m_r619
  %m_c620 = getelementptr inbounds %matrix_t, %matrix_t* %m617, i32 0, i32 2
  store i32 %tmp613, i32* %m_c620
  %tmp621 = sub i32 %tmp614, 1
  %tmp622 = sub i32 %tmp613, 1
  %i623 = alloca i32
  store i32 0, i32* %i623
  br label %while624

while624:                                         ; preds = %merge636, %while_body600
  %i_v642 = load i32, i32* %i623
  %bool_val643 = icmp sle i32 %i_v642, %tmp621
  br i1 %bool_val643, label %while_body625, label %merge641

while_body625:                                    ; preds = %while624
  %j626 = alloca i32
  store i32 0, i32* %j626
  br label %while627

while627:                                         ; preds = %while_body628, %while_body625
  %j_v637 = load i32, i32* %j626
  %bool_val638 = icmp sle i32 %j_v637, %tmp622
  br i1 %bool_val638, label %while_body628, label %merge636

while_body628:                                    ; preds = %while627
  %j_v629 = load i32, i32* %j626
  %i_v630 = load i32, i32* %i623
  %tmp631 = mul i32 %tmp613, %i_v630
  %index632 = add i32 %j_v629, %tmp631
  %element_ptr633 = getelementptr double, double* %system_mat616, i32 %index632
  store double 0.000000e+00, double* %element_ptr633
  %j_v634 = load i32, i32* %j626
  %tmp635 = add i32 %j_v634, 1
  store i32 %tmp635, i32* %j626
  br label %while627

merge636:                                         ; preds = %while627
  %i_v639 = load i32, i32* %i623
  %tmp640 = add i32 %i_v639, 1
  store i32 %tmp640, i32* %i623
  br label %while624

merge641:                                         ; preds = %while624
  %m_mat644 = getelementptr inbounds %matrix_t, %matrix_t* %m617, i32 0, i32 0
  %mat_mat645 = load double*, double** %m_mat644
  %m_r646 = getelementptr inbounds %matrix_t, %matrix_t* %m617, i32 0, i32 1
  %r_mat647 = load i32, i32* %m_r646
  %m_c648 = getelementptr inbounds %matrix_t, %matrix_t* %m617, i32 0, i32 2
  %c_mat649 = load i32, i32* %m_c648
  %m_mat650 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 0
  %mat_v651 = load double*, double** %m_mat650
  %m_r652 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 1
  %r_v653 = load i32, i32* %m_r652
  %m_c654 = getelementptr inbounds %matrix_t, %matrix_t* %m227, i32 0, i32 2
  %c_v655 = load i32, i32* %m_c654
  %i656 = alloca i32
  store i32 0, i32* %i656
  br label %while657

while657:                                         ; preds = %merge679, %merge641
  %i_v685 = load i32, i32* %i656
  %bool_val686 = icmp sle i32 %i_v685, %tmp611
  br i1 %bool_val686, label %while_body658, label %merge684

while_body658:                                    ; preds = %while657
  %j659 = alloca i32
  store i32 0, i32* %j659
  br label %while660

while660:                                         ; preds = %while_body661, %while_body658
  %j_v680 = load i32, i32* %j659
  %bool_val681 = icmp sle i32 %j_v680, %tmp612
  br i1 %bool_val681, label %while_body661, label %merge679

while_body661:                                    ; preds = %while660
  %j_v662 = load i32, i32* %j659
  %i_v663 = load i32, i32* %i656
  %tmp664 = mul i32 %c_mat649, %i_v663
  %index665 = add i32 %j_v662, %tmp664
  %element_ptr666 = getelementptr double, double* %mat_mat645, i32 %index665
  %j_v667 = load i32, i32* %j659
  %tmp668 = sub i32 %j_v667, 0
  %tmp669 = add i32 %tmp668, %j608
  %i_v670 = load i32, i32* %i656
  %tmp671 = sub i32 %i_v670, 0
  %tmp672 = add i32 %tmp671, %i605
  %tmp673 = mul i32 %c_v655, %tmp672
  %index674 = add i32 %tmp669, %tmp673
  %element_ptr675 = getelementptr double, double* %mat_v651, i32 %index674
  %tmp_element676 = load double, double* %element_ptr675
  store double %tmp_element676, double* %element_ptr666
  %j_v677 = load i32, i32* %j659
  %tmp678 = add i32 %j_v677, 1
  store i32 %tmp678, i32* %j659
  br label %while660

merge679:                                         ; preds = %while660
  %i_v682 = load i32, i32* %i656
  %tmp683 = add i32 %i_v682, 1
  store i32 %tmp683, i32* %i656
  br label %while657

merge684:                                         ; preds = %while657
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m617, %matrix_t* %m61)
  %v_ptr687 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v688 = load double, double* %v_ptr687
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  store double %v688, double* %k
  %k689 = load double, double* %k
  %m_r690 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 1
  %r_mat691 = load i32, i32* %m_r690
  %m_c692 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 2
  %c_mat693 = load i32, i32* %m_c692
  %i694 = load i32, i32* %i595
  %i695 = load i32, i32* %i595
  %j696 = load i32, i32* %j596
  %j697 = load i32, i32* %j596
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 0
  %mat698 = load double*, double** %mat
  %tmp699 = mul i32 %c_mat693, %i694
  %index700 = add i32 %j696, %tmp699
  %element_ptr701 = getelementptr double, double* %mat698, i32 %index700
  store double %k689, double* %element_ptr701
  %j702 = load i32, i32* %j596
  %tmp703 = add i32 %j702, 1
  store i32 %tmp703, i32* %j596
  br label %while599

merge704:                                         ; preds = %while599
  %i708 = load i32, i32* %i595
  %tmp709 = add i32 %i708, 1
  store i32 %tmp709, i32* %i595
  br label %while597

merge710:                                         ; preds = %while597
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r714 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 1
  %r_mat715 = load i32, i32* %m_r714
  %m_c716 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 2
  %c_mat717 = load i32, i32* %m_c716
  %size718 = mul i32 %r_mat715, %c_mat717
  %mallocsize = mul i32 %size718, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall719 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat720 = bitcast i8* %malloccall719 to double*
  %malloccall721 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m722 = bitcast i8* %malloccall721 to %matrix_t*
  %m_mat723 = getelementptr inbounds %matrix_t, %matrix_t* %m722, i32 0, i32 0
  store double* %system_mat720, double** %m_mat723
  %m_r724 = getelementptr inbounds %matrix_t, %matrix_t* %m722, i32 0, i32 1
  store i32 %r_mat715, i32* %m_r724
  %m_c725 = getelementptr inbounds %matrix_t, %matrix_t* %m722, i32 0, i32 2
  store i32 %c_mat717, i32* %m_c725
  %tmp726 = sub i32 %r_mat715, 1
  %tmp727 = sub i32 %c_mat717, 1
  %i728 = alloca i32
  store i32 0, i32* %i728
  br label %while729

while729:                                         ; preds = %merge741, %merge710
  %i_v747 = load i32, i32* %i728
  %bool_val748 = icmp sle i32 %i_v747, %tmp726
  br i1 %bool_val748, label %while_body730, label %merge746

while_body730:                                    ; preds = %while729
  %j731 = alloca i32
  store i32 0, i32* %j731
  br label %while732

while732:                                         ; preds = %while_body733, %while_body730
  %j_v742 = load i32, i32* %j731
  %bool_val743 = icmp sle i32 %j_v742, %tmp727
  br i1 %bool_val743, label %while_body733, label %merge741

while_body733:                                    ; preds = %while732
  %j_v734 = load i32, i32* %j731
  %i_v735 = load i32, i32* %i728
  %tmp736 = mul i32 %c_mat717, %i_v735
  %index737 = add i32 %j_v734, %tmp736
  %element_ptr738 = getelementptr double, double* %system_mat720, i32 %index737
  store double 0.000000e+00, double* %element_ptr738
  %j_v739 = load i32, i32* %j731
  %tmp740 = add i32 %j_v739, 1
  store i32 %tmp740, i32* %j731
  br label %while732

merge741:                                         ; preds = %while732
  %i_v744 = load i32, i32* %i728
  %tmp745 = add i32 %i_v744, 1
  store i32 %tmp745, i32* %i728
  br label %while729

merge746:                                         ; preds = %while729
  %tmp749 = sub i32 %c_mat717, 1
  %tmp750 = sub i32 %r_mat715, 1
  %m_mat751 = getelementptr inbounds %matrix_t, %matrix_t* %m722, i32 0, i32 0
  %mat_mat752 = load double*, double** %m_mat751
  %m_r753 = getelementptr inbounds %matrix_t, %matrix_t* %m722, i32 0, i32 1
  %r_mat754 = load i32, i32* %m_r753
  %m_c755 = getelementptr inbounds %matrix_t, %matrix_t* %m722, i32 0, i32 2
  %c_mat756 = load i32, i32* %m_c755
  %m_mat757 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 0
  %mat_v758 = load double*, double** %m_mat757
  %m_r759 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 1
  %r_v760 = load i32, i32* %m_r759
  %m_c761 = getelementptr inbounds %matrix_t, %matrix_t* %m390, i32 0, i32 2
  %c_v762 = load i32, i32* %m_c761
  %i763 = alloca i32
  store i32 0, i32* %i763
  br label %while764

while764:                                         ; preds = %merge786, %merge746
  %i_v792 = load i32, i32* %i763
  %bool_val793 = icmp sle i32 %i_v792, %tmp750
  br i1 %bool_val793, label %while_body765, label %merge791

while_body765:                                    ; preds = %while764
  %j766 = alloca i32
  store i32 0, i32* %j766
  br label %while767

while767:                                         ; preds = %while_body768, %while_body765
  %j_v787 = load i32, i32* %j766
  %bool_val788 = icmp sle i32 %j_v787, %tmp749
  br i1 %bool_val788, label %while_body768, label %merge786

while_body768:                                    ; preds = %while767
  %j_v769 = load i32, i32* %j766
  %i_v770 = load i32, i32* %i763
  %tmp771 = mul i32 %c_mat756, %i_v770
  %index772 = add i32 %j_v769, %tmp771
  %element_ptr773 = getelementptr double, double* %mat_mat752, i32 %index772
  %j_v774 = load i32, i32* %j766
  %tmp775 = sub i32 %j_v774, 0
  %tmp776 = add i32 %tmp775, 0
  %i_v777 = load i32, i32* %i763
  %tmp778 = sub i32 %i_v777, 0
  %tmp779 = add i32 %tmp778, 0
  %tmp780 = mul i32 %c_v762, %tmp779
  %index781 = add i32 %tmp776, %tmp780
  %element_ptr782 = getelementptr double, double* %mat_v758, i32 %index781
  %tmp_element783 = load double, double* %element_ptr782
  store double %tmp_element783, double* %element_ptr773
  %j_v784 = load i32, i32* %j766
  %tmp785 = add i32 %j_v784, 1
  store i32 %tmp785, i32* %j766
  br label %while767

merge786:                                         ; preds = %while767
  %i_v789 = load i32, i32* %i763
  %tmp790 = add i32 %i_v789, 1
  store i32 %tmp790, i32* %i763
  br label %while764

merge791:                                         ; preds = %while764
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m722, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp794 = alloca %return_t.0
  ret %return_t.0* %tmp794
}

define void @f(%matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_mat55 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat56 = load double*, double** %m_mat55
  %m_r57 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat58 = load i32, i32* %m_r57
  %m_c59 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat60 = load i32, i32* %m_c59
  %tmp61 = sub i32 %r_mat58, 1
  %tmp62 = sub i32 %c_mat60, 1
  %i63 = alloca i32
  store i32 0, i32* %i63
  br label %while64

while64:                                          ; preds = %merge78, %merge52
  %i_v85 = load i32, i32* %i63
  %bool_val86 = icmp sle i32 %i_v85, %tmp61
  br i1 %bool_val86, label %while_body65, label %merge84

while_body65:                                     ; preds = %while64
  %j66 = alloca i32
  store i32 0, i32* %j66
  br label %while67

while67:                                          ; preds = %while_body68, %while_body65
  %j_v79 = load i32, i32* %j66
  %bool_val80 = icmp sle i32 %j_v79, %tmp62
  br i1 %bool_val80, label %while_body68, label %merge78

while_body68:                                     ; preds = %while67
  %j_v69 = load i32, i32* %j66
  %i_v70 = load i32, i32* %i63
  %tmp71 = mul i32 %c_mat60, %i_v70
  %index72 = add i32 %j_v69, %tmp71
  %element_ptr73 = getelementptr double, double* %mat_mat56, i32 %index72
  %tmp_element74 = load double, double* %element_ptr73
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_double, i32 0, i32 0), double %tmp_element74)
  %printf75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str.2, i32 0, i32 0))
  %j_v76 = load i32, i32* %j66
  %tmp77 = add i32 %j_v76, 1
  store i32 %tmp77, i32* %j66
  br label %while67

merge78:                                          ; preds = %while67
  %printf81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @fmt_str.1, i32 0, i32 0))
  %i_v82 = load i32, i32* %i63
  %tmp83 = add i32 %i_v82, 1
  store i32 %tmp83, i32* %i63
  br label %while64

merge84:                                          ; preds = %while64
  %printf87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @fmt_str.3, i32 0, i32 0))
  ret void
}
