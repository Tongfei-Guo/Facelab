; ModuleID = 'Facelab'
source_filename = "Facelab"

%matrix_t = type { double*, i32, i32 }
%face_t = type { %matrix_t* }
%load_t = type { %matrix_t*, %matrix_t*, %matrix_t* }
%double_to_int_t = type { i32 }
%zero_matrix_t = type { %matrix_t* }
%matrix_size_t = type { i32, i32 }
%int_to_double_t = type { double }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"
@system_string = private unnamed_addr constant [6 x i8] c"b.jpg\00"
@system_string.9 = private unnamed_addr constant [6 x i8] c"b.jpg\00"
@system_string.10 = private unnamed_addr constant [18 x i8] c"face_2_result.jpg\00"

define i32 @main() {
entry:
  %malloccall = tail call i8* @malloc(i32 0)
  %system_mat = bitcast i8* %malloccall to double*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall1 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 0, i32* %m_c
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v10 = load i32, i32* %i
  %bool_val11 = icmp sle i32 %i_v10, -1
  br i1 %bool_val11, label %while_body, label %merge9

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while2

while2:                                           ; preds = %while_body3, %while_body
  %j_v6 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v6, -1
  br i1 %bool_val, label %while_body3, label %merge

while_body3:                                      ; preds = %while2
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp = mul i32 0, %i_v
  %index = add i32 %j_v, %tmp
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v4 = load i32, i32* %j
  %tmp5 = add i32 %j_v4, 1
  store i32 %tmp5, i32* %j
  br label %while2

merge:                                            ; preds = %while2
  %i_v7 = load i32, i32* %i
  %tmp8 = add i32 %i_v7, 1
  store i32 %tmp8, i32* %i
  br label %while

merge9:                                           ; preds = %while
  %face_result = call %face_t* @face(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @system_string, i32 0, i32 0))
  %v_ptr = getelementptr inbounds %face_t, %face_t* %face_result, i32 0, i32 0
  %v = load %matrix_t*, %matrix_t** %v_ptr
  %0 = bitcast %face_t* %face_result to i8*
  tail call void @free(i8* %0)
  %m_mat12 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat12
  %m_r13 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_mat = load i32, i32* %m_r13
  %m_c14 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_mat = load i32, i32* %m_c14
  %size = mul i32 %r_mat, %c_mat
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall15 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat16 = bitcast i8* %malloccall15 to double*
  %malloccall17 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m18 = bitcast i8* %malloccall17 to %matrix_t*
  %m_mat19 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 0
  store double* %system_mat16, double** %m_mat19
  %m_r20 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 1
  store i32 %r_mat, i32* %m_r20
  %m_c21 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 2
  store i32 %c_mat, i32* %m_c21
  %tmp22 = sub i32 %r_mat, 1
  %tmp23 = sub i32 %c_mat, 1
  %i24 = alloca i32
  store i32 0, i32* %i24
  br label %while25

while25:                                          ; preds = %merge37, %merge9
  %i_v43 = load i32, i32* %i24
  %bool_val44 = icmp sle i32 %i_v43, %tmp22
  br i1 %bool_val44, label %while_body26, label %merge42

while_body26:                                     ; preds = %while25
  %j27 = alloca i32
  store i32 0, i32* %j27
  br label %while28

while28:                                          ; preds = %while_body29, %while_body26
  %j_v38 = load i32, i32* %j27
  %bool_val39 = icmp sle i32 %j_v38, %tmp23
  br i1 %bool_val39, label %while_body29, label %merge37

while_body29:                                     ; preds = %while28
  %j_v30 = load i32, i32* %j27
  %i_v31 = load i32, i32* %i24
  %tmp32 = mul i32 %c_mat, %i_v31
  %index33 = add i32 %j_v30, %tmp32
  %element_ptr34 = getelementptr double, double* %system_mat16, i32 %index33
  store double 0.000000e+00, double* %element_ptr34
  %j_v35 = load i32, i32* %j27
  %tmp36 = add i32 %j_v35, 1
  store i32 %tmp36, i32* %j27
  br label %while28

merge37:                                          ; preds = %while28
  %i_v40 = load i32, i32* %i24
  %tmp41 = add i32 %i_v40, 1
  store i32 %tmp41, i32* %i24
  br label %while25

merge42:                                          ; preds = %while25
  %tmp45 = sub i32 %c_mat, 1
  %tmp46 = sub i32 %r_mat, 1
  %m_mat47 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 0
  %mat_mat48 = load double*, double** %m_mat47
  %m_r49 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 1
  %r_mat50 = load i32, i32* %m_r49
  %m_c51 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 2
  %c_mat52 = load i32, i32* %m_c51
  %m_mat53 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_v = load double*, double** %m_mat53
  %m_r54 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_v = load i32, i32* %m_r54
  %m_c55 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_v = load i32, i32* %m_c55
  %i56 = alloca i32
  store i32 0, i32* %i56
  br label %while57

while57:                                          ; preds = %merge78, %merge42
  %i_v84 = load i32, i32* %i56
  %bool_val85 = icmp sle i32 %i_v84, %tmp46
  br i1 %bool_val85, label %while_body58, label %merge83

while_body58:                                     ; preds = %while57
  %j59 = alloca i32
  store i32 0, i32* %j59
  br label %while60

while60:                                          ; preds = %while_body61, %while_body58
  %j_v79 = load i32, i32* %j59
  %bool_val80 = icmp sle i32 %j_v79, %tmp45
  br i1 %bool_val80, label %while_body61, label %merge78

while_body61:                                     ; preds = %while60
  %j_v62 = load i32, i32* %j59
  %i_v63 = load i32, i32* %i56
  %tmp64 = mul i32 %c_mat52, %i_v63
  %index65 = add i32 %j_v62, %tmp64
  %element_ptr66 = getelementptr double, double* %mat_mat48, i32 %index65
  %j_v67 = load i32, i32* %j59
  %tmp68 = sub i32 %j_v67, 0
  %tmp69 = add i32 %tmp68, 0
  %i_v70 = load i32, i32* %i56
  %tmp71 = sub i32 %i_v70, 0
  %tmp72 = add i32 %tmp71, 0
  %tmp73 = mul i32 %c_v, %tmp72
  %index74 = add i32 %tmp69, %tmp73
  %element_ptr75 = getelementptr double, double* %mat_v, i32 %index74
  %tmp_element = load double, double* %element_ptr75
  store double %tmp_element, double* %element_ptr66
  %j_v76 = load i32, i32* %j59
  %tmp77 = add i32 %j_v76, 1
  store i32 %tmp77, i32* %j59
  br label %while60

merge78:                                          ; preds = %while60
  %i_v81 = load i32, i32* %i56
  %tmp82 = add i32 %i_v81, 1
  store i32 %tmp82, i32* %i56
  br label %while57

merge83:                                          ; preds = %while57
  %1 = bitcast double* %mat_mat to i8*
  tail call void @free(i8* %1)
  %2 = bitcast %matrix_t* %v to i8*
  tail call void @free(i8* %2)
  %m_r86 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 1
  %r_mat87 = load i32, i32* %m_r86
  %m_c88 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 2
  %c_mat89 = load i32, i32* %m_c88
  %size90 = mul i32 %r_mat87, %c_mat89
  %mallocsize91 = mul i32 %size90, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall92 = tail call i8* @malloc(i32 %mallocsize91)
  %system_mat93 = bitcast i8* %malloccall92 to double*
  %malloccall94 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m95 = bitcast i8* %malloccall94 to %matrix_t*
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 0
  store double* %system_mat93, double** %m_mat96
  %m_r97 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 1
  store i32 %r_mat87, i32* %m_r97
  %m_c98 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 2
  store i32 %c_mat89, i32* %m_c98
  %tmp99 = sub i32 %r_mat87, 1
  %tmp100 = sub i32 %c_mat89, 1
  %i101 = alloca i32
  store i32 0, i32* %i101
  br label %while102

while102:                                         ; preds = %merge114, %merge83
  %i_v120 = load i32, i32* %i101
  %bool_val121 = icmp sle i32 %i_v120, %tmp99
  br i1 %bool_val121, label %while_body103, label %merge119

while_body103:                                    ; preds = %while102
  %j104 = alloca i32
  store i32 0, i32* %j104
  br label %while105

while105:                                         ; preds = %while_body106, %while_body103
  %j_v115 = load i32, i32* %j104
  %bool_val116 = icmp sle i32 %j_v115, %tmp100
  br i1 %bool_val116, label %while_body106, label %merge114

while_body106:                                    ; preds = %while105
  %j_v107 = load i32, i32* %j104
  %i_v108 = load i32, i32* %i101
  %tmp109 = mul i32 %c_mat89, %i_v108
  %index110 = add i32 %j_v107, %tmp109
  %element_ptr111 = getelementptr double, double* %system_mat93, i32 %index110
  store double 0.000000e+00, double* %element_ptr111
  %j_v112 = load i32, i32* %j104
  %tmp113 = add i32 %j_v112, 1
  store i32 %tmp113, i32* %j104
  br label %while105

merge114:                                         ; preds = %while105
  %i_v117 = load i32, i32* %i101
  %tmp118 = add i32 %i_v117, 1
  store i32 %tmp118, i32* %i101
  br label %while102

merge119:                                         ; preds = %while102
  %tmp122 = sub i32 %c_mat89, 1
  %tmp123 = sub i32 %r_mat87, 1
  %m_mat124 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 0
  %mat_mat125 = load double*, double** %m_mat124
  %m_r126 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 1
  %r_mat127 = load i32, i32* %m_r126
  %m_c128 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 2
  %c_mat129 = load i32, i32* %m_c128
  %m_mat130 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 0
  %mat_v131 = load double*, double** %m_mat130
  %m_r132 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 1
  %r_v133 = load i32, i32* %m_r132
  %m_c134 = getelementptr inbounds %matrix_t, %matrix_t* %m18, i32 0, i32 2
  %c_v135 = load i32, i32* %m_c134
  %i136 = alloca i32
  store i32 0, i32* %i136
  br label %while137

while137:                                         ; preds = %merge159, %merge119
  %i_v165 = load i32, i32* %i136
  %bool_val166 = icmp sle i32 %i_v165, %tmp123
  br i1 %bool_val166, label %while_body138, label %merge164

while_body138:                                    ; preds = %while137
  %j139 = alloca i32
  store i32 0, i32* %j139
  br label %while140

while140:                                         ; preds = %while_body141, %while_body138
  %j_v160 = load i32, i32* %j139
  %bool_val161 = icmp sle i32 %j_v160, %tmp122
  br i1 %bool_val161, label %while_body141, label %merge159

while_body141:                                    ; preds = %while140
  %j_v142 = load i32, i32* %j139
  %i_v143 = load i32, i32* %i136
  %tmp144 = mul i32 %c_mat129, %i_v143
  %index145 = add i32 %j_v142, %tmp144
  %element_ptr146 = getelementptr double, double* %mat_mat125, i32 %index145
  %j_v147 = load i32, i32* %j139
  %tmp148 = sub i32 %j_v147, 0
  %tmp149 = add i32 %tmp148, 0
  %i_v150 = load i32, i32* %i136
  %tmp151 = sub i32 %i_v150, 0
  %tmp152 = add i32 %tmp151, 0
  %tmp153 = mul i32 %c_v135, %tmp152
  %index154 = add i32 %tmp149, %tmp153
  %element_ptr155 = getelementptr double, double* %mat_v131, i32 %index154
  %tmp_element156 = load double, double* %element_ptr155
  store double %tmp_element156, double* %element_ptr146
  %j_v157 = load i32, i32* %j139
  %tmp158 = add i32 %j_v157, 1
  store i32 %tmp158, i32* %j139
  br label %while140

merge159:                                         ; preds = %while140
  %i_v162 = load i32, i32* %i136
  %tmp163 = add i32 %i_v162, 1
  store i32 %tmp163, i32* %i136
  br label %while137

merge164:                                         ; preds = %while137
  %malloccall167 = tail call i8* @malloc(i32 0)
  %system_mat168 = bitcast i8* %malloccall167 to double*
  %malloccall169 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m170 = bitcast i8* %malloccall169 to %matrix_t*
  %m_mat171 = getelementptr inbounds %matrix_t, %matrix_t* %m170, i32 0, i32 0
  store double* %system_mat168, double** %m_mat171
  %m_r172 = getelementptr inbounds %matrix_t, %matrix_t* %m170, i32 0, i32 1
  store i32 0, i32* %m_r172
  %m_c173 = getelementptr inbounds %matrix_t, %matrix_t* %m170, i32 0, i32 2
  store i32 0, i32* %m_c173
  %i174 = alloca i32
  store i32 0, i32* %i174
  br label %while175

while175:                                         ; preds = %merge187, %merge164
  %i_v193 = load i32, i32* %i174
  %bool_val194 = icmp sle i32 %i_v193, -1
  br i1 %bool_val194, label %while_body176, label %merge192

while_body176:                                    ; preds = %while175
  %j177 = alloca i32
  store i32 0, i32* %j177
  br label %while178

while178:                                         ; preds = %while_body179, %while_body176
  %j_v188 = load i32, i32* %j177
  %bool_val189 = icmp sle i32 %j_v188, -1
  br i1 %bool_val189, label %while_body179, label %merge187

while_body179:                                    ; preds = %while178
  %j_v180 = load i32, i32* %j177
  %i_v181 = load i32, i32* %i174
  %tmp182 = mul i32 0, %i_v181
  %index183 = add i32 %j_v180, %tmp182
  %element_ptr184 = getelementptr double, double* %system_mat168, i32 %index183
  store double 0.000000e+00, double* %element_ptr184
  %j_v185 = load i32, i32* %j177
  %tmp186 = add i32 %j_v185, 1
  store i32 %tmp186, i32* %j177
  br label %while178

merge187:                                         ; preds = %while178
  %i_v190 = load i32, i32* %i174
  %tmp191 = add i32 %i_v190, 1
  store i32 %tmp191, i32* %i174
  br label %while175

merge192:                                         ; preds = %while175
  %malloccall195 = tail call i8* @malloc(i32 0)
  %system_mat196 = bitcast i8* %malloccall195 to double*
  %malloccall197 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m198 = bitcast i8* %malloccall197 to %matrix_t*
  %m_mat199 = getelementptr inbounds %matrix_t, %matrix_t* %m198, i32 0, i32 0
  store double* %system_mat196, double** %m_mat199
  %m_r200 = getelementptr inbounds %matrix_t, %matrix_t* %m198, i32 0, i32 1
  store i32 0, i32* %m_r200
  %m_c201 = getelementptr inbounds %matrix_t, %matrix_t* %m198, i32 0, i32 2
  store i32 0, i32* %m_c201
  %i202 = alloca i32
  store i32 0, i32* %i202
  br label %while203

while203:                                         ; preds = %merge215, %merge192
  %i_v221 = load i32, i32* %i202
  %bool_val222 = icmp sle i32 %i_v221, -1
  br i1 %bool_val222, label %while_body204, label %merge220

while_body204:                                    ; preds = %while203
  %j205 = alloca i32
  store i32 0, i32* %j205
  br label %while206

while206:                                         ; preds = %while_body207, %while_body204
  %j_v216 = load i32, i32* %j205
  %bool_val217 = icmp sle i32 %j_v216, -1
  br i1 %bool_val217, label %while_body207, label %merge215

while_body207:                                    ; preds = %while206
  %j_v208 = load i32, i32* %j205
  %i_v209 = load i32, i32* %i202
  %tmp210 = mul i32 0, %i_v209
  %index211 = add i32 %j_v208, %tmp210
  %element_ptr212 = getelementptr double, double* %system_mat196, i32 %index211
  store double 0.000000e+00, double* %element_ptr212
  %j_v213 = load i32, i32* %j205
  %tmp214 = add i32 %j_v213, 1
  store i32 %tmp214, i32* %j205
  br label %while206

merge215:                                         ; preds = %while206
  %i_v218 = load i32, i32* %i202
  %tmp219 = add i32 %i_v218, 1
  store i32 %tmp219, i32* %i202
  br label %while203

merge220:                                         ; preds = %while203
  %malloccall223 = tail call i8* @malloc(i32 0)
  %system_mat224 = bitcast i8* %malloccall223 to double*
  %malloccall225 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m226 = bitcast i8* %malloccall225 to %matrix_t*
  %m_mat227 = getelementptr inbounds %matrix_t, %matrix_t* %m226, i32 0, i32 0
  store double* %system_mat224, double** %m_mat227
  %m_r228 = getelementptr inbounds %matrix_t, %matrix_t* %m226, i32 0, i32 1
  store i32 0, i32* %m_r228
  %m_c229 = getelementptr inbounds %matrix_t, %matrix_t* %m226, i32 0, i32 2
  store i32 0, i32* %m_c229
  %i230 = alloca i32
  store i32 0, i32* %i230
  br label %while231

while231:                                         ; preds = %merge243, %merge220
  %i_v249 = load i32, i32* %i230
  %bool_val250 = icmp sle i32 %i_v249, -1
  br i1 %bool_val250, label %while_body232, label %merge248

while_body232:                                    ; preds = %while231
  %j233 = alloca i32
  store i32 0, i32* %j233
  br label %while234

while234:                                         ; preds = %while_body235, %while_body232
  %j_v244 = load i32, i32* %j233
  %bool_val245 = icmp sle i32 %j_v244, -1
  br i1 %bool_val245, label %while_body235, label %merge243

while_body235:                                    ; preds = %while234
  %j_v236 = load i32, i32* %j233
  %i_v237 = load i32, i32* %i230
  %tmp238 = mul i32 0, %i_v237
  %index239 = add i32 %j_v236, %tmp238
  %element_ptr240 = getelementptr double, double* %system_mat224, i32 %index239
  store double 0.000000e+00, double* %element_ptr240
  %j_v241 = load i32, i32* %j233
  %tmp242 = add i32 %j_v241, 1
  store i32 %tmp242, i32* %j233
  br label %while234

merge243:                                         ; preds = %while234
  %i_v246 = load i32, i32* %i230
  %tmp247 = add i32 %i_v246, 1
  store i32 %tmp247, i32* %i230
  br label %while231

merge248:                                         ; preds = %while231
  %load_result = call %load_t* @load(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @system_string.9, i32 0, i32 0))
  %v_ptr251 = getelementptr inbounds %load_t, %load_t* %load_result, i32 0, i32 0
  %v252 = load %matrix_t*, %matrix_t** %v_ptr251
  %m_mat253 = getelementptr inbounds %matrix_t, %matrix_t* %v252, i32 0, i32 0
  %mat_mat254 = load double*, double** %m_mat253
  %m_r255 = getelementptr inbounds %matrix_t, %matrix_t* %v252, i32 0, i32 1
  %r_mat256 = load i32, i32* %m_r255
  %m_c257 = getelementptr inbounds %matrix_t, %matrix_t* %v252, i32 0, i32 2
  %c_mat258 = load i32, i32* %m_c257
  %size259 = mul i32 %r_mat256, %c_mat258
  %mallocsize260 = mul i32 %size259, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall261 = tail call i8* @malloc(i32 %mallocsize260)
  %system_mat262 = bitcast i8* %malloccall261 to double*
  %malloccall263 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m264 = bitcast i8* %malloccall263 to %matrix_t*
  %m_mat265 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 0
  store double* %system_mat262, double** %m_mat265
  %m_r266 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 1
  store i32 %r_mat256, i32* %m_r266
  %m_c267 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 2
  store i32 %c_mat258, i32* %m_c267
  %tmp268 = sub i32 %r_mat256, 1
  %tmp269 = sub i32 %c_mat258, 1
  %i270 = alloca i32
  store i32 0, i32* %i270
  br label %while271

while271:                                         ; preds = %merge283, %merge248
  %i_v289 = load i32, i32* %i270
  %bool_val290 = icmp sle i32 %i_v289, %tmp268
  br i1 %bool_val290, label %while_body272, label %merge288

while_body272:                                    ; preds = %while271
  %j273 = alloca i32
  store i32 0, i32* %j273
  br label %while274

while274:                                         ; preds = %while_body275, %while_body272
  %j_v284 = load i32, i32* %j273
  %bool_val285 = icmp sle i32 %j_v284, %tmp269
  br i1 %bool_val285, label %while_body275, label %merge283

while_body275:                                    ; preds = %while274
  %j_v276 = load i32, i32* %j273
  %i_v277 = load i32, i32* %i270
  %tmp278 = mul i32 %c_mat258, %i_v277
  %index279 = add i32 %j_v276, %tmp278
  %element_ptr280 = getelementptr double, double* %system_mat262, i32 %index279
  store double 0.000000e+00, double* %element_ptr280
  %j_v281 = load i32, i32* %j273
  %tmp282 = add i32 %j_v281, 1
  store i32 %tmp282, i32* %j273
  br label %while274

merge283:                                         ; preds = %while274
  %i_v286 = load i32, i32* %i270
  %tmp287 = add i32 %i_v286, 1
  store i32 %tmp287, i32* %i270
  br label %while271

merge288:                                         ; preds = %while271
  %tmp291 = sub i32 %c_mat258, 1
  %tmp292 = sub i32 %r_mat256, 1
  %m_mat293 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 0
  %mat_mat294 = load double*, double** %m_mat293
  %m_r295 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 1
  %r_mat296 = load i32, i32* %m_r295
  %m_c297 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 2
  %c_mat298 = load i32, i32* %m_c297
  %m_mat299 = getelementptr inbounds %matrix_t, %matrix_t* %v252, i32 0, i32 0
  %mat_v300 = load double*, double** %m_mat299
  %m_r301 = getelementptr inbounds %matrix_t, %matrix_t* %v252, i32 0, i32 1
  %r_v302 = load i32, i32* %m_r301
  %m_c303 = getelementptr inbounds %matrix_t, %matrix_t* %v252, i32 0, i32 2
  %c_v304 = load i32, i32* %m_c303
  %i305 = alloca i32
  store i32 0, i32* %i305
  br label %while306

while306:                                         ; preds = %merge328, %merge288
  %i_v334 = load i32, i32* %i305
  %bool_val335 = icmp sle i32 %i_v334, %tmp292
  br i1 %bool_val335, label %while_body307, label %merge333

while_body307:                                    ; preds = %while306
  %j308 = alloca i32
  store i32 0, i32* %j308
  br label %while309

while309:                                         ; preds = %while_body310, %while_body307
  %j_v329 = load i32, i32* %j308
  %bool_val330 = icmp sle i32 %j_v329, %tmp291
  br i1 %bool_val330, label %while_body310, label %merge328

while_body310:                                    ; preds = %while309
  %j_v311 = load i32, i32* %j308
  %i_v312 = load i32, i32* %i305
  %tmp313 = mul i32 %c_mat298, %i_v312
  %index314 = add i32 %j_v311, %tmp313
  %element_ptr315 = getelementptr double, double* %mat_mat294, i32 %index314
  %j_v316 = load i32, i32* %j308
  %tmp317 = sub i32 %j_v316, 0
  %tmp318 = add i32 %tmp317, 0
  %i_v319 = load i32, i32* %i305
  %tmp320 = sub i32 %i_v319, 0
  %tmp321 = add i32 %tmp320, 0
  %tmp322 = mul i32 %c_v304, %tmp321
  %index323 = add i32 %tmp318, %tmp322
  %element_ptr324 = getelementptr double, double* %mat_v300, i32 %index323
  %tmp_element325 = load double, double* %element_ptr324
  store double %tmp_element325, double* %element_ptr315
  %j_v326 = load i32, i32* %j308
  %tmp327 = add i32 %j_v326, 1
  store i32 %tmp327, i32* %j308
  br label %while309

merge328:                                         ; preds = %while309
  %i_v331 = load i32, i32* %i305
  %tmp332 = add i32 %i_v331, 1
  store i32 %tmp332, i32* %i305
  br label %while306

merge333:                                         ; preds = %while306
  %3 = bitcast double* %mat_mat254 to i8*
  tail call void @free(i8* %3)
  %4 = bitcast %matrix_t* %v252 to i8*
  tail call void @free(i8* %4)
  %m_r336 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 1
  %r_mat337 = load i32, i32* %m_r336
  %m_c338 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 2
  %c_mat339 = load i32, i32* %m_c338
  %size340 = mul i32 %r_mat337, %c_mat339
  %mallocsize341 = mul i32 %size340, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall342 = tail call i8* @malloc(i32 %mallocsize341)
  %system_mat343 = bitcast i8* %malloccall342 to double*
  %malloccall344 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m345 = bitcast i8* %malloccall344 to %matrix_t*
  %m_mat346 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 0
  store double* %system_mat343, double** %m_mat346
  %m_r347 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  store i32 %r_mat337, i32* %m_r347
  %m_c348 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  store i32 %c_mat339, i32* %m_c348
  %tmp349 = sub i32 %r_mat337, 1
  %tmp350 = sub i32 %c_mat339, 1
  %i351 = alloca i32
  store i32 0, i32* %i351
  br label %while352

while352:                                         ; preds = %merge364, %merge333
  %i_v370 = load i32, i32* %i351
  %bool_val371 = icmp sle i32 %i_v370, %tmp349
  br i1 %bool_val371, label %while_body353, label %merge369

while_body353:                                    ; preds = %while352
  %j354 = alloca i32
  store i32 0, i32* %j354
  br label %while355

while355:                                         ; preds = %while_body356, %while_body353
  %j_v365 = load i32, i32* %j354
  %bool_val366 = icmp sle i32 %j_v365, %tmp350
  br i1 %bool_val366, label %while_body356, label %merge364

while_body356:                                    ; preds = %while355
  %j_v357 = load i32, i32* %j354
  %i_v358 = load i32, i32* %i351
  %tmp359 = mul i32 %c_mat339, %i_v358
  %index360 = add i32 %j_v357, %tmp359
  %element_ptr361 = getelementptr double, double* %system_mat343, i32 %index360
  store double 0.000000e+00, double* %element_ptr361
  %j_v362 = load i32, i32* %j354
  %tmp363 = add i32 %j_v362, 1
  store i32 %tmp363, i32* %j354
  br label %while355

merge364:                                         ; preds = %while355
  %i_v367 = load i32, i32* %i351
  %tmp368 = add i32 %i_v367, 1
  store i32 %tmp368, i32* %i351
  br label %while352

merge369:                                         ; preds = %while352
  %tmp372 = sub i32 %c_mat339, 1
  %tmp373 = sub i32 %r_mat337, 1
  %m_mat374 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 0
  %mat_mat375 = load double*, double** %m_mat374
  %m_r376 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat377 = load i32, i32* %m_r376
  %m_c378 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat379 = load i32, i32* %m_c378
  %m_mat380 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 0
  %mat_v381 = load double*, double** %m_mat380
  %m_r382 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 1
  %r_v383 = load i32, i32* %m_r382
  %m_c384 = getelementptr inbounds %matrix_t, %matrix_t* %m264, i32 0, i32 2
  %c_v385 = load i32, i32* %m_c384
  %i386 = alloca i32
  store i32 0, i32* %i386
  br label %while387

while387:                                         ; preds = %merge409, %merge369
  %i_v415 = load i32, i32* %i386
  %bool_val416 = icmp sle i32 %i_v415, %tmp373
  br i1 %bool_val416, label %while_body388, label %merge414

while_body388:                                    ; preds = %while387
  %j389 = alloca i32
  store i32 0, i32* %j389
  br label %while390

while390:                                         ; preds = %while_body391, %while_body388
  %j_v410 = load i32, i32* %j389
  %bool_val411 = icmp sle i32 %j_v410, %tmp372
  br i1 %bool_val411, label %while_body391, label %merge409

while_body391:                                    ; preds = %while390
  %j_v392 = load i32, i32* %j389
  %i_v393 = load i32, i32* %i386
  %tmp394 = mul i32 %c_mat379, %i_v393
  %index395 = add i32 %j_v392, %tmp394
  %element_ptr396 = getelementptr double, double* %mat_mat375, i32 %index395
  %j_v397 = load i32, i32* %j389
  %tmp398 = sub i32 %j_v397, 0
  %tmp399 = add i32 %tmp398, 0
  %i_v400 = load i32, i32* %i386
  %tmp401 = sub i32 %i_v400, 0
  %tmp402 = add i32 %tmp401, 0
  %tmp403 = mul i32 %c_v385, %tmp402
  %index404 = add i32 %tmp399, %tmp403
  %element_ptr405 = getelementptr double, double* %mat_v381, i32 %index404
  %tmp_element406 = load double, double* %element_ptr405
  store double %tmp_element406, double* %element_ptr396
  %j_v407 = load i32, i32* %j389
  %tmp408 = add i32 %j_v407, 1
  store i32 %tmp408, i32* %j389
  br label %while390

merge409:                                         ; preds = %while390
  %i_v412 = load i32, i32* %i386
  %tmp413 = add i32 %i_v412, 1
  store i32 %tmp413, i32* %i386
  br label %while387

merge414:                                         ; preds = %while387
  %v_ptr417 = getelementptr inbounds %load_t, %load_t* %load_result, i32 0, i32 1
  %v418 = load %matrix_t*, %matrix_t** %v_ptr417
  %m_mat419 = getelementptr inbounds %matrix_t, %matrix_t* %v418, i32 0, i32 0
  %mat_mat420 = load double*, double** %m_mat419
  %m_r421 = getelementptr inbounds %matrix_t, %matrix_t* %v418, i32 0, i32 1
  %r_mat422 = load i32, i32* %m_r421
  %m_c423 = getelementptr inbounds %matrix_t, %matrix_t* %v418, i32 0, i32 2
  %c_mat424 = load i32, i32* %m_c423
  %size425 = mul i32 %r_mat422, %c_mat424
  %mallocsize426 = mul i32 %size425, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall427 = tail call i8* @malloc(i32 %mallocsize426)
  %system_mat428 = bitcast i8* %malloccall427 to double*
  %malloccall429 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m430 = bitcast i8* %malloccall429 to %matrix_t*
  %m_mat431 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 0
  store double* %system_mat428, double** %m_mat431
  %m_r432 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 1
  store i32 %r_mat422, i32* %m_r432
  %m_c433 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 2
  store i32 %c_mat424, i32* %m_c433
  %tmp434 = sub i32 %r_mat422, 1
  %tmp435 = sub i32 %c_mat424, 1
  %i436 = alloca i32
  store i32 0, i32* %i436
  br label %while437

while437:                                         ; preds = %merge449, %merge414
  %i_v455 = load i32, i32* %i436
  %bool_val456 = icmp sle i32 %i_v455, %tmp434
  br i1 %bool_val456, label %while_body438, label %merge454

while_body438:                                    ; preds = %while437
  %j439 = alloca i32
  store i32 0, i32* %j439
  br label %while440

while440:                                         ; preds = %while_body441, %while_body438
  %j_v450 = load i32, i32* %j439
  %bool_val451 = icmp sle i32 %j_v450, %tmp435
  br i1 %bool_val451, label %while_body441, label %merge449

while_body441:                                    ; preds = %while440
  %j_v442 = load i32, i32* %j439
  %i_v443 = load i32, i32* %i436
  %tmp444 = mul i32 %c_mat424, %i_v443
  %index445 = add i32 %j_v442, %tmp444
  %element_ptr446 = getelementptr double, double* %system_mat428, i32 %index445
  store double 0.000000e+00, double* %element_ptr446
  %j_v447 = load i32, i32* %j439
  %tmp448 = add i32 %j_v447, 1
  store i32 %tmp448, i32* %j439
  br label %while440

merge449:                                         ; preds = %while440
  %i_v452 = load i32, i32* %i436
  %tmp453 = add i32 %i_v452, 1
  store i32 %tmp453, i32* %i436
  br label %while437

merge454:                                         ; preds = %while437
  %tmp457 = sub i32 %c_mat424, 1
  %tmp458 = sub i32 %r_mat422, 1
  %m_mat459 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 0
  %mat_mat460 = load double*, double** %m_mat459
  %m_r461 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 1
  %r_mat462 = load i32, i32* %m_r461
  %m_c463 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 2
  %c_mat464 = load i32, i32* %m_c463
  %m_mat465 = getelementptr inbounds %matrix_t, %matrix_t* %v418, i32 0, i32 0
  %mat_v466 = load double*, double** %m_mat465
  %m_r467 = getelementptr inbounds %matrix_t, %matrix_t* %v418, i32 0, i32 1
  %r_v468 = load i32, i32* %m_r467
  %m_c469 = getelementptr inbounds %matrix_t, %matrix_t* %v418, i32 0, i32 2
  %c_v470 = load i32, i32* %m_c469
  %i471 = alloca i32
  store i32 0, i32* %i471
  br label %while472

while472:                                         ; preds = %merge494, %merge454
  %i_v500 = load i32, i32* %i471
  %bool_val501 = icmp sle i32 %i_v500, %tmp458
  br i1 %bool_val501, label %while_body473, label %merge499

while_body473:                                    ; preds = %while472
  %j474 = alloca i32
  store i32 0, i32* %j474
  br label %while475

while475:                                         ; preds = %while_body476, %while_body473
  %j_v495 = load i32, i32* %j474
  %bool_val496 = icmp sle i32 %j_v495, %tmp457
  br i1 %bool_val496, label %while_body476, label %merge494

while_body476:                                    ; preds = %while475
  %j_v477 = load i32, i32* %j474
  %i_v478 = load i32, i32* %i471
  %tmp479 = mul i32 %c_mat464, %i_v478
  %index480 = add i32 %j_v477, %tmp479
  %element_ptr481 = getelementptr double, double* %mat_mat460, i32 %index480
  %j_v482 = load i32, i32* %j474
  %tmp483 = sub i32 %j_v482, 0
  %tmp484 = add i32 %tmp483, 0
  %i_v485 = load i32, i32* %i471
  %tmp486 = sub i32 %i_v485, 0
  %tmp487 = add i32 %tmp486, 0
  %tmp488 = mul i32 %c_v470, %tmp487
  %index489 = add i32 %tmp484, %tmp488
  %element_ptr490 = getelementptr double, double* %mat_v466, i32 %index489
  %tmp_element491 = load double, double* %element_ptr490
  store double %tmp_element491, double* %element_ptr481
  %j_v492 = load i32, i32* %j474
  %tmp493 = add i32 %j_v492, 1
  store i32 %tmp493, i32* %j474
  br label %while475

merge494:                                         ; preds = %while475
  %i_v497 = load i32, i32* %i471
  %tmp498 = add i32 %i_v497, 1
  store i32 %tmp498, i32* %i471
  br label %while472

merge499:                                         ; preds = %while472
  %5 = bitcast double* %mat_mat420 to i8*
  tail call void @free(i8* %5)
  %6 = bitcast %matrix_t* %v418 to i8*
  tail call void @free(i8* %6)
  %m_r502 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 1
  %r_mat503 = load i32, i32* %m_r502
  %m_c504 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 2
  %c_mat505 = load i32, i32* %m_c504
  %size506 = mul i32 %r_mat503, %c_mat505
  %mallocsize507 = mul i32 %size506, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall508 = tail call i8* @malloc(i32 %mallocsize507)
  %system_mat509 = bitcast i8* %malloccall508 to double*
  %malloccall510 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m511 = bitcast i8* %malloccall510 to %matrix_t*
  %m_mat512 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 0
  store double* %system_mat509, double** %m_mat512
  %m_r513 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  store i32 %r_mat503, i32* %m_r513
  %m_c514 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  store i32 %c_mat505, i32* %m_c514
  %tmp515 = sub i32 %r_mat503, 1
  %tmp516 = sub i32 %c_mat505, 1
  %i517 = alloca i32
  store i32 0, i32* %i517
  br label %while518

while518:                                         ; preds = %merge530, %merge499
  %i_v536 = load i32, i32* %i517
  %bool_val537 = icmp sle i32 %i_v536, %tmp515
  br i1 %bool_val537, label %while_body519, label %merge535

while_body519:                                    ; preds = %while518
  %j520 = alloca i32
  store i32 0, i32* %j520
  br label %while521

while521:                                         ; preds = %while_body522, %while_body519
  %j_v531 = load i32, i32* %j520
  %bool_val532 = icmp sle i32 %j_v531, %tmp516
  br i1 %bool_val532, label %while_body522, label %merge530

while_body522:                                    ; preds = %while521
  %j_v523 = load i32, i32* %j520
  %i_v524 = load i32, i32* %i517
  %tmp525 = mul i32 %c_mat505, %i_v524
  %index526 = add i32 %j_v523, %tmp525
  %element_ptr527 = getelementptr double, double* %system_mat509, i32 %index526
  store double 0.000000e+00, double* %element_ptr527
  %j_v528 = load i32, i32* %j520
  %tmp529 = add i32 %j_v528, 1
  store i32 %tmp529, i32* %j520
  br label %while521

merge530:                                         ; preds = %while521
  %i_v533 = load i32, i32* %i517
  %tmp534 = add i32 %i_v533, 1
  store i32 %tmp534, i32* %i517
  br label %while518

merge535:                                         ; preds = %while518
  %tmp538 = sub i32 %c_mat505, 1
  %tmp539 = sub i32 %r_mat503, 1
  %m_mat540 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 0
  %mat_mat541 = load double*, double** %m_mat540
  %m_r542 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat543 = load i32, i32* %m_r542
  %m_c544 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat545 = load i32, i32* %m_c544
  %m_mat546 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 0
  %mat_v547 = load double*, double** %m_mat546
  %m_r548 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 1
  %r_v549 = load i32, i32* %m_r548
  %m_c550 = getelementptr inbounds %matrix_t, %matrix_t* %m430, i32 0, i32 2
  %c_v551 = load i32, i32* %m_c550
  %i552 = alloca i32
  store i32 0, i32* %i552
  br label %while553

while553:                                         ; preds = %merge575, %merge535
  %i_v581 = load i32, i32* %i552
  %bool_val582 = icmp sle i32 %i_v581, %tmp539
  br i1 %bool_val582, label %while_body554, label %merge580

while_body554:                                    ; preds = %while553
  %j555 = alloca i32
  store i32 0, i32* %j555
  br label %while556

while556:                                         ; preds = %while_body557, %while_body554
  %j_v576 = load i32, i32* %j555
  %bool_val577 = icmp sle i32 %j_v576, %tmp538
  br i1 %bool_val577, label %while_body557, label %merge575

while_body557:                                    ; preds = %while556
  %j_v558 = load i32, i32* %j555
  %i_v559 = load i32, i32* %i552
  %tmp560 = mul i32 %c_mat545, %i_v559
  %index561 = add i32 %j_v558, %tmp560
  %element_ptr562 = getelementptr double, double* %mat_mat541, i32 %index561
  %j_v563 = load i32, i32* %j555
  %tmp564 = sub i32 %j_v563, 0
  %tmp565 = add i32 %tmp564, 0
  %i_v566 = load i32, i32* %i552
  %tmp567 = sub i32 %i_v566, 0
  %tmp568 = add i32 %tmp567, 0
  %tmp569 = mul i32 %c_v551, %tmp568
  %index570 = add i32 %tmp565, %tmp569
  %element_ptr571 = getelementptr double, double* %mat_v547, i32 %index570
  %tmp_element572 = load double, double* %element_ptr571
  store double %tmp_element572, double* %element_ptr562
  %j_v573 = load i32, i32* %j555
  %tmp574 = add i32 %j_v573, 1
  store i32 %tmp574, i32* %j555
  br label %while556

merge575:                                         ; preds = %while556
  %i_v578 = load i32, i32* %i552
  %tmp579 = add i32 %i_v578, 1
  store i32 %tmp579, i32* %i552
  br label %while553

merge580:                                         ; preds = %while553
  %v_ptr583 = getelementptr inbounds %load_t, %load_t* %load_result, i32 0, i32 2
  %v584 = load %matrix_t*, %matrix_t** %v_ptr583
  %m_mat585 = getelementptr inbounds %matrix_t, %matrix_t* %v584, i32 0, i32 0
  %mat_mat586 = load double*, double** %m_mat585
  %m_r587 = getelementptr inbounds %matrix_t, %matrix_t* %v584, i32 0, i32 1
  %r_mat588 = load i32, i32* %m_r587
  %m_c589 = getelementptr inbounds %matrix_t, %matrix_t* %v584, i32 0, i32 2
  %c_mat590 = load i32, i32* %m_c589
  %size591 = mul i32 %r_mat588, %c_mat590
  %mallocsize592 = mul i32 %size591, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall593 = tail call i8* @malloc(i32 %mallocsize592)
  %system_mat594 = bitcast i8* %malloccall593 to double*
  %malloccall595 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m596 = bitcast i8* %malloccall595 to %matrix_t*
  %m_mat597 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 0
  store double* %system_mat594, double** %m_mat597
  %m_r598 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 1
  store i32 %r_mat588, i32* %m_r598
  %m_c599 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 2
  store i32 %c_mat590, i32* %m_c599
  %tmp600 = sub i32 %r_mat588, 1
  %tmp601 = sub i32 %c_mat590, 1
  %i602 = alloca i32
  store i32 0, i32* %i602
  br label %while603

while603:                                         ; preds = %merge615, %merge580
  %i_v621 = load i32, i32* %i602
  %bool_val622 = icmp sle i32 %i_v621, %tmp600
  br i1 %bool_val622, label %while_body604, label %merge620

while_body604:                                    ; preds = %while603
  %j605 = alloca i32
  store i32 0, i32* %j605
  br label %while606

while606:                                         ; preds = %while_body607, %while_body604
  %j_v616 = load i32, i32* %j605
  %bool_val617 = icmp sle i32 %j_v616, %tmp601
  br i1 %bool_val617, label %while_body607, label %merge615

while_body607:                                    ; preds = %while606
  %j_v608 = load i32, i32* %j605
  %i_v609 = load i32, i32* %i602
  %tmp610 = mul i32 %c_mat590, %i_v609
  %index611 = add i32 %j_v608, %tmp610
  %element_ptr612 = getelementptr double, double* %system_mat594, i32 %index611
  store double 0.000000e+00, double* %element_ptr612
  %j_v613 = load i32, i32* %j605
  %tmp614 = add i32 %j_v613, 1
  store i32 %tmp614, i32* %j605
  br label %while606

merge615:                                         ; preds = %while606
  %i_v618 = load i32, i32* %i602
  %tmp619 = add i32 %i_v618, 1
  store i32 %tmp619, i32* %i602
  br label %while603

merge620:                                         ; preds = %while603
  %tmp623 = sub i32 %c_mat590, 1
  %tmp624 = sub i32 %r_mat588, 1
  %m_mat625 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 0
  %mat_mat626 = load double*, double** %m_mat625
  %m_r627 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 1
  %r_mat628 = load i32, i32* %m_r627
  %m_c629 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 2
  %c_mat630 = load i32, i32* %m_c629
  %m_mat631 = getelementptr inbounds %matrix_t, %matrix_t* %v584, i32 0, i32 0
  %mat_v632 = load double*, double** %m_mat631
  %m_r633 = getelementptr inbounds %matrix_t, %matrix_t* %v584, i32 0, i32 1
  %r_v634 = load i32, i32* %m_r633
  %m_c635 = getelementptr inbounds %matrix_t, %matrix_t* %v584, i32 0, i32 2
  %c_v636 = load i32, i32* %m_c635
  %i637 = alloca i32
  store i32 0, i32* %i637
  br label %while638

while638:                                         ; preds = %merge660, %merge620
  %i_v666 = load i32, i32* %i637
  %bool_val667 = icmp sle i32 %i_v666, %tmp624
  br i1 %bool_val667, label %while_body639, label %merge665

while_body639:                                    ; preds = %while638
  %j640 = alloca i32
  store i32 0, i32* %j640
  br label %while641

while641:                                         ; preds = %while_body642, %while_body639
  %j_v661 = load i32, i32* %j640
  %bool_val662 = icmp sle i32 %j_v661, %tmp623
  br i1 %bool_val662, label %while_body642, label %merge660

while_body642:                                    ; preds = %while641
  %j_v643 = load i32, i32* %j640
  %i_v644 = load i32, i32* %i637
  %tmp645 = mul i32 %c_mat630, %i_v644
  %index646 = add i32 %j_v643, %tmp645
  %element_ptr647 = getelementptr double, double* %mat_mat626, i32 %index646
  %j_v648 = load i32, i32* %j640
  %tmp649 = sub i32 %j_v648, 0
  %tmp650 = add i32 %tmp649, 0
  %i_v651 = load i32, i32* %i637
  %tmp652 = sub i32 %i_v651, 0
  %tmp653 = add i32 %tmp652, 0
  %tmp654 = mul i32 %c_v636, %tmp653
  %index655 = add i32 %tmp650, %tmp654
  %element_ptr656 = getelementptr double, double* %mat_v632, i32 %index655
  %tmp_element657 = load double, double* %element_ptr656
  store double %tmp_element657, double* %element_ptr647
  %j_v658 = load i32, i32* %j640
  %tmp659 = add i32 %j_v658, 1
  store i32 %tmp659, i32* %j640
  br label %while641

merge660:                                         ; preds = %while641
  %i_v663 = load i32, i32* %i637
  %tmp664 = add i32 %i_v663, 1
  store i32 %tmp664, i32* %i637
  br label %while638

merge665:                                         ; preds = %while638
  %7 = bitcast double* %mat_mat586 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v584 to i8*
  tail call void @free(i8* %8)
  %m_r668 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 1
  %r_mat669 = load i32, i32* %m_r668
  %m_c670 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 2
  %c_mat671 = load i32, i32* %m_c670
  %size672 = mul i32 %r_mat669, %c_mat671
  %mallocsize673 = mul i32 %size672, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall674 = tail call i8* @malloc(i32 %mallocsize673)
  %system_mat675 = bitcast i8* %malloccall674 to double*
  %malloccall676 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m677 = bitcast i8* %malloccall676 to %matrix_t*
  %m_mat678 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  store double* %system_mat675, double** %m_mat678
  %m_r679 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  store i32 %r_mat669, i32* %m_r679
  %m_c680 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  store i32 %c_mat671, i32* %m_c680
  %tmp681 = sub i32 %r_mat669, 1
  %tmp682 = sub i32 %c_mat671, 1
  %i683 = alloca i32
  store i32 0, i32* %i683
  br label %while684

while684:                                         ; preds = %merge696, %merge665
  %i_v702 = load i32, i32* %i683
  %bool_val703 = icmp sle i32 %i_v702, %tmp681
  br i1 %bool_val703, label %while_body685, label %merge701

while_body685:                                    ; preds = %while684
  %j686 = alloca i32
  store i32 0, i32* %j686
  br label %while687

while687:                                         ; preds = %while_body688, %while_body685
  %j_v697 = load i32, i32* %j686
  %bool_val698 = icmp sle i32 %j_v697, %tmp682
  br i1 %bool_val698, label %while_body688, label %merge696

while_body688:                                    ; preds = %while687
  %j_v689 = load i32, i32* %j686
  %i_v690 = load i32, i32* %i683
  %tmp691 = mul i32 %c_mat671, %i_v690
  %index692 = add i32 %j_v689, %tmp691
  %element_ptr693 = getelementptr double, double* %system_mat675, i32 %index692
  store double 0.000000e+00, double* %element_ptr693
  %j_v694 = load i32, i32* %j686
  %tmp695 = add i32 %j_v694, 1
  store i32 %tmp695, i32* %j686
  br label %while687

merge696:                                         ; preds = %while687
  %i_v699 = load i32, i32* %i683
  %tmp700 = add i32 %i_v699, 1
  store i32 %tmp700, i32* %i683
  br label %while684

merge701:                                         ; preds = %while684
  %tmp704 = sub i32 %c_mat671, 1
  %tmp705 = sub i32 %r_mat669, 1
  %m_mat706 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat707 = load double*, double** %m_mat706
  %m_r708 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat709 = load i32, i32* %m_r708
  %m_c710 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat711 = load i32, i32* %m_c710
  %m_mat712 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 0
  %mat_v713 = load double*, double** %m_mat712
  %m_r714 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 1
  %r_v715 = load i32, i32* %m_r714
  %m_c716 = getelementptr inbounds %matrix_t, %matrix_t* %m596, i32 0, i32 2
  %c_v717 = load i32, i32* %m_c716
  %i718 = alloca i32
  store i32 0, i32* %i718
  br label %while719

while719:                                         ; preds = %merge741, %merge701
  %i_v747 = load i32, i32* %i718
  %bool_val748 = icmp sle i32 %i_v747, %tmp705
  br i1 %bool_val748, label %while_body720, label %merge746

while_body720:                                    ; preds = %while719
  %j721 = alloca i32
  store i32 0, i32* %j721
  br label %while722

while722:                                         ; preds = %while_body723, %while_body720
  %j_v742 = load i32, i32* %j721
  %bool_val743 = icmp sle i32 %j_v742, %tmp704
  br i1 %bool_val743, label %while_body723, label %merge741

while_body723:                                    ; preds = %while722
  %j_v724 = load i32, i32* %j721
  %i_v725 = load i32, i32* %i718
  %tmp726 = mul i32 %c_mat711, %i_v725
  %index727 = add i32 %j_v724, %tmp726
  %element_ptr728 = getelementptr double, double* %mat_mat707, i32 %index727
  %j_v729 = load i32, i32* %j721
  %tmp730 = sub i32 %j_v729, 0
  %tmp731 = add i32 %tmp730, 0
  %i_v732 = load i32, i32* %i718
  %tmp733 = sub i32 %i_v732, 0
  %tmp734 = add i32 %tmp733, 0
  %tmp735 = mul i32 %c_v717, %tmp734
  %index736 = add i32 %tmp731, %tmp735
  %element_ptr737 = getelementptr double, double* %mat_v713, i32 %index736
  %tmp_element738 = load double, double* %element_ptr737
  store double %tmp_element738, double* %element_ptr728
  %j_v739 = load i32, i32* %j721
  %tmp740 = add i32 %j_v739, 1
  store i32 %tmp740, i32* %j721
  br label %while722

merge741:                                         ; preds = %while722
  %i_v744 = load i32, i32* %i718
  %tmp745 = add i32 %i_v744, 1
  store i32 %tmp745, i32* %i718
  br label %while719

merge746:                                         ; preds = %while719
  %9 = bitcast %load_t* %load_result to i8*
  tail call void @free(i8* %9)
  %x = alloca double
  %m_r749 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 1
  %r_mat750 = load i32, i32* %m_r749
  %m_c751 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 2
  %c_mat752 = load i32, i32* %m_c751
  br i1 false, label %then, label %else

merge753:                                         ; preds = %else, %then
  %tmp754 = sub i32 %r_mat750, 1
  %tmp759 = icmp slt i32 %tmp754, 0
  br i1 %tmp759, label %then756, label %else758

then:                                             ; preds = %merge746
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge753

else:                                             ; preds = %merge746
  br label %merge753

merge755:                                         ; preds = %else758, %then756
  br i1 false, label %then761, label %else763

then756:                                          ; preds = %merge753
  %printf757 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge755

else758:                                          ; preds = %merge753
  br label %merge755

merge760:                                         ; preds = %else763, %then761
  %tmp764 = sub i32 %r_mat750, 1
  %tmp769 = icmp slt i32 %tmp764, 0
  br i1 %tmp769, label %then766, label %else768

then761:                                          ; preds = %merge755
  %printf762 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge760

else763:                                          ; preds = %merge755
  br label %merge760

merge765:                                         ; preds = %else768, %then766
  br i1 false, label %then771, label %else773

then766:                                          ; preds = %merge760
  %printf767 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge765

else768:                                          ; preds = %merge760
  br label %merge765

merge770:                                         ; preds = %else773, %then771
  %tmp774 = sub i32 %c_mat752, 1
  %tmp779 = icmp slt i32 %tmp774, 0
  br i1 %tmp779, label %then776, label %else778

then771:                                          ; preds = %merge765
  %printf772 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge770

else773:                                          ; preds = %merge765
  br label %merge770

merge775:                                         ; preds = %else778, %then776
  br i1 false, label %then781, label %else783

then776:                                          ; preds = %merge770
  %printf777 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge775

else778:                                          ; preds = %merge770
  br label %merge775

merge780:                                         ; preds = %else783, %then781
  %tmp784 = sub i32 %c_mat752, 1
  %tmp789 = icmp slt i32 %tmp784, 0
  br i1 %tmp789, label %then786, label %else788

then781:                                          ; preds = %merge775
  %printf782 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge780

else783:                                          ; preds = %merge775
  br label %merge780

merge785:                                         ; preds = %else788, %then786
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 0
  %mat790 = load double*, double** %mat
  %tmp791 = mul i32 %c_mat752, 0
  %index792 = add i32 0, %tmp791
  %element_ptr793 = getelementptr double, double* %mat790, i32 %index792
  %element = load double, double* %element_ptr793
  %tmp794 = load double, double* %x
  store double %element, double* %x
  %y = alloca double
  %m_r795 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 1
  %r_mat796 = load i32, i32* %m_r795
  %m_c797 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 2
  %c_mat798 = load i32, i32* %m_c797
  br i1 false, label %then800, label %else802

then786:                                          ; preds = %merge780
  %printf787 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge785

else788:                                          ; preds = %merge780
  br label %merge785

merge799:                                         ; preds = %else802, %then800
  %tmp803 = sub i32 %r_mat796, 1
  %tmp808 = icmp slt i32 %tmp803, 1
  br i1 %tmp808, label %then805, label %else807

then800:                                          ; preds = %merge785
  %printf801 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge799

else802:                                          ; preds = %merge785
  br label %merge799

merge804:                                         ; preds = %else807, %then805
  br i1 false, label %then810, label %else812

then805:                                          ; preds = %merge799
  %printf806 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge804

else807:                                          ; preds = %merge799
  br label %merge804

merge809:                                         ; preds = %else812, %then810
  %tmp813 = sub i32 %r_mat796, 1
  %tmp818 = icmp slt i32 %tmp813, 1
  br i1 %tmp818, label %then815, label %else817

then810:                                          ; preds = %merge804
  %printf811 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge809

else812:                                          ; preds = %merge804
  br label %merge809

merge814:                                         ; preds = %else817, %then815
  br i1 false, label %then820, label %else822

then815:                                          ; preds = %merge809
  %printf816 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge814

else817:                                          ; preds = %merge809
  br label %merge814

merge819:                                         ; preds = %else822, %then820
  %tmp823 = sub i32 %c_mat798, 1
  %tmp828 = icmp slt i32 %tmp823, 0
  br i1 %tmp828, label %then825, label %else827

then820:                                          ; preds = %merge814
  %printf821 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge819

else822:                                          ; preds = %merge814
  br label %merge819

merge824:                                         ; preds = %else827, %then825
  br i1 false, label %then830, label %else832

then825:                                          ; preds = %merge819
  %printf826 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge824

else827:                                          ; preds = %merge819
  br label %merge824

merge829:                                         ; preds = %else832, %then830
  %tmp833 = sub i32 %c_mat798, 1
  %tmp838 = icmp slt i32 %tmp833, 0
  br i1 %tmp838, label %then835, label %else837

then830:                                          ; preds = %merge824
  %printf831 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge829

else832:                                          ; preds = %merge824
  br label %merge829

merge834:                                         ; preds = %else837, %then835
  %mat839 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 0
  %mat840 = load double*, double** %mat839
  %tmp841 = mul i32 %c_mat798, 1
  %index842 = add i32 0, %tmp841
  %element_ptr843 = getelementptr double, double* %mat840, i32 %index842
  %element844 = load double, double* %element_ptr843
  %tmp845 = load double, double* %y
  store double %element844, double* %y
  %l = alloca double
  %m_r846 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 1
  %r_mat847 = load i32, i32* %m_r846
  %m_c848 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 2
  %c_mat849 = load i32, i32* %m_c848
  br i1 false, label %then851, label %else853

then835:                                          ; preds = %merge829
  %printf836 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge834

else837:                                          ; preds = %merge829
  br label %merge834

merge850:                                         ; preds = %else853, %then851
  %tmp854 = sub i32 %r_mat847, 1
  %tmp859 = icmp slt i32 %tmp854, 2
  br i1 %tmp859, label %then856, label %else858

then851:                                          ; preds = %merge834
  %printf852 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge850

else853:                                          ; preds = %merge834
  br label %merge850

merge855:                                         ; preds = %else858, %then856
  br i1 false, label %then861, label %else863

then856:                                          ; preds = %merge850
  %printf857 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge855

else858:                                          ; preds = %merge850
  br label %merge855

merge860:                                         ; preds = %else863, %then861
  %tmp864 = sub i32 %r_mat847, 1
  %tmp869 = icmp slt i32 %tmp864, 2
  br i1 %tmp869, label %then866, label %else868

then861:                                          ; preds = %merge855
  %printf862 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge860

else863:                                          ; preds = %merge855
  br label %merge860

merge865:                                         ; preds = %else868, %then866
  br i1 false, label %then871, label %else873

then866:                                          ; preds = %merge860
  %printf867 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge865

else868:                                          ; preds = %merge860
  br label %merge865

merge870:                                         ; preds = %else873, %then871
  %tmp874 = sub i32 %c_mat849, 1
  %tmp879 = icmp slt i32 %tmp874, 0
  br i1 %tmp879, label %then876, label %else878

then871:                                          ; preds = %merge865
  %printf872 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge870

else873:                                          ; preds = %merge865
  br label %merge870

merge875:                                         ; preds = %else878, %then876
  br i1 false, label %then881, label %else883

then876:                                          ; preds = %merge870
  %printf877 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge875

else878:                                          ; preds = %merge870
  br label %merge875

merge880:                                         ; preds = %else883, %then881
  %tmp884 = sub i32 %c_mat849, 1
  %tmp889 = icmp slt i32 %tmp884, 0
  br i1 %tmp889, label %then886, label %else888

then881:                                          ; preds = %merge875
  %printf882 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge880

else883:                                          ; preds = %merge875
  br label %merge880

merge885:                                         ; preds = %else888, %then886
  %mat890 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 0
  %mat891 = load double*, double** %mat890
  %tmp892 = mul i32 %c_mat849, 2
  %index893 = add i32 0, %tmp892
  %element_ptr894 = getelementptr double, double* %mat891, i32 %index893
  %element895 = load double, double* %element_ptr894
  %tmp896 = load double, double* %l
  store double %element895, double* %l
  %w = alloca double
  %m_r897 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 1
  %r_mat898 = load i32, i32* %m_r897
  %m_c899 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 2
  %c_mat900 = load i32, i32* %m_c899
  br i1 false, label %then902, label %else904

then886:                                          ; preds = %merge880
  %printf887 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge885

else888:                                          ; preds = %merge880
  br label %merge885

merge901:                                         ; preds = %else904, %then902
  %tmp905 = sub i32 %r_mat898, 1
  %tmp910 = icmp slt i32 %tmp905, 3
  br i1 %tmp910, label %then907, label %else909

then902:                                          ; preds = %merge885
  %printf903 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge901

else904:                                          ; preds = %merge885
  br label %merge901

merge906:                                         ; preds = %else909, %then907
  br i1 false, label %then912, label %else914

then907:                                          ; preds = %merge901
  %printf908 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge906

else909:                                          ; preds = %merge901
  br label %merge906

merge911:                                         ; preds = %else914, %then912
  %tmp915 = sub i32 %r_mat898, 1
  %tmp920 = icmp slt i32 %tmp915, 3
  br i1 %tmp920, label %then917, label %else919

then912:                                          ; preds = %merge906
  %printf913 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge911

else914:                                          ; preds = %merge906
  br label %merge911

merge916:                                         ; preds = %else919, %then917
  br i1 false, label %then922, label %else924

then917:                                          ; preds = %merge911
  %printf918 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge916

else919:                                          ; preds = %merge911
  br label %merge916

merge921:                                         ; preds = %else924, %then922
  %tmp925 = sub i32 %c_mat900, 1
  %tmp930 = icmp slt i32 %tmp925, 0
  br i1 %tmp930, label %then927, label %else929

then922:                                          ; preds = %merge916
  %printf923 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge921

else924:                                          ; preds = %merge916
  br label %merge921

merge926:                                         ; preds = %else929, %then927
  br i1 false, label %then932, label %else934

then927:                                          ; preds = %merge921
  %printf928 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge926

else929:                                          ; preds = %merge921
  br label %merge926

merge931:                                         ; preds = %else934, %then932
  %tmp935 = sub i32 %c_mat900, 1
  %tmp940 = icmp slt i32 %tmp935, 0
  br i1 %tmp940, label %then937, label %else939

then932:                                          ; preds = %merge926
  %printf933 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge931

else934:                                          ; preds = %merge926
  br label %merge931

merge936:                                         ; preds = %else939, %then937
  %mat941 = getelementptr inbounds %matrix_t, %matrix_t* %m95, i32 0, i32 0
  %mat942 = load double*, double** %mat941
  %tmp943 = mul i32 %c_mat900, 3
  %index944 = add i32 0, %tmp943
  %element_ptr945 = getelementptr double, double* %mat942, i32 %index944
  %element946 = load double, double* %element_ptr945
  %tmp947 = load double, double* %w
  store double %element946, double* %w
  %i948 = alloca i32
  %tmp949 = load i32, i32* %i948
  store i32 0, i32* %i948
  %i950 = load i32, i32* %i948
  %x951 = load double, double* %x
  %l952 = load double, double* %l
  %tmp953 = fdiv double %l952, 2.000000e+00
  %tmp954 = fadd double %x951, %tmp953
  %double2int_result = call %double_to_int_t* @double2int(double %tmp954)
  %v_ptr955 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result, i32 0, i32 0
  %v956 = load i32, i32* %v_ptr955
  %10 = bitcast %double_to_int_t* %double2int_result to i8*
  tail call void @free(i8* %10)
  %tmp957 = icmp sle i32 %i950, %v956
  %x958 = load double, double* %x
  %l959 = load double, double* %l
  %tmp960 = fdiv double %l959, 2.000000e+00
  %tmp961 = fsub double %x958, %tmp960
  %double2int_result962 = call %double_to_int_t* @double2int(double %tmp961)
  %v_ptr963 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result962, i32 0, i32 0
  %v964 = load i32, i32* %v_ptr963
  %11 = bitcast %double_to_int_t* %double2int_result962 to i8*
  tail call void @free(i8* %11)
  %tmp965 = load i32, i32* %i948
  store i32 %v964, i32* %i948
  br label %while966

then937:                                          ; preds = %merge931
  %printf938 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge936

else939:                                          ; preds = %merge931
  br label %merge936

while966:                                         ; preds = %merge2522, %merge936
  %i2529 = load i32, i32* %i948
  %x2530 = load double, double* %x
  %l2531 = load double, double* %l
  %tmp2532 = fdiv double %l2531, 2.000000e+00
  %tmp2533 = fadd double %x2530, %tmp2532
  %double2int_result2534 = call %double_to_int_t* @double2int(double %tmp2533)
  %v_ptr2535 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2534, i32 0, i32 0
  %v2536 = load i32, i32* %v_ptr2535
  %12 = bitcast %double_to_int_t* %double2int_result2534 to i8*
  tail call void @free(i8* %12)
  %tmp2537 = icmp sle i32 %i2529, %v2536
  br i1 %tmp2537, label %while_body967, label %merge2528

while_body967:                                    ; preds = %while966
  %zeros_result = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr968 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v969 = load %matrix_t*, %matrix_t** %v_ptr968
  %13 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %13)
  %m_mat970 = getelementptr inbounds %matrix_t, %matrix_t* %v969, i32 0, i32 0
  %mat_mat971 = load double*, double** %m_mat970
  %m_r972 = getelementptr inbounds %matrix_t, %matrix_t* %v969, i32 0, i32 1
  %r_mat973 = load i32, i32* %m_r972
  %m_c974 = getelementptr inbounds %matrix_t, %matrix_t* %v969, i32 0, i32 2
  %c_mat975 = load i32, i32* %m_c974
  %size976 = mul i32 %r_mat973, %c_mat975
  %mallocsize977 = mul i32 %size976, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall978 = tail call i8* @malloc(i32 %mallocsize977)
  %system_mat979 = bitcast i8* %malloccall978 to double*
  %malloccall980 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m981 = bitcast i8* %malloccall980 to %matrix_t*
  %m_mat982 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 0
  store double* %system_mat979, double** %m_mat982
  %m_r983 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 1
  store i32 %r_mat973, i32* %m_r983
  %m_c984 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 2
  store i32 %c_mat975, i32* %m_c984
  %tmp985 = sub i32 %r_mat973, 1
  %tmp986 = sub i32 %c_mat975, 1
  %i987 = alloca i32
  store i32 0, i32* %i987
  br label %while988

while988:                                         ; preds = %merge1000, %while_body967
  %i_v1006 = load i32, i32* %i987
  %bool_val1007 = icmp sle i32 %i_v1006, %tmp985
  br i1 %bool_val1007, label %while_body989, label %merge1005

while_body989:                                    ; preds = %while988
  %j990 = alloca i32
  store i32 0, i32* %j990
  br label %while991

while991:                                         ; preds = %while_body992, %while_body989
  %j_v1001 = load i32, i32* %j990
  %bool_val1002 = icmp sle i32 %j_v1001, %tmp986
  br i1 %bool_val1002, label %while_body992, label %merge1000

while_body992:                                    ; preds = %while991
  %j_v993 = load i32, i32* %j990
  %i_v994 = load i32, i32* %i987
  %tmp995 = mul i32 %c_mat975, %i_v994
  %index996 = add i32 %j_v993, %tmp995
  %element_ptr997 = getelementptr double, double* %system_mat979, i32 %index996
  store double 0.000000e+00, double* %element_ptr997
  %j_v998 = load i32, i32* %j990
  %tmp999 = add i32 %j_v998, 1
  store i32 %tmp999, i32* %j990
  br label %while991

merge1000:                                        ; preds = %while991
  %i_v1003 = load i32, i32* %i987
  %tmp1004 = add i32 %i_v1003, 1
  store i32 %tmp1004, i32* %i987
  br label %while988

merge1005:                                        ; preds = %while988
  %tmp1008 = sub i32 %c_mat975, 1
  %tmp1009 = sub i32 %r_mat973, 1
  %m_mat1010 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 0
  %mat_mat1011 = load double*, double** %m_mat1010
  %m_r1012 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 1
  %r_mat1013 = load i32, i32* %m_r1012
  %m_c1014 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 2
  %c_mat1015 = load i32, i32* %m_c1014
  %m_mat1016 = getelementptr inbounds %matrix_t, %matrix_t* %v969, i32 0, i32 0
  %mat_v1017 = load double*, double** %m_mat1016
  %m_r1018 = getelementptr inbounds %matrix_t, %matrix_t* %v969, i32 0, i32 1
  %r_v1019 = load i32, i32* %m_r1018
  %m_c1020 = getelementptr inbounds %matrix_t, %matrix_t* %v969, i32 0, i32 2
  %c_v1021 = load i32, i32* %m_c1020
  %i1022 = alloca i32
  store i32 0, i32* %i1022
  br label %while1023

while1023:                                        ; preds = %merge1045, %merge1005
  %i_v1051 = load i32, i32* %i1022
  %bool_val1052 = icmp sle i32 %i_v1051, %tmp1009
  br i1 %bool_val1052, label %while_body1024, label %merge1050

while_body1024:                                   ; preds = %while1023
  %j1025 = alloca i32
  store i32 0, i32* %j1025
  br label %while1026

while1026:                                        ; preds = %while_body1027, %while_body1024
  %j_v1046 = load i32, i32* %j1025
  %bool_val1047 = icmp sle i32 %j_v1046, %tmp1008
  br i1 %bool_val1047, label %while_body1027, label %merge1045

while_body1027:                                   ; preds = %while1026
  %j_v1028 = load i32, i32* %j1025
  %i_v1029 = load i32, i32* %i1022
  %tmp1030 = mul i32 %c_mat1015, %i_v1029
  %index1031 = add i32 %j_v1028, %tmp1030
  %element_ptr1032 = getelementptr double, double* %mat_mat1011, i32 %index1031
  %j_v1033 = load i32, i32* %j1025
  %tmp1034 = sub i32 %j_v1033, 0
  %tmp1035 = add i32 %tmp1034, 0
  %i_v1036 = load i32, i32* %i1022
  %tmp1037 = sub i32 %i_v1036, 0
  %tmp1038 = add i32 %tmp1037, 0
  %tmp1039 = mul i32 %c_v1021, %tmp1038
  %index1040 = add i32 %tmp1035, %tmp1039
  %element_ptr1041 = getelementptr double, double* %mat_v1017, i32 %index1040
  %tmp_element1042 = load double, double* %element_ptr1041
  store double %tmp_element1042, double* %element_ptr1032
  %j_v1043 = load i32, i32* %j1025
  %tmp1044 = add i32 %j_v1043, 1
  store i32 %tmp1044, i32* %j1025
  br label %while1026

merge1045:                                        ; preds = %while1026
  %i_v1048 = load i32, i32* %i1022
  %tmp1049 = add i32 %i_v1048, 1
  store i32 %tmp1049, i32* %i1022
  br label %while1023

merge1050:                                        ; preds = %while1023
  %14 = bitcast double* %mat_mat971 to i8*
  tail call void @free(i8* %14)
  %15 = bitcast %matrix_t* %v969 to i8*
  tail call void @free(i8* %15)
  %m_mat1053 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 0
  %mat_mat1054 = load double*, double** %m_mat1053
  %m_r1055 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 1
  %r_mat1056 = load i32, i32* %m_r1055
  %tmp1057 = sub i32 %r_mat1056, 1
  %m_c1058 = getelementptr inbounds %matrix_t, %matrix_t* %m981, i32 0, i32 2
  %c_mat1059 = load i32, i32* %m_c1058
  %tmp1060 = sub i32 %c_mat1059, 1
  %size1061 = mul i32 %r_mat1056, %c_mat1059
  %mallocsize1062 = mul i32 %size1061, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1063 = tail call i8* @malloc(i32 %mallocsize1062)
  %system_mat1064 = bitcast i8* %malloccall1063 to double*
  %malloccall1065 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m1066 = bitcast i8* %malloccall1065 to %matrix_t*
  %m_mat1067 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 0
  store double* %system_mat1064, double** %m_mat1067
  %m_r1068 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 1
  store i32 %r_mat1056, i32* %m_r1068
  %m_c1069 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 2
  store i32 %c_mat1059, i32* %m_c1069
  %tmp1070 = sub i32 %r_mat1056, 1
  %tmp1071 = sub i32 %c_mat1059, 1
  %i1072 = alloca i32
  store i32 0, i32* %i1072
  br label %while1073

while1073:                                        ; preds = %merge1085, %merge1050
  %i_v1091 = load i32, i32* %i1072
  %bool_val1092 = icmp sle i32 %i_v1091, %tmp1070
  br i1 %bool_val1092, label %while_body1074, label %merge1090

while_body1074:                                   ; preds = %while1073
  %j1075 = alloca i32
  store i32 0, i32* %j1075
  br label %while1076

while1076:                                        ; preds = %while_body1077, %while_body1074
  %j_v1086 = load i32, i32* %j1075
  %bool_val1087 = icmp sle i32 %j_v1086, %tmp1071
  br i1 %bool_val1087, label %while_body1077, label %merge1085

while_body1077:                                   ; preds = %while1076
  %j_v1078 = load i32, i32* %j1075
  %i_v1079 = load i32, i32* %i1072
  %tmp1080 = mul i32 %c_mat1059, %i_v1079
  %index1081 = add i32 %j_v1078, %tmp1080
  %element_ptr1082 = getelementptr double, double* %system_mat1064, i32 %index1081
  store double 0.000000e+00, double* %element_ptr1082
  %j_v1083 = load i32, i32* %j1075
  %tmp1084 = add i32 %j_v1083, 1
  store i32 %tmp1084, i32* %j1075
  br label %while1076

merge1085:                                        ; preds = %while1076
  %i_v1088 = load i32, i32* %i1072
  %tmp1089 = add i32 %i_v1088, 1
  store i32 %tmp1089, i32* %i1072
  br label %while1073

merge1090:                                        ; preds = %while1073
  %m_mat1093 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 0
  %mat_mat1094 = load double*, double** %m_mat1093
  %i1095 = alloca i32
  store i32 0, i32* %i1095
  br label %while1096

while1096:                                        ; preds = %merge1115, %merge1090
  %i_v1121 = load i32, i32* %i1095
  %bool_val1122 = icmp sle i32 %i_v1121, %tmp1057
  br i1 %bool_val1122, label %while_body1097, label %merge1120

while_body1097:                                   ; preds = %while1096
  %j1098 = alloca i32
  store i32 0, i32* %j1098
  br label %while1099

while1099:                                        ; preds = %while_body1100, %while_body1097
  %j_v1116 = load i32, i32* %j1098
  %bool_val1117 = icmp sle i32 %j_v1116, %tmp1060
  br i1 %bool_val1117, label %while_body1100, label %merge1115

while_body1100:                                   ; preds = %while1099
  %j_v1101 = load i32, i32* %j1098
  %i_v1102 = load i32, i32* %i1095
  %tmp1103 = mul i32 %c_mat1059, %i_v1102
  %index1104 = add i32 %j_v1101, %tmp1103
  %element_ptr1105 = getelementptr double, double* %mat_mat1054, i32 %index1104
  %tmp_element1106 = load double, double* %element_ptr1105
  %j_v1107 = load i32, i32* %j1098
  %i_v1108 = load i32, i32* %i1095
  %tmp1109 = mul i32 %c_mat1059, %i_v1108
  %index1110 = add i32 %j_v1107, %tmp1109
  %element_ptr1111 = getelementptr double, double* %mat_mat1094, i32 %index1110
  %tmp_element1112 = fsub double %tmp_element1106, 2.550000e+02
  store double %tmp_element1112, double* %element_ptr1111
  %j_v1113 = load i32, i32* %j1098
  %tmp1114 = add i32 %j_v1113, 1
  store i32 %tmp1114, i32* %j1098
  br label %while1099

merge1115:                                        ; preds = %while1099
  %i_v1118 = load i32, i32* %i1095
  %tmp1119 = add i32 %i_v1118, 1
  store i32 %tmp1119, i32* %i1095
  br label %while1096

merge1120:                                        ; preds = %while1096
  %m_r1123 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat1124 = load i32, i32* %m_r1123
  %m_c1125 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat1126 = load i32, i32* %m_c1125
  %i1127 = load i32, i32* %i948
  %tmp1132 = icmp sgt i32 0, %i1127
  br i1 %tmp1132, label %then1129, label %else1131

merge1128:                                        ; preds = %else1131, %then1129
  %tmp1133 = sub i32 %r_mat1124, 1
  %tmp1138 = icmp slt i32 %tmp1133, %i1127
  br i1 %tmp1138, label %then1135, label %else1137

then1129:                                         ; preds = %merge1120
  %printf1130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1128

else1131:                                         ; preds = %merge1120
  br label %merge1128

merge1134:                                        ; preds = %else1137, %then1135
  %i1139 = load i32, i32* %i948
  %tmp1144 = icmp sgt i32 0, %i1139
  br i1 %tmp1144, label %then1141, label %else1143

then1135:                                         ; preds = %merge1128
  %printf1136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1134

else1137:                                         ; preds = %merge1128
  br label %merge1134

merge1140:                                        ; preds = %else1143, %then1141
  %tmp1145 = sub i32 %r_mat1124, 1
  %tmp1150 = icmp slt i32 %tmp1145, %i1139
  br i1 %tmp1150, label %then1147, label %else1149

then1141:                                         ; preds = %merge1134
  %printf1142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1140

else1143:                                         ; preds = %merge1134
  br label %merge1140

merge1146:                                        ; preds = %else1149, %then1147
  %y1151 = load double, double* %y
  %w1152 = load double, double* %w
  %tmp1153 = fdiv double %w1152, 2.000000e+00
  %tmp1154 = fsub double %y1151, %tmp1153
  %tmp1155 = fsub double %tmp1154, 2.000000e+00
  %double2int_result1156 = call %double_to_int_t* @double2int(double %tmp1155)
  %v_ptr1157 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1156, i32 0, i32 0
  %v1158 = load i32, i32* %v_ptr1157
  %16 = bitcast %double_to_int_t* %double2int_result1156 to i8*
  tail call void @free(i8* %16)
  %tmp1163 = icmp sgt i32 0, %v1158
  br i1 %tmp1163, label %then1160, label %else1162

then1147:                                         ; preds = %merge1140
  %printf1148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1146

else1149:                                         ; preds = %merge1140
  br label %merge1146

merge1159:                                        ; preds = %else1162, %then1160
  %tmp1164 = sub i32 %c_mat1126, 1
  %tmp1169 = icmp slt i32 %tmp1164, %v1158
  br i1 %tmp1169, label %then1166, label %else1168

then1160:                                         ; preds = %merge1146
  %printf1161 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1159

else1162:                                         ; preds = %merge1146
  br label %merge1159

merge1165:                                        ; preds = %else1168, %then1166
  %y1170 = load double, double* %y
  %w1171 = load double, double* %w
  %tmp1172 = fdiv double %w1171, 2.000000e+00
  %tmp1173 = fsub double %y1170, %tmp1172
  %tmp1174 = fadd double %tmp1173, 2.000000e+00
  %double2int_result1175 = call %double_to_int_t* @double2int(double %tmp1174)
  %v_ptr1176 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1175, i32 0, i32 0
  %v1177 = load i32, i32* %v_ptr1176
  %17 = bitcast %double_to_int_t* %double2int_result1175 to i8*
  tail call void @free(i8* %17)
  %tmp1182 = icmp sgt i32 0, %v1177
  br i1 %tmp1182, label %then1179, label %else1181

then1166:                                         ; preds = %merge1159
  %printf1167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1165

else1168:                                         ; preds = %merge1159
  br label %merge1165

merge1178:                                        ; preds = %else1181, %then1179
  %tmp1183 = sub i32 %c_mat1126, 1
  %tmp1188 = icmp slt i32 %tmp1183, %v1177
  br i1 %tmp1188, label %then1185, label %else1187

then1179:                                         ; preds = %merge1165
  %printf1180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1178

else1181:                                         ; preds = %merge1165
  br label %merge1178

merge1184:                                        ; preds = %else1187, %then1185
  %tmp1189 = sub i32 %i1139, %i1127
  %tmp1190 = add i32 %tmp1189, 1
  %m_r1191 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 1
  %r_mat1192 = load i32, i32* %m_r1191
  %tmp1197 = icmp ne i32 %tmp1190, %r_mat1192
  br i1 %tmp1197, label %then1194, label %else1196

then1185:                                         ; preds = %merge1178
  %printf1186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1184

else1187:                                         ; preds = %merge1178
  br label %merge1184

merge1193:                                        ; preds = %else1196, %then1194
  %tmp1198 = sub i32 %v1177, %v1158
  %tmp1199 = add i32 %tmp1198, 1
  %m_r1200 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 2
  %r_mat1201 = load i32, i32* %m_r1200
  %tmp1206 = icmp ne i32 %tmp1199, %r_mat1201
  br i1 %tmp1206, label %then1203, label %else1205

then1194:                                         ; preds = %merge1184
  %printf1195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1193

else1196:                                         ; preds = %merge1184
  br label %merge1193

merge1202:                                        ; preds = %else1205, %then1203
  %m_mat1207 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 0
  %mat_mat1208 = load double*, double** %m_mat1207
  %m_r1209 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat1210 = load i32, i32* %m_r1209
  %m_c1211 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat1212 = load i32, i32* %m_c1211
  %m_mat1213 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 0
  %mat_v1214 = load double*, double** %m_mat1213
  %m_r1215 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 1
  %r_v1216 = load i32, i32* %m_r1215
  %m_c1217 = getelementptr inbounds %matrix_t, %matrix_t* %m1066, i32 0, i32 2
  %c_v1218 = load i32, i32* %m_c1217
  %i1219 = alloca i32
  store i32 %i1127, i32* %i1219
  br label %while1220

then1203:                                         ; preds = %merge1193
  %printf1204 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1202

else1205:                                         ; preds = %merge1193
  br label %merge1202

while1220:                                        ; preds = %merge1242, %merge1202
  %i_v1248 = load i32, i32* %i1219
  %bool_val1249 = icmp sle i32 %i_v1248, %i1139
  br i1 %bool_val1249, label %while_body1221, label %merge1247

while_body1221:                                   ; preds = %while1220
  %j1222 = alloca i32
  store i32 %v1158, i32* %j1222
  br label %while1223

while1223:                                        ; preds = %while_body1224, %while_body1221
  %j_v1243 = load i32, i32* %j1222
  %bool_val1244 = icmp sle i32 %j_v1243, %v1177
  br i1 %bool_val1244, label %while_body1224, label %merge1242

while_body1224:                                   ; preds = %while1223
  %j_v1225 = load i32, i32* %j1222
  %i_v1226 = load i32, i32* %i1219
  %tmp1227 = mul i32 %c_mat1212, %i_v1226
  %index1228 = add i32 %j_v1225, %tmp1227
  %element_ptr1229 = getelementptr double, double* %mat_mat1208, i32 %index1228
  %j_v1230 = load i32, i32* %j1222
  %tmp1231 = sub i32 %j_v1230, %v1158
  %tmp1232 = add i32 %tmp1231, 0
  %i_v1233 = load i32, i32* %i1219
  %tmp1234 = sub i32 %i_v1233, %i1127
  %tmp1235 = add i32 %tmp1234, 0
  %tmp1236 = mul i32 %c_v1218, %tmp1235
  %index1237 = add i32 %tmp1232, %tmp1236
  %element_ptr1238 = getelementptr double, double* %mat_v1214, i32 %index1237
  %tmp_element1239 = load double, double* %element_ptr1238
  store double %tmp_element1239, double* %element_ptr1229
  %j_v1240 = load i32, i32* %j1222
  %tmp1241 = add i32 %j_v1240, 1
  store i32 %tmp1241, i32* %j1222
  br label %while1223

merge1242:                                        ; preds = %while1223
  %i_v1245 = load i32, i32* %i1219
  %tmp1246 = add i32 %i_v1245, 1
  store i32 %tmp1246, i32* %i1219
  br label %while1220

merge1247:                                        ; preds = %while1220
  %zeros_result1250 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1251 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1250, i32 0, i32 0
  %v1252 = load %matrix_t*, %matrix_t** %v_ptr1251
  %18 = bitcast %zero_matrix_t* %zeros_result1250 to i8*
  tail call void @free(i8* %18)
  %m_mat1253 = getelementptr inbounds %matrix_t, %matrix_t* %v1252, i32 0, i32 0
  %mat_mat1254 = load double*, double** %m_mat1253
  %m_r1255 = getelementptr inbounds %matrix_t, %matrix_t* %v1252, i32 0, i32 1
  %r_mat1256 = load i32, i32* %m_r1255
  %m_c1257 = getelementptr inbounds %matrix_t, %matrix_t* %v1252, i32 0, i32 2
  %c_mat1258 = load i32, i32* %m_c1257
  %size1259 = mul i32 %r_mat1256, %c_mat1258
  %mallocsize1260 = mul i32 %size1259, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1261 = tail call i8* @malloc(i32 %mallocsize1260)
  %system_mat1262 = bitcast i8* %malloccall1261 to double*
  %malloccall1263 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m1264 = bitcast i8* %malloccall1263 to %matrix_t*
  %m_mat1265 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 0
  store double* %system_mat1262, double** %m_mat1265
  %m_r1266 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 1
  store i32 %r_mat1256, i32* %m_r1266
  %m_c1267 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 2
  store i32 %c_mat1258, i32* %m_c1267
  %tmp1268 = sub i32 %r_mat1256, 1
  %tmp1269 = sub i32 %c_mat1258, 1
  %i1270 = alloca i32
  store i32 0, i32* %i1270
  br label %while1271

while1271:                                        ; preds = %merge1283, %merge1247
  %i_v1289 = load i32, i32* %i1270
  %bool_val1290 = icmp sle i32 %i_v1289, %tmp1268
  br i1 %bool_val1290, label %while_body1272, label %merge1288

while_body1272:                                   ; preds = %while1271
  %j1273 = alloca i32
  store i32 0, i32* %j1273
  br label %while1274

while1274:                                        ; preds = %while_body1275, %while_body1272
  %j_v1284 = load i32, i32* %j1273
  %bool_val1285 = icmp sle i32 %j_v1284, %tmp1269
  br i1 %bool_val1285, label %while_body1275, label %merge1283

while_body1275:                                   ; preds = %while1274
  %j_v1276 = load i32, i32* %j1273
  %i_v1277 = load i32, i32* %i1270
  %tmp1278 = mul i32 %c_mat1258, %i_v1277
  %index1279 = add i32 %j_v1276, %tmp1278
  %element_ptr1280 = getelementptr double, double* %system_mat1262, i32 %index1279
  store double 0.000000e+00, double* %element_ptr1280
  %j_v1281 = load i32, i32* %j1273
  %tmp1282 = add i32 %j_v1281, 1
  store i32 %tmp1282, i32* %j1273
  br label %while1274

merge1283:                                        ; preds = %while1274
  %i_v1286 = load i32, i32* %i1270
  %tmp1287 = add i32 %i_v1286, 1
  store i32 %tmp1287, i32* %i1270
  br label %while1271

merge1288:                                        ; preds = %while1271
  %tmp1291 = sub i32 %c_mat1258, 1
  %tmp1292 = sub i32 %r_mat1256, 1
  %m_mat1293 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 0
  %mat_mat1294 = load double*, double** %m_mat1293
  %m_r1295 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 1
  %r_mat1296 = load i32, i32* %m_r1295
  %m_c1297 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 2
  %c_mat1298 = load i32, i32* %m_c1297
  %m_mat1299 = getelementptr inbounds %matrix_t, %matrix_t* %v1252, i32 0, i32 0
  %mat_v1300 = load double*, double** %m_mat1299
  %m_r1301 = getelementptr inbounds %matrix_t, %matrix_t* %v1252, i32 0, i32 1
  %r_v1302 = load i32, i32* %m_r1301
  %m_c1303 = getelementptr inbounds %matrix_t, %matrix_t* %v1252, i32 0, i32 2
  %c_v1304 = load i32, i32* %m_c1303
  %i1305 = alloca i32
  store i32 0, i32* %i1305
  br label %while1306

while1306:                                        ; preds = %merge1328, %merge1288
  %i_v1334 = load i32, i32* %i1305
  %bool_val1335 = icmp sle i32 %i_v1334, %tmp1292
  br i1 %bool_val1335, label %while_body1307, label %merge1333

while_body1307:                                   ; preds = %while1306
  %j1308 = alloca i32
  store i32 0, i32* %j1308
  br label %while1309

while1309:                                        ; preds = %while_body1310, %while_body1307
  %j_v1329 = load i32, i32* %j1308
  %bool_val1330 = icmp sle i32 %j_v1329, %tmp1291
  br i1 %bool_val1330, label %while_body1310, label %merge1328

while_body1310:                                   ; preds = %while1309
  %j_v1311 = load i32, i32* %j1308
  %i_v1312 = load i32, i32* %i1305
  %tmp1313 = mul i32 %c_mat1298, %i_v1312
  %index1314 = add i32 %j_v1311, %tmp1313
  %element_ptr1315 = getelementptr double, double* %mat_mat1294, i32 %index1314
  %j_v1316 = load i32, i32* %j1308
  %tmp1317 = sub i32 %j_v1316, 0
  %tmp1318 = add i32 %tmp1317, 0
  %i_v1319 = load i32, i32* %i1305
  %tmp1320 = sub i32 %i_v1319, 0
  %tmp1321 = add i32 %tmp1320, 0
  %tmp1322 = mul i32 %c_v1304, %tmp1321
  %index1323 = add i32 %tmp1318, %tmp1322
  %element_ptr1324 = getelementptr double, double* %mat_v1300, i32 %index1323
  %tmp_element1325 = load double, double* %element_ptr1324
  store double %tmp_element1325, double* %element_ptr1315
  %j_v1326 = load i32, i32* %j1308
  %tmp1327 = add i32 %j_v1326, 1
  store i32 %tmp1327, i32* %j1308
  br label %while1309

merge1328:                                        ; preds = %while1309
  %i_v1331 = load i32, i32* %i1305
  %tmp1332 = add i32 %i_v1331, 1
  store i32 %tmp1332, i32* %i1305
  br label %while1306

merge1333:                                        ; preds = %while1306
  %19 = bitcast double* %mat_mat1254 to i8*
  tail call void @free(i8* %19)
  %20 = bitcast %matrix_t* %v1252 to i8*
  tail call void @free(i8* %20)
  %m_mat1336 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 0
  %mat_mat1337 = load double*, double** %m_mat1336
  %m_r1338 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 1
  %r_mat1339 = load i32, i32* %m_r1338
  %tmp1340 = sub i32 %r_mat1339, 1
  %m_c1341 = getelementptr inbounds %matrix_t, %matrix_t* %m1264, i32 0, i32 2
  %c_mat1342 = load i32, i32* %m_c1341
  %tmp1343 = sub i32 %c_mat1342, 1
  %size1344 = mul i32 %r_mat1339, %c_mat1342
  %mallocsize1345 = mul i32 %size1344, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1346 = tail call i8* @malloc(i32 %mallocsize1345)
  %system_mat1347 = bitcast i8* %malloccall1346 to double*
  %malloccall1348 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m1349 = bitcast i8* %malloccall1348 to %matrix_t*
  %m_mat1350 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 0
  store double* %system_mat1347, double** %m_mat1350
  %m_r1351 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 1
  store i32 %r_mat1339, i32* %m_r1351
  %m_c1352 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 2
  store i32 %c_mat1342, i32* %m_c1352
  %tmp1353 = sub i32 %r_mat1339, 1
  %tmp1354 = sub i32 %c_mat1342, 1
  %i1355 = alloca i32
  store i32 0, i32* %i1355
  br label %while1356

while1356:                                        ; preds = %merge1368, %merge1333
  %i_v1374 = load i32, i32* %i1355
  %bool_val1375 = icmp sle i32 %i_v1374, %tmp1353
  br i1 %bool_val1375, label %while_body1357, label %merge1373

while_body1357:                                   ; preds = %while1356
  %j1358 = alloca i32
  store i32 0, i32* %j1358
  br label %while1359

while1359:                                        ; preds = %while_body1360, %while_body1357
  %j_v1369 = load i32, i32* %j1358
  %bool_val1370 = icmp sle i32 %j_v1369, %tmp1354
  br i1 %bool_val1370, label %while_body1360, label %merge1368

while_body1360:                                   ; preds = %while1359
  %j_v1361 = load i32, i32* %j1358
  %i_v1362 = load i32, i32* %i1355
  %tmp1363 = mul i32 %c_mat1342, %i_v1362
  %index1364 = add i32 %j_v1361, %tmp1363
  %element_ptr1365 = getelementptr double, double* %system_mat1347, i32 %index1364
  store double 0.000000e+00, double* %element_ptr1365
  %j_v1366 = load i32, i32* %j1358
  %tmp1367 = add i32 %j_v1366, 1
  store i32 %tmp1367, i32* %j1358
  br label %while1359

merge1368:                                        ; preds = %while1359
  %i_v1371 = load i32, i32* %i1355
  %tmp1372 = add i32 %i_v1371, 1
  store i32 %tmp1372, i32* %i1355
  br label %while1356

merge1373:                                        ; preds = %while1356
  %m_mat1376 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 0
  %mat_mat1377 = load double*, double** %m_mat1376
  %i1378 = alloca i32
  store i32 0, i32* %i1378
  br label %while1379

while1379:                                        ; preds = %merge1398, %merge1373
  %i_v1404 = load i32, i32* %i1378
  %bool_val1405 = icmp sle i32 %i_v1404, %tmp1340
  br i1 %bool_val1405, label %while_body1380, label %merge1403

while_body1380:                                   ; preds = %while1379
  %j1381 = alloca i32
  store i32 0, i32* %j1381
  br label %while1382

while1382:                                        ; preds = %while_body1383, %while_body1380
  %j_v1399 = load i32, i32* %j1381
  %bool_val1400 = icmp sle i32 %j_v1399, %tmp1343
  br i1 %bool_val1400, label %while_body1383, label %merge1398

while_body1383:                                   ; preds = %while1382
  %j_v1384 = load i32, i32* %j1381
  %i_v1385 = load i32, i32* %i1378
  %tmp1386 = mul i32 %c_mat1342, %i_v1385
  %index1387 = add i32 %j_v1384, %tmp1386
  %element_ptr1388 = getelementptr double, double* %mat_mat1337, i32 %index1387
  %tmp_element1389 = load double, double* %element_ptr1388
  %j_v1390 = load i32, i32* %j1381
  %i_v1391 = load i32, i32* %i1378
  %tmp1392 = mul i32 %c_mat1342, %i_v1391
  %index1393 = add i32 %j_v1390, %tmp1392
  %element_ptr1394 = getelementptr double, double* %mat_mat1377, i32 %index1393
  %tmp_element1395 = fsub double %tmp_element1389, 2.550000e+02
  store double %tmp_element1395, double* %element_ptr1394
  %j_v1396 = load i32, i32* %j1381
  %tmp1397 = add i32 %j_v1396, 1
  store i32 %tmp1397, i32* %j1381
  br label %while1382

merge1398:                                        ; preds = %while1382
  %i_v1401 = load i32, i32* %i1378
  %tmp1402 = add i32 %i_v1401, 1
  store i32 %tmp1402, i32* %i1378
  br label %while1379

merge1403:                                        ; preds = %while1379
  %m_r1406 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat1407 = load i32, i32* %m_r1406
  %m_c1408 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat1409 = load i32, i32* %m_c1408
  %i1410 = load i32, i32* %i948
  %tmp1415 = icmp sgt i32 0, %i1410
  br i1 %tmp1415, label %then1412, label %else1414

merge1411:                                        ; preds = %else1414, %then1412
  %tmp1416 = sub i32 %r_mat1407, 1
  %tmp1421 = icmp slt i32 %tmp1416, %i1410
  br i1 %tmp1421, label %then1418, label %else1420

then1412:                                         ; preds = %merge1403
  %printf1413 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1411

else1414:                                         ; preds = %merge1403
  br label %merge1411

merge1417:                                        ; preds = %else1420, %then1418
  %i1422 = load i32, i32* %i948
  %tmp1427 = icmp sgt i32 0, %i1422
  br i1 %tmp1427, label %then1424, label %else1426

then1418:                                         ; preds = %merge1411
  %printf1419 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1417

else1420:                                         ; preds = %merge1411
  br label %merge1417

merge1423:                                        ; preds = %else1426, %then1424
  %tmp1428 = sub i32 %r_mat1407, 1
  %tmp1433 = icmp slt i32 %tmp1428, %i1422
  br i1 %tmp1433, label %then1430, label %else1432

then1424:                                         ; preds = %merge1417
  %printf1425 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1423

else1426:                                         ; preds = %merge1417
  br label %merge1423

merge1429:                                        ; preds = %else1432, %then1430
  %y1434 = load double, double* %y
  %w1435 = load double, double* %w
  %tmp1436 = fdiv double %w1435, 2.000000e+00
  %tmp1437 = fsub double %y1434, %tmp1436
  %tmp1438 = fsub double %tmp1437, 2.000000e+00
  %double2int_result1439 = call %double_to_int_t* @double2int(double %tmp1438)
  %v_ptr1440 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1439, i32 0, i32 0
  %v1441 = load i32, i32* %v_ptr1440
  %21 = bitcast %double_to_int_t* %double2int_result1439 to i8*
  tail call void @free(i8* %21)
  %tmp1446 = icmp sgt i32 0, %v1441
  br i1 %tmp1446, label %then1443, label %else1445

then1430:                                         ; preds = %merge1423
  %printf1431 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1429

else1432:                                         ; preds = %merge1423
  br label %merge1429

merge1442:                                        ; preds = %else1445, %then1443
  %tmp1447 = sub i32 %c_mat1409, 1
  %tmp1452 = icmp slt i32 %tmp1447, %v1441
  br i1 %tmp1452, label %then1449, label %else1451

then1443:                                         ; preds = %merge1429
  %printf1444 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1442

else1445:                                         ; preds = %merge1429
  br label %merge1442

merge1448:                                        ; preds = %else1451, %then1449
  %y1453 = load double, double* %y
  %w1454 = load double, double* %w
  %tmp1455 = fdiv double %w1454, 2.000000e+00
  %tmp1456 = fsub double %y1453, %tmp1455
  %tmp1457 = fadd double %tmp1456, 2.000000e+00
  %double2int_result1458 = call %double_to_int_t* @double2int(double %tmp1457)
  %v_ptr1459 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1458, i32 0, i32 0
  %v1460 = load i32, i32* %v_ptr1459
  %22 = bitcast %double_to_int_t* %double2int_result1458 to i8*
  tail call void @free(i8* %22)
  %tmp1465 = icmp sgt i32 0, %v1460
  br i1 %tmp1465, label %then1462, label %else1464

then1449:                                         ; preds = %merge1442
  %printf1450 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1448

else1451:                                         ; preds = %merge1442
  br label %merge1448

merge1461:                                        ; preds = %else1464, %then1462
  %tmp1466 = sub i32 %c_mat1409, 1
  %tmp1471 = icmp slt i32 %tmp1466, %v1460
  br i1 %tmp1471, label %then1468, label %else1470

then1462:                                         ; preds = %merge1448
  %printf1463 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1461

else1464:                                         ; preds = %merge1448
  br label %merge1461

merge1467:                                        ; preds = %else1470, %then1468
  %tmp1472 = sub i32 %i1422, %i1410
  %tmp1473 = add i32 %tmp1472, 1
  %m_r1474 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 1
  %r_mat1475 = load i32, i32* %m_r1474
  %tmp1480 = icmp ne i32 %tmp1473, %r_mat1475
  br i1 %tmp1480, label %then1477, label %else1479

then1468:                                         ; preds = %merge1461
  %printf1469 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1467

else1470:                                         ; preds = %merge1461
  br label %merge1467

merge1476:                                        ; preds = %else1479, %then1477
  %tmp1481 = sub i32 %v1460, %v1441
  %tmp1482 = add i32 %tmp1481, 1
  %m_r1483 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 2
  %r_mat1484 = load i32, i32* %m_r1483
  %tmp1489 = icmp ne i32 %tmp1482, %r_mat1484
  br i1 %tmp1489, label %then1486, label %else1488

then1477:                                         ; preds = %merge1467
  %printf1478 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1476

else1479:                                         ; preds = %merge1467
  br label %merge1476

merge1485:                                        ; preds = %else1488, %then1486
  %m_mat1490 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat1491 = load double*, double** %m_mat1490
  %m_r1492 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat1493 = load i32, i32* %m_r1492
  %m_c1494 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat1495 = load i32, i32* %m_c1494
  %m_mat1496 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 0
  %mat_v1497 = load double*, double** %m_mat1496
  %m_r1498 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 1
  %r_v1499 = load i32, i32* %m_r1498
  %m_c1500 = getelementptr inbounds %matrix_t, %matrix_t* %m1349, i32 0, i32 2
  %c_v1501 = load i32, i32* %m_c1500
  %i1502 = alloca i32
  store i32 %i1410, i32* %i1502
  br label %while1503

then1486:                                         ; preds = %merge1476
  %printf1487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1485

else1488:                                         ; preds = %merge1476
  br label %merge1485

while1503:                                        ; preds = %merge1525, %merge1485
  %i_v1531 = load i32, i32* %i1502
  %bool_val1532 = icmp sle i32 %i_v1531, %i1422
  br i1 %bool_val1532, label %while_body1504, label %merge1530

while_body1504:                                   ; preds = %while1503
  %j1505 = alloca i32
  store i32 %v1441, i32* %j1505
  br label %while1506

while1506:                                        ; preds = %while_body1507, %while_body1504
  %j_v1526 = load i32, i32* %j1505
  %bool_val1527 = icmp sle i32 %j_v1526, %v1460
  br i1 %bool_val1527, label %while_body1507, label %merge1525

while_body1507:                                   ; preds = %while1506
  %j_v1508 = load i32, i32* %j1505
  %i_v1509 = load i32, i32* %i1502
  %tmp1510 = mul i32 %c_mat1495, %i_v1509
  %index1511 = add i32 %j_v1508, %tmp1510
  %element_ptr1512 = getelementptr double, double* %mat_mat1491, i32 %index1511
  %j_v1513 = load i32, i32* %j1505
  %tmp1514 = sub i32 %j_v1513, %v1441
  %tmp1515 = add i32 %tmp1514, 0
  %i_v1516 = load i32, i32* %i1502
  %tmp1517 = sub i32 %i_v1516, %i1410
  %tmp1518 = add i32 %tmp1517, 0
  %tmp1519 = mul i32 %c_v1501, %tmp1518
  %index1520 = add i32 %tmp1515, %tmp1519
  %element_ptr1521 = getelementptr double, double* %mat_v1497, i32 %index1520
  %tmp_element1522 = load double, double* %element_ptr1521
  store double %tmp_element1522, double* %element_ptr1512
  %j_v1523 = load i32, i32* %j1505
  %tmp1524 = add i32 %j_v1523, 1
  store i32 %tmp1524, i32* %j1505
  br label %while1506

merge1525:                                        ; preds = %while1506
  %i_v1528 = load i32, i32* %i1502
  %tmp1529 = add i32 %i_v1528, 1
  store i32 %tmp1529, i32* %i1502
  br label %while1503

merge1530:                                        ; preds = %while1503
  %zeros_result1533 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1534 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1533, i32 0, i32 0
  %v1535 = load %matrix_t*, %matrix_t** %v_ptr1534
  %23 = bitcast %zero_matrix_t* %zeros_result1533 to i8*
  tail call void @free(i8* %23)
  %m_mat1536 = getelementptr inbounds %matrix_t, %matrix_t* %v1535, i32 0, i32 0
  %mat_mat1537 = load double*, double** %m_mat1536
  %m_r1538 = getelementptr inbounds %matrix_t, %matrix_t* %v1535, i32 0, i32 1
  %r_mat1539 = load i32, i32* %m_r1538
  %m_c1540 = getelementptr inbounds %matrix_t, %matrix_t* %v1535, i32 0, i32 2
  %c_mat1541 = load i32, i32* %m_c1540
  %size1542 = mul i32 %r_mat1539, %c_mat1541
  %mallocsize1543 = mul i32 %size1542, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1544 = tail call i8* @malloc(i32 %mallocsize1543)
  %system_mat1545 = bitcast i8* %malloccall1544 to double*
  %malloccall1546 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m1547 = bitcast i8* %malloccall1546 to %matrix_t*
  %m_mat1548 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 0
  store double* %system_mat1545, double** %m_mat1548
  %m_r1549 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 1
  store i32 %r_mat1539, i32* %m_r1549
  %m_c1550 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 2
  store i32 %c_mat1541, i32* %m_c1550
  %tmp1551 = sub i32 %r_mat1539, 1
  %tmp1552 = sub i32 %c_mat1541, 1
  %i1553 = alloca i32
  store i32 0, i32* %i1553
  br label %while1554

while1554:                                        ; preds = %merge1566, %merge1530
  %i_v1572 = load i32, i32* %i1553
  %bool_val1573 = icmp sle i32 %i_v1572, %tmp1551
  br i1 %bool_val1573, label %while_body1555, label %merge1571

while_body1555:                                   ; preds = %while1554
  %j1556 = alloca i32
  store i32 0, i32* %j1556
  br label %while1557

while1557:                                        ; preds = %while_body1558, %while_body1555
  %j_v1567 = load i32, i32* %j1556
  %bool_val1568 = icmp sle i32 %j_v1567, %tmp1552
  br i1 %bool_val1568, label %while_body1558, label %merge1566

while_body1558:                                   ; preds = %while1557
  %j_v1559 = load i32, i32* %j1556
  %i_v1560 = load i32, i32* %i1553
  %tmp1561 = mul i32 %c_mat1541, %i_v1560
  %index1562 = add i32 %j_v1559, %tmp1561
  %element_ptr1563 = getelementptr double, double* %system_mat1545, i32 %index1562
  store double 0.000000e+00, double* %element_ptr1563
  %j_v1564 = load i32, i32* %j1556
  %tmp1565 = add i32 %j_v1564, 1
  store i32 %tmp1565, i32* %j1556
  br label %while1557

merge1566:                                        ; preds = %while1557
  %i_v1569 = load i32, i32* %i1553
  %tmp1570 = add i32 %i_v1569, 1
  store i32 %tmp1570, i32* %i1553
  br label %while1554

merge1571:                                        ; preds = %while1554
  %tmp1574 = sub i32 %c_mat1541, 1
  %tmp1575 = sub i32 %r_mat1539, 1
  %m_mat1576 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 0
  %mat_mat1577 = load double*, double** %m_mat1576
  %m_r1578 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 1
  %r_mat1579 = load i32, i32* %m_r1578
  %m_c1580 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 2
  %c_mat1581 = load i32, i32* %m_c1580
  %m_mat1582 = getelementptr inbounds %matrix_t, %matrix_t* %v1535, i32 0, i32 0
  %mat_v1583 = load double*, double** %m_mat1582
  %m_r1584 = getelementptr inbounds %matrix_t, %matrix_t* %v1535, i32 0, i32 1
  %r_v1585 = load i32, i32* %m_r1584
  %m_c1586 = getelementptr inbounds %matrix_t, %matrix_t* %v1535, i32 0, i32 2
  %c_v1587 = load i32, i32* %m_c1586
  %i1588 = alloca i32
  store i32 0, i32* %i1588
  br label %while1589

while1589:                                        ; preds = %merge1611, %merge1571
  %i_v1617 = load i32, i32* %i1588
  %bool_val1618 = icmp sle i32 %i_v1617, %tmp1575
  br i1 %bool_val1618, label %while_body1590, label %merge1616

while_body1590:                                   ; preds = %while1589
  %j1591 = alloca i32
  store i32 0, i32* %j1591
  br label %while1592

while1592:                                        ; preds = %while_body1593, %while_body1590
  %j_v1612 = load i32, i32* %j1591
  %bool_val1613 = icmp sle i32 %j_v1612, %tmp1574
  br i1 %bool_val1613, label %while_body1593, label %merge1611

while_body1593:                                   ; preds = %while1592
  %j_v1594 = load i32, i32* %j1591
  %i_v1595 = load i32, i32* %i1588
  %tmp1596 = mul i32 %c_mat1581, %i_v1595
  %index1597 = add i32 %j_v1594, %tmp1596
  %element_ptr1598 = getelementptr double, double* %mat_mat1577, i32 %index1597
  %j_v1599 = load i32, i32* %j1591
  %tmp1600 = sub i32 %j_v1599, 0
  %tmp1601 = add i32 %tmp1600, 0
  %i_v1602 = load i32, i32* %i1588
  %tmp1603 = sub i32 %i_v1602, 0
  %tmp1604 = add i32 %tmp1603, 0
  %tmp1605 = mul i32 %c_v1587, %tmp1604
  %index1606 = add i32 %tmp1601, %tmp1605
  %element_ptr1607 = getelementptr double, double* %mat_v1583, i32 %index1606
  %tmp_element1608 = load double, double* %element_ptr1607
  store double %tmp_element1608, double* %element_ptr1598
  %j_v1609 = load i32, i32* %j1591
  %tmp1610 = add i32 %j_v1609, 1
  store i32 %tmp1610, i32* %j1591
  br label %while1592

merge1611:                                        ; preds = %while1592
  %i_v1614 = load i32, i32* %i1588
  %tmp1615 = add i32 %i_v1614, 1
  store i32 %tmp1615, i32* %i1588
  br label %while1589

merge1616:                                        ; preds = %while1589
  %24 = bitcast double* %mat_mat1537 to i8*
  tail call void @free(i8* %24)
  %25 = bitcast %matrix_t* %v1535 to i8*
  tail call void @free(i8* %25)
  %m_r1619 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat1620 = load i32, i32* %m_r1619
  %m_c1621 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat1622 = load i32, i32* %m_c1621
  %i1623 = load i32, i32* %i948
  %tmp1628 = icmp sgt i32 0, %i1623
  br i1 %tmp1628, label %then1625, label %else1627

merge1624:                                        ; preds = %else1627, %then1625
  %tmp1629 = sub i32 %r_mat1620, 1
  %tmp1634 = icmp slt i32 %tmp1629, %i1623
  br i1 %tmp1634, label %then1631, label %else1633

then1625:                                         ; preds = %merge1616
  %printf1626 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1624

else1627:                                         ; preds = %merge1616
  br label %merge1624

merge1630:                                        ; preds = %else1633, %then1631
  %i1635 = load i32, i32* %i948
  %tmp1640 = icmp sgt i32 0, %i1635
  br i1 %tmp1640, label %then1637, label %else1639

then1631:                                         ; preds = %merge1624
  %printf1632 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1630

else1633:                                         ; preds = %merge1624
  br label %merge1630

merge1636:                                        ; preds = %else1639, %then1637
  %tmp1641 = sub i32 %r_mat1620, 1
  %tmp1646 = icmp slt i32 %tmp1641, %i1635
  br i1 %tmp1646, label %then1643, label %else1645

then1637:                                         ; preds = %merge1630
  %printf1638 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1636

else1639:                                         ; preds = %merge1630
  br label %merge1636

merge1642:                                        ; preds = %else1645, %then1643
  %y1647 = load double, double* %y
  %w1648 = load double, double* %w
  %tmp1649 = fdiv double %w1648, 2.000000e+00
  %tmp1650 = fsub double %y1647, %tmp1649
  %tmp1651 = fsub double %tmp1650, 2.000000e+00
  %double2int_result1652 = call %double_to_int_t* @double2int(double %tmp1651)
  %v_ptr1653 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1652, i32 0, i32 0
  %v1654 = load i32, i32* %v_ptr1653
  %26 = bitcast %double_to_int_t* %double2int_result1652 to i8*
  tail call void @free(i8* %26)
  %tmp1659 = icmp sgt i32 0, %v1654
  br i1 %tmp1659, label %then1656, label %else1658

then1643:                                         ; preds = %merge1636
  %printf1644 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1642

else1645:                                         ; preds = %merge1636
  br label %merge1642

merge1655:                                        ; preds = %else1658, %then1656
  %tmp1660 = sub i32 %c_mat1622, 1
  %tmp1665 = icmp slt i32 %tmp1660, %v1654
  br i1 %tmp1665, label %then1662, label %else1664

then1656:                                         ; preds = %merge1642
  %printf1657 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1655

else1658:                                         ; preds = %merge1642
  br label %merge1655

merge1661:                                        ; preds = %else1664, %then1662
  %y1666 = load double, double* %y
  %w1667 = load double, double* %w
  %tmp1668 = fdiv double %w1667, 2.000000e+00
  %tmp1669 = fsub double %y1666, %tmp1668
  %tmp1670 = fadd double %tmp1669, 2.000000e+00
  %double2int_result1671 = call %double_to_int_t* @double2int(double %tmp1670)
  %v_ptr1672 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1671, i32 0, i32 0
  %v1673 = load i32, i32* %v_ptr1672
  %27 = bitcast %double_to_int_t* %double2int_result1671 to i8*
  tail call void @free(i8* %27)
  %tmp1678 = icmp sgt i32 0, %v1673
  br i1 %tmp1678, label %then1675, label %else1677

then1662:                                         ; preds = %merge1655
  %printf1663 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1661

else1664:                                         ; preds = %merge1655
  br label %merge1661

merge1674:                                        ; preds = %else1677, %then1675
  %tmp1679 = sub i32 %c_mat1622, 1
  %tmp1684 = icmp slt i32 %tmp1679, %v1673
  br i1 %tmp1684, label %then1681, label %else1683

then1675:                                         ; preds = %merge1661
  %printf1676 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1674

else1677:                                         ; preds = %merge1661
  br label %merge1674

merge1680:                                        ; preds = %else1683, %then1681
  %tmp1685 = sub i32 %i1635, %i1623
  %tmp1686 = add i32 %tmp1685, 1
  %m_r1687 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 1
  %r_mat1688 = load i32, i32* %m_r1687
  %tmp1693 = icmp ne i32 %tmp1686, %r_mat1688
  br i1 %tmp1693, label %then1690, label %else1692

then1681:                                         ; preds = %merge1674
  %printf1682 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1680

else1683:                                         ; preds = %merge1674
  br label %merge1680

merge1689:                                        ; preds = %else1692, %then1690
  %tmp1694 = sub i32 %v1673, %v1654
  %tmp1695 = add i32 %tmp1694, 1
  %m_r1696 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 2
  %r_mat1697 = load i32, i32* %m_r1696
  %tmp1702 = icmp ne i32 %tmp1695, %r_mat1697
  br i1 %tmp1702, label %then1699, label %else1701

then1690:                                         ; preds = %merge1680
  %printf1691 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1689

else1692:                                         ; preds = %merge1680
  br label %merge1689

merge1698:                                        ; preds = %else1701, %then1699
  %m_mat1703 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 0
  %mat_mat1704 = load double*, double** %m_mat1703
  %m_r1705 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat1706 = load i32, i32* %m_r1705
  %m_c1707 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat1708 = load i32, i32* %m_c1707
  %m_mat1709 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 0
  %mat_v1710 = load double*, double** %m_mat1709
  %m_r1711 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 1
  %r_v1712 = load i32, i32* %m_r1711
  %m_c1713 = getelementptr inbounds %matrix_t, %matrix_t* %m1547, i32 0, i32 2
  %c_v1714 = load i32, i32* %m_c1713
  %i1715 = alloca i32
  store i32 %i1623, i32* %i1715
  br label %while1716

then1699:                                         ; preds = %merge1689
  %printf1700 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1698

else1701:                                         ; preds = %merge1689
  br label %merge1698

while1716:                                        ; preds = %merge1738, %merge1698
  %i_v1744 = load i32, i32* %i1715
  %bool_val1745 = icmp sle i32 %i_v1744, %i1635
  br i1 %bool_val1745, label %while_body1717, label %merge1743

while_body1717:                                   ; preds = %while1716
  %j1718 = alloca i32
  store i32 %v1654, i32* %j1718
  br label %while1719

while1719:                                        ; preds = %while_body1720, %while_body1717
  %j_v1739 = load i32, i32* %j1718
  %bool_val1740 = icmp sle i32 %j_v1739, %v1673
  br i1 %bool_val1740, label %while_body1720, label %merge1738

while_body1720:                                   ; preds = %while1719
  %j_v1721 = load i32, i32* %j1718
  %i_v1722 = load i32, i32* %i1715
  %tmp1723 = mul i32 %c_mat1708, %i_v1722
  %index1724 = add i32 %j_v1721, %tmp1723
  %element_ptr1725 = getelementptr double, double* %mat_mat1704, i32 %index1724
  %j_v1726 = load i32, i32* %j1718
  %tmp1727 = sub i32 %j_v1726, %v1654
  %tmp1728 = add i32 %tmp1727, 0
  %i_v1729 = load i32, i32* %i1715
  %tmp1730 = sub i32 %i_v1729, %i1623
  %tmp1731 = add i32 %tmp1730, 0
  %tmp1732 = mul i32 %c_v1714, %tmp1731
  %index1733 = add i32 %tmp1728, %tmp1732
  %element_ptr1734 = getelementptr double, double* %mat_v1710, i32 %index1733
  %tmp_element1735 = load double, double* %element_ptr1734
  store double %tmp_element1735, double* %element_ptr1725
  %j_v1736 = load i32, i32* %j1718
  %tmp1737 = add i32 %j_v1736, 1
  store i32 %tmp1737, i32* %j1718
  br label %while1719

merge1738:                                        ; preds = %while1719
  %i_v1741 = load i32, i32* %i1715
  %tmp1742 = add i32 %i_v1741, 1
  store i32 %tmp1742, i32* %i1715
  br label %while1716

merge1743:                                        ; preds = %while1716
  %zeros_result1746 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1747 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1746, i32 0, i32 0
  %v1748 = load %matrix_t*, %matrix_t** %v_ptr1747
  %28 = bitcast %zero_matrix_t* %zeros_result1746 to i8*
  tail call void @free(i8* %28)
  %m_mat1749 = getelementptr inbounds %matrix_t, %matrix_t* %v1748, i32 0, i32 0
  %mat_mat1750 = load double*, double** %m_mat1749
  %m_r1751 = getelementptr inbounds %matrix_t, %matrix_t* %v1748, i32 0, i32 1
  %r_mat1752 = load i32, i32* %m_r1751
  %m_c1753 = getelementptr inbounds %matrix_t, %matrix_t* %v1748, i32 0, i32 2
  %c_mat1754 = load i32, i32* %m_c1753
  %size1755 = mul i32 %r_mat1752, %c_mat1754
  %mallocsize1756 = mul i32 %size1755, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1757 = tail call i8* @malloc(i32 %mallocsize1756)
  %system_mat1758 = bitcast i8* %malloccall1757 to double*
  %malloccall1759 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m1760 = bitcast i8* %malloccall1759 to %matrix_t*
  %m_mat1761 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 0
  store double* %system_mat1758, double** %m_mat1761
  %m_r1762 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 1
  store i32 %r_mat1752, i32* %m_r1762
  %m_c1763 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 2
  store i32 %c_mat1754, i32* %m_c1763
  %tmp1764 = sub i32 %r_mat1752, 1
  %tmp1765 = sub i32 %c_mat1754, 1
  %i1766 = alloca i32
  store i32 0, i32* %i1766
  br label %while1767

while1767:                                        ; preds = %merge1779, %merge1743
  %i_v1785 = load i32, i32* %i1766
  %bool_val1786 = icmp sle i32 %i_v1785, %tmp1764
  br i1 %bool_val1786, label %while_body1768, label %merge1784

while_body1768:                                   ; preds = %while1767
  %j1769 = alloca i32
  store i32 0, i32* %j1769
  br label %while1770

while1770:                                        ; preds = %while_body1771, %while_body1768
  %j_v1780 = load i32, i32* %j1769
  %bool_val1781 = icmp sle i32 %j_v1780, %tmp1765
  br i1 %bool_val1781, label %while_body1771, label %merge1779

while_body1771:                                   ; preds = %while1770
  %j_v1772 = load i32, i32* %j1769
  %i_v1773 = load i32, i32* %i1766
  %tmp1774 = mul i32 %c_mat1754, %i_v1773
  %index1775 = add i32 %j_v1772, %tmp1774
  %element_ptr1776 = getelementptr double, double* %system_mat1758, i32 %index1775
  store double 0.000000e+00, double* %element_ptr1776
  %j_v1777 = load i32, i32* %j1769
  %tmp1778 = add i32 %j_v1777, 1
  store i32 %tmp1778, i32* %j1769
  br label %while1770

merge1779:                                        ; preds = %while1770
  %i_v1782 = load i32, i32* %i1766
  %tmp1783 = add i32 %i_v1782, 1
  store i32 %tmp1783, i32* %i1766
  br label %while1767

merge1784:                                        ; preds = %while1767
  %tmp1787 = sub i32 %c_mat1754, 1
  %tmp1788 = sub i32 %r_mat1752, 1
  %m_mat1789 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 0
  %mat_mat1790 = load double*, double** %m_mat1789
  %m_r1791 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 1
  %r_mat1792 = load i32, i32* %m_r1791
  %m_c1793 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 2
  %c_mat1794 = load i32, i32* %m_c1793
  %m_mat1795 = getelementptr inbounds %matrix_t, %matrix_t* %v1748, i32 0, i32 0
  %mat_v1796 = load double*, double** %m_mat1795
  %m_r1797 = getelementptr inbounds %matrix_t, %matrix_t* %v1748, i32 0, i32 1
  %r_v1798 = load i32, i32* %m_r1797
  %m_c1799 = getelementptr inbounds %matrix_t, %matrix_t* %v1748, i32 0, i32 2
  %c_v1800 = load i32, i32* %m_c1799
  %i1801 = alloca i32
  store i32 0, i32* %i1801
  br label %while1802

while1802:                                        ; preds = %merge1824, %merge1784
  %i_v1830 = load i32, i32* %i1801
  %bool_val1831 = icmp sle i32 %i_v1830, %tmp1788
  br i1 %bool_val1831, label %while_body1803, label %merge1829

while_body1803:                                   ; preds = %while1802
  %j1804 = alloca i32
  store i32 0, i32* %j1804
  br label %while1805

while1805:                                        ; preds = %while_body1806, %while_body1803
  %j_v1825 = load i32, i32* %j1804
  %bool_val1826 = icmp sle i32 %j_v1825, %tmp1787
  br i1 %bool_val1826, label %while_body1806, label %merge1824

while_body1806:                                   ; preds = %while1805
  %j_v1807 = load i32, i32* %j1804
  %i_v1808 = load i32, i32* %i1801
  %tmp1809 = mul i32 %c_mat1794, %i_v1808
  %index1810 = add i32 %j_v1807, %tmp1809
  %element_ptr1811 = getelementptr double, double* %mat_mat1790, i32 %index1810
  %j_v1812 = load i32, i32* %j1804
  %tmp1813 = sub i32 %j_v1812, 0
  %tmp1814 = add i32 %tmp1813, 0
  %i_v1815 = load i32, i32* %i1801
  %tmp1816 = sub i32 %i_v1815, 0
  %tmp1817 = add i32 %tmp1816, 0
  %tmp1818 = mul i32 %c_v1800, %tmp1817
  %index1819 = add i32 %tmp1814, %tmp1818
  %element_ptr1820 = getelementptr double, double* %mat_v1796, i32 %index1819
  %tmp_element1821 = load double, double* %element_ptr1820
  store double %tmp_element1821, double* %element_ptr1811
  %j_v1822 = load i32, i32* %j1804
  %tmp1823 = add i32 %j_v1822, 1
  store i32 %tmp1823, i32* %j1804
  br label %while1805

merge1824:                                        ; preds = %while1805
  %i_v1827 = load i32, i32* %i1801
  %tmp1828 = add i32 %i_v1827, 1
  store i32 %tmp1828, i32* %i1801
  br label %while1802

merge1829:                                        ; preds = %while1802
  %29 = bitcast double* %mat_mat1750 to i8*
  tail call void @free(i8* %29)
  %30 = bitcast %matrix_t* %v1748 to i8*
  tail call void @free(i8* %30)
  %m_mat1832 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 0
  %mat_mat1833 = load double*, double** %m_mat1832
  %m_r1834 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 1
  %r_mat1835 = load i32, i32* %m_r1834
  %tmp1836 = sub i32 %r_mat1835, 1
  %m_c1837 = getelementptr inbounds %matrix_t, %matrix_t* %m1760, i32 0, i32 2
  %c_mat1838 = load i32, i32* %m_c1837
  %tmp1839 = sub i32 %c_mat1838, 1
  %size1840 = mul i32 %r_mat1835, %c_mat1838
  %mallocsize1841 = mul i32 %size1840, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1842 = tail call i8* @malloc(i32 %mallocsize1841)
  %system_mat1843 = bitcast i8* %malloccall1842 to double*
  %malloccall1844 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m1845 = bitcast i8* %malloccall1844 to %matrix_t*
  %m_mat1846 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 0
  store double* %system_mat1843, double** %m_mat1846
  %m_r1847 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 1
  store i32 %r_mat1835, i32* %m_r1847
  %m_c1848 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 2
  store i32 %c_mat1838, i32* %m_c1848
  %tmp1849 = sub i32 %r_mat1835, 1
  %tmp1850 = sub i32 %c_mat1838, 1
  %i1851 = alloca i32
  store i32 0, i32* %i1851
  br label %while1852

while1852:                                        ; preds = %merge1864, %merge1829
  %i_v1870 = load i32, i32* %i1851
  %bool_val1871 = icmp sle i32 %i_v1870, %tmp1849
  br i1 %bool_val1871, label %while_body1853, label %merge1869

while_body1853:                                   ; preds = %while1852
  %j1854 = alloca i32
  store i32 0, i32* %j1854
  br label %while1855

while1855:                                        ; preds = %while_body1856, %while_body1853
  %j_v1865 = load i32, i32* %j1854
  %bool_val1866 = icmp sle i32 %j_v1865, %tmp1850
  br i1 %bool_val1866, label %while_body1856, label %merge1864

while_body1856:                                   ; preds = %while1855
  %j_v1857 = load i32, i32* %j1854
  %i_v1858 = load i32, i32* %i1851
  %tmp1859 = mul i32 %c_mat1838, %i_v1858
  %index1860 = add i32 %j_v1857, %tmp1859
  %element_ptr1861 = getelementptr double, double* %system_mat1843, i32 %index1860
  store double 0.000000e+00, double* %element_ptr1861
  %j_v1862 = load i32, i32* %j1854
  %tmp1863 = add i32 %j_v1862, 1
  store i32 %tmp1863, i32* %j1854
  br label %while1855

merge1864:                                        ; preds = %while1855
  %i_v1867 = load i32, i32* %i1851
  %tmp1868 = add i32 %i_v1867, 1
  store i32 %tmp1868, i32* %i1851
  br label %while1852

merge1869:                                        ; preds = %while1852
  %m_mat1872 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 0
  %mat_mat1873 = load double*, double** %m_mat1872
  %i1874 = alloca i32
  store i32 0, i32* %i1874
  br label %while1875

while1875:                                        ; preds = %merge1894, %merge1869
  %i_v1900 = load i32, i32* %i1874
  %bool_val1901 = icmp sle i32 %i_v1900, %tmp1836
  br i1 %bool_val1901, label %while_body1876, label %merge1899

while_body1876:                                   ; preds = %while1875
  %j1877 = alloca i32
  store i32 0, i32* %j1877
  br label %while1878

while1878:                                        ; preds = %while_body1879, %while_body1876
  %j_v1895 = load i32, i32* %j1877
  %bool_val1896 = icmp sle i32 %j_v1895, %tmp1839
  br i1 %bool_val1896, label %while_body1879, label %merge1894

while_body1879:                                   ; preds = %while1878
  %j_v1880 = load i32, i32* %j1877
  %i_v1881 = load i32, i32* %i1874
  %tmp1882 = mul i32 %c_mat1838, %i_v1881
  %index1883 = add i32 %j_v1880, %tmp1882
  %element_ptr1884 = getelementptr double, double* %mat_mat1833, i32 %index1883
  %tmp_element1885 = load double, double* %element_ptr1884
  %j_v1886 = load i32, i32* %j1877
  %i_v1887 = load i32, i32* %i1874
  %tmp1888 = mul i32 %c_mat1838, %i_v1887
  %index1889 = add i32 %j_v1886, %tmp1888
  %element_ptr1890 = getelementptr double, double* %mat_mat1873, i32 %index1889
  %tmp_element1891 = fsub double %tmp_element1885, 2.550000e+02
  store double %tmp_element1891, double* %element_ptr1890
  %j_v1892 = load i32, i32* %j1877
  %tmp1893 = add i32 %j_v1892, 1
  store i32 %tmp1893, i32* %j1877
  br label %while1878

merge1894:                                        ; preds = %while1878
  %i_v1897 = load i32, i32* %i1874
  %tmp1898 = add i32 %i_v1897, 1
  store i32 %tmp1898, i32* %i1874
  br label %while1875

merge1899:                                        ; preds = %while1875
  %m_r1902 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat1903 = load i32, i32* %m_r1902
  %m_c1904 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat1905 = load i32, i32* %m_c1904
  %i1906 = load i32, i32* %i948
  %tmp1911 = icmp sgt i32 0, %i1906
  br i1 %tmp1911, label %then1908, label %else1910

merge1907:                                        ; preds = %else1910, %then1908
  %tmp1912 = sub i32 %r_mat1903, 1
  %tmp1917 = icmp slt i32 %tmp1912, %i1906
  br i1 %tmp1917, label %then1914, label %else1916

then1908:                                         ; preds = %merge1899
  %printf1909 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1907

else1910:                                         ; preds = %merge1899
  br label %merge1907

merge1913:                                        ; preds = %else1916, %then1914
  %i1918 = load i32, i32* %i948
  %tmp1923 = icmp sgt i32 0, %i1918
  br i1 %tmp1923, label %then1920, label %else1922

then1914:                                         ; preds = %merge1907
  %printf1915 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1913

else1916:                                         ; preds = %merge1907
  br label %merge1913

merge1919:                                        ; preds = %else1922, %then1920
  %tmp1924 = sub i32 %r_mat1903, 1
  %tmp1929 = icmp slt i32 %tmp1924, %i1918
  br i1 %tmp1929, label %then1926, label %else1928

then1920:                                         ; preds = %merge1913
  %printf1921 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1919

else1922:                                         ; preds = %merge1913
  br label %merge1919

merge1925:                                        ; preds = %else1928, %then1926
  %y1930 = load double, double* %y
  %w1931 = load double, double* %w
  %tmp1932 = fdiv double %w1931, 2.000000e+00
  %tmp1933 = fadd double %y1930, %tmp1932
  %tmp1934 = fsub double %tmp1933, 2.000000e+00
  %double2int_result1935 = call %double_to_int_t* @double2int(double %tmp1934)
  %v_ptr1936 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1935, i32 0, i32 0
  %v1937 = load i32, i32* %v_ptr1936
  %31 = bitcast %double_to_int_t* %double2int_result1935 to i8*
  tail call void @free(i8* %31)
  %tmp1942 = icmp sgt i32 0, %v1937
  br i1 %tmp1942, label %then1939, label %else1941

then1926:                                         ; preds = %merge1919
  %printf1927 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1925

else1928:                                         ; preds = %merge1919
  br label %merge1925

merge1938:                                        ; preds = %else1941, %then1939
  %tmp1943 = sub i32 %c_mat1905, 1
  %tmp1948 = icmp slt i32 %tmp1943, %v1937
  br i1 %tmp1948, label %then1945, label %else1947

then1939:                                         ; preds = %merge1925
  %printf1940 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1938

else1941:                                         ; preds = %merge1925
  br label %merge1938

merge1944:                                        ; preds = %else1947, %then1945
  %y1949 = load double, double* %y
  %w1950 = load double, double* %w
  %tmp1951 = fdiv double %w1950, 2.000000e+00
  %tmp1952 = fadd double %y1949, %tmp1951
  %tmp1953 = fadd double %tmp1952, 2.000000e+00
  %double2int_result1954 = call %double_to_int_t* @double2int(double %tmp1953)
  %v_ptr1955 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1954, i32 0, i32 0
  %v1956 = load i32, i32* %v_ptr1955
  %32 = bitcast %double_to_int_t* %double2int_result1954 to i8*
  tail call void @free(i8* %32)
  %tmp1961 = icmp sgt i32 0, %v1956
  br i1 %tmp1961, label %then1958, label %else1960

then1945:                                         ; preds = %merge1938
  %printf1946 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1944

else1947:                                         ; preds = %merge1938
  br label %merge1944

merge1957:                                        ; preds = %else1960, %then1958
  %tmp1962 = sub i32 %c_mat1905, 1
  %tmp1967 = icmp slt i32 %tmp1962, %v1956
  br i1 %tmp1967, label %then1964, label %else1966

then1958:                                         ; preds = %merge1944
  %printf1959 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1957

else1960:                                         ; preds = %merge1944
  br label %merge1957

merge1963:                                        ; preds = %else1966, %then1964
  %tmp1968 = sub i32 %i1918, %i1906
  %tmp1969 = add i32 %tmp1968, 1
  %m_r1970 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 1
  %r_mat1971 = load i32, i32* %m_r1970
  %tmp1976 = icmp ne i32 %tmp1969, %r_mat1971
  br i1 %tmp1976, label %then1973, label %else1975

then1964:                                         ; preds = %merge1957
  %printf1965 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1963

else1966:                                         ; preds = %merge1957
  br label %merge1963

merge1972:                                        ; preds = %else1975, %then1973
  %tmp1977 = sub i32 %v1956, %v1937
  %tmp1978 = add i32 %tmp1977, 1
  %m_r1979 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 2
  %r_mat1980 = load i32, i32* %m_r1979
  %tmp1985 = icmp ne i32 %tmp1978, %r_mat1980
  br i1 %tmp1985, label %then1982, label %else1984

then1973:                                         ; preds = %merge1963
  %printf1974 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1972

else1975:                                         ; preds = %merge1963
  br label %merge1972

merge1981:                                        ; preds = %else1984, %then1982
  %m_mat1986 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 0
  %mat_mat1987 = load double*, double** %m_mat1986
  %m_r1988 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat1989 = load i32, i32* %m_r1988
  %m_c1990 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat1991 = load i32, i32* %m_c1990
  %m_mat1992 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 0
  %mat_v1993 = load double*, double** %m_mat1992
  %m_r1994 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 1
  %r_v1995 = load i32, i32* %m_r1994
  %m_c1996 = getelementptr inbounds %matrix_t, %matrix_t* %m1845, i32 0, i32 2
  %c_v1997 = load i32, i32* %m_c1996
  %i1998 = alloca i32
  store i32 %i1906, i32* %i1998
  br label %while1999

then1982:                                         ; preds = %merge1972
  %printf1983 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1981

else1984:                                         ; preds = %merge1972
  br label %merge1981

while1999:                                        ; preds = %merge2021, %merge1981
  %i_v2027 = load i32, i32* %i1998
  %bool_val2028 = icmp sle i32 %i_v2027, %i1918
  br i1 %bool_val2028, label %while_body2000, label %merge2026

while_body2000:                                   ; preds = %while1999
  %j2001 = alloca i32
  store i32 %v1937, i32* %j2001
  br label %while2002

while2002:                                        ; preds = %while_body2003, %while_body2000
  %j_v2022 = load i32, i32* %j2001
  %bool_val2023 = icmp sle i32 %j_v2022, %v1956
  br i1 %bool_val2023, label %while_body2003, label %merge2021

while_body2003:                                   ; preds = %while2002
  %j_v2004 = load i32, i32* %j2001
  %i_v2005 = load i32, i32* %i1998
  %tmp2006 = mul i32 %c_mat1991, %i_v2005
  %index2007 = add i32 %j_v2004, %tmp2006
  %element_ptr2008 = getelementptr double, double* %mat_mat1987, i32 %index2007
  %j_v2009 = load i32, i32* %j2001
  %tmp2010 = sub i32 %j_v2009, %v1937
  %tmp2011 = add i32 %tmp2010, 0
  %i_v2012 = load i32, i32* %i1998
  %tmp2013 = sub i32 %i_v2012, %i1906
  %tmp2014 = add i32 %tmp2013, 0
  %tmp2015 = mul i32 %c_v1997, %tmp2014
  %index2016 = add i32 %tmp2011, %tmp2015
  %element_ptr2017 = getelementptr double, double* %mat_v1993, i32 %index2016
  %tmp_element2018 = load double, double* %element_ptr2017
  store double %tmp_element2018, double* %element_ptr2008
  %j_v2019 = load i32, i32* %j2001
  %tmp2020 = add i32 %j_v2019, 1
  store i32 %tmp2020, i32* %j2001
  br label %while2002

merge2021:                                        ; preds = %while2002
  %i_v2024 = load i32, i32* %i1998
  %tmp2025 = add i32 %i_v2024, 1
  store i32 %tmp2025, i32* %i1998
  br label %while1999

merge2026:                                        ; preds = %while1999
  %zeros_result2029 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr2030 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2029, i32 0, i32 0
  %v2031 = load %matrix_t*, %matrix_t** %v_ptr2030
  %33 = bitcast %zero_matrix_t* %zeros_result2029 to i8*
  tail call void @free(i8* %33)
  %m_mat2032 = getelementptr inbounds %matrix_t, %matrix_t* %v2031, i32 0, i32 0
  %mat_mat2033 = load double*, double** %m_mat2032
  %m_r2034 = getelementptr inbounds %matrix_t, %matrix_t* %v2031, i32 0, i32 1
  %r_mat2035 = load i32, i32* %m_r2034
  %m_c2036 = getelementptr inbounds %matrix_t, %matrix_t* %v2031, i32 0, i32 2
  %c_mat2037 = load i32, i32* %m_c2036
  %size2038 = mul i32 %r_mat2035, %c_mat2037
  %mallocsize2039 = mul i32 %size2038, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2040 = tail call i8* @malloc(i32 %mallocsize2039)
  %system_mat2041 = bitcast i8* %malloccall2040 to double*
  %malloccall2042 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2043 = bitcast i8* %malloccall2042 to %matrix_t*
  %m_mat2044 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 0
  store double* %system_mat2041, double** %m_mat2044
  %m_r2045 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 1
  store i32 %r_mat2035, i32* %m_r2045
  %m_c2046 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 2
  store i32 %c_mat2037, i32* %m_c2046
  %tmp2047 = sub i32 %r_mat2035, 1
  %tmp2048 = sub i32 %c_mat2037, 1
  %i2049 = alloca i32
  store i32 0, i32* %i2049
  br label %while2050

while2050:                                        ; preds = %merge2062, %merge2026
  %i_v2068 = load i32, i32* %i2049
  %bool_val2069 = icmp sle i32 %i_v2068, %tmp2047
  br i1 %bool_val2069, label %while_body2051, label %merge2067

while_body2051:                                   ; preds = %while2050
  %j2052 = alloca i32
  store i32 0, i32* %j2052
  br label %while2053

while2053:                                        ; preds = %while_body2054, %while_body2051
  %j_v2063 = load i32, i32* %j2052
  %bool_val2064 = icmp sle i32 %j_v2063, %tmp2048
  br i1 %bool_val2064, label %while_body2054, label %merge2062

while_body2054:                                   ; preds = %while2053
  %j_v2055 = load i32, i32* %j2052
  %i_v2056 = load i32, i32* %i2049
  %tmp2057 = mul i32 %c_mat2037, %i_v2056
  %index2058 = add i32 %j_v2055, %tmp2057
  %element_ptr2059 = getelementptr double, double* %system_mat2041, i32 %index2058
  store double 0.000000e+00, double* %element_ptr2059
  %j_v2060 = load i32, i32* %j2052
  %tmp2061 = add i32 %j_v2060, 1
  store i32 %tmp2061, i32* %j2052
  br label %while2053

merge2062:                                        ; preds = %while2053
  %i_v2065 = load i32, i32* %i2049
  %tmp2066 = add i32 %i_v2065, 1
  store i32 %tmp2066, i32* %i2049
  br label %while2050

merge2067:                                        ; preds = %while2050
  %tmp2070 = sub i32 %c_mat2037, 1
  %tmp2071 = sub i32 %r_mat2035, 1
  %m_mat2072 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 0
  %mat_mat2073 = load double*, double** %m_mat2072
  %m_r2074 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 1
  %r_mat2075 = load i32, i32* %m_r2074
  %m_c2076 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 2
  %c_mat2077 = load i32, i32* %m_c2076
  %m_mat2078 = getelementptr inbounds %matrix_t, %matrix_t* %v2031, i32 0, i32 0
  %mat_v2079 = load double*, double** %m_mat2078
  %m_r2080 = getelementptr inbounds %matrix_t, %matrix_t* %v2031, i32 0, i32 1
  %r_v2081 = load i32, i32* %m_r2080
  %m_c2082 = getelementptr inbounds %matrix_t, %matrix_t* %v2031, i32 0, i32 2
  %c_v2083 = load i32, i32* %m_c2082
  %i2084 = alloca i32
  store i32 0, i32* %i2084
  br label %while2085

while2085:                                        ; preds = %merge2107, %merge2067
  %i_v2113 = load i32, i32* %i2084
  %bool_val2114 = icmp sle i32 %i_v2113, %tmp2071
  br i1 %bool_val2114, label %while_body2086, label %merge2112

while_body2086:                                   ; preds = %while2085
  %j2087 = alloca i32
  store i32 0, i32* %j2087
  br label %while2088

while2088:                                        ; preds = %while_body2089, %while_body2086
  %j_v2108 = load i32, i32* %j2087
  %bool_val2109 = icmp sle i32 %j_v2108, %tmp2070
  br i1 %bool_val2109, label %while_body2089, label %merge2107

while_body2089:                                   ; preds = %while2088
  %j_v2090 = load i32, i32* %j2087
  %i_v2091 = load i32, i32* %i2084
  %tmp2092 = mul i32 %c_mat2077, %i_v2091
  %index2093 = add i32 %j_v2090, %tmp2092
  %element_ptr2094 = getelementptr double, double* %mat_mat2073, i32 %index2093
  %j_v2095 = load i32, i32* %j2087
  %tmp2096 = sub i32 %j_v2095, 0
  %tmp2097 = add i32 %tmp2096, 0
  %i_v2098 = load i32, i32* %i2084
  %tmp2099 = sub i32 %i_v2098, 0
  %tmp2100 = add i32 %tmp2099, 0
  %tmp2101 = mul i32 %c_v2083, %tmp2100
  %index2102 = add i32 %tmp2097, %tmp2101
  %element_ptr2103 = getelementptr double, double* %mat_v2079, i32 %index2102
  %tmp_element2104 = load double, double* %element_ptr2103
  store double %tmp_element2104, double* %element_ptr2094
  %j_v2105 = load i32, i32* %j2087
  %tmp2106 = add i32 %j_v2105, 1
  store i32 %tmp2106, i32* %j2087
  br label %while2088

merge2107:                                        ; preds = %while2088
  %i_v2110 = load i32, i32* %i2084
  %tmp2111 = add i32 %i_v2110, 1
  store i32 %tmp2111, i32* %i2084
  br label %while2085

merge2112:                                        ; preds = %while2085
  %34 = bitcast double* %mat_mat2033 to i8*
  tail call void @free(i8* %34)
  %35 = bitcast %matrix_t* %v2031 to i8*
  tail call void @free(i8* %35)
  %m_mat2115 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 0
  %mat_mat2116 = load double*, double** %m_mat2115
  %m_r2117 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 1
  %r_mat2118 = load i32, i32* %m_r2117
  %tmp2119 = sub i32 %r_mat2118, 1
  %m_c2120 = getelementptr inbounds %matrix_t, %matrix_t* %m2043, i32 0, i32 2
  %c_mat2121 = load i32, i32* %m_c2120
  %tmp2122 = sub i32 %c_mat2121, 1
  %size2123 = mul i32 %r_mat2118, %c_mat2121
  %mallocsize2124 = mul i32 %size2123, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2125 = tail call i8* @malloc(i32 %mallocsize2124)
  %system_mat2126 = bitcast i8* %malloccall2125 to double*
  %malloccall2127 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2128 = bitcast i8* %malloccall2127 to %matrix_t*
  %m_mat2129 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 0
  store double* %system_mat2126, double** %m_mat2129
  %m_r2130 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 1
  store i32 %r_mat2118, i32* %m_r2130
  %m_c2131 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 2
  store i32 %c_mat2121, i32* %m_c2131
  %tmp2132 = sub i32 %r_mat2118, 1
  %tmp2133 = sub i32 %c_mat2121, 1
  %i2134 = alloca i32
  store i32 0, i32* %i2134
  br label %while2135

while2135:                                        ; preds = %merge2147, %merge2112
  %i_v2153 = load i32, i32* %i2134
  %bool_val2154 = icmp sle i32 %i_v2153, %tmp2132
  br i1 %bool_val2154, label %while_body2136, label %merge2152

while_body2136:                                   ; preds = %while2135
  %j2137 = alloca i32
  store i32 0, i32* %j2137
  br label %while2138

while2138:                                        ; preds = %while_body2139, %while_body2136
  %j_v2148 = load i32, i32* %j2137
  %bool_val2149 = icmp sle i32 %j_v2148, %tmp2133
  br i1 %bool_val2149, label %while_body2139, label %merge2147

while_body2139:                                   ; preds = %while2138
  %j_v2140 = load i32, i32* %j2137
  %i_v2141 = load i32, i32* %i2134
  %tmp2142 = mul i32 %c_mat2121, %i_v2141
  %index2143 = add i32 %j_v2140, %tmp2142
  %element_ptr2144 = getelementptr double, double* %system_mat2126, i32 %index2143
  store double 0.000000e+00, double* %element_ptr2144
  %j_v2145 = load i32, i32* %j2137
  %tmp2146 = add i32 %j_v2145, 1
  store i32 %tmp2146, i32* %j2137
  br label %while2138

merge2147:                                        ; preds = %while2138
  %i_v2150 = load i32, i32* %i2134
  %tmp2151 = add i32 %i_v2150, 1
  store i32 %tmp2151, i32* %i2134
  br label %while2135

merge2152:                                        ; preds = %while2135
  %m_mat2155 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 0
  %mat_mat2156 = load double*, double** %m_mat2155
  %i2157 = alloca i32
  store i32 0, i32* %i2157
  br label %while2158

while2158:                                        ; preds = %merge2177, %merge2152
  %i_v2183 = load i32, i32* %i2157
  %bool_val2184 = icmp sle i32 %i_v2183, %tmp2119
  br i1 %bool_val2184, label %while_body2159, label %merge2182

while_body2159:                                   ; preds = %while2158
  %j2160 = alloca i32
  store i32 0, i32* %j2160
  br label %while2161

while2161:                                        ; preds = %while_body2162, %while_body2159
  %j_v2178 = load i32, i32* %j2160
  %bool_val2179 = icmp sle i32 %j_v2178, %tmp2122
  br i1 %bool_val2179, label %while_body2162, label %merge2177

while_body2162:                                   ; preds = %while2161
  %j_v2163 = load i32, i32* %j2160
  %i_v2164 = load i32, i32* %i2157
  %tmp2165 = mul i32 %c_mat2121, %i_v2164
  %index2166 = add i32 %j_v2163, %tmp2165
  %element_ptr2167 = getelementptr double, double* %mat_mat2116, i32 %index2166
  %tmp_element2168 = load double, double* %element_ptr2167
  %j_v2169 = load i32, i32* %j2160
  %i_v2170 = load i32, i32* %i2157
  %tmp2171 = mul i32 %c_mat2121, %i_v2170
  %index2172 = add i32 %j_v2169, %tmp2171
  %element_ptr2173 = getelementptr double, double* %mat_mat2156, i32 %index2172
  %tmp_element2174 = fsub double %tmp_element2168, 2.550000e+02
  store double %tmp_element2174, double* %element_ptr2173
  %j_v2175 = load i32, i32* %j2160
  %tmp2176 = add i32 %j_v2175, 1
  store i32 %tmp2176, i32* %j2160
  br label %while2161

merge2177:                                        ; preds = %while2161
  %i_v2180 = load i32, i32* %i2157
  %tmp2181 = add i32 %i_v2180, 1
  store i32 %tmp2181, i32* %i2157
  br label %while2158

merge2182:                                        ; preds = %while2158
  %m_r2185 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat2186 = load i32, i32* %m_r2185
  %m_c2187 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat2188 = load i32, i32* %m_c2187
  %i2189 = load i32, i32* %i948
  %tmp2194 = icmp sgt i32 0, %i2189
  br i1 %tmp2194, label %then2191, label %else2193

merge2190:                                        ; preds = %else2193, %then2191
  %tmp2195 = sub i32 %r_mat2186, 1
  %tmp2200 = icmp slt i32 %tmp2195, %i2189
  br i1 %tmp2200, label %then2197, label %else2199

then2191:                                         ; preds = %merge2182
  %printf2192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2190

else2193:                                         ; preds = %merge2182
  br label %merge2190

merge2196:                                        ; preds = %else2199, %then2197
  %i2201 = load i32, i32* %i948
  %tmp2206 = icmp sgt i32 0, %i2201
  br i1 %tmp2206, label %then2203, label %else2205

then2197:                                         ; preds = %merge2190
  %printf2198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2196

else2199:                                         ; preds = %merge2190
  br label %merge2196

merge2202:                                        ; preds = %else2205, %then2203
  %tmp2207 = sub i32 %r_mat2186, 1
  %tmp2212 = icmp slt i32 %tmp2207, %i2201
  br i1 %tmp2212, label %then2209, label %else2211

then2203:                                         ; preds = %merge2196
  %printf2204 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2202

else2205:                                         ; preds = %merge2196
  br label %merge2202

merge2208:                                        ; preds = %else2211, %then2209
  %y2213 = load double, double* %y
  %w2214 = load double, double* %w
  %tmp2215 = fdiv double %w2214, 2.000000e+00
  %tmp2216 = fadd double %y2213, %tmp2215
  %tmp2217 = fsub double %tmp2216, 2.000000e+00
  %double2int_result2218 = call %double_to_int_t* @double2int(double %tmp2217)
  %v_ptr2219 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2218, i32 0, i32 0
  %v2220 = load i32, i32* %v_ptr2219
  %36 = bitcast %double_to_int_t* %double2int_result2218 to i8*
  tail call void @free(i8* %36)
  %tmp2225 = icmp sgt i32 0, %v2220
  br i1 %tmp2225, label %then2222, label %else2224

then2209:                                         ; preds = %merge2202
  %printf2210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2208

else2211:                                         ; preds = %merge2202
  br label %merge2208

merge2221:                                        ; preds = %else2224, %then2222
  %tmp2226 = sub i32 %c_mat2188, 1
  %tmp2231 = icmp slt i32 %tmp2226, %v2220
  br i1 %tmp2231, label %then2228, label %else2230

then2222:                                         ; preds = %merge2208
  %printf2223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2221

else2224:                                         ; preds = %merge2208
  br label %merge2221

merge2227:                                        ; preds = %else2230, %then2228
  %y2232 = load double, double* %y
  %w2233 = load double, double* %w
  %tmp2234 = fdiv double %w2233, 2.000000e+00
  %tmp2235 = fadd double %y2232, %tmp2234
  %tmp2236 = fadd double %tmp2235, 2.000000e+00
  %double2int_result2237 = call %double_to_int_t* @double2int(double %tmp2236)
  %v_ptr2238 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2237, i32 0, i32 0
  %v2239 = load i32, i32* %v_ptr2238
  %37 = bitcast %double_to_int_t* %double2int_result2237 to i8*
  tail call void @free(i8* %37)
  %tmp2244 = icmp sgt i32 0, %v2239
  br i1 %tmp2244, label %then2241, label %else2243

then2228:                                         ; preds = %merge2221
  %printf2229 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2227

else2230:                                         ; preds = %merge2221
  br label %merge2227

merge2240:                                        ; preds = %else2243, %then2241
  %tmp2245 = sub i32 %c_mat2188, 1
  %tmp2250 = icmp slt i32 %tmp2245, %v2239
  br i1 %tmp2250, label %then2247, label %else2249

then2241:                                         ; preds = %merge2227
  %printf2242 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2240

else2243:                                         ; preds = %merge2227
  br label %merge2240

merge2246:                                        ; preds = %else2249, %then2247
  %tmp2251 = sub i32 %i2201, %i2189
  %tmp2252 = add i32 %tmp2251, 1
  %m_r2253 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 1
  %r_mat2254 = load i32, i32* %m_r2253
  %tmp2259 = icmp ne i32 %tmp2252, %r_mat2254
  br i1 %tmp2259, label %then2256, label %else2258

then2247:                                         ; preds = %merge2240
  %printf2248 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2246

else2249:                                         ; preds = %merge2240
  br label %merge2246

merge2255:                                        ; preds = %else2258, %then2256
  %tmp2260 = sub i32 %v2239, %v2220
  %tmp2261 = add i32 %tmp2260, 1
  %m_r2262 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 2
  %r_mat2263 = load i32, i32* %m_r2262
  %tmp2268 = icmp ne i32 %tmp2261, %r_mat2263
  br i1 %tmp2268, label %then2265, label %else2267

then2256:                                         ; preds = %merge2246
  %printf2257 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2255

else2258:                                         ; preds = %merge2246
  br label %merge2255

merge2264:                                        ; preds = %else2267, %then2265
  %m_mat2269 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat2270 = load double*, double** %m_mat2269
  %m_r2271 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat2272 = load i32, i32* %m_r2271
  %m_c2273 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat2274 = load i32, i32* %m_c2273
  %m_mat2275 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 0
  %mat_v2276 = load double*, double** %m_mat2275
  %m_r2277 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 1
  %r_v2278 = load i32, i32* %m_r2277
  %m_c2279 = getelementptr inbounds %matrix_t, %matrix_t* %m2128, i32 0, i32 2
  %c_v2280 = load i32, i32* %m_c2279
  %i2281 = alloca i32
  store i32 %i2189, i32* %i2281
  br label %while2282

then2265:                                         ; preds = %merge2255
  %printf2266 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2264

else2267:                                         ; preds = %merge2255
  br label %merge2264

while2282:                                        ; preds = %merge2304, %merge2264
  %i_v2310 = load i32, i32* %i2281
  %bool_val2311 = icmp sle i32 %i_v2310, %i2201
  br i1 %bool_val2311, label %while_body2283, label %merge2309

while_body2283:                                   ; preds = %while2282
  %j2284 = alloca i32
  store i32 %v2220, i32* %j2284
  br label %while2285

while2285:                                        ; preds = %while_body2286, %while_body2283
  %j_v2305 = load i32, i32* %j2284
  %bool_val2306 = icmp sle i32 %j_v2305, %v2239
  br i1 %bool_val2306, label %while_body2286, label %merge2304

while_body2286:                                   ; preds = %while2285
  %j_v2287 = load i32, i32* %j2284
  %i_v2288 = load i32, i32* %i2281
  %tmp2289 = mul i32 %c_mat2274, %i_v2288
  %index2290 = add i32 %j_v2287, %tmp2289
  %element_ptr2291 = getelementptr double, double* %mat_mat2270, i32 %index2290
  %j_v2292 = load i32, i32* %j2284
  %tmp2293 = sub i32 %j_v2292, %v2220
  %tmp2294 = add i32 %tmp2293, 0
  %i_v2295 = load i32, i32* %i2281
  %tmp2296 = sub i32 %i_v2295, %i2189
  %tmp2297 = add i32 %tmp2296, 0
  %tmp2298 = mul i32 %c_v2280, %tmp2297
  %index2299 = add i32 %tmp2294, %tmp2298
  %element_ptr2300 = getelementptr double, double* %mat_v2276, i32 %index2299
  %tmp_element2301 = load double, double* %element_ptr2300
  store double %tmp_element2301, double* %element_ptr2291
  %j_v2302 = load i32, i32* %j2284
  %tmp2303 = add i32 %j_v2302, 1
  store i32 %tmp2303, i32* %j2284
  br label %while2285

merge2304:                                        ; preds = %while2285
  %i_v2307 = load i32, i32* %i2281
  %tmp2308 = add i32 %i_v2307, 1
  store i32 %tmp2308, i32* %i2281
  br label %while2282

merge2309:                                        ; preds = %while2282
  %zeros_result2312 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr2313 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2312, i32 0, i32 0
  %v2314 = load %matrix_t*, %matrix_t** %v_ptr2313
  %38 = bitcast %zero_matrix_t* %zeros_result2312 to i8*
  tail call void @free(i8* %38)
  %m_mat2315 = getelementptr inbounds %matrix_t, %matrix_t* %v2314, i32 0, i32 0
  %mat_mat2316 = load double*, double** %m_mat2315
  %m_r2317 = getelementptr inbounds %matrix_t, %matrix_t* %v2314, i32 0, i32 1
  %r_mat2318 = load i32, i32* %m_r2317
  %m_c2319 = getelementptr inbounds %matrix_t, %matrix_t* %v2314, i32 0, i32 2
  %c_mat2320 = load i32, i32* %m_c2319
  %size2321 = mul i32 %r_mat2318, %c_mat2320
  %mallocsize2322 = mul i32 %size2321, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2323 = tail call i8* @malloc(i32 %mallocsize2322)
  %system_mat2324 = bitcast i8* %malloccall2323 to double*
  %malloccall2325 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2326 = bitcast i8* %malloccall2325 to %matrix_t*
  %m_mat2327 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 0
  store double* %system_mat2324, double** %m_mat2327
  %m_r2328 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 1
  store i32 %r_mat2318, i32* %m_r2328
  %m_c2329 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 2
  store i32 %c_mat2320, i32* %m_c2329
  %tmp2330 = sub i32 %r_mat2318, 1
  %tmp2331 = sub i32 %c_mat2320, 1
  %i2332 = alloca i32
  store i32 0, i32* %i2332
  br label %while2333

while2333:                                        ; preds = %merge2345, %merge2309
  %i_v2351 = load i32, i32* %i2332
  %bool_val2352 = icmp sle i32 %i_v2351, %tmp2330
  br i1 %bool_val2352, label %while_body2334, label %merge2350

while_body2334:                                   ; preds = %while2333
  %j2335 = alloca i32
  store i32 0, i32* %j2335
  br label %while2336

while2336:                                        ; preds = %while_body2337, %while_body2334
  %j_v2346 = load i32, i32* %j2335
  %bool_val2347 = icmp sle i32 %j_v2346, %tmp2331
  br i1 %bool_val2347, label %while_body2337, label %merge2345

while_body2337:                                   ; preds = %while2336
  %j_v2338 = load i32, i32* %j2335
  %i_v2339 = load i32, i32* %i2332
  %tmp2340 = mul i32 %c_mat2320, %i_v2339
  %index2341 = add i32 %j_v2338, %tmp2340
  %element_ptr2342 = getelementptr double, double* %system_mat2324, i32 %index2341
  store double 0.000000e+00, double* %element_ptr2342
  %j_v2343 = load i32, i32* %j2335
  %tmp2344 = add i32 %j_v2343, 1
  store i32 %tmp2344, i32* %j2335
  br label %while2336

merge2345:                                        ; preds = %while2336
  %i_v2348 = load i32, i32* %i2332
  %tmp2349 = add i32 %i_v2348, 1
  store i32 %tmp2349, i32* %i2332
  br label %while2333

merge2350:                                        ; preds = %while2333
  %tmp2353 = sub i32 %c_mat2320, 1
  %tmp2354 = sub i32 %r_mat2318, 1
  %m_mat2355 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 0
  %mat_mat2356 = load double*, double** %m_mat2355
  %m_r2357 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 1
  %r_mat2358 = load i32, i32* %m_r2357
  %m_c2359 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 2
  %c_mat2360 = load i32, i32* %m_c2359
  %m_mat2361 = getelementptr inbounds %matrix_t, %matrix_t* %v2314, i32 0, i32 0
  %mat_v2362 = load double*, double** %m_mat2361
  %m_r2363 = getelementptr inbounds %matrix_t, %matrix_t* %v2314, i32 0, i32 1
  %r_v2364 = load i32, i32* %m_r2363
  %m_c2365 = getelementptr inbounds %matrix_t, %matrix_t* %v2314, i32 0, i32 2
  %c_v2366 = load i32, i32* %m_c2365
  %i2367 = alloca i32
  store i32 0, i32* %i2367
  br label %while2368

while2368:                                        ; preds = %merge2390, %merge2350
  %i_v2396 = load i32, i32* %i2367
  %bool_val2397 = icmp sle i32 %i_v2396, %tmp2354
  br i1 %bool_val2397, label %while_body2369, label %merge2395

while_body2369:                                   ; preds = %while2368
  %j2370 = alloca i32
  store i32 0, i32* %j2370
  br label %while2371

while2371:                                        ; preds = %while_body2372, %while_body2369
  %j_v2391 = load i32, i32* %j2370
  %bool_val2392 = icmp sle i32 %j_v2391, %tmp2353
  br i1 %bool_val2392, label %while_body2372, label %merge2390

while_body2372:                                   ; preds = %while2371
  %j_v2373 = load i32, i32* %j2370
  %i_v2374 = load i32, i32* %i2367
  %tmp2375 = mul i32 %c_mat2360, %i_v2374
  %index2376 = add i32 %j_v2373, %tmp2375
  %element_ptr2377 = getelementptr double, double* %mat_mat2356, i32 %index2376
  %j_v2378 = load i32, i32* %j2370
  %tmp2379 = sub i32 %j_v2378, 0
  %tmp2380 = add i32 %tmp2379, 0
  %i_v2381 = load i32, i32* %i2367
  %tmp2382 = sub i32 %i_v2381, 0
  %tmp2383 = add i32 %tmp2382, 0
  %tmp2384 = mul i32 %c_v2366, %tmp2383
  %index2385 = add i32 %tmp2380, %tmp2384
  %element_ptr2386 = getelementptr double, double* %mat_v2362, i32 %index2385
  %tmp_element2387 = load double, double* %element_ptr2386
  store double %tmp_element2387, double* %element_ptr2377
  %j_v2388 = load i32, i32* %j2370
  %tmp2389 = add i32 %j_v2388, 1
  store i32 %tmp2389, i32* %j2370
  br label %while2371

merge2390:                                        ; preds = %while2371
  %i_v2393 = load i32, i32* %i2367
  %tmp2394 = add i32 %i_v2393, 1
  store i32 %tmp2394, i32* %i2367
  br label %while2368

merge2395:                                        ; preds = %while2368
  %39 = bitcast double* %mat_mat2316 to i8*
  tail call void @free(i8* %39)
  %40 = bitcast %matrix_t* %v2314 to i8*
  tail call void @free(i8* %40)
  %m_r2398 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat2399 = load i32, i32* %m_r2398
  %m_c2400 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat2401 = load i32, i32* %m_c2400
  %i2402 = load i32, i32* %i948
  %tmp2407 = icmp sgt i32 0, %i2402
  br i1 %tmp2407, label %then2404, label %else2406

merge2403:                                        ; preds = %else2406, %then2404
  %tmp2408 = sub i32 %r_mat2399, 1
  %tmp2413 = icmp slt i32 %tmp2408, %i2402
  br i1 %tmp2413, label %then2410, label %else2412

then2404:                                         ; preds = %merge2395
  %printf2405 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2403

else2406:                                         ; preds = %merge2395
  br label %merge2403

merge2409:                                        ; preds = %else2412, %then2410
  %i2414 = load i32, i32* %i948
  %tmp2419 = icmp sgt i32 0, %i2414
  br i1 %tmp2419, label %then2416, label %else2418

then2410:                                         ; preds = %merge2403
  %printf2411 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2409

else2412:                                         ; preds = %merge2403
  br label %merge2409

merge2415:                                        ; preds = %else2418, %then2416
  %tmp2420 = sub i32 %r_mat2399, 1
  %tmp2425 = icmp slt i32 %tmp2420, %i2414
  br i1 %tmp2425, label %then2422, label %else2424

then2416:                                         ; preds = %merge2409
  %printf2417 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2415

else2418:                                         ; preds = %merge2409
  br label %merge2415

merge2421:                                        ; preds = %else2424, %then2422
  %y2426 = load double, double* %y
  %w2427 = load double, double* %w
  %tmp2428 = fdiv double %w2427, 2.000000e+00
  %tmp2429 = fadd double %y2426, %tmp2428
  %tmp2430 = fsub double %tmp2429, 2.000000e+00
  %double2int_result2431 = call %double_to_int_t* @double2int(double %tmp2430)
  %v_ptr2432 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2431, i32 0, i32 0
  %v2433 = load i32, i32* %v_ptr2432
  %41 = bitcast %double_to_int_t* %double2int_result2431 to i8*
  tail call void @free(i8* %41)
  %tmp2438 = icmp sgt i32 0, %v2433
  br i1 %tmp2438, label %then2435, label %else2437

then2422:                                         ; preds = %merge2415
  %printf2423 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2421

else2424:                                         ; preds = %merge2415
  br label %merge2421

merge2434:                                        ; preds = %else2437, %then2435
  %tmp2439 = sub i32 %c_mat2401, 1
  %tmp2444 = icmp slt i32 %tmp2439, %v2433
  br i1 %tmp2444, label %then2441, label %else2443

then2435:                                         ; preds = %merge2421
  %printf2436 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2434

else2437:                                         ; preds = %merge2421
  br label %merge2434

merge2440:                                        ; preds = %else2443, %then2441
  %y2445 = load double, double* %y
  %w2446 = load double, double* %w
  %tmp2447 = fdiv double %w2446, 2.000000e+00
  %tmp2448 = fadd double %y2445, %tmp2447
  %tmp2449 = fadd double %tmp2448, 2.000000e+00
  %double2int_result2450 = call %double_to_int_t* @double2int(double %tmp2449)
  %v_ptr2451 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2450, i32 0, i32 0
  %v2452 = load i32, i32* %v_ptr2451
  %42 = bitcast %double_to_int_t* %double2int_result2450 to i8*
  tail call void @free(i8* %42)
  %tmp2457 = icmp sgt i32 0, %v2452
  br i1 %tmp2457, label %then2454, label %else2456

then2441:                                         ; preds = %merge2434
  %printf2442 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2440

else2443:                                         ; preds = %merge2434
  br label %merge2440

merge2453:                                        ; preds = %else2456, %then2454
  %tmp2458 = sub i32 %c_mat2401, 1
  %tmp2463 = icmp slt i32 %tmp2458, %v2452
  br i1 %tmp2463, label %then2460, label %else2462

then2454:                                         ; preds = %merge2440
  %printf2455 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2453

else2456:                                         ; preds = %merge2440
  br label %merge2453

merge2459:                                        ; preds = %else2462, %then2460
  %tmp2464 = sub i32 %i2414, %i2402
  %tmp2465 = add i32 %tmp2464, 1
  %m_r2466 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 1
  %r_mat2467 = load i32, i32* %m_r2466
  %tmp2472 = icmp ne i32 %tmp2465, %r_mat2467
  br i1 %tmp2472, label %then2469, label %else2471

then2460:                                         ; preds = %merge2453
  %printf2461 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2459

else2462:                                         ; preds = %merge2453
  br label %merge2459

merge2468:                                        ; preds = %else2471, %then2469
  %tmp2473 = sub i32 %v2452, %v2433
  %tmp2474 = add i32 %tmp2473, 1
  %m_r2475 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 2
  %r_mat2476 = load i32, i32* %m_r2475
  %tmp2481 = icmp ne i32 %tmp2474, %r_mat2476
  br i1 %tmp2481, label %then2478, label %else2480

then2469:                                         ; preds = %merge2459
  %printf2470 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2468

else2471:                                         ; preds = %merge2459
  br label %merge2468

merge2477:                                        ; preds = %else2480, %then2478
  %m_mat2482 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 0
  %mat_mat2483 = load double*, double** %m_mat2482
  %m_r2484 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat2485 = load i32, i32* %m_r2484
  %m_c2486 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat2487 = load i32, i32* %m_c2486
  %m_mat2488 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 0
  %mat_v2489 = load double*, double** %m_mat2488
  %m_r2490 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 1
  %r_v2491 = load i32, i32* %m_r2490
  %m_c2492 = getelementptr inbounds %matrix_t, %matrix_t* %m2326, i32 0, i32 2
  %c_v2493 = load i32, i32* %m_c2492
  %i2494 = alloca i32
  store i32 %i2402, i32* %i2494
  br label %while2495

then2478:                                         ; preds = %merge2468
  %printf2479 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2477

else2480:                                         ; preds = %merge2468
  br label %merge2477

while2495:                                        ; preds = %merge2517, %merge2477
  %i_v2523 = load i32, i32* %i2494
  %bool_val2524 = icmp sle i32 %i_v2523, %i2414
  br i1 %bool_val2524, label %while_body2496, label %merge2522

while_body2496:                                   ; preds = %while2495
  %j2497 = alloca i32
  store i32 %v2433, i32* %j2497
  br label %while2498

while2498:                                        ; preds = %while_body2499, %while_body2496
  %j_v2518 = load i32, i32* %j2497
  %bool_val2519 = icmp sle i32 %j_v2518, %v2452
  br i1 %bool_val2519, label %while_body2499, label %merge2517

while_body2499:                                   ; preds = %while2498
  %j_v2500 = load i32, i32* %j2497
  %i_v2501 = load i32, i32* %i2494
  %tmp2502 = mul i32 %c_mat2487, %i_v2501
  %index2503 = add i32 %j_v2500, %tmp2502
  %element_ptr2504 = getelementptr double, double* %mat_mat2483, i32 %index2503
  %j_v2505 = load i32, i32* %j2497
  %tmp2506 = sub i32 %j_v2505, %v2433
  %tmp2507 = add i32 %tmp2506, 0
  %i_v2508 = load i32, i32* %i2494
  %tmp2509 = sub i32 %i_v2508, %i2402
  %tmp2510 = add i32 %tmp2509, 0
  %tmp2511 = mul i32 %c_v2493, %tmp2510
  %index2512 = add i32 %tmp2507, %tmp2511
  %element_ptr2513 = getelementptr double, double* %mat_v2489, i32 %index2512
  %tmp_element2514 = load double, double* %element_ptr2513
  store double %tmp_element2514, double* %element_ptr2504
  %j_v2515 = load i32, i32* %j2497
  %tmp2516 = add i32 %j_v2515, 1
  store i32 %tmp2516, i32* %j2497
  br label %while2498

merge2517:                                        ; preds = %while2498
  %i_v2520 = load i32, i32* %i2494
  %tmp2521 = add i32 %i_v2520, 1
  store i32 %tmp2521, i32* %i2494
  br label %while2495

merge2522:                                        ; preds = %while2495
  %i2525 = load i32, i32* %i948
  %tmp2526 = add i32 %i2525, 1
  %tmp2527 = load i32, i32* %i948
  store i32 %tmp2526, i32* %i948
  br label %while966

merge2528:                                        ; preds = %while966
  %i2538 = load i32, i32* %i948
  %y2539 = load double, double* %y
  %w2540 = load double, double* %w
  %tmp2541 = fdiv double %w2540, 2.000000e+00
  %tmp2542 = fadd double %y2539, %tmp2541
  %double2int_result2543 = call %double_to_int_t* @double2int(double %tmp2542)
  %v_ptr2544 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2543, i32 0, i32 0
  %v2545 = load i32, i32* %v_ptr2544
  %43 = bitcast %double_to_int_t* %double2int_result2543 to i8*
  tail call void @free(i8* %43)
  %tmp2546 = icmp sle i32 %i2538, %v2545
  %y2547 = load double, double* %y
  %w2548 = load double, double* %w
  %tmp2549 = fdiv double %w2548, 2.000000e+00
  %tmp2550 = fsub double %y2547, %tmp2549
  %double2int_result2551 = call %double_to_int_t* @double2int(double %tmp2550)
  %v_ptr2552 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2551, i32 0, i32 0
  %v2553 = load i32, i32* %v_ptr2552
  %44 = bitcast %double_to_int_t* %double2int_result2551 to i8*
  tail call void @free(i8* %44)
  %tmp2554 = load i32, i32* %i948
  store i32 %v2553, i32* %i948
  br label %while2555

while2555:                                        ; preds = %merge4112, %merge2528
  %i4119 = load i32, i32* %i948
  %y4120 = load double, double* %y
  %w4121 = load double, double* %w
  %tmp4122 = fdiv double %w4121, 2.000000e+00
  %tmp4123 = fadd double %y4120, %tmp4122
  %double2int_result4124 = call %double_to_int_t* @double2int(double %tmp4123)
  %v_ptr4125 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result4124, i32 0, i32 0
  %v4126 = load i32, i32* %v_ptr4125
  %45 = bitcast %double_to_int_t* %double2int_result4124 to i8*
  tail call void @free(i8* %45)
  %tmp4127 = icmp sle i32 %i4119, %v4126
  br i1 %tmp4127, label %while_body2556, label %merge4118

while_body2556:                                   ; preds = %while2555
  %zeros_result2557 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr2558 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2557, i32 0, i32 0
  %v2559 = load %matrix_t*, %matrix_t** %v_ptr2558
  %46 = bitcast %zero_matrix_t* %zeros_result2557 to i8*
  tail call void @free(i8* %46)
  %m_mat2560 = getelementptr inbounds %matrix_t, %matrix_t* %v2559, i32 0, i32 0
  %mat_mat2561 = load double*, double** %m_mat2560
  %m_r2562 = getelementptr inbounds %matrix_t, %matrix_t* %v2559, i32 0, i32 1
  %r_mat2563 = load i32, i32* %m_r2562
  %m_c2564 = getelementptr inbounds %matrix_t, %matrix_t* %v2559, i32 0, i32 2
  %c_mat2565 = load i32, i32* %m_c2564
  %size2566 = mul i32 %r_mat2563, %c_mat2565
  %mallocsize2567 = mul i32 %size2566, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2568 = tail call i8* @malloc(i32 %mallocsize2567)
  %system_mat2569 = bitcast i8* %malloccall2568 to double*
  %malloccall2570 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2571 = bitcast i8* %malloccall2570 to %matrix_t*
  %m_mat2572 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 0
  store double* %system_mat2569, double** %m_mat2572
  %m_r2573 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 1
  store i32 %r_mat2563, i32* %m_r2573
  %m_c2574 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 2
  store i32 %c_mat2565, i32* %m_c2574
  %tmp2575 = sub i32 %r_mat2563, 1
  %tmp2576 = sub i32 %c_mat2565, 1
  %i2577 = alloca i32
  store i32 0, i32* %i2577
  br label %while2578

while2578:                                        ; preds = %merge2590, %while_body2556
  %i_v2596 = load i32, i32* %i2577
  %bool_val2597 = icmp sle i32 %i_v2596, %tmp2575
  br i1 %bool_val2597, label %while_body2579, label %merge2595

while_body2579:                                   ; preds = %while2578
  %j2580 = alloca i32
  store i32 0, i32* %j2580
  br label %while2581

while2581:                                        ; preds = %while_body2582, %while_body2579
  %j_v2591 = load i32, i32* %j2580
  %bool_val2592 = icmp sle i32 %j_v2591, %tmp2576
  br i1 %bool_val2592, label %while_body2582, label %merge2590

while_body2582:                                   ; preds = %while2581
  %j_v2583 = load i32, i32* %j2580
  %i_v2584 = load i32, i32* %i2577
  %tmp2585 = mul i32 %c_mat2565, %i_v2584
  %index2586 = add i32 %j_v2583, %tmp2585
  %element_ptr2587 = getelementptr double, double* %system_mat2569, i32 %index2586
  store double 0.000000e+00, double* %element_ptr2587
  %j_v2588 = load i32, i32* %j2580
  %tmp2589 = add i32 %j_v2588, 1
  store i32 %tmp2589, i32* %j2580
  br label %while2581

merge2590:                                        ; preds = %while2581
  %i_v2593 = load i32, i32* %i2577
  %tmp2594 = add i32 %i_v2593, 1
  store i32 %tmp2594, i32* %i2577
  br label %while2578

merge2595:                                        ; preds = %while2578
  %tmp2598 = sub i32 %c_mat2565, 1
  %tmp2599 = sub i32 %r_mat2563, 1
  %m_mat2600 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 0
  %mat_mat2601 = load double*, double** %m_mat2600
  %m_r2602 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 1
  %r_mat2603 = load i32, i32* %m_r2602
  %m_c2604 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 2
  %c_mat2605 = load i32, i32* %m_c2604
  %m_mat2606 = getelementptr inbounds %matrix_t, %matrix_t* %v2559, i32 0, i32 0
  %mat_v2607 = load double*, double** %m_mat2606
  %m_r2608 = getelementptr inbounds %matrix_t, %matrix_t* %v2559, i32 0, i32 1
  %r_v2609 = load i32, i32* %m_r2608
  %m_c2610 = getelementptr inbounds %matrix_t, %matrix_t* %v2559, i32 0, i32 2
  %c_v2611 = load i32, i32* %m_c2610
  %i2612 = alloca i32
  store i32 0, i32* %i2612
  br label %while2613

while2613:                                        ; preds = %merge2635, %merge2595
  %i_v2641 = load i32, i32* %i2612
  %bool_val2642 = icmp sle i32 %i_v2641, %tmp2599
  br i1 %bool_val2642, label %while_body2614, label %merge2640

while_body2614:                                   ; preds = %while2613
  %j2615 = alloca i32
  store i32 0, i32* %j2615
  br label %while2616

while2616:                                        ; preds = %while_body2617, %while_body2614
  %j_v2636 = load i32, i32* %j2615
  %bool_val2637 = icmp sle i32 %j_v2636, %tmp2598
  br i1 %bool_val2637, label %while_body2617, label %merge2635

while_body2617:                                   ; preds = %while2616
  %j_v2618 = load i32, i32* %j2615
  %i_v2619 = load i32, i32* %i2612
  %tmp2620 = mul i32 %c_mat2605, %i_v2619
  %index2621 = add i32 %j_v2618, %tmp2620
  %element_ptr2622 = getelementptr double, double* %mat_mat2601, i32 %index2621
  %j_v2623 = load i32, i32* %j2615
  %tmp2624 = sub i32 %j_v2623, 0
  %tmp2625 = add i32 %tmp2624, 0
  %i_v2626 = load i32, i32* %i2612
  %tmp2627 = sub i32 %i_v2626, 0
  %tmp2628 = add i32 %tmp2627, 0
  %tmp2629 = mul i32 %c_v2611, %tmp2628
  %index2630 = add i32 %tmp2625, %tmp2629
  %element_ptr2631 = getelementptr double, double* %mat_v2607, i32 %index2630
  %tmp_element2632 = load double, double* %element_ptr2631
  store double %tmp_element2632, double* %element_ptr2622
  %j_v2633 = load i32, i32* %j2615
  %tmp2634 = add i32 %j_v2633, 1
  store i32 %tmp2634, i32* %j2615
  br label %while2616

merge2635:                                        ; preds = %while2616
  %i_v2638 = load i32, i32* %i2612
  %tmp2639 = add i32 %i_v2638, 1
  store i32 %tmp2639, i32* %i2612
  br label %while2613

merge2640:                                        ; preds = %while2613
  %47 = bitcast double* %mat_mat2561 to i8*
  tail call void @free(i8* %47)
  %48 = bitcast %matrix_t* %v2559 to i8*
  tail call void @free(i8* %48)
  %m_mat2643 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 0
  %mat_mat2644 = load double*, double** %m_mat2643
  %m_r2645 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 1
  %r_mat2646 = load i32, i32* %m_r2645
  %tmp2647 = sub i32 %r_mat2646, 1
  %m_c2648 = getelementptr inbounds %matrix_t, %matrix_t* %m2571, i32 0, i32 2
  %c_mat2649 = load i32, i32* %m_c2648
  %tmp2650 = sub i32 %c_mat2649, 1
  %size2651 = mul i32 %r_mat2646, %c_mat2649
  %mallocsize2652 = mul i32 %size2651, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2653 = tail call i8* @malloc(i32 %mallocsize2652)
  %system_mat2654 = bitcast i8* %malloccall2653 to double*
  %malloccall2655 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2656 = bitcast i8* %malloccall2655 to %matrix_t*
  %m_mat2657 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 0
  store double* %system_mat2654, double** %m_mat2657
  %m_r2658 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 1
  store i32 %r_mat2646, i32* %m_r2658
  %m_c2659 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 2
  store i32 %c_mat2649, i32* %m_c2659
  %tmp2660 = sub i32 %r_mat2646, 1
  %tmp2661 = sub i32 %c_mat2649, 1
  %i2662 = alloca i32
  store i32 0, i32* %i2662
  br label %while2663

while2663:                                        ; preds = %merge2675, %merge2640
  %i_v2681 = load i32, i32* %i2662
  %bool_val2682 = icmp sle i32 %i_v2681, %tmp2660
  br i1 %bool_val2682, label %while_body2664, label %merge2680

while_body2664:                                   ; preds = %while2663
  %j2665 = alloca i32
  store i32 0, i32* %j2665
  br label %while2666

while2666:                                        ; preds = %while_body2667, %while_body2664
  %j_v2676 = load i32, i32* %j2665
  %bool_val2677 = icmp sle i32 %j_v2676, %tmp2661
  br i1 %bool_val2677, label %while_body2667, label %merge2675

while_body2667:                                   ; preds = %while2666
  %j_v2668 = load i32, i32* %j2665
  %i_v2669 = load i32, i32* %i2662
  %tmp2670 = mul i32 %c_mat2649, %i_v2669
  %index2671 = add i32 %j_v2668, %tmp2670
  %element_ptr2672 = getelementptr double, double* %system_mat2654, i32 %index2671
  store double 0.000000e+00, double* %element_ptr2672
  %j_v2673 = load i32, i32* %j2665
  %tmp2674 = add i32 %j_v2673, 1
  store i32 %tmp2674, i32* %j2665
  br label %while2666

merge2675:                                        ; preds = %while2666
  %i_v2678 = load i32, i32* %i2662
  %tmp2679 = add i32 %i_v2678, 1
  store i32 %tmp2679, i32* %i2662
  br label %while2663

merge2680:                                        ; preds = %while2663
  %m_mat2683 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 0
  %mat_mat2684 = load double*, double** %m_mat2683
  %i2685 = alloca i32
  store i32 0, i32* %i2685
  br label %while2686

while2686:                                        ; preds = %merge2705, %merge2680
  %i_v2711 = load i32, i32* %i2685
  %bool_val2712 = icmp sle i32 %i_v2711, %tmp2647
  br i1 %bool_val2712, label %while_body2687, label %merge2710

while_body2687:                                   ; preds = %while2686
  %j2688 = alloca i32
  store i32 0, i32* %j2688
  br label %while2689

while2689:                                        ; preds = %while_body2690, %while_body2687
  %j_v2706 = load i32, i32* %j2688
  %bool_val2707 = icmp sle i32 %j_v2706, %tmp2650
  br i1 %bool_val2707, label %while_body2690, label %merge2705

while_body2690:                                   ; preds = %while2689
  %j_v2691 = load i32, i32* %j2688
  %i_v2692 = load i32, i32* %i2685
  %tmp2693 = mul i32 %c_mat2649, %i_v2692
  %index2694 = add i32 %j_v2691, %tmp2693
  %element_ptr2695 = getelementptr double, double* %mat_mat2644, i32 %index2694
  %tmp_element2696 = load double, double* %element_ptr2695
  %j_v2697 = load i32, i32* %j2688
  %i_v2698 = load i32, i32* %i2685
  %tmp2699 = mul i32 %c_mat2649, %i_v2698
  %index2700 = add i32 %j_v2697, %tmp2699
  %element_ptr2701 = getelementptr double, double* %mat_mat2684, i32 %index2700
  %tmp_element2702 = fsub double %tmp_element2696, 2.550000e+02
  store double %tmp_element2702, double* %element_ptr2701
  %j_v2703 = load i32, i32* %j2688
  %tmp2704 = add i32 %j_v2703, 1
  store i32 %tmp2704, i32* %j2688
  br label %while2689

merge2705:                                        ; preds = %while2689
  %i_v2708 = load i32, i32* %i2685
  %tmp2709 = add i32 %i_v2708, 1
  store i32 %tmp2709, i32* %i2685
  br label %while2686

merge2710:                                        ; preds = %while2686
  %m_r2713 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat2714 = load i32, i32* %m_r2713
  %m_c2715 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat2716 = load i32, i32* %m_c2715
  %x2717 = load double, double* %x
  %l2718 = load double, double* %l
  %tmp2719 = fdiv double %l2718, 2.000000e+00
  %tmp2720 = fsub double %x2717, %tmp2719
  %tmp2721 = fsub double %tmp2720, 2.000000e+00
  %double2int_result2722 = call %double_to_int_t* @double2int(double %tmp2721)
  %v_ptr2723 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2722, i32 0, i32 0
  %v2724 = load i32, i32* %v_ptr2723
  %49 = bitcast %double_to_int_t* %double2int_result2722 to i8*
  tail call void @free(i8* %49)
  %tmp2729 = icmp sgt i32 0, %v2724
  br i1 %tmp2729, label %then2726, label %else2728

merge2725:                                        ; preds = %else2728, %then2726
  %tmp2730 = sub i32 %r_mat2714, 1
  %tmp2735 = icmp slt i32 %tmp2730, %v2724
  br i1 %tmp2735, label %then2732, label %else2734

then2726:                                         ; preds = %merge2710
  %printf2727 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2725

else2728:                                         ; preds = %merge2710
  br label %merge2725

merge2731:                                        ; preds = %else2734, %then2732
  %x2736 = load double, double* %x
  %l2737 = load double, double* %l
  %tmp2738 = fdiv double %l2737, 2.000000e+00
  %tmp2739 = fsub double %x2736, %tmp2738
  %tmp2740 = fadd double %tmp2739, 2.000000e+00
  %double2int_result2741 = call %double_to_int_t* @double2int(double %tmp2740)
  %v_ptr2742 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2741, i32 0, i32 0
  %v2743 = load i32, i32* %v_ptr2742
  %50 = bitcast %double_to_int_t* %double2int_result2741 to i8*
  tail call void @free(i8* %50)
  %tmp2748 = icmp sgt i32 0, %v2743
  br i1 %tmp2748, label %then2745, label %else2747

then2732:                                         ; preds = %merge2725
  %printf2733 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2731

else2734:                                         ; preds = %merge2725
  br label %merge2731

merge2744:                                        ; preds = %else2747, %then2745
  %tmp2749 = sub i32 %r_mat2714, 1
  %tmp2754 = icmp slt i32 %tmp2749, %v2743
  br i1 %tmp2754, label %then2751, label %else2753

then2745:                                         ; preds = %merge2731
  %printf2746 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2744

else2747:                                         ; preds = %merge2731
  br label %merge2744

merge2750:                                        ; preds = %else2753, %then2751
  %i2755 = load i32, i32* %i948
  %tmp2760 = icmp sgt i32 0, %i2755
  br i1 %tmp2760, label %then2757, label %else2759

then2751:                                         ; preds = %merge2744
  %printf2752 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2750

else2753:                                         ; preds = %merge2744
  br label %merge2750

merge2756:                                        ; preds = %else2759, %then2757
  %tmp2761 = sub i32 %c_mat2716, 1
  %tmp2766 = icmp slt i32 %tmp2761, %i2755
  br i1 %tmp2766, label %then2763, label %else2765

then2757:                                         ; preds = %merge2750
  %printf2758 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2756

else2759:                                         ; preds = %merge2750
  br label %merge2756

merge2762:                                        ; preds = %else2765, %then2763
  %i2767 = load i32, i32* %i948
  %tmp2772 = icmp sgt i32 0, %i2767
  br i1 %tmp2772, label %then2769, label %else2771

then2763:                                         ; preds = %merge2756
  %printf2764 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2762

else2765:                                         ; preds = %merge2756
  br label %merge2762

merge2768:                                        ; preds = %else2771, %then2769
  %tmp2773 = sub i32 %c_mat2716, 1
  %tmp2778 = icmp slt i32 %tmp2773, %i2767
  br i1 %tmp2778, label %then2775, label %else2777

then2769:                                         ; preds = %merge2762
  %printf2770 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2768

else2771:                                         ; preds = %merge2762
  br label %merge2768

merge2774:                                        ; preds = %else2777, %then2775
  %tmp2779 = sub i32 %v2743, %v2724
  %tmp2780 = add i32 %tmp2779, 1
  %m_r2781 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 1
  %r_mat2782 = load i32, i32* %m_r2781
  %tmp2787 = icmp ne i32 %tmp2780, %r_mat2782
  br i1 %tmp2787, label %then2784, label %else2786

then2775:                                         ; preds = %merge2768
  %printf2776 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2774

else2777:                                         ; preds = %merge2768
  br label %merge2774

merge2783:                                        ; preds = %else2786, %then2784
  %tmp2788 = sub i32 %i2767, %i2755
  %tmp2789 = add i32 %tmp2788, 1
  %m_r2790 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 2
  %r_mat2791 = load i32, i32* %m_r2790
  %tmp2796 = icmp ne i32 %tmp2789, %r_mat2791
  br i1 %tmp2796, label %then2793, label %else2795

then2784:                                         ; preds = %merge2774
  %printf2785 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2783

else2786:                                         ; preds = %merge2774
  br label %merge2783

merge2792:                                        ; preds = %else2795, %then2793
  %m_mat2797 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 0
  %mat_mat2798 = load double*, double** %m_mat2797
  %m_r2799 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat2800 = load i32, i32* %m_r2799
  %m_c2801 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat2802 = load i32, i32* %m_c2801
  %m_mat2803 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 0
  %mat_v2804 = load double*, double** %m_mat2803
  %m_r2805 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 1
  %r_v2806 = load i32, i32* %m_r2805
  %m_c2807 = getelementptr inbounds %matrix_t, %matrix_t* %m2656, i32 0, i32 2
  %c_v2808 = load i32, i32* %m_c2807
  %i2809 = alloca i32
  store i32 %v2724, i32* %i2809
  br label %while2810

then2793:                                         ; preds = %merge2783
  %printf2794 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2792

else2795:                                         ; preds = %merge2783
  br label %merge2792

while2810:                                        ; preds = %merge2832, %merge2792
  %i_v2838 = load i32, i32* %i2809
  %bool_val2839 = icmp sle i32 %i_v2838, %v2743
  br i1 %bool_val2839, label %while_body2811, label %merge2837

while_body2811:                                   ; preds = %while2810
  %j2812 = alloca i32
  store i32 %i2755, i32* %j2812
  br label %while2813

while2813:                                        ; preds = %while_body2814, %while_body2811
  %j_v2833 = load i32, i32* %j2812
  %bool_val2834 = icmp sle i32 %j_v2833, %i2767
  br i1 %bool_val2834, label %while_body2814, label %merge2832

while_body2814:                                   ; preds = %while2813
  %j_v2815 = load i32, i32* %j2812
  %i_v2816 = load i32, i32* %i2809
  %tmp2817 = mul i32 %c_mat2802, %i_v2816
  %index2818 = add i32 %j_v2815, %tmp2817
  %element_ptr2819 = getelementptr double, double* %mat_mat2798, i32 %index2818
  %j_v2820 = load i32, i32* %j2812
  %tmp2821 = sub i32 %j_v2820, %i2755
  %tmp2822 = add i32 %tmp2821, 0
  %i_v2823 = load i32, i32* %i2809
  %tmp2824 = sub i32 %i_v2823, %v2724
  %tmp2825 = add i32 %tmp2824, 0
  %tmp2826 = mul i32 %c_v2808, %tmp2825
  %index2827 = add i32 %tmp2822, %tmp2826
  %element_ptr2828 = getelementptr double, double* %mat_v2804, i32 %index2827
  %tmp_element2829 = load double, double* %element_ptr2828
  store double %tmp_element2829, double* %element_ptr2819
  %j_v2830 = load i32, i32* %j2812
  %tmp2831 = add i32 %j_v2830, 1
  store i32 %tmp2831, i32* %j2812
  br label %while2813

merge2832:                                        ; preds = %while2813
  %i_v2835 = load i32, i32* %i2809
  %tmp2836 = add i32 %i_v2835, 1
  store i32 %tmp2836, i32* %i2809
  br label %while2810

merge2837:                                        ; preds = %while2810
  %zeros_result2840 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr2841 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2840, i32 0, i32 0
  %v2842 = load %matrix_t*, %matrix_t** %v_ptr2841
  %51 = bitcast %zero_matrix_t* %zeros_result2840 to i8*
  tail call void @free(i8* %51)
  %m_mat2843 = getelementptr inbounds %matrix_t, %matrix_t* %v2842, i32 0, i32 0
  %mat_mat2844 = load double*, double** %m_mat2843
  %m_r2845 = getelementptr inbounds %matrix_t, %matrix_t* %v2842, i32 0, i32 1
  %r_mat2846 = load i32, i32* %m_r2845
  %m_c2847 = getelementptr inbounds %matrix_t, %matrix_t* %v2842, i32 0, i32 2
  %c_mat2848 = load i32, i32* %m_c2847
  %size2849 = mul i32 %r_mat2846, %c_mat2848
  %mallocsize2850 = mul i32 %size2849, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2851 = tail call i8* @malloc(i32 %mallocsize2850)
  %system_mat2852 = bitcast i8* %malloccall2851 to double*
  %malloccall2853 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2854 = bitcast i8* %malloccall2853 to %matrix_t*
  %m_mat2855 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 0
  store double* %system_mat2852, double** %m_mat2855
  %m_r2856 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 1
  store i32 %r_mat2846, i32* %m_r2856
  %m_c2857 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 2
  store i32 %c_mat2848, i32* %m_c2857
  %tmp2858 = sub i32 %r_mat2846, 1
  %tmp2859 = sub i32 %c_mat2848, 1
  %i2860 = alloca i32
  store i32 0, i32* %i2860
  br label %while2861

while2861:                                        ; preds = %merge2873, %merge2837
  %i_v2879 = load i32, i32* %i2860
  %bool_val2880 = icmp sle i32 %i_v2879, %tmp2858
  br i1 %bool_val2880, label %while_body2862, label %merge2878

while_body2862:                                   ; preds = %while2861
  %j2863 = alloca i32
  store i32 0, i32* %j2863
  br label %while2864

while2864:                                        ; preds = %while_body2865, %while_body2862
  %j_v2874 = load i32, i32* %j2863
  %bool_val2875 = icmp sle i32 %j_v2874, %tmp2859
  br i1 %bool_val2875, label %while_body2865, label %merge2873

while_body2865:                                   ; preds = %while2864
  %j_v2866 = load i32, i32* %j2863
  %i_v2867 = load i32, i32* %i2860
  %tmp2868 = mul i32 %c_mat2848, %i_v2867
  %index2869 = add i32 %j_v2866, %tmp2868
  %element_ptr2870 = getelementptr double, double* %system_mat2852, i32 %index2869
  store double 0.000000e+00, double* %element_ptr2870
  %j_v2871 = load i32, i32* %j2863
  %tmp2872 = add i32 %j_v2871, 1
  store i32 %tmp2872, i32* %j2863
  br label %while2864

merge2873:                                        ; preds = %while2864
  %i_v2876 = load i32, i32* %i2860
  %tmp2877 = add i32 %i_v2876, 1
  store i32 %tmp2877, i32* %i2860
  br label %while2861

merge2878:                                        ; preds = %while2861
  %tmp2881 = sub i32 %c_mat2848, 1
  %tmp2882 = sub i32 %r_mat2846, 1
  %m_mat2883 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 0
  %mat_mat2884 = load double*, double** %m_mat2883
  %m_r2885 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 1
  %r_mat2886 = load i32, i32* %m_r2885
  %m_c2887 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 2
  %c_mat2888 = load i32, i32* %m_c2887
  %m_mat2889 = getelementptr inbounds %matrix_t, %matrix_t* %v2842, i32 0, i32 0
  %mat_v2890 = load double*, double** %m_mat2889
  %m_r2891 = getelementptr inbounds %matrix_t, %matrix_t* %v2842, i32 0, i32 1
  %r_v2892 = load i32, i32* %m_r2891
  %m_c2893 = getelementptr inbounds %matrix_t, %matrix_t* %v2842, i32 0, i32 2
  %c_v2894 = load i32, i32* %m_c2893
  %i2895 = alloca i32
  store i32 0, i32* %i2895
  br label %while2896

while2896:                                        ; preds = %merge2918, %merge2878
  %i_v2924 = load i32, i32* %i2895
  %bool_val2925 = icmp sle i32 %i_v2924, %tmp2882
  br i1 %bool_val2925, label %while_body2897, label %merge2923

while_body2897:                                   ; preds = %while2896
  %j2898 = alloca i32
  store i32 0, i32* %j2898
  br label %while2899

while2899:                                        ; preds = %while_body2900, %while_body2897
  %j_v2919 = load i32, i32* %j2898
  %bool_val2920 = icmp sle i32 %j_v2919, %tmp2881
  br i1 %bool_val2920, label %while_body2900, label %merge2918

while_body2900:                                   ; preds = %while2899
  %j_v2901 = load i32, i32* %j2898
  %i_v2902 = load i32, i32* %i2895
  %tmp2903 = mul i32 %c_mat2888, %i_v2902
  %index2904 = add i32 %j_v2901, %tmp2903
  %element_ptr2905 = getelementptr double, double* %mat_mat2884, i32 %index2904
  %j_v2906 = load i32, i32* %j2898
  %tmp2907 = sub i32 %j_v2906, 0
  %tmp2908 = add i32 %tmp2907, 0
  %i_v2909 = load i32, i32* %i2895
  %tmp2910 = sub i32 %i_v2909, 0
  %tmp2911 = add i32 %tmp2910, 0
  %tmp2912 = mul i32 %c_v2894, %tmp2911
  %index2913 = add i32 %tmp2908, %tmp2912
  %element_ptr2914 = getelementptr double, double* %mat_v2890, i32 %index2913
  %tmp_element2915 = load double, double* %element_ptr2914
  store double %tmp_element2915, double* %element_ptr2905
  %j_v2916 = load i32, i32* %j2898
  %tmp2917 = add i32 %j_v2916, 1
  store i32 %tmp2917, i32* %j2898
  br label %while2899

merge2918:                                        ; preds = %while2899
  %i_v2921 = load i32, i32* %i2895
  %tmp2922 = add i32 %i_v2921, 1
  store i32 %tmp2922, i32* %i2895
  br label %while2896

merge2923:                                        ; preds = %while2896
  %52 = bitcast double* %mat_mat2844 to i8*
  tail call void @free(i8* %52)
  %53 = bitcast %matrix_t* %v2842 to i8*
  tail call void @free(i8* %53)
  %m_mat2926 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 0
  %mat_mat2927 = load double*, double** %m_mat2926
  %m_r2928 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 1
  %r_mat2929 = load i32, i32* %m_r2928
  %tmp2930 = sub i32 %r_mat2929, 1
  %m_c2931 = getelementptr inbounds %matrix_t, %matrix_t* %m2854, i32 0, i32 2
  %c_mat2932 = load i32, i32* %m_c2931
  %tmp2933 = sub i32 %c_mat2932, 1
  %size2934 = mul i32 %r_mat2929, %c_mat2932
  %mallocsize2935 = mul i32 %size2934, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2936 = tail call i8* @malloc(i32 %mallocsize2935)
  %system_mat2937 = bitcast i8* %malloccall2936 to double*
  %malloccall2938 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m2939 = bitcast i8* %malloccall2938 to %matrix_t*
  %m_mat2940 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 0
  store double* %system_mat2937, double** %m_mat2940
  %m_r2941 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 1
  store i32 %r_mat2929, i32* %m_r2941
  %m_c2942 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 2
  store i32 %c_mat2932, i32* %m_c2942
  %tmp2943 = sub i32 %r_mat2929, 1
  %tmp2944 = sub i32 %c_mat2932, 1
  %i2945 = alloca i32
  store i32 0, i32* %i2945
  br label %while2946

while2946:                                        ; preds = %merge2958, %merge2923
  %i_v2964 = load i32, i32* %i2945
  %bool_val2965 = icmp sle i32 %i_v2964, %tmp2943
  br i1 %bool_val2965, label %while_body2947, label %merge2963

while_body2947:                                   ; preds = %while2946
  %j2948 = alloca i32
  store i32 0, i32* %j2948
  br label %while2949

while2949:                                        ; preds = %while_body2950, %while_body2947
  %j_v2959 = load i32, i32* %j2948
  %bool_val2960 = icmp sle i32 %j_v2959, %tmp2944
  br i1 %bool_val2960, label %while_body2950, label %merge2958

while_body2950:                                   ; preds = %while2949
  %j_v2951 = load i32, i32* %j2948
  %i_v2952 = load i32, i32* %i2945
  %tmp2953 = mul i32 %c_mat2932, %i_v2952
  %index2954 = add i32 %j_v2951, %tmp2953
  %element_ptr2955 = getelementptr double, double* %system_mat2937, i32 %index2954
  store double 0.000000e+00, double* %element_ptr2955
  %j_v2956 = load i32, i32* %j2948
  %tmp2957 = add i32 %j_v2956, 1
  store i32 %tmp2957, i32* %j2948
  br label %while2949

merge2958:                                        ; preds = %while2949
  %i_v2961 = load i32, i32* %i2945
  %tmp2962 = add i32 %i_v2961, 1
  store i32 %tmp2962, i32* %i2945
  br label %while2946

merge2963:                                        ; preds = %while2946
  %m_mat2966 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 0
  %mat_mat2967 = load double*, double** %m_mat2966
  %i2968 = alloca i32
  store i32 0, i32* %i2968
  br label %while2969

while2969:                                        ; preds = %merge2988, %merge2963
  %i_v2994 = load i32, i32* %i2968
  %bool_val2995 = icmp sle i32 %i_v2994, %tmp2930
  br i1 %bool_val2995, label %while_body2970, label %merge2993

while_body2970:                                   ; preds = %while2969
  %j2971 = alloca i32
  store i32 0, i32* %j2971
  br label %while2972

while2972:                                        ; preds = %while_body2973, %while_body2970
  %j_v2989 = load i32, i32* %j2971
  %bool_val2990 = icmp sle i32 %j_v2989, %tmp2933
  br i1 %bool_val2990, label %while_body2973, label %merge2988

while_body2973:                                   ; preds = %while2972
  %j_v2974 = load i32, i32* %j2971
  %i_v2975 = load i32, i32* %i2968
  %tmp2976 = mul i32 %c_mat2932, %i_v2975
  %index2977 = add i32 %j_v2974, %tmp2976
  %element_ptr2978 = getelementptr double, double* %mat_mat2927, i32 %index2977
  %tmp_element2979 = load double, double* %element_ptr2978
  %j_v2980 = load i32, i32* %j2971
  %i_v2981 = load i32, i32* %i2968
  %tmp2982 = mul i32 %c_mat2932, %i_v2981
  %index2983 = add i32 %j_v2980, %tmp2982
  %element_ptr2984 = getelementptr double, double* %mat_mat2967, i32 %index2983
  %tmp_element2985 = fsub double %tmp_element2979, 2.550000e+02
  store double %tmp_element2985, double* %element_ptr2984
  %j_v2986 = load i32, i32* %j2971
  %tmp2987 = add i32 %j_v2986, 1
  store i32 %tmp2987, i32* %j2971
  br label %while2972

merge2988:                                        ; preds = %while2972
  %i_v2991 = load i32, i32* %i2968
  %tmp2992 = add i32 %i_v2991, 1
  store i32 %tmp2992, i32* %i2968
  br label %while2969

merge2993:                                        ; preds = %while2969
  %m_r2996 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat2997 = load i32, i32* %m_r2996
  %m_c2998 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat2999 = load i32, i32* %m_c2998
  %x3000 = load double, double* %x
  %l3001 = load double, double* %l
  %tmp3002 = fdiv double %l3001, 2.000000e+00
  %tmp3003 = fsub double %x3000, %tmp3002
  %tmp3004 = fsub double %tmp3003, 2.000000e+00
  %double2int_result3005 = call %double_to_int_t* @double2int(double %tmp3004)
  %v_ptr3006 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3005, i32 0, i32 0
  %v3007 = load i32, i32* %v_ptr3006
  %54 = bitcast %double_to_int_t* %double2int_result3005 to i8*
  tail call void @free(i8* %54)
  %tmp3012 = icmp sgt i32 0, %v3007
  br i1 %tmp3012, label %then3009, label %else3011

merge3008:                                        ; preds = %else3011, %then3009
  %tmp3013 = sub i32 %r_mat2997, 1
  %tmp3018 = icmp slt i32 %tmp3013, %v3007
  br i1 %tmp3018, label %then3015, label %else3017

then3009:                                         ; preds = %merge2993
  %printf3010 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3008

else3011:                                         ; preds = %merge2993
  br label %merge3008

merge3014:                                        ; preds = %else3017, %then3015
  %x3019 = load double, double* %x
  %l3020 = load double, double* %l
  %tmp3021 = fdiv double %l3020, 2.000000e+00
  %tmp3022 = fsub double %x3019, %tmp3021
  %tmp3023 = fadd double %tmp3022, 2.000000e+00
  %double2int_result3024 = call %double_to_int_t* @double2int(double %tmp3023)
  %v_ptr3025 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3024, i32 0, i32 0
  %v3026 = load i32, i32* %v_ptr3025
  %55 = bitcast %double_to_int_t* %double2int_result3024 to i8*
  tail call void @free(i8* %55)
  %tmp3031 = icmp sgt i32 0, %v3026
  br i1 %tmp3031, label %then3028, label %else3030

then3015:                                         ; preds = %merge3008
  %printf3016 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3014

else3017:                                         ; preds = %merge3008
  br label %merge3014

merge3027:                                        ; preds = %else3030, %then3028
  %tmp3032 = sub i32 %r_mat2997, 1
  %tmp3037 = icmp slt i32 %tmp3032, %v3026
  br i1 %tmp3037, label %then3034, label %else3036

then3028:                                         ; preds = %merge3014
  %printf3029 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3027

else3030:                                         ; preds = %merge3014
  br label %merge3027

merge3033:                                        ; preds = %else3036, %then3034
  %i3038 = load i32, i32* %i948
  %tmp3043 = icmp sgt i32 0, %i3038
  br i1 %tmp3043, label %then3040, label %else3042

then3034:                                         ; preds = %merge3027
  %printf3035 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3033

else3036:                                         ; preds = %merge3027
  br label %merge3033

merge3039:                                        ; preds = %else3042, %then3040
  %tmp3044 = sub i32 %c_mat2999, 1
  %tmp3049 = icmp slt i32 %tmp3044, %i3038
  br i1 %tmp3049, label %then3046, label %else3048

then3040:                                         ; preds = %merge3033
  %printf3041 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3039

else3042:                                         ; preds = %merge3033
  br label %merge3039

merge3045:                                        ; preds = %else3048, %then3046
  %i3050 = load i32, i32* %i948
  %tmp3055 = icmp sgt i32 0, %i3050
  br i1 %tmp3055, label %then3052, label %else3054

then3046:                                         ; preds = %merge3039
  %printf3047 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3045

else3048:                                         ; preds = %merge3039
  br label %merge3045

merge3051:                                        ; preds = %else3054, %then3052
  %tmp3056 = sub i32 %c_mat2999, 1
  %tmp3061 = icmp slt i32 %tmp3056, %i3050
  br i1 %tmp3061, label %then3058, label %else3060

then3052:                                         ; preds = %merge3045
  %printf3053 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3051

else3054:                                         ; preds = %merge3045
  br label %merge3051

merge3057:                                        ; preds = %else3060, %then3058
  %tmp3062 = sub i32 %v3026, %v3007
  %tmp3063 = add i32 %tmp3062, 1
  %m_r3064 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 1
  %r_mat3065 = load i32, i32* %m_r3064
  %tmp3070 = icmp ne i32 %tmp3063, %r_mat3065
  br i1 %tmp3070, label %then3067, label %else3069

then3058:                                         ; preds = %merge3051
  %printf3059 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3057

else3060:                                         ; preds = %merge3051
  br label %merge3057

merge3066:                                        ; preds = %else3069, %then3067
  %tmp3071 = sub i32 %i3050, %i3038
  %tmp3072 = add i32 %tmp3071, 1
  %m_r3073 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 2
  %r_mat3074 = load i32, i32* %m_r3073
  %tmp3079 = icmp ne i32 %tmp3072, %r_mat3074
  br i1 %tmp3079, label %then3076, label %else3078

then3067:                                         ; preds = %merge3057
  %printf3068 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3066

else3069:                                         ; preds = %merge3057
  br label %merge3066

merge3075:                                        ; preds = %else3078, %then3076
  %m_mat3080 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat3081 = load double*, double** %m_mat3080
  %m_r3082 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat3083 = load i32, i32* %m_r3082
  %m_c3084 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat3085 = load i32, i32* %m_c3084
  %m_mat3086 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 0
  %mat_v3087 = load double*, double** %m_mat3086
  %m_r3088 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 1
  %r_v3089 = load i32, i32* %m_r3088
  %m_c3090 = getelementptr inbounds %matrix_t, %matrix_t* %m2939, i32 0, i32 2
  %c_v3091 = load i32, i32* %m_c3090
  %i3092 = alloca i32
  store i32 %v3007, i32* %i3092
  br label %while3093

then3076:                                         ; preds = %merge3066
  %printf3077 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3075

else3078:                                         ; preds = %merge3066
  br label %merge3075

while3093:                                        ; preds = %merge3115, %merge3075
  %i_v3121 = load i32, i32* %i3092
  %bool_val3122 = icmp sle i32 %i_v3121, %v3026
  br i1 %bool_val3122, label %while_body3094, label %merge3120

while_body3094:                                   ; preds = %while3093
  %j3095 = alloca i32
  store i32 %i3038, i32* %j3095
  br label %while3096

while3096:                                        ; preds = %while_body3097, %while_body3094
  %j_v3116 = load i32, i32* %j3095
  %bool_val3117 = icmp sle i32 %j_v3116, %i3050
  br i1 %bool_val3117, label %while_body3097, label %merge3115

while_body3097:                                   ; preds = %while3096
  %j_v3098 = load i32, i32* %j3095
  %i_v3099 = load i32, i32* %i3092
  %tmp3100 = mul i32 %c_mat3085, %i_v3099
  %index3101 = add i32 %j_v3098, %tmp3100
  %element_ptr3102 = getelementptr double, double* %mat_mat3081, i32 %index3101
  %j_v3103 = load i32, i32* %j3095
  %tmp3104 = sub i32 %j_v3103, %i3038
  %tmp3105 = add i32 %tmp3104, 0
  %i_v3106 = load i32, i32* %i3092
  %tmp3107 = sub i32 %i_v3106, %v3007
  %tmp3108 = add i32 %tmp3107, 0
  %tmp3109 = mul i32 %c_v3091, %tmp3108
  %index3110 = add i32 %tmp3105, %tmp3109
  %element_ptr3111 = getelementptr double, double* %mat_v3087, i32 %index3110
  %tmp_element3112 = load double, double* %element_ptr3111
  store double %tmp_element3112, double* %element_ptr3102
  %j_v3113 = load i32, i32* %j3095
  %tmp3114 = add i32 %j_v3113, 1
  store i32 %tmp3114, i32* %j3095
  br label %while3096

merge3115:                                        ; preds = %while3096
  %i_v3118 = load i32, i32* %i3092
  %tmp3119 = add i32 %i_v3118, 1
  store i32 %tmp3119, i32* %i3092
  br label %while3093

merge3120:                                        ; preds = %while3093
  %zeros_result3123 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3124 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3123, i32 0, i32 0
  %v3125 = load %matrix_t*, %matrix_t** %v_ptr3124
  %56 = bitcast %zero_matrix_t* %zeros_result3123 to i8*
  tail call void @free(i8* %56)
  %m_mat3126 = getelementptr inbounds %matrix_t, %matrix_t* %v3125, i32 0, i32 0
  %mat_mat3127 = load double*, double** %m_mat3126
  %m_r3128 = getelementptr inbounds %matrix_t, %matrix_t* %v3125, i32 0, i32 1
  %r_mat3129 = load i32, i32* %m_r3128
  %m_c3130 = getelementptr inbounds %matrix_t, %matrix_t* %v3125, i32 0, i32 2
  %c_mat3131 = load i32, i32* %m_c3130
  %size3132 = mul i32 %r_mat3129, %c_mat3131
  %mallocsize3133 = mul i32 %size3132, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall3134 = tail call i8* @malloc(i32 %mallocsize3133)
  %system_mat3135 = bitcast i8* %malloccall3134 to double*
  %malloccall3136 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m3137 = bitcast i8* %malloccall3136 to %matrix_t*
  %m_mat3138 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 0
  store double* %system_mat3135, double** %m_mat3138
  %m_r3139 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 1
  store i32 %r_mat3129, i32* %m_r3139
  %m_c3140 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 2
  store i32 %c_mat3131, i32* %m_c3140
  %tmp3141 = sub i32 %r_mat3129, 1
  %tmp3142 = sub i32 %c_mat3131, 1
  %i3143 = alloca i32
  store i32 0, i32* %i3143
  br label %while3144

while3144:                                        ; preds = %merge3156, %merge3120
  %i_v3162 = load i32, i32* %i3143
  %bool_val3163 = icmp sle i32 %i_v3162, %tmp3141
  br i1 %bool_val3163, label %while_body3145, label %merge3161

while_body3145:                                   ; preds = %while3144
  %j3146 = alloca i32
  store i32 0, i32* %j3146
  br label %while3147

while3147:                                        ; preds = %while_body3148, %while_body3145
  %j_v3157 = load i32, i32* %j3146
  %bool_val3158 = icmp sle i32 %j_v3157, %tmp3142
  br i1 %bool_val3158, label %while_body3148, label %merge3156

while_body3148:                                   ; preds = %while3147
  %j_v3149 = load i32, i32* %j3146
  %i_v3150 = load i32, i32* %i3143
  %tmp3151 = mul i32 %c_mat3131, %i_v3150
  %index3152 = add i32 %j_v3149, %tmp3151
  %element_ptr3153 = getelementptr double, double* %system_mat3135, i32 %index3152
  store double 0.000000e+00, double* %element_ptr3153
  %j_v3154 = load i32, i32* %j3146
  %tmp3155 = add i32 %j_v3154, 1
  store i32 %tmp3155, i32* %j3146
  br label %while3147

merge3156:                                        ; preds = %while3147
  %i_v3159 = load i32, i32* %i3143
  %tmp3160 = add i32 %i_v3159, 1
  store i32 %tmp3160, i32* %i3143
  br label %while3144

merge3161:                                        ; preds = %while3144
  %tmp3164 = sub i32 %c_mat3131, 1
  %tmp3165 = sub i32 %r_mat3129, 1
  %m_mat3166 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 0
  %mat_mat3167 = load double*, double** %m_mat3166
  %m_r3168 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 1
  %r_mat3169 = load i32, i32* %m_r3168
  %m_c3170 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 2
  %c_mat3171 = load i32, i32* %m_c3170
  %m_mat3172 = getelementptr inbounds %matrix_t, %matrix_t* %v3125, i32 0, i32 0
  %mat_v3173 = load double*, double** %m_mat3172
  %m_r3174 = getelementptr inbounds %matrix_t, %matrix_t* %v3125, i32 0, i32 1
  %r_v3175 = load i32, i32* %m_r3174
  %m_c3176 = getelementptr inbounds %matrix_t, %matrix_t* %v3125, i32 0, i32 2
  %c_v3177 = load i32, i32* %m_c3176
  %i3178 = alloca i32
  store i32 0, i32* %i3178
  br label %while3179

while3179:                                        ; preds = %merge3201, %merge3161
  %i_v3207 = load i32, i32* %i3178
  %bool_val3208 = icmp sle i32 %i_v3207, %tmp3165
  br i1 %bool_val3208, label %while_body3180, label %merge3206

while_body3180:                                   ; preds = %while3179
  %j3181 = alloca i32
  store i32 0, i32* %j3181
  br label %while3182

while3182:                                        ; preds = %while_body3183, %while_body3180
  %j_v3202 = load i32, i32* %j3181
  %bool_val3203 = icmp sle i32 %j_v3202, %tmp3164
  br i1 %bool_val3203, label %while_body3183, label %merge3201

while_body3183:                                   ; preds = %while3182
  %j_v3184 = load i32, i32* %j3181
  %i_v3185 = load i32, i32* %i3178
  %tmp3186 = mul i32 %c_mat3171, %i_v3185
  %index3187 = add i32 %j_v3184, %tmp3186
  %element_ptr3188 = getelementptr double, double* %mat_mat3167, i32 %index3187
  %j_v3189 = load i32, i32* %j3181
  %tmp3190 = sub i32 %j_v3189, 0
  %tmp3191 = add i32 %tmp3190, 0
  %i_v3192 = load i32, i32* %i3178
  %tmp3193 = sub i32 %i_v3192, 0
  %tmp3194 = add i32 %tmp3193, 0
  %tmp3195 = mul i32 %c_v3177, %tmp3194
  %index3196 = add i32 %tmp3191, %tmp3195
  %element_ptr3197 = getelementptr double, double* %mat_v3173, i32 %index3196
  %tmp_element3198 = load double, double* %element_ptr3197
  store double %tmp_element3198, double* %element_ptr3188
  %j_v3199 = load i32, i32* %j3181
  %tmp3200 = add i32 %j_v3199, 1
  store i32 %tmp3200, i32* %j3181
  br label %while3182

merge3201:                                        ; preds = %while3182
  %i_v3204 = load i32, i32* %i3178
  %tmp3205 = add i32 %i_v3204, 1
  store i32 %tmp3205, i32* %i3178
  br label %while3179

merge3206:                                        ; preds = %while3179
  %57 = bitcast double* %mat_mat3127 to i8*
  tail call void @free(i8* %57)
  %58 = bitcast %matrix_t* %v3125 to i8*
  tail call void @free(i8* %58)
  %m_r3209 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat3210 = load i32, i32* %m_r3209
  %m_c3211 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat3212 = load i32, i32* %m_c3211
  %x3213 = load double, double* %x
  %l3214 = load double, double* %l
  %tmp3215 = fdiv double %l3214, 2.000000e+00
  %tmp3216 = fsub double %x3213, %tmp3215
  %tmp3217 = fsub double %tmp3216, 2.000000e+00
  %double2int_result3218 = call %double_to_int_t* @double2int(double %tmp3217)
  %v_ptr3219 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3218, i32 0, i32 0
  %v3220 = load i32, i32* %v_ptr3219
  %59 = bitcast %double_to_int_t* %double2int_result3218 to i8*
  tail call void @free(i8* %59)
  %tmp3225 = icmp sgt i32 0, %v3220
  br i1 %tmp3225, label %then3222, label %else3224

merge3221:                                        ; preds = %else3224, %then3222
  %tmp3226 = sub i32 %r_mat3210, 1
  %tmp3231 = icmp slt i32 %tmp3226, %v3220
  br i1 %tmp3231, label %then3228, label %else3230

then3222:                                         ; preds = %merge3206
  %printf3223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3221

else3224:                                         ; preds = %merge3206
  br label %merge3221

merge3227:                                        ; preds = %else3230, %then3228
  %x3232 = load double, double* %x
  %l3233 = load double, double* %l
  %tmp3234 = fdiv double %l3233, 2.000000e+00
  %tmp3235 = fsub double %x3232, %tmp3234
  %tmp3236 = fadd double %tmp3235, 2.000000e+00
  %double2int_result3237 = call %double_to_int_t* @double2int(double %tmp3236)
  %v_ptr3238 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3237, i32 0, i32 0
  %v3239 = load i32, i32* %v_ptr3238
  %60 = bitcast %double_to_int_t* %double2int_result3237 to i8*
  tail call void @free(i8* %60)
  %tmp3244 = icmp sgt i32 0, %v3239
  br i1 %tmp3244, label %then3241, label %else3243

then3228:                                         ; preds = %merge3221
  %printf3229 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3227

else3230:                                         ; preds = %merge3221
  br label %merge3227

merge3240:                                        ; preds = %else3243, %then3241
  %tmp3245 = sub i32 %r_mat3210, 1
  %tmp3250 = icmp slt i32 %tmp3245, %v3239
  br i1 %tmp3250, label %then3247, label %else3249

then3241:                                         ; preds = %merge3227
  %printf3242 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3240

else3243:                                         ; preds = %merge3227
  br label %merge3240

merge3246:                                        ; preds = %else3249, %then3247
  %i3251 = load i32, i32* %i948
  %tmp3256 = icmp sgt i32 0, %i3251
  br i1 %tmp3256, label %then3253, label %else3255

then3247:                                         ; preds = %merge3240
  %printf3248 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3246

else3249:                                         ; preds = %merge3240
  br label %merge3246

merge3252:                                        ; preds = %else3255, %then3253
  %tmp3257 = sub i32 %c_mat3212, 1
  %tmp3262 = icmp slt i32 %tmp3257, %i3251
  br i1 %tmp3262, label %then3259, label %else3261

then3253:                                         ; preds = %merge3246
  %printf3254 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3252

else3255:                                         ; preds = %merge3246
  br label %merge3252

merge3258:                                        ; preds = %else3261, %then3259
  %i3263 = load i32, i32* %i948
  %tmp3268 = icmp sgt i32 0, %i3263
  br i1 %tmp3268, label %then3265, label %else3267

then3259:                                         ; preds = %merge3252
  %printf3260 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3258

else3261:                                         ; preds = %merge3252
  br label %merge3258

merge3264:                                        ; preds = %else3267, %then3265
  %tmp3269 = sub i32 %c_mat3212, 1
  %tmp3274 = icmp slt i32 %tmp3269, %i3263
  br i1 %tmp3274, label %then3271, label %else3273

then3265:                                         ; preds = %merge3258
  %printf3266 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3264

else3267:                                         ; preds = %merge3258
  br label %merge3264

merge3270:                                        ; preds = %else3273, %then3271
  %tmp3275 = sub i32 %v3239, %v3220
  %tmp3276 = add i32 %tmp3275, 1
  %m_r3277 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 1
  %r_mat3278 = load i32, i32* %m_r3277
  %tmp3283 = icmp ne i32 %tmp3276, %r_mat3278
  br i1 %tmp3283, label %then3280, label %else3282

then3271:                                         ; preds = %merge3264
  %printf3272 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3270

else3273:                                         ; preds = %merge3264
  br label %merge3270

merge3279:                                        ; preds = %else3282, %then3280
  %tmp3284 = sub i32 %i3263, %i3251
  %tmp3285 = add i32 %tmp3284, 1
  %m_r3286 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 2
  %r_mat3287 = load i32, i32* %m_r3286
  %tmp3292 = icmp ne i32 %tmp3285, %r_mat3287
  br i1 %tmp3292, label %then3289, label %else3291

then3280:                                         ; preds = %merge3270
  %printf3281 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3279

else3282:                                         ; preds = %merge3270
  br label %merge3279

merge3288:                                        ; preds = %else3291, %then3289
  %m_mat3293 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 0
  %mat_mat3294 = load double*, double** %m_mat3293
  %m_r3295 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat3296 = load i32, i32* %m_r3295
  %m_c3297 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat3298 = load i32, i32* %m_c3297
  %m_mat3299 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 0
  %mat_v3300 = load double*, double** %m_mat3299
  %m_r3301 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 1
  %r_v3302 = load i32, i32* %m_r3301
  %m_c3303 = getelementptr inbounds %matrix_t, %matrix_t* %m3137, i32 0, i32 2
  %c_v3304 = load i32, i32* %m_c3303
  %i3305 = alloca i32
  store i32 %v3220, i32* %i3305
  br label %while3306

then3289:                                         ; preds = %merge3279
  %printf3290 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3288

else3291:                                         ; preds = %merge3279
  br label %merge3288

while3306:                                        ; preds = %merge3328, %merge3288
  %i_v3334 = load i32, i32* %i3305
  %bool_val3335 = icmp sle i32 %i_v3334, %v3239
  br i1 %bool_val3335, label %while_body3307, label %merge3333

while_body3307:                                   ; preds = %while3306
  %j3308 = alloca i32
  store i32 %i3251, i32* %j3308
  br label %while3309

while3309:                                        ; preds = %while_body3310, %while_body3307
  %j_v3329 = load i32, i32* %j3308
  %bool_val3330 = icmp sle i32 %j_v3329, %i3263
  br i1 %bool_val3330, label %while_body3310, label %merge3328

while_body3310:                                   ; preds = %while3309
  %j_v3311 = load i32, i32* %j3308
  %i_v3312 = load i32, i32* %i3305
  %tmp3313 = mul i32 %c_mat3298, %i_v3312
  %index3314 = add i32 %j_v3311, %tmp3313
  %element_ptr3315 = getelementptr double, double* %mat_mat3294, i32 %index3314
  %j_v3316 = load i32, i32* %j3308
  %tmp3317 = sub i32 %j_v3316, %i3251
  %tmp3318 = add i32 %tmp3317, 0
  %i_v3319 = load i32, i32* %i3305
  %tmp3320 = sub i32 %i_v3319, %v3220
  %tmp3321 = add i32 %tmp3320, 0
  %tmp3322 = mul i32 %c_v3304, %tmp3321
  %index3323 = add i32 %tmp3318, %tmp3322
  %element_ptr3324 = getelementptr double, double* %mat_v3300, i32 %index3323
  %tmp_element3325 = load double, double* %element_ptr3324
  store double %tmp_element3325, double* %element_ptr3315
  %j_v3326 = load i32, i32* %j3308
  %tmp3327 = add i32 %j_v3326, 1
  store i32 %tmp3327, i32* %j3308
  br label %while3309

merge3328:                                        ; preds = %while3309
  %i_v3331 = load i32, i32* %i3305
  %tmp3332 = add i32 %i_v3331, 1
  store i32 %tmp3332, i32* %i3305
  br label %while3306

merge3333:                                        ; preds = %while3306
  %zeros_result3336 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3337 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3336, i32 0, i32 0
  %v3338 = load %matrix_t*, %matrix_t** %v_ptr3337
  %61 = bitcast %zero_matrix_t* %zeros_result3336 to i8*
  tail call void @free(i8* %61)
  %m_mat3339 = getelementptr inbounds %matrix_t, %matrix_t* %v3338, i32 0, i32 0
  %mat_mat3340 = load double*, double** %m_mat3339
  %m_r3341 = getelementptr inbounds %matrix_t, %matrix_t* %v3338, i32 0, i32 1
  %r_mat3342 = load i32, i32* %m_r3341
  %m_c3343 = getelementptr inbounds %matrix_t, %matrix_t* %v3338, i32 0, i32 2
  %c_mat3344 = load i32, i32* %m_c3343
  %size3345 = mul i32 %r_mat3342, %c_mat3344
  %mallocsize3346 = mul i32 %size3345, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall3347 = tail call i8* @malloc(i32 %mallocsize3346)
  %system_mat3348 = bitcast i8* %malloccall3347 to double*
  %malloccall3349 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m3350 = bitcast i8* %malloccall3349 to %matrix_t*
  %m_mat3351 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 0
  store double* %system_mat3348, double** %m_mat3351
  %m_r3352 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 1
  store i32 %r_mat3342, i32* %m_r3352
  %m_c3353 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 2
  store i32 %c_mat3344, i32* %m_c3353
  %tmp3354 = sub i32 %r_mat3342, 1
  %tmp3355 = sub i32 %c_mat3344, 1
  %i3356 = alloca i32
  store i32 0, i32* %i3356
  br label %while3357

while3357:                                        ; preds = %merge3369, %merge3333
  %i_v3375 = load i32, i32* %i3356
  %bool_val3376 = icmp sle i32 %i_v3375, %tmp3354
  br i1 %bool_val3376, label %while_body3358, label %merge3374

while_body3358:                                   ; preds = %while3357
  %j3359 = alloca i32
  store i32 0, i32* %j3359
  br label %while3360

while3360:                                        ; preds = %while_body3361, %while_body3358
  %j_v3370 = load i32, i32* %j3359
  %bool_val3371 = icmp sle i32 %j_v3370, %tmp3355
  br i1 %bool_val3371, label %while_body3361, label %merge3369

while_body3361:                                   ; preds = %while3360
  %j_v3362 = load i32, i32* %j3359
  %i_v3363 = load i32, i32* %i3356
  %tmp3364 = mul i32 %c_mat3344, %i_v3363
  %index3365 = add i32 %j_v3362, %tmp3364
  %element_ptr3366 = getelementptr double, double* %system_mat3348, i32 %index3365
  store double 0.000000e+00, double* %element_ptr3366
  %j_v3367 = load i32, i32* %j3359
  %tmp3368 = add i32 %j_v3367, 1
  store i32 %tmp3368, i32* %j3359
  br label %while3360

merge3369:                                        ; preds = %while3360
  %i_v3372 = load i32, i32* %i3356
  %tmp3373 = add i32 %i_v3372, 1
  store i32 %tmp3373, i32* %i3356
  br label %while3357

merge3374:                                        ; preds = %while3357
  %tmp3377 = sub i32 %c_mat3344, 1
  %tmp3378 = sub i32 %r_mat3342, 1
  %m_mat3379 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 0
  %mat_mat3380 = load double*, double** %m_mat3379
  %m_r3381 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 1
  %r_mat3382 = load i32, i32* %m_r3381
  %m_c3383 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 2
  %c_mat3384 = load i32, i32* %m_c3383
  %m_mat3385 = getelementptr inbounds %matrix_t, %matrix_t* %v3338, i32 0, i32 0
  %mat_v3386 = load double*, double** %m_mat3385
  %m_r3387 = getelementptr inbounds %matrix_t, %matrix_t* %v3338, i32 0, i32 1
  %r_v3388 = load i32, i32* %m_r3387
  %m_c3389 = getelementptr inbounds %matrix_t, %matrix_t* %v3338, i32 0, i32 2
  %c_v3390 = load i32, i32* %m_c3389
  %i3391 = alloca i32
  store i32 0, i32* %i3391
  br label %while3392

while3392:                                        ; preds = %merge3414, %merge3374
  %i_v3420 = load i32, i32* %i3391
  %bool_val3421 = icmp sle i32 %i_v3420, %tmp3378
  br i1 %bool_val3421, label %while_body3393, label %merge3419

while_body3393:                                   ; preds = %while3392
  %j3394 = alloca i32
  store i32 0, i32* %j3394
  br label %while3395

while3395:                                        ; preds = %while_body3396, %while_body3393
  %j_v3415 = load i32, i32* %j3394
  %bool_val3416 = icmp sle i32 %j_v3415, %tmp3377
  br i1 %bool_val3416, label %while_body3396, label %merge3414

while_body3396:                                   ; preds = %while3395
  %j_v3397 = load i32, i32* %j3394
  %i_v3398 = load i32, i32* %i3391
  %tmp3399 = mul i32 %c_mat3384, %i_v3398
  %index3400 = add i32 %j_v3397, %tmp3399
  %element_ptr3401 = getelementptr double, double* %mat_mat3380, i32 %index3400
  %j_v3402 = load i32, i32* %j3394
  %tmp3403 = sub i32 %j_v3402, 0
  %tmp3404 = add i32 %tmp3403, 0
  %i_v3405 = load i32, i32* %i3391
  %tmp3406 = sub i32 %i_v3405, 0
  %tmp3407 = add i32 %tmp3406, 0
  %tmp3408 = mul i32 %c_v3390, %tmp3407
  %index3409 = add i32 %tmp3404, %tmp3408
  %element_ptr3410 = getelementptr double, double* %mat_v3386, i32 %index3409
  %tmp_element3411 = load double, double* %element_ptr3410
  store double %tmp_element3411, double* %element_ptr3401
  %j_v3412 = load i32, i32* %j3394
  %tmp3413 = add i32 %j_v3412, 1
  store i32 %tmp3413, i32* %j3394
  br label %while3395

merge3414:                                        ; preds = %while3395
  %i_v3417 = load i32, i32* %i3391
  %tmp3418 = add i32 %i_v3417, 1
  store i32 %tmp3418, i32* %i3391
  br label %while3392

merge3419:                                        ; preds = %while3392
  %62 = bitcast double* %mat_mat3340 to i8*
  tail call void @free(i8* %62)
  %63 = bitcast %matrix_t* %v3338 to i8*
  tail call void @free(i8* %63)
  %m_mat3422 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 0
  %mat_mat3423 = load double*, double** %m_mat3422
  %m_r3424 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 1
  %r_mat3425 = load i32, i32* %m_r3424
  %tmp3426 = sub i32 %r_mat3425, 1
  %m_c3427 = getelementptr inbounds %matrix_t, %matrix_t* %m3350, i32 0, i32 2
  %c_mat3428 = load i32, i32* %m_c3427
  %tmp3429 = sub i32 %c_mat3428, 1
  %size3430 = mul i32 %r_mat3425, %c_mat3428
  %mallocsize3431 = mul i32 %size3430, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall3432 = tail call i8* @malloc(i32 %mallocsize3431)
  %system_mat3433 = bitcast i8* %malloccall3432 to double*
  %malloccall3434 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m3435 = bitcast i8* %malloccall3434 to %matrix_t*
  %m_mat3436 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 0
  store double* %system_mat3433, double** %m_mat3436
  %m_r3437 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 1
  store i32 %r_mat3425, i32* %m_r3437
  %m_c3438 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 2
  store i32 %c_mat3428, i32* %m_c3438
  %tmp3439 = sub i32 %r_mat3425, 1
  %tmp3440 = sub i32 %c_mat3428, 1
  %i3441 = alloca i32
  store i32 0, i32* %i3441
  br label %while3442

while3442:                                        ; preds = %merge3454, %merge3419
  %i_v3460 = load i32, i32* %i3441
  %bool_val3461 = icmp sle i32 %i_v3460, %tmp3439
  br i1 %bool_val3461, label %while_body3443, label %merge3459

while_body3443:                                   ; preds = %while3442
  %j3444 = alloca i32
  store i32 0, i32* %j3444
  br label %while3445

while3445:                                        ; preds = %while_body3446, %while_body3443
  %j_v3455 = load i32, i32* %j3444
  %bool_val3456 = icmp sle i32 %j_v3455, %tmp3440
  br i1 %bool_val3456, label %while_body3446, label %merge3454

while_body3446:                                   ; preds = %while3445
  %j_v3447 = load i32, i32* %j3444
  %i_v3448 = load i32, i32* %i3441
  %tmp3449 = mul i32 %c_mat3428, %i_v3448
  %index3450 = add i32 %j_v3447, %tmp3449
  %element_ptr3451 = getelementptr double, double* %system_mat3433, i32 %index3450
  store double 0.000000e+00, double* %element_ptr3451
  %j_v3452 = load i32, i32* %j3444
  %tmp3453 = add i32 %j_v3452, 1
  store i32 %tmp3453, i32* %j3444
  br label %while3445

merge3454:                                        ; preds = %while3445
  %i_v3457 = load i32, i32* %i3441
  %tmp3458 = add i32 %i_v3457, 1
  store i32 %tmp3458, i32* %i3441
  br label %while3442

merge3459:                                        ; preds = %while3442
  %m_mat3462 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 0
  %mat_mat3463 = load double*, double** %m_mat3462
  %i3464 = alloca i32
  store i32 0, i32* %i3464
  br label %while3465

while3465:                                        ; preds = %merge3484, %merge3459
  %i_v3490 = load i32, i32* %i3464
  %bool_val3491 = icmp sle i32 %i_v3490, %tmp3426
  br i1 %bool_val3491, label %while_body3466, label %merge3489

while_body3466:                                   ; preds = %while3465
  %j3467 = alloca i32
  store i32 0, i32* %j3467
  br label %while3468

while3468:                                        ; preds = %while_body3469, %while_body3466
  %j_v3485 = load i32, i32* %j3467
  %bool_val3486 = icmp sle i32 %j_v3485, %tmp3429
  br i1 %bool_val3486, label %while_body3469, label %merge3484

while_body3469:                                   ; preds = %while3468
  %j_v3470 = load i32, i32* %j3467
  %i_v3471 = load i32, i32* %i3464
  %tmp3472 = mul i32 %c_mat3428, %i_v3471
  %index3473 = add i32 %j_v3470, %tmp3472
  %element_ptr3474 = getelementptr double, double* %mat_mat3423, i32 %index3473
  %tmp_element3475 = load double, double* %element_ptr3474
  %j_v3476 = load i32, i32* %j3467
  %i_v3477 = load i32, i32* %i3464
  %tmp3478 = mul i32 %c_mat3428, %i_v3477
  %index3479 = add i32 %j_v3476, %tmp3478
  %element_ptr3480 = getelementptr double, double* %mat_mat3463, i32 %index3479
  %tmp_element3481 = fsub double %tmp_element3475, 2.550000e+02
  store double %tmp_element3481, double* %element_ptr3480
  %j_v3482 = load i32, i32* %j3467
  %tmp3483 = add i32 %j_v3482, 1
  store i32 %tmp3483, i32* %j3467
  br label %while3468

merge3484:                                        ; preds = %while3468
  %i_v3487 = load i32, i32* %i3464
  %tmp3488 = add i32 %i_v3487, 1
  store i32 %tmp3488, i32* %i3464
  br label %while3465

merge3489:                                        ; preds = %while3465
  %m_r3492 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat3493 = load i32, i32* %m_r3492
  %m_c3494 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat3495 = load i32, i32* %m_c3494
  %x3496 = load double, double* %x
  %l3497 = load double, double* %l
  %tmp3498 = fdiv double %l3497, 2.000000e+00
  %tmp3499 = fadd double %x3496, %tmp3498
  %tmp3500 = fsub double %tmp3499, 2.000000e+00
  %double2int_result3501 = call %double_to_int_t* @double2int(double %tmp3500)
  %v_ptr3502 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3501, i32 0, i32 0
  %v3503 = load i32, i32* %v_ptr3502
  %64 = bitcast %double_to_int_t* %double2int_result3501 to i8*
  tail call void @free(i8* %64)
  %tmp3508 = icmp sgt i32 0, %v3503
  br i1 %tmp3508, label %then3505, label %else3507

merge3504:                                        ; preds = %else3507, %then3505
  %tmp3509 = sub i32 %r_mat3493, 1
  %tmp3514 = icmp slt i32 %tmp3509, %v3503
  br i1 %tmp3514, label %then3511, label %else3513

then3505:                                         ; preds = %merge3489
  %printf3506 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3504

else3507:                                         ; preds = %merge3489
  br label %merge3504

merge3510:                                        ; preds = %else3513, %then3511
  %x3515 = load double, double* %x
  %l3516 = load double, double* %l
  %tmp3517 = fdiv double %l3516, 2.000000e+00
  %tmp3518 = fadd double %x3515, %tmp3517
  %tmp3519 = fadd double %tmp3518, 2.000000e+00
  %double2int_result3520 = call %double_to_int_t* @double2int(double %tmp3519)
  %v_ptr3521 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3520, i32 0, i32 0
  %v3522 = load i32, i32* %v_ptr3521
  %65 = bitcast %double_to_int_t* %double2int_result3520 to i8*
  tail call void @free(i8* %65)
  %tmp3527 = icmp sgt i32 0, %v3522
  br i1 %tmp3527, label %then3524, label %else3526

then3511:                                         ; preds = %merge3504
  %printf3512 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3510

else3513:                                         ; preds = %merge3504
  br label %merge3510

merge3523:                                        ; preds = %else3526, %then3524
  %tmp3528 = sub i32 %r_mat3493, 1
  %tmp3533 = icmp slt i32 %tmp3528, %v3522
  br i1 %tmp3533, label %then3530, label %else3532

then3524:                                         ; preds = %merge3510
  %printf3525 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3523

else3526:                                         ; preds = %merge3510
  br label %merge3523

merge3529:                                        ; preds = %else3532, %then3530
  %i3534 = load i32, i32* %i948
  %tmp3539 = icmp sgt i32 0, %i3534
  br i1 %tmp3539, label %then3536, label %else3538

then3530:                                         ; preds = %merge3523
  %printf3531 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3529

else3532:                                         ; preds = %merge3523
  br label %merge3529

merge3535:                                        ; preds = %else3538, %then3536
  %tmp3540 = sub i32 %c_mat3495, 1
  %tmp3545 = icmp slt i32 %tmp3540, %i3534
  br i1 %tmp3545, label %then3542, label %else3544

then3536:                                         ; preds = %merge3529
  %printf3537 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3535

else3538:                                         ; preds = %merge3529
  br label %merge3535

merge3541:                                        ; preds = %else3544, %then3542
  %i3546 = load i32, i32* %i948
  %tmp3551 = icmp sgt i32 0, %i3546
  br i1 %tmp3551, label %then3548, label %else3550

then3542:                                         ; preds = %merge3535
  %printf3543 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3541

else3544:                                         ; preds = %merge3535
  br label %merge3541

merge3547:                                        ; preds = %else3550, %then3548
  %tmp3552 = sub i32 %c_mat3495, 1
  %tmp3557 = icmp slt i32 %tmp3552, %i3546
  br i1 %tmp3557, label %then3554, label %else3556

then3548:                                         ; preds = %merge3541
  %printf3549 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3547

else3550:                                         ; preds = %merge3541
  br label %merge3547

merge3553:                                        ; preds = %else3556, %then3554
  %tmp3558 = sub i32 %v3522, %v3503
  %tmp3559 = add i32 %tmp3558, 1
  %m_r3560 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 1
  %r_mat3561 = load i32, i32* %m_r3560
  %tmp3566 = icmp ne i32 %tmp3559, %r_mat3561
  br i1 %tmp3566, label %then3563, label %else3565

then3554:                                         ; preds = %merge3547
  %printf3555 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3553

else3556:                                         ; preds = %merge3547
  br label %merge3553

merge3562:                                        ; preds = %else3565, %then3563
  %tmp3567 = sub i32 %i3546, %i3534
  %tmp3568 = add i32 %tmp3567, 1
  %m_r3569 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 2
  %r_mat3570 = load i32, i32* %m_r3569
  %tmp3575 = icmp ne i32 %tmp3568, %r_mat3570
  br i1 %tmp3575, label %then3572, label %else3574

then3563:                                         ; preds = %merge3553
  %printf3564 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3562

else3565:                                         ; preds = %merge3553
  br label %merge3562

merge3571:                                        ; preds = %else3574, %then3572
  %m_mat3576 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 0
  %mat_mat3577 = load double*, double** %m_mat3576
  %m_r3578 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 1
  %r_mat3579 = load i32, i32* %m_r3578
  %m_c3580 = getelementptr inbounds %matrix_t, %matrix_t* %m511, i32 0, i32 2
  %c_mat3581 = load i32, i32* %m_c3580
  %m_mat3582 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 0
  %mat_v3583 = load double*, double** %m_mat3582
  %m_r3584 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 1
  %r_v3585 = load i32, i32* %m_r3584
  %m_c3586 = getelementptr inbounds %matrix_t, %matrix_t* %m3435, i32 0, i32 2
  %c_v3587 = load i32, i32* %m_c3586
  %i3588 = alloca i32
  store i32 %v3503, i32* %i3588
  br label %while3589

then3572:                                         ; preds = %merge3562
  %printf3573 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3571

else3574:                                         ; preds = %merge3562
  br label %merge3571

while3589:                                        ; preds = %merge3611, %merge3571
  %i_v3617 = load i32, i32* %i3588
  %bool_val3618 = icmp sle i32 %i_v3617, %v3522
  br i1 %bool_val3618, label %while_body3590, label %merge3616

while_body3590:                                   ; preds = %while3589
  %j3591 = alloca i32
  store i32 %i3534, i32* %j3591
  br label %while3592

while3592:                                        ; preds = %while_body3593, %while_body3590
  %j_v3612 = load i32, i32* %j3591
  %bool_val3613 = icmp sle i32 %j_v3612, %i3546
  br i1 %bool_val3613, label %while_body3593, label %merge3611

while_body3593:                                   ; preds = %while3592
  %j_v3594 = load i32, i32* %j3591
  %i_v3595 = load i32, i32* %i3588
  %tmp3596 = mul i32 %c_mat3581, %i_v3595
  %index3597 = add i32 %j_v3594, %tmp3596
  %element_ptr3598 = getelementptr double, double* %mat_mat3577, i32 %index3597
  %j_v3599 = load i32, i32* %j3591
  %tmp3600 = sub i32 %j_v3599, %i3534
  %tmp3601 = add i32 %tmp3600, 0
  %i_v3602 = load i32, i32* %i3588
  %tmp3603 = sub i32 %i_v3602, %v3503
  %tmp3604 = add i32 %tmp3603, 0
  %tmp3605 = mul i32 %c_v3587, %tmp3604
  %index3606 = add i32 %tmp3601, %tmp3605
  %element_ptr3607 = getelementptr double, double* %mat_v3583, i32 %index3606
  %tmp_element3608 = load double, double* %element_ptr3607
  store double %tmp_element3608, double* %element_ptr3598
  %j_v3609 = load i32, i32* %j3591
  %tmp3610 = add i32 %j_v3609, 1
  store i32 %tmp3610, i32* %j3591
  br label %while3592

merge3611:                                        ; preds = %while3592
  %i_v3614 = load i32, i32* %i3588
  %tmp3615 = add i32 %i_v3614, 1
  store i32 %tmp3615, i32* %i3588
  br label %while3589

merge3616:                                        ; preds = %while3589
  %zeros_result3619 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3620 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3619, i32 0, i32 0
  %v3621 = load %matrix_t*, %matrix_t** %v_ptr3620
  %66 = bitcast %zero_matrix_t* %zeros_result3619 to i8*
  tail call void @free(i8* %66)
  %m_mat3622 = getelementptr inbounds %matrix_t, %matrix_t* %v3621, i32 0, i32 0
  %mat_mat3623 = load double*, double** %m_mat3622
  %m_r3624 = getelementptr inbounds %matrix_t, %matrix_t* %v3621, i32 0, i32 1
  %r_mat3625 = load i32, i32* %m_r3624
  %m_c3626 = getelementptr inbounds %matrix_t, %matrix_t* %v3621, i32 0, i32 2
  %c_mat3627 = load i32, i32* %m_c3626
  %size3628 = mul i32 %r_mat3625, %c_mat3627
  %mallocsize3629 = mul i32 %size3628, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall3630 = tail call i8* @malloc(i32 %mallocsize3629)
  %system_mat3631 = bitcast i8* %malloccall3630 to double*
  %malloccall3632 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m3633 = bitcast i8* %malloccall3632 to %matrix_t*
  %m_mat3634 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 0
  store double* %system_mat3631, double** %m_mat3634
  %m_r3635 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 1
  store i32 %r_mat3625, i32* %m_r3635
  %m_c3636 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 2
  store i32 %c_mat3627, i32* %m_c3636
  %tmp3637 = sub i32 %r_mat3625, 1
  %tmp3638 = sub i32 %c_mat3627, 1
  %i3639 = alloca i32
  store i32 0, i32* %i3639
  br label %while3640

while3640:                                        ; preds = %merge3652, %merge3616
  %i_v3658 = load i32, i32* %i3639
  %bool_val3659 = icmp sle i32 %i_v3658, %tmp3637
  br i1 %bool_val3659, label %while_body3641, label %merge3657

while_body3641:                                   ; preds = %while3640
  %j3642 = alloca i32
  store i32 0, i32* %j3642
  br label %while3643

while3643:                                        ; preds = %while_body3644, %while_body3641
  %j_v3653 = load i32, i32* %j3642
  %bool_val3654 = icmp sle i32 %j_v3653, %tmp3638
  br i1 %bool_val3654, label %while_body3644, label %merge3652

while_body3644:                                   ; preds = %while3643
  %j_v3645 = load i32, i32* %j3642
  %i_v3646 = load i32, i32* %i3639
  %tmp3647 = mul i32 %c_mat3627, %i_v3646
  %index3648 = add i32 %j_v3645, %tmp3647
  %element_ptr3649 = getelementptr double, double* %system_mat3631, i32 %index3648
  store double 0.000000e+00, double* %element_ptr3649
  %j_v3650 = load i32, i32* %j3642
  %tmp3651 = add i32 %j_v3650, 1
  store i32 %tmp3651, i32* %j3642
  br label %while3643

merge3652:                                        ; preds = %while3643
  %i_v3655 = load i32, i32* %i3639
  %tmp3656 = add i32 %i_v3655, 1
  store i32 %tmp3656, i32* %i3639
  br label %while3640

merge3657:                                        ; preds = %while3640
  %tmp3660 = sub i32 %c_mat3627, 1
  %tmp3661 = sub i32 %r_mat3625, 1
  %m_mat3662 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 0
  %mat_mat3663 = load double*, double** %m_mat3662
  %m_r3664 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 1
  %r_mat3665 = load i32, i32* %m_r3664
  %m_c3666 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 2
  %c_mat3667 = load i32, i32* %m_c3666
  %m_mat3668 = getelementptr inbounds %matrix_t, %matrix_t* %v3621, i32 0, i32 0
  %mat_v3669 = load double*, double** %m_mat3668
  %m_r3670 = getelementptr inbounds %matrix_t, %matrix_t* %v3621, i32 0, i32 1
  %r_v3671 = load i32, i32* %m_r3670
  %m_c3672 = getelementptr inbounds %matrix_t, %matrix_t* %v3621, i32 0, i32 2
  %c_v3673 = load i32, i32* %m_c3672
  %i3674 = alloca i32
  store i32 0, i32* %i3674
  br label %while3675

while3675:                                        ; preds = %merge3697, %merge3657
  %i_v3703 = load i32, i32* %i3674
  %bool_val3704 = icmp sle i32 %i_v3703, %tmp3661
  br i1 %bool_val3704, label %while_body3676, label %merge3702

while_body3676:                                   ; preds = %while3675
  %j3677 = alloca i32
  store i32 0, i32* %j3677
  br label %while3678

while3678:                                        ; preds = %while_body3679, %while_body3676
  %j_v3698 = load i32, i32* %j3677
  %bool_val3699 = icmp sle i32 %j_v3698, %tmp3660
  br i1 %bool_val3699, label %while_body3679, label %merge3697

while_body3679:                                   ; preds = %while3678
  %j_v3680 = load i32, i32* %j3677
  %i_v3681 = load i32, i32* %i3674
  %tmp3682 = mul i32 %c_mat3667, %i_v3681
  %index3683 = add i32 %j_v3680, %tmp3682
  %element_ptr3684 = getelementptr double, double* %mat_mat3663, i32 %index3683
  %j_v3685 = load i32, i32* %j3677
  %tmp3686 = sub i32 %j_v3685, 0
  %tmp3687 = add i32 %tmp3686, 0
  %i_v3688 = load i32, i32* %i3674
  %tmp3689 = sub i32 %i_v3688, 0
  %tmp3690 = add i32 %tmp3689, 0
  %tmp3691 = mul i32 %c_v3673, %tmp3690
  %index3692 = add i32 %tmp3687, %tmp3691
  %element_ptr3693 = getelementptr double, double* %mat_v3669, i32 %index3692
  %tmp_element3694 = load double, double* %element_ptr3693
  store double %tmp_element3694, double* %element_ptr3684
  %j_v3695 = load i32, i32* %j3677
  %tmp3696 = add i32 %j_v3695, 1
  store i32 %tmp3696, i32* %j3677
  br label %while3678

merge3697:                                        ; preds = %while3678
  %i_v3700 = load i32, i32* %i3674
  %tmp3701 = add i32 %i_v3700, 1
  store i32 %tmp3701, i32* %i3674
  br label %while3675

merge3702:                                        ; preds = %while3675
  %67 = bitcast double* %mat_mat3623 to i8*
  tail call void @free(i8* %67)
  %68 = bitcast %matrix_t* %v3621 to i8*
  tail call void @free(i8* %68)
  %m_mat3705 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 0
  %mat_mat3706 = load double*, double** %m_mat3705
  %m_r3707 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 1
  %r_mat3708 = load i32, i32* %m_r3707
  %tmp3709 = sub i32 %r_mat3708, 1
  %m_c3710 = getelementptr inbounds %matrix_t, %matrix_t* %m3633, i32 0, i32 2
  %c_mat3711 = load i32, i32* %m_c3710
  %tmp3712 = sub i32 %c_mat3711, 1
  %size3713 = mul i32 %r_mat3708, %c_mat3711
  %mallocsize3714 = mul i32 %size3713, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall3715 = tail call i8* @malloc(i32 %mallocsize3714)
  %system_mat3716 = bitcast i8* %malloccall3715 to double*
  %malloccall3717 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m3718 = bitcast i8* %malloccall3717 to %matrix_t*
  %m_mat3719 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 0
  store double* %system_mat3716, double** %m_mat3719
  %m_r3720 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 1
  store i32 %r_mat3708, i32* %m_r3720
  %m_c3721 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 2
  store i32 %c_mat3711, i32* %m_c3721
  %tmp3722 = sub i32 %r_mat3708, 1
  %tmp3723 = sub i32 %c_mat3711, 1
  %i3724 = alloca i32
  store i32 0, i32* %i3724
  br label %while3725

while3725:                                        ; preds = %merge3737, %merge3702
  %i_v3743 = load i32, i32* %i3724
  %bool_val3744 = icmp sle i32 %i_v3743, %tmp3722
  br i1 %bool_val3744, label %while_body3726, label %merge3742

while_body3726:                                   ; preds = %while3725
  %j3727 = alloca i32
  store i32 0, i32* %j3727
  br label %while3728

while3728:                                        ; preds = %while_body3729, %while_body3726
  %j_v3738 = load i32, i32* %j3727
  %bool_val3739 = icmp sle i32 %j_v3738, %tmp3723
  br i1 %bool_val3739, label %while_body3729, label %merge3737

while_body3729:                                   ; preds = %while3728
  %j_v3730 = load i32, i32* %j3727
  %i_v3731 = load i32, i32* %i3724
  %tmp3732 = mul i32 %c_mat3711, %i_v3731
  %index3733 = add i32 %j_v3730, %tmp3732
  %element_ptr3734 = getelementptr double, double* %system_mat3716, i32 %index3733
  store double 0.000000e+00, double* %element_ptr3734
  %j_v3735 = load i32, i32* %j3727
  %tmp3736 = add i32 %j_v3735, 1
  store i32 %tmp3736, i32* %j3727
  br label %while3728

merge3737:                                        ; preds = %while3728
  %i_v3740 = load i32, i32* %i3724
  %tmp3741 = add i32 %i_v3740, 1
  store i32 %tmp3741, i32* %i3724
  br label %while3725

merge3742:                                        ; preds = %while3725
  %m_mat3745 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 0
  %mat_mat3746 = load double*, double** %m_mat3745
  %i3747 = alloca i32
  store i32 0, i32* %i3747
  br label %while3748

while3748:                                        ; preds = %merge3767, %merge3742
  %i_v3773 = load i32, i32* %i3747
  %bool_val3774 = icmp sle i32 %i_v3773, %tmp3709
  br i1 %bool_val3774, label %while_body3749, label %merge3772

while_body3749:                                   ; preds = %while3748
  %j3750 = alloca i32
  store i32 0, i32* %j3750
  br label %while3751

while3751:                                        ; preds = %while_body3752, %while_body3749
  %j_v3768 = load i32, i32* %j3750
  %bool_val3769 = icmp sle i32 %j_v3768, %tmp3712
  br i1 %bool_val3769, label %while_body3752, label %merge3767

while_body3752:                                   ; preds = %while3751
  %j_v3753 = load i32, i32* %j3750
  %i_v3754 = load i32, i32* %i3747
  %tmp3755 = mul i32 %c_mat3711, %i_v3754
  %index3756 = add i32 %j_v3753, %tmp3755
  %element_ptr3757 = getelementptr double, double* %mat_mat3706, i32 %index3756
  %tmp_element3758 = load double, double* %element_ptr3757
  %j_v3759 = load i32, i32* %j3750
  %i_v3760 = load i32, i32* %i3747
  %tmp3761 = mul i32 %c_mat3711, %i_v3760
  %index3762 = add i32 %j_v3759, %tmp3761
  %element_ptr3763 = getelementptr double, double* %mat_mat3746, i32 %index3762
  %tmp_element3764 = fsub double %tmp_element3758, 2.550000e+02
  store double %tmp_element3764, double* %element_ptr3763
  %j_v3765 = load i32, i32* %j3750
  %tmp3766 = add i32 %j_v3765, 1
  store i32 %tmp3766, i32* %j3750
  br label %while3751

merge3767:                                        ; preds = %while3751
  %i_v3770 = load i32, i32* %i3747
  %tmp3771 = add i32 %i_v3770, 1
  store i32 %tmp3771, i32* %i3747
  br label %while3748

merge3772:                                        ; preds = %while3748
  %m_r3775 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat3776 = load i32, i32* %m_r3775
  %m_c3777 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat3778 = load i32, i32* %m_c3777
  %x3779 = load double, double* %x
  %l3780 = load double, double* %l
  %tmp3781 = fdiv double %l3780, 2.000000e+00
  %tmp3782 = fadd double %x3779, %tmp3781
  %tmp3783 = fsub double %tmp3782, 2.000000e+00
  %double2int_result3784 = call %double_to_int_t* @double2int(double %tmp3783)
  %v_ptr3785 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3784, i32 0, i32 0
  %v3786 = load i32, i32* %v_ptr3785
  %69 = bitcast %double_to_int_t* %double2int_result3784 to i8*
  tail call void @free(i8* %69)
  %tmp3791 = icmp sgt i32 0, %v3786
  br i1 %tmp3791, label %then3788, label %else3790

merge3787:                                        ; preds = %else3790, %then3788
  %tmp3792 = sub i32 %r_mat3776, 1
  %tmp3797 = icmp slt i32 %tmp3792, %v3786
  br i1 %tmp3797, label %then3794, label %else3796

then3788:                                         ; preds = %merge3772
  %printf3789 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3787

else3790:                                         ; preds = %merge3772
  br label %merge3787

merge3793:                                        ; preds = %else3796, %then3794
  %x3798 = load double, double* %x
  %l3799 = load double, double* %l
  %tmp3800 = fdiv double %l3799, 2.000000e+00
  %tmp3801 = fadd double %x3798, %tmp3800
  %tmp3802 = fadd double %tmp3801, 2.000000e+00
  %double2int_result3803 = call %double_to_int_t* @double2int(double %tmp3802)
  %v_ptr3804 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3803, i32 0, i32 0
  %v3805 = load i32, i32* %v_ptr3804
  %70 = bitcast %double_to_int_t* %double2int_result3803 to i8*
  tail call void @free(i8* %70)
  %tmp3810 = icmp sgt i32 0, %v3805
  br i1 %tmp3810, label %then3807, label %else3809

then3794:                                         ; preds = %merge3787
  %printf3795 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3793

else3796:                                         ; preds = %merge3787
  br label %merge3793

merge3806:                                        ; preds = %else3809, %then3807
  %tmp3811 = sub i32 %r_mat3776, 1
  %tmp3816 = icmp slt i32 %tmp3811, %v3805
  br i1 %tmp3816, label %then3813, label %else3815

then3807:                                         ; preds = %merge3793
  %printf3808 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3806

else3809:                                         ; preds = %merge3793
  br label %merge3806

merge3812:                                        ; preds = %else3815, %then3813
  %i3817 = load i32, i32* %i948
  %tmp3822 = icmp sgt i32 0, %i3817
  br i1 %tmp3822, label %then3819, label %else3821

then3813:                                         ; preds = %merge3806
  %printf3814 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3812

else3815:                                         ; preds = %merge3806
  br label %merge3812

merge3818:                                        ; preds = %else3821, %then3819
  %tmp3823 = sub i32 %c_mat3778, 1
  %tmp3828 = icmp slt i32 %tmp3823, %i3817
  br i1 %tmp3828, label %then3825, label %else3827

then3819:                                         ; preds = %merge3812
  %printf3820 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3818

else3821:                                         ; preds = %merge3812
  br label %merge3818

merge3824:                                        ; preds = %else3827, %then3825
  %i3829 = load i32, i32* %i948
  %tmp3834 = icmp sgt i32 0, %i3829
  br i1 %tmp3834, label %then3831, label %else3833

then3825:                                         ; preds = %merge3818
  %printf3826 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3824

else3827:                                         ; preds = %merge3818
  br label %merge3824

merge3830:                                        ; preds = %else3833, %then3831
  %tmp3835 = sub i32 %c_mat3778, 1
  %tmp3840 = icmp slt i32 %tmp3835, %i3829
  br i1 %tmp3840, label %then3837, label %else3839

then3831:                                         ; preds = %merge3824
  %printf3832 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3830

else3833:                                         ; preds = %merge3824
  br label %merge3830

merge3836:                                        ; preds = %else3839, %then3837
  %tmp3841 = sub i32 %v3805, %v3786
  %tmp3842 = add i32 %tmp3841, 1
  %m_r3843 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 1
  %r_mat3844 = load i32, i32* %m_r3843
  %tmp3849 = icmp ne i32 %tmp3842, %r_mat3844
  br i1 %tmp3849, label %then3846, label %else3848

then3837:                                         ; preds = %merge3830
  %printf3838 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3836

else3839:                                         ; preds = %merge3830
  br label %merge3836

merge3845:                                        ; preds = %else3848, %then3846
  %tmp3850 = sub i32 %i3829, %i3817
  %tmp3851 = add i32 %tmp3850, 1
  %m_r3852 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 2
  %r_mat3853 = load i32, i32* %m_r3852
  %tmp3858 = icmp ne i32 %tmp3851, %r_mat3853
  br i1 %tmp3858, label %then3855, label %else3857

then3846:                                         ; preds = %merge3836
  %printf3847 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3845

else3848:                                         ; preds = %merge3836
  br label %merge3845

merge3854:                                        ; preds = %else3857, %then3855
  %m_mat3859 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 0
  %mat_mat3860 = load double*, double** %m_mat3859
  %m_r3861 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 1
  %r_mat3862 = load i32, i32* %m_r3861
  %m_c3863 = getelementptr inbounds %matrix_t, %matrix_t* %m677, i32 0, i32 2
  %c_mat3864 = load i32, i32* %m_c3863
  %m_mat3865 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 0
  %mat_v3866 = load double*, double** %m_mat3865
  %m_r3867 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 1
  %r_v3868 = load i32, i32* %m_r3867
  %m_c3869 = getelementptr inbounds %matrix_t, %matrix_t* %m3718, i32 0, i32 2
  %c_v3870 = load i32, i32* %m_c3869
  %i3871 = alloca i32
  store i32 %v3786, i32* %i3871
  br label %while3872

then3855:                                         ; preds = %merge3845
  %printf3856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3854

else3857:                                         ; preds = %merge3845
  br label %merge3854

while3872:                                        ; preds = %merge3894, %merge3854
  %i_v3900 = load i32, i32* %i3871
  %bool_val3901 = icmp sle i32 %i_v3900, %v3805
  br i1 %bool_val3901, label %while_body3873, label %merge3899

while_body3873:                                   ; preds = %while3872
  %j3874 = alloca i32
  store i32 %i3817, i32* %j3874
  br label %while3875

while3875:                                        ; preds = %while_body3876, %while_body3873
  %j_v3895 = load i32, i32* %j3874
  %bool_val3896 = icmp sle i32 %j_v3895, %i3829
  br i1 %bool_val3896, label %while_body3876, label %merge3894

while_body3876:                                   ; preds = %while3875
  %j_v3877 = load i32, i32* %j3874
  %i_v3878 = load i32, i32* %i3871
  %tmp3879 = mul i32 %c_mat3864, %i_v3878
  %index3880 = add i32 %j_v3877, %tmp3879
  %element_ptr3881 = getelementptr double, double* %mat_mat3860, i32 %index3880
  %j_v3882 = load i32, i32* %j3874
  %tmp3883 = sub i32 %j_v3882, %i3817
  %tmp3884 = add i32 %tmp3883, 0
  %i_v3885 = load i32, i32* %i3871
  %tmp3886 = sub i32 %i_v3885, %v3786
  %tmp3887 = add i32 %tmp3886, 0
  %tmp3888 = mul i32 %c_v3870, %tmp3887
  %index3889 = add i32 %tmp3884, %tmp3888
  %element_ptr3890 = getelementptr double, double* %mat_v3866, i32 %index3889
  %tmp_element3891 = load double, double* %element_ptr3890
  store double %tmp_element3891, double* %element_ptr3881
  %j_v3892 = load i32, i32* %j3874
  %tmp3893 = add i32 %j_v3892, 1
  store i32 %tmp3893, i32* %j3874
  br label %while3875

merge3894:                                        ; preds = %while3875
  %i_v3897 = load i32, i32* %i3871
  %tmp3898 = add i32 %i_v3897, 1
  store i32 %tmp3898, i32* %i3871
  br label %while3872

merge3899:                                        ; preds = %while3872
  %zeros_result3902 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3903 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3902, i32 0, i32 0
  %v3904 = load %matrix_t*, %matrix_t** %v_ptr3903
  %71 = bitcast %zero_matrix_t* %zeros_result3902 to i8*
  tail call void @free(i8* %71)
  %m_mat3905 = getelementptr inbounds %matrix_t, %matrix_t* %v3904, i32 0, i32 0
  %mat_mat3906 = load double*, double** %m_mat3905
  %m_r3907 = getelementptr inbounds %matrix_t, %matrix_t* %v3904, i32 0, i32 1
  %r_mat3908 = load i32, i32* %m_r3907
  %m_c3909 = getelementptr inbounds %matrix_t, %matrix_t* %v3904, i32 0, i32 2
  %c_mat3910 = load i32, i32* %m_c3909
  %size3911 = mul i32 %r_mat3908, %c_mat3910
  %mallocsize3912 = mul i32 %size3911, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall3913 = tail call i8* @malloc(i32 %mallocsize3912)
  %system_mat3914 = bitcast i8* %malloccall3913 to double*
  %malloccall3915 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m3916 = bitcast i8* %malloccall3915 to %matrix_t*
  %m_mat3917 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 0
  store double* %system_mat3914, double** %m_mat3917
  %m_r3918 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 1
  store i32 %r_mat3908, i32* %m_r3918
  %m_c3919 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 2
  store i32 %c_mat3910, i32* %m_c3919
  %tmp3920 = sub i32 %r_mat3908, 1
  %tmp3921 = sub i32 %c_mat3910, 1
  %i3922 = alloca i32
  store i32 0, i32* %i3922
  br label %while3923

while3923:                                        ; preds = %merge3935, %merge3899
  %i_v3941 = load i32, i32* %i3922
  %bool_val3942 = icmp sle i32 %i_v3941, %tmp3920
  br i1 %bool_val3942, label %while_body3924, label %merge3940

while_body3924:                                   ; preds = %while3923
  %j3925 = alloca i32
  store i32 0, i32* %j3925
  br label %while3926

while3926:                                        ; preds = %while_body3927, %while_body3924
  %j_v3936 = load i32, i32* %j3925
  %bool_val3937 = icmp sle i32 %j_v3936, %tmp3921
  br i1 %bool_val3937, label %while_body3927, label %merge3935

while_body3927:                                   ; preds = %while3926
  %j_v3928 = load i32, i32* %j3925
  %i_v3929 = load i32, i32* %i3922
  %tmp3930 = mul i32 %c_mat3910, %i_v3929
  %index3931 = add i32 %j_v3928, %tmp3930
  %element_ptr3932 = getelementptr double, double* %system_mat3914, i32 %index3931
  store double 0.000000e+00, double* %element_ptr3932
  %j_v3933 = load i32, i32* %j3925
  %tmp3934 = add i32 %j_v3933, 1
  store i32 %tmp3934, i32* %j3925
  br label %while3926

merge3935:                                        ; preds = %while3926
  %i_v3938 = load i32, i32* %i3922
  %tmp3939 = add i32 %i_v3938, 1
  store i32 %tmp3939, i32* %i3922
  br label %while3923

merge3940:                                        ; preds = %while3923
  %tmp3943 = sub i32 %c_mat3910, 1
  %tmp3944 = sub i32 %r_mat3908, 1
  %m_mat3945 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 0
  %mat_mat3946 = load double*, double** %m_mat3945
  %m_r3947 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 1
  %r_mat3948 = load i32, i32* %m_r3947
  %m_c3949 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 2
  %c_mat3950 = load i32, i32* %m_c3949
  %m_mat3951 = getelementptr inbounds %matrix_t, %matrix_t* %v3904, i32 0, i32 0
  %mat_v3952 = load double*, double** %m_mat3951
  %m_r3953 = getelementptr inbounds %matrix_t, %matrix_t* %v3904, i32 0, i32 1
  %r_v3954 = load i32, i32* %m_r3953
  %m_c3955 = getelementptr inbounds %matrix_t, %matrix_t* %v3904, i32 0, i32 2
  %c_v3956 = load i32, i32* %m_c3955
  %i3957 = alloca i32
  store i32 0, i32* %i3957
  br label %while3958

while3958:                                        ; preds = %merge3980, %merge3940
  %i_v3986 = load i32, i32* %i3957
  %bool_val3987 = icmp sle i32 %i_v3986, %tmp3944
  br i1 %bool_val3987, label %while_body3959, label %merge3985

while_body3959:                                   ; preds = %while3958
  %j3960 = alloca i32
  store i32 0, i32* %j3960
  br label %while3961

while3961:                                        ; preds = %while_body3962, %while_body3959
  %j_v3981 = load i32, i32* %j3960
  %bool_val3982 = icmp sle i32 %j_v3981, %tmp3943
  br i1 %bool_val3982, label %while_body3962, label %merge3980

while_body3962:                                   ; preds = %while3961
  %j_v3963 = load i32, i32* %j3960
  %i_v3964 = load i32, i32* %i3957
  %tmp3965 = mul i32 %c_mat3950, %i_v3964
  %index3966 = add i32 %j_v3963, %tmp3965
  %element_ptr3967 = getelementptr double, double* %mat_mat3946, i32 %index3966
  %j_v3968 = load i32, i32* %j3960
  %tmp3969 = sub i32 %j_v3968, 0
  %tmp3970 = add i32 %tmp3969, 0
  %i_v3971 = load i32, i32* %i3957
  %tmp3972 = sub i32 %i_v3971, 0
  %tmp3973 = add i32 %tmp3972, 0
  %tmp3974 = mul i32 %c_v3956, %tmp3973
  %index3975 = add i32 %tmp3970, %tmp3974
  %element_ptr3976 = getelementptr double, double* %mat_v3952, i32 %index3975
  %tmp_element3977 = load double, double* %element_ptr3976
  store double %tmp_element3977, double* %element_ptr3967
  %j_v3978 = load i32, i32* %j3960
  %tmp3979 = add i32 %j_v3978, 1
  store i32 %tmp3979, i32* %j3960
  br label %while3961

merge3980:                                        ; preds = %while3961
  %i_v3983 = load i32, i32* %i3957
  %tmp3984 = add i32 %i_v3983, 1
  store i32 %tmp3984, i32* %i3957
  br label %while3958

merge3985:                                        ; preds = %while3958
  %72 = bitcast double* %mat_mat3906 to i8*
  tail call void @free(i8* %72)
  %73 = bitcast %matrix_t* %v3904 to i8*
  tail call void @free(i8* %73)
  %m_r3988 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat3989 = load i32, i32* %m_r3988
  %m_c3990 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat3991 = load i32, i32* %m_c3990
  %x3992 = load double, double* %x
  %l3993 = load double, double* %l
  %tmp3994 = fdiv double %l3993, 2.000000e+00
  %tmp3995 = fadd double %x3992, %tmp3994
  %tmp3996 = fsub double %tmp3995, 2.000000e+00
  %double2int_result3997 = call %double_to_int_t* @double2int(double %tmp3996)
  %v_ptr3998 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3997, i32 0, i32 0
  %v3999 = load i32, i32* %v_ptr3998
  %74 = bitcast %double_to_int_t* %double2int_result3997 to i8*
  tail call void @free(i8* %74)
  %tmp4004 = icmp sgt i32 0, %v3999
  br i1 %tmp4004, label %then4001, label %else4003

merge4000:                                        ; preds = %else4003, %then4001
  %tmp4005 = sub i32 %r_mat3989, 1
  %tmp4010 = icmp slt i32 %tmp4005, %v3999
  br i1 %tmp4010, label %then4007, label %else4009

then4001:                                         ; preds = %merge3985
  %printf4002 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4000

else4003:                                         ; preds = %merge3985
  br label %merge4000

merge4006:                                        ; preds = %else4009, %then4007
  %x4011 = load double, double* %x
  %l4012 = load double, double* %l
  %tmp4013 = fdiv double %l4012, 2.000000e+00
  %tmp4014 = fadd double %x4011, %tmp4013
  %tmp4015 = fadd double %tmp4014, 2.000000e+00
  %double2int_result4016 = call %double_to_int_t* @double2int(double %tmp4015)
  %v_ptr4017 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result4016, i32 0, i32 0
  %v4018 = load i32, i32* %v_ptr4017
  %75 = bitcast %double_to_int_t* %double2int_result4016 to i8*
  tail call void @free(i8* %75)
  %tmp4023 = icmp sgt i32 0, %v4018
  br i1 %tmp4023, label %then4020, label %else4022

then4007:                                         ; preds = %merge4000
  %printf4008 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4006

else4009:                                         ; preds = %merge4000
  br label %merge4006

merge4019:                                        ; preds = %else4022, %then4020
  %tmp4024 = sub i32 %r_mat3989, 1
  %tmp4029 = icmp slt i32 %tmp4024, %v4018
  br i1 %tmp4029, label %then4026, label %else4028

then4020:                                         ; preds = %merge4006
  %printf4021 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4019

else4022:                                         ; preds = %merge4006
  br label %merge4019

merge4025:                                        ; preds = %else4028, %then4026
  %i4030 = load i32, i32* %i948
  %tmp4035 = icmp sgt i32 0, %i4030
  br i1 %tmp4035, label %then4032, label %else4034

then4026:                                         ; preds = %merge4019
  %printf4027 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4025

else4028:                                         ; preds = %merge4019
  br label %merge4025

merge4031:                                        ; preds = %else4034, %then4032
  %tmp4036 = sub i32 %c_mat3991, 1
  %tmp4041 = icmp slt i32 %tmp4036, %i4030
  br i1 %tmp4041, label %then4038, label %else4040

then4032:                                         ; preds = %merge4025
  %printf4033 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4031

else4034:                                         ; preds = %merge4025
  br label %merge4031

merge4037:                                        ; preds = %else4040, %then4038
  %i4042 = load i32, i32* %i948
  %tmp4047 = icmp sgt i32 0, %i4042
  br i1 %tmp4047, label %then4044, label %else4046

then4038:                                         ; preds = %merge4031
  %printf4039 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4037

else4040:                                         ; preds = %merge4031
  br label %merge4037

merge4043:                                        ; preds = %else4046, %then4044
  %tmp4048 = sub i32 %c_mat3991, 1
  %tmp4053 = icmp slt i32 %tmp4048, %i4042
  br i1 %tmp4053, label %then4050, label %else4052

then4044:                                         ; preds = %merge4037
  %printf4045 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4043

else4046:                                         ; preds = %merge4037
  br label %merge4043

merge4049:                                        ; preds = %else4052, %then4050
  %tmp4054 = sub i32 %v4018, %v3999
  %tmp4055 = add i32 %tmp4054, 1
  %m_r4056 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 1
  %r_mat4057 = load i32, i32* %m_r4056
  %tmp4062 = icmp ne i32 %tmp4055, %r_mat4057
  br i1 %tmp4062, label %then4059, label %else4061

then4050:                                         ; preds = %merge4043
  %printf4051 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge4049

else4052:                                         ; preds = %merge4043
  br label %merge4049

merge4058:                                        ; preds = %else4061, %then4059
  %tmp4063 = sub i32 %i4042, %i4030
  %tmp4064 = add i32 %tmp4063, 1
  %m_r4065 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 2
  %r_mat4066 = load i32, i32* %m_r4065
  %tmp4071 = icmp ne i32 %tmp4064, %r_mat4066
  br i1 %tmp4071, label %then4068, label %else4070

then4059:                                         ; preds = %merge4049
  %printf4060 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge4058

else4061:                                         ; preds = %merge4049
  br label %merge4058

merge4067:                                        ; preds = %else4070, %then4068
  %m_mat4072 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 0
  %mat_mat4073 = load double*, double** %m_mat4072
  %m_r4074 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 1
  %r_mat4075 = load i32, i32* %m_r4074
  %m_c4076 = getelementptr inbounds %matrix_t, %matrix_t* %m345, i32 0, i32 2
  %c_mat4077 = load i32, i32* %m_c4076
  %m_mat4078 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 0
  %mat_v4079 = load double*, double** %m_mat4078
  %m_r4080 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 1
  %r_v4081 = load i32, i32* %m_r4080
  %m_c4082 = getelementptr inbounds %matrix_t, %matrix_t* %m3916, i32 0, i32 2
  %c_v4083 = load i32, i32* %m_c4082
  %i4084 = alloca i32
  store i32 %v3999, i32* %i4084
  br label %while4085

then4068:                                         ; preds = %merge4058
  %printf4069 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge4067

else4070:                                         ; preds = %merge4058
  br label %merge4067

while4085:                                        ; preds = %merge4107, %merge4067
  %i_v4113 = load i32, i32* %i4084
  %bool_val4114 = icmp sle i32 %i_v4113, %v4018
  br i1 %bool_val4114, label %while_body4086, label %merge4112

while_body4086:                                   ; preds = %while4085
  %j4087 = alloca i32
  store i32 %i4030, i32* %j4087
  br label %while4088

while4088:                                        ; preds = %while_body4089, %while_body4086
  %j_v4108 = load i32, i32* %j4087
  %bool_val4109 = icmp sle i32 %j_v4108, %i4042
  br i1 %bool_val4109, label %while_body4089, label %merge4107

while_body4089:                                   ; preds = %while4088
  %j_v4090 = load i32, i32* %j4087
  %i_v4091 = load i32, i32* %i4084
  %tmp4092 = mul i32 %c_mat4077, %i_v4091
  %index4093 = add i32 %j_v4090, %tmp4092
  %element_ptr4094 = getelementptr double, double* %mat_mat4073, i32 %index4093
  %j_v4095 = load i32, i32* %j4087
  %tmp4096 = sub i32 %j_v4095, %i4030
  %tmp4097 = add i32 %tmp4096, 0
  %i_v4098 = load i32, i32* %i4084
  %tmp4099 = sub i32 %i_v4098, %v3999
  %tmp4100 = add i32 %tmp4099, 0
  %tmp4101 = mul i32 %c_v4083, %tmp4100
  %index4102 = add i32 %tmp4097, %tmp4101
  %element_ptr4103 = getelementptr double, double* %mat_v4079, i32 %index4102
  %tmp_element4104 = load double, double* %element_ptr4103
  store double %tmp_element4104, double* %element_ptr4094
  %j_v4105 = load i32, i32* %j4087
  %tmp4106 = add i32 %j_v4105, 1
  store i32 %tmp4106, i32* %j4087
  br label %while4088

merge4107:                                        ; preds = %while4088
  %i_v4110 = load i32, i32* %i4084
  %tmp4111 = add i32 %i_v4110, 1
  store i32 %tmp4111, i32* %i4084
  br label %while4085

merge4112:                                        ; preds = %while4085
  %i4115 = load i32, i32* %i948
  %tmp4116 = add i32 %i4115, 1
  %tmp4117 = load i32, i32* %i948
  store i32 %tmp4116, i32* %i948
  br label %while2555

merge4118:                                        ; preds = %while2555
  call void @save(%matrix_t* %m345, %matrix_t* %m511, %matrix_t* %m677, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @system_string.10, i32 0, i32 0))
  ret i32 0
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %int_to_double_t* @int2double(i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %int_to_double_t*
  %tmp = sitofp i32 %0 to double
  %converted_double = getelementptr inbounds %int_to_double_t, %int_to_double_t* %return, i32 0, i32 0
  store double %tmp, double* %converted_double
  ret %int_to_double_t* %return
}

define %double_to_int_t* @double2int(double) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %double_to_int_t*
  %tmp = fptosi double %0 to i32
  %converted_int = getelementptr inbounds %double_to_int_t, %double_to_int_t* %return, i32 0, i32 0
  store i32 %tmp, i32* %converted_int
  ret %double_to_int_t* %return
}

declare double* @load_cpp(i8*)

define %load_t* @load(i8*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 3) to i32))
  %return = bitcast i8* %malloccall to %load_t*
  %mat_arr = call double* @load_cpp(i8* %0)
  %element_ptr = getelementptr double, double* %mat_arr, i32 0
  %tmp = load double, double* %element_ptr
  %tmp1 = fptosi double %tmp to i32
  %element_ptr2 = getelementptr double, double* %mat_arr, i32 1
  %tmp3 = load double, double* %element_ptr2
  %tmp4 = fptosi double %tmp3 to i32
  %size = mul i32 %tmp1, %tmp4
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall5 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall5 to double*
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall6 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %tmp1, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %tmp4, i32* %m_c
  %tmp7 = sub i32 %tmp1, 1
  %tmp8 = sub i32 %tmp4, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v19 = load i32, i32* %i
  %bool_val20 = icmp sle i32 %i_v19, %tmp7
  br i1 %bool_val20, label %while_body, label %merge18

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while9

while9:                                           ; preds = %while_body10, %while_body
  %j_v15 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v15, %tmp8
  br i1 %bool_val, label %while_body10, label %merge

while_body10:                                     ; preds = %while9
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp11 = mul i32 %tmp4, %i_v
  %index = add i32 %j_v, %tmp11
  %element_ptr12 = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr12
  %j_v13 = load i32, i32* %j
  %tmp14 = add i32 %j_v13, 1
  store i32 %tmp14, i32* %j
  br label %while9

merge:                                            ; preds = %while9
  %i_v16 = load i32, i32* %i
  %tmp17 = add i32 %i_v16, 1
  store i32 %tmp17, i32* %i
  br label %while

merge18:                                          ; preds = %while
  %size21 = mul i32 %tmp1, %tmp4
  %mallocsize22 = mul i32 %size21, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall23 = tail call i8* @malloc(i32 %mallocsize22)
  %system_mat24 = bitcast i8* %malloccall23 to double*
  %malloccall25 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m26 = bitcast i8* %malloccall25 to %matrix_t*
  %m_mat27 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 0
  store double* %system_mat24, double** %m_mat27
  %m_r28 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 1
  store i32 %tmp1, i32* %m_r28
  %m_c29 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 2
  store i32 %tmp4, i32* %m_c29
  %tmp30 = sub i32 %tmp1, 1
  %tmp31 = sub i32 %tmp4, 1
  %i32 = alloca i32
  store i32 0, i32* %i32
  br label %while33

while33:                                          ; preds = %merge45, %merge18
  %i_v51 = load i32, i32* %i32
  %bool_val52 = icmp sle i32 %i_v51, %tmp30
  br i1 %bool_val52, label %while_body34, label %merge50

while_body34:                                     ; preds = %while33
  %j35 = alloca i32
  store i32 0, i32* %j35
  br label %while36

while36:                                          ; preds = %while_body37, %while_body34
  %j_v46 = load i32, i32* %j35
  %bool_val47 = icmp sle i32 %j_v46, %tmp31
  br i1 %bool_val47, label %while_body37, label %merge45

while_body37:                                     ; preds = %while36
  %j_v38 = load i32, i32* %j35
  %i_v39 = load i32, i32* %i32
  %tmp40 = mul i32 %tmp4, %i_v39
  %index41 = add i32 %j_v38, %tmp40
  %element_ptr42 = getelementptr double, double* %system_mat24, i32 %index41
  store double 0.000000e+00, double* %element_ptr42
  %j_v43 = load i32, i32* %j35
  %tmp44 = add i32 %j_v43, 1
  store i32 %tmp44, i32* %j35
  br label %while36

merge45:                                          ; preds = %while36
  %i_v48 = load i32, i32* %i32
  %tmp49 = add i32 %i_v48, 1
  store i32 %tmp49, i32* %i32
  br label %while33

merge50:                                          ; preds = %while33
  %size53 = mul i32 %tmp1, %tmp4
  %mallocsize54 = mul i32 %size53, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall55 = tail call i8* @malloc(i32 %mallocsize54)
  %system_mat56 = bitcast i8* %malloccall55 to double*
  %malloccall57 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m58 = bitcast i8* %malloccall57 to %matrix_t*
  %m_mat59 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 0
  store double* %system_mat56, double** %m_mat59
  %m_r60 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 1
  store i32 %tmp1, i32* %m_r60
  %m_c61 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 2
  store i32 %tmp4, i32* %m_c61
  %tmp62 = sub i32 %tmp1, 1
  %tmp63 = sub i32 %tmp4, 1
  %i64 = alloca i32
  store i32 0, i32* %i64
  br label %while65

while65:                                          ; preds = %merge77, %merge50
  %i_v83 = load i32, i32* %i64
  %bool_val84 = icmp sle i32 %i_v83, %tmp62
  br i1 %bool_val84, label %while_body66, label %merge82

while_body66:                                     ; preds = %while65
  %j67 = alloca i32
  store i32 0, i32* %j67
  br label %while68

while68:                                          ; preds = %while_body69, %while_body66
  %j_v78 = load i32, i32* %j67
  %bool_val79 = icmp sle i32 %j_v78, %tmp63
  br i1 %bool_val79, label %while_body69, label %merge77

while_body69:                                     ; preds = %while68
  %j_v70 = load i32, i32* %j67
  %i_v71 = load i32, i32* %i64
  %tmp72 = mul i32 %tmp4, %i_v71
  %index73 = add i32 %j_v70, %tmp72
  %element_ptr74 = getelementptr double, double* %system_mat56, i32 %index73
  store double 0.000000e+00, double* %element_ptr74
  %j_v75 = load i32, i32* %j67
  %tmp76 = add i32 %j_v75, 1
  store i32 %tmp76, i32* %j67
  br label %while68

merge77:                                          ; preds = %while68
  %i_v80 = load i32, i32* %i64
  %tmp81 = add i32 %i_v80, 1
  store i32 %tmp81, i32* %i64
  br label %while65

merge82:                                          ; preds = %while65
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %mat_g = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 0
  %mat_mat85 = load double*, double** %mat_g
  %mat_b = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 0
  %mat_mat86 = load double*, double** %mat_b
  %tmp87 = sub i32 %tmp1, 1
  %tmp88 = sub i32 %tmp4, 1
  %counter = alloca i32
  store i32 2, i32* %counter
  %i89 = alloca i32
  store i32 0, i32* %i89
  br label %while90

while90:                                          ; preds = %merge126, %merge82
  %i_v132 = load i32, i32* %i89
  %bool_val133 = icmp sle i32 %i_v132, %tmp87
  br i1 %bool_val133, label %while_body91, label %merge131

while_body91:                                     ; preds = %while90
  %j92 = alloca i32
  store i32 0, i32* %j92
  br label %while93

while93:                                          ; preds = %while_body94, %while_body91
  %j_v127 = load i32, i32* %j92
  %bool_val128 = icmp sle i32 %j_v127, %tmp88
  br i1 %bool_val128, label %while_body94, label %merge126

while_body94:                                     ; preds = %while93
  %j_v95 = load i32, i32* %j92
  %i_v96 = load i32, i32* %i89
  %tmp97 = mul i32 %tmp4, %i_v96
  %index98 = add i32 %j_v95, %tmp97
  %element_ptr99 = getelementptr double, double* %mat_mat, i32 %index98
  %j_v100 = load i32, i32* %j92
  %i_v101 = load i32, i32* %i89
  %tmp102 = mul i32 %tmp4, %i_v101
  %index103 = add i32 %j_v100, %tmp102
  %element_ptr104 = getelementptr double, double* %mat_mat85, i32 %index103
  %j_v105 = load i32, i32* %j92
  %i_v106 = load i32, i32* %i89
  %tmp107 = mul i32 %tmp4, %i_v106
  %index108 = add i32 %j_v105, %tmp107
  %element_ptr109 = getelementptr double, double* %mat_mat86, i32 %index108
  %counter110 = load i32, i32* %counter
  %element_ptr111 = getelementptr double, double* %mat_arr, i32 %counter110
  %tmp_element = load double, double* %element_ptr111
  store double %tmp_element, double* %element_ptr109
  %counter112 = load i32, i32* %counter
  %tmp113 = add i32 %counter112, 1
  store i32 %tmp113, i32* %counter
  %counter114 = load i32, i32* %counter
  %element_ptr115 = getelementptr double, double* %mat_arr, i32 %counter114
  %tmp_element116 = load double, double* %element_ptr115
  store double %tmp_element116, double* %element_ptr104
  %counter117 = load i32, i32* %counter
  %tmp118 = add i32 %counter117, 1
  store i32 %tmp118, i32* %counter
  %counter119 = load i32, i32* %counter
  %element_ptr120 = getelementptr double, double* %mat_arr, i32 %counter119
  %tmp_element121 = load double, double* %element_ptr120
  store double %tmp_element121, double* %element_ptr99
  %counter122 = load i32, i32* %counter
  %tmp123 = add i32 %counter122, 1
  store i32 %tmp123, i32* %counter
  %j_v124 = load i32, i32* %j92
  %tmp125 = add i32 %j_v124, 1
  store i32 %tmp125, i32* %j92
  br label %while93

merge126:                                         ; preds = %while93
  %i_v129 = load i32, i32* %i89
  %tmp130 = add i32 %i_v129, 1
  store i32 %tmp130, i32* %i89
  br label %while90

merge131:                                         ; preds = %while90
  %mat_r134 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %mat_r134
  %mat_r135 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 1
  store %matrix_t* %m26, %matrix_t** %mat_r135
  %mat_r136 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 2
  store %matrix_t* %m58, %matrix_t** %mat_r136
  ret %load_t* %return
}

declare void @save_cpp(double*, i8*)

define void @save(%matrix_t*, %matrix_t*, %matrix_t*, i8*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %tmp = mul i32 %r_mat, %c_mat
  %tmp1 = mul i32 %tmp, 3
  %tmp2 = add i32 %tmp1, 2
  %mallocsize = mul i32 %tmp2, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall = tail call i8* @malloc(i32 %mallocsize)
  %return_arr = bitcast i8* %malloccall to double*
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %mat_g = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_mat3 = load double*, double** %mat_g
  %mat_b = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 0
  %mat_mat4 = load double*, double** %mat_b
  %tmp5 = sub i32 %r_mat, 1
  %tmp6 = sub i32 %c_mat, 1
  %element_ptr = getelementptr double, double* %return_arr, i32 0
  %tmp7 = sitofp i32 %r_mat to double
  store double %tmp7, double* %element_ptr
  %element_ptr8 = getelementptr double, double* %return_arr, i32 1
  %tmp9 = sitofp i32 %c_mat to double
  store double %tmp9, double* %element_ptr8
  %counter = alloca i32
  store i32 2, i32* %counter
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v44 = load i32, i32* %i
  %bool_val45 = icmp sle i32 %i_v44, %tmp5
  br i1 %bool_val45, label %while_body, label %merge43

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while10

while10:                                          ; preds = %while_body11, %while_body
  %j_v40 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v40, %tmp6
  br i1 %bool_val, label %while_body11, label %merge

while_body11:                                     ; preds = %while10
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp12 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp12
  %element_ptr13 = getelementptr double, double* %mat_mat, i32 %index
  %j_v14 = load i32, i32* %j
  %i_v15 = load i32, i32* %i
  %tmp16 = mul i32 %c_mat, %i_v15
  %index17 = add i32 %j_v14, %tmp16
  %element_ptr18 = getelementptr double, double* %mat_mat3, i32 %index17
  %j_v19 = load i32, i32* %j
  %i_v20 = load i32, i32* %i
  %tmp21 = mul i32 %c_mat, %i_v20
  %index22 = add i32 %j_v19, %tmp21
  %element_ptr23 = getelementptr double, double* %mat_mat4, i32 %index22
  %counter24 = load i32, i32* %counter
  %element_ptr25 = getelementptr double, double* %return_arr, i32 %counter24
  %tmp_element = load double, double* %element_ptr23
  store double %tmp_element, double* %element_ptr25
  %counter26 = load i32, i32* %counter
  %tmp27 = add i32 %counter26, 1
  store i32 %tmp27, i32* %counter
  %counter28 = load i32, i32* %counter
  %element_ptr29 = getelementptr double, double* %return_arr, i32 %counter28
  %tmp_element30 = load double, double* %element_ptr18
  store double %tmp_element30, double* %element_ptr29
  %counter31 = load i32, i32* %counter
  %tmp32 = add i32 %counter31, 1
  store i32 %tmp32, i32* %counter
  %counter33 = load i32, i32* %counter
  %element_ptr34 = getelementptr double, double* %return_arr, i32 %counter33
  %tmp_element35 = load double, double* %element_ptr13
  store double %tmp_element35, double* %element_ptr34
  %counter36 = load i32, i32* %counter
  %tmp37 = add i32 %counter36, 1
  store i32 %tmp37, i32* %counter
  %j_v38 = load i32, i32* %j
  %tmp39 = add i32 %j_v38, 1
  store i32 %tmp39, i32* %j
  br label %while10

merge:                                            ; preds = %while10
  %i_v41 = load i32, i32* %i
  %tmp42 = add i32 %i_v41, 1
  store i32 %tmp42, i32* %i
  br label %while

merge43:                                          ; preds = %while
  call void @save_cpp(double* %return_arr, i8* %3)
  ret void
}

declare double* @faceDetect(i8*)

define %face_t* @face(i8*) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %face_t*
  %mat_arr = call double* @faceDetect(i8* %0)
  %element_ptr = getelementptr double, double* %mat_arr, i32 0
  %tmp = load double, double* %element_ptr
  %tmp1 = fptosi double %tmp to i32
  %size = mul i32 4, %tmp1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall2 to double*
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall3 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %tmp1, i32* %m_c
  %tmp4 = sub i32 %tmp1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v15 = load i32, i32* %i
  %bool_val16 = icmp sle i32 %i_v15, 3
  br i1 %bool_val16, label %while_body, label %merge14

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while5

while5:                                           ; preds = %while_body6, %while_body
  %j_v11 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v11, %tmp4
  br i1 %bool_val, label %while_body6, label %merge

while_body6:                                      ; preds = %while5
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp7 = mul i32 %tmp1, %i_v
  %index = add i32 %j_v, %tmp7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr8
  %j_v9 = load i32, i32* %j
  %tmp10 = add i32 %j_v9, 1
  store i32 %tmp10, i32* %j
  br label %while5

merge:                                            ; preds = %while5
  %i_v12 = load i32, i32* %i
  %tmp13 = add i32 %i_v12, 1
  store i32 %tmp13, i32* %i
  br label %while

merge14:                                          ; preds = %while
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %counter = alloca i32
  store i32 1, i32* %counter
  %tmp17 = sub i32 %tmp1, 1
  %i18 = alloca i32
  store i32 0, i32* %i18
  br label %while19

while19:                                          ; preds = %merge35, %merge14
  %i_v41 = load i32, i32* %i18
  %bool_val42 = icmp sle i32 %i_v41, %tmp17
  br i1 %bool_val42, label %while_body20, label %merge40

while_body20:                                     ; preds = %while19
  %j21 = alloca i32
  store i32 0, i32* %j21
  br label %while22

while22:                                          ; preds = %while_body23, %while_body20
  %j_v36 = load i32, i32* %j21
  %bool_val37 = icmp sle i32 %j_v36, 3
  br i1 %bool_val37, label %while_body23, label %merge35

while_body23:                                     ; preds = %while22
  %j_v24 = load i32, i32* %j21
  %i_v25 = load i32, i32* %i18
  %tmp26 = mul i32 %tmp1, %i_v25
  %index27 = add i32 %j_v24, %tmp26
  %element_ptr28 = getelementptr double, double* %mat_mat, i32 %index27
  %counter29 = load i32, i32* %counter
  %element_ptr30 = getelementptr double, double* %mat_arr, i32 %counter29
  %tmp_element = load double, double* %element_ptr30
  store double %tmp_element, double* %element_ptr28
  %counter31 = load i32, i32* %counter
  %tmp32 = add i32 %counter31, 1
  store i32 %tmp32, i32* %counter
  %j_v33 = load i32, i32* %j21
  %tmp34 = add i32 %j_v33, 1
  store i32 %tmp34, i32* %j21
  br label %while22

merge35:                                          ; preds = %while22
  %i_v38 = load i32, i32* %i18
  %tmp39 = add i32 %i_v38, 1
  store i32 %tmp39, i32* %i18
  br label %while19

merge40:                                          ; preds = %while19
  %mat_r43 = getelementptr inbounds %face_t, %face_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %mat_r43
  ret %face_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall to double*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall1 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r2
  %m_c3 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c3
  %tmp = sub i32 %r_mat, 1
  %tmp4 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v14 = load i32, i32* %i
  %bool_val15 = icmp sle i32 %i_v14, %tmp
  br i1 %bool_val15, label %while_body, label %merge13

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while5

while5:                                           ; preds = %while_body6, %while_body
  %j_v10 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v10, %tmp4
  br i1 %bool_val, label %while_body6, label %merge

while_body6:                                      ; preds = %while5
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp7 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp7
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v8 = load i32, i32* %j
  %tmp9 = add i32 %j_v8, 1
  store i32 %tmp9, i32* %j
  br label %while5

merge:                                            ; preds = %while5
  %i_v11 = load i32, i32* %i
  %tmp12 = add i32 %i_v11, 1
  store i32 %tmp12, i32* %i
  br label %while

merge13:                                          ; preds = %while
  %tmp16 = sub i32 %c_mat, 1
  %tmp17 = sub i32 %r_mat, 1
  %m_mat18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat18
  %m_r19 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat20 = load i32, i32* %m_r19
  %m_c21 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat22 = load i32, i32* %m_c21
  %m_mat23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat23
  %m_r24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r24
  %m_c25 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c25
  %i26 = alloca i32
  store i32 0, i32* %i26
  br label %while27

while27:                                          ; preds = %merge48, %merge13
  %i_v54 = load i32, i32* %i26
  %bool_val55 = icmp sle i32 %i_v54, %tmp17
  br i1 %bool_val55, label %while_body28, label %merge53

while_body28:                                     ; preds = %while27
  %j29 = alloca i32
  store i32 0, i32* %j29
  br label %while30

while30:                                          ; preds = %while_body31, %while_body28
  %j_v49 = load i32, i32* %j29
  %bool_val50 = icmp sle i32 %j_v49, %tmp16
  br i1 %bool_val50, label %while_body31, label %merge48

while_body31:                                     ; preds = %while30
  %j_v32 = load i32, i32* %j29
  %i_v33 = load i32, i32* %i26
  %tmp34 = mul i32 %c_mat22, %i_v33
  %index35 = add i32 %j_v32, %tmp34
  %element_ptr36 = getelementptr double, double* %mat_mat, i32 %index35
  %j_v37 = load i32, i32* %j29
  %tmp38 = sub i32 %j_v37, 0
  %tmp39 = add i32 %tmp38, 0
  %i_v40 = load i32, i32* %i26
  %tmp41 = sub i32 %i_v40, 0
  %tmp42 = add i32 %tmp41, 0
  %tmp43 = mul i32 %c_v, %tmp42
  %index44 = add i32 %tmp39, %tmp43
  %element_ptr45 = getelementptr double, double* %mat_v, i32 %index44
  %tmp_element = load double, double* %element_ptr45
  store double %tmp_element, double* %element_ptr36
  %j_v46 = load i32, i32* %j29
  %tmp47 = add i32 %j_v46, 1
  store i32 %tmp47, i32* %j29
  br label %while30

merge48:                                          ; preds = %while30
  %i_v51 = load i32, i32* %i26
  %tmp52 = add i32 %i_v51, 1
  store i32 %tmp52, i32* %i26
  br label %while27

merge53:                                          ; preds = %while27
  %m_r56 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat57 = load i32, i32* %m_r56
  %m_c58 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat59 = load i32, i32* %m_c58
  %size60 = mul i32 %r_mat57, %c_mat59
  %mallocsize61 = mul i32 %size60, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall62 = tail call i8* @malloc(i32 %mallocsize61)
  %system_mat63 = bitcast i8* %malloccall62 to double*
  %malloccall64 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m65 = bitcast i8* %malloccall64 to %matrix_t*
  %m_mat66 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 0
  store double* %system_mat63, double** %m_mat66
  %m_r67 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 1
  store i32 %r_mat57, i32* %m_r67
  %m_c68 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 2
  store i32 %c_mat59, i32* %m_c68
  %tmp69 = sub i32 %r_mat57, 1
  %tmp70 = sub i32 %c_mat59, 1
  %i71 = alloca i32
  store i32 0, i32* %i71
  br label %while72

while72:                                          ; preds = %merge84, %merge53
  %i_v90 = load i32, i32* %i71
  %bool_val91 = icmp sle i32 %i_v90, %tmp69
  br i1 %bool_val91, label %while_body73, label %merge89

while_body73:                                     ; preds = %while72
  %j74 = alloca i32
  store i32 0, i32* %j74
  br label %while75

while75:                                          ; preds = %while_body76, %while_body73
  %j_v85 = load i32, i32* %j74
  %bool_val86 = icmp sle i32 %j_v85, %tmp70
  br i1 %bool_val86, label %while_body76, label %merge84

while_body76:                                     ; preds = %while75
  %j_v77 = load i32, i32* %j74
  %i_v78 = load i32, i32* %i71
  %tmp79 = mul i32 %c_mat59, %i_v78
  %index80 = add i32 %j_v77, %tmp79
  %element_ptr81 = getelementptr double, double* %system_mat63, i32 %index80
  store double 0.000000e+00, double* %element_ptr81
  %j_v82 = load i32, i32* %j74
  %tmp83 = add i32 %j_v82, 1
  store i32 %tmp83, i32* %j74
  br label %while75

merge84:                                          ; preds = %while75
  %i_v87 = load i32, i32* %i71
  %tmp88 = add i32 %i_v87, 1
  store i32 %tmp88, i32* %i71
  br label %while72

merge89:                                          ; preds = %while72
  %tmp92 = sub i32 %c_mat59, 1
  %tmp93 = sub i32 %r_mat57, 1
  %m_mat94 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 0
  %mat_mat95 = load double*, double** %m_mat94
  %m_r96 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 1
  %r_mat97 = load i32, i32* %m_r96
  %m_c98 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 2
  %c_mat99 = load i32, i32* %m_c98
  %m_mat100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v101 = load double*, double** %m_mat100
  %m_r102 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v103 = load i32, i32* %m_r102
  %m_c104 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v105 = load i32, i32* %m_c104
  %i106 = alloca i32
  store i32 0, i32* %i106
  br label %while107

while107:                                         ; preds = %merge129, %merge89
  %i_v135 = load i32, i32* %i106
  %bool_val136 = icmp sle i32 %i_v135, %tmp93
  br i1 %bool_val136, label %while_body108, label %merge134

while_body108:                                    ; preds = %while107
  %j109 = alloca i32
  store i32 0, i32* %j109
  br label %while110

while110:                                         ; preds = %while_body111, %while_body108
  %j_v130 = load i32, i32* %j109
  %bool_val131 = icmp sle i32 %j_v130, %tmp92
  br i1 %bool_val131, label %while_body111, label %merge129

while_body111:                                    ; preds = %while110
  %j_v112 = load i32, i32* %j109
  %i_v113 = load i32, i32* %i106
  %tmp114 = mul i32 %c_mat99, %i_v113
  %index115 = add i32 %j_v112, %tmp114
  %element_ptr116 = getelementptr double, double* %mat_mat95, i32 %index115
  %j_v117 = load i32, i32* %j109
  %tmp118 = sub i32 %j_v117, 0
  %tmp119 = add i32 %tmp118, 0
  %i_v120 = load i32, i32* %i106
  %tmp121 = sub i32 %i_v120, 0
  %tmp122 = add i32 %tmp121, 0
  %tmp123 = mul i32 %c_v105, %tmp122
  %index124 = add i32 %tmp119, %tmp123
  %element_ptr125 = getelementptr double, double* %mat_v101, i32 %index124
  %tmp_element126 = load double, double* %element_ptr125
  store double %tmp_element126, double* %element_ptr116
  %j_v127 = load i32, i32* %j109
  %tmp128 = add i32 %j_v127, 1
  store i32 %tmp128, i32* %j109
  br label %while110

merge129:                                         ; preds = %while110
  %i_v132 = load i32, i32* %i106
  %tmp133 = add i32 %i_v132, 1
  store i32 %tmp133, i32* %i106
  br label %while107

merge134:                                         ; preds = %while107
  %k = alloca double
  %tmp137 = load double, double* %k
  store double 0.000000e+00, double* %k
  %i138 = alloca i32
  %tmp139 = load i32, i32* %i138
  store i32 0, i32* %i138
  %j140 = alloca i32
  %tmp141 = load i32, i32* %j140
  store i32 0, i32* %j140
  %i142 = load i32, i32* %i138
  %tmp143 = icmp slt i32 %i142, 3
  %tmp144 = load i32, i32* %i138
  store i32 0, i32* %i138
  br label %while145

while145:                                         ; preds = %merge270, %merge134
  %i277 = load i32, i32* %i138
  %tmp278 = icmp slt i32 %i277, 3
  br i1 %tmp278, label %while_body146, label %merge276

while_body146:                                    ; preds = %while145
  %j147 = load i32, i32* %j140
  %tmp148 = icmp slt i32 %j147, 3
  %tmp149 = load i32, i32* %j140
  store i32 0, i32* %j140
  br label %while150

while150:                                         ; preds = %merge253, %while_body146
  %j271 = load i32, i32* %j140
  %tmp272 = icmp slt i32 %j271, 3
  br i1 %tmp272, label %while_body151, label %merge270

while_body151:                                    ; preds = %while150
  %k152 = load double, double* %k
  %m_r153 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat154 = load i32, i32* %m_r153
  %m_c155 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat156 = load i32, i32* %m_c155
  %i157 = load i32, i32* %i138
  %tmp159 = icmp sgt i32 0, %i157
  br i1 %tmp159, label %then, label %else

merge158:                                         ; preds = %else, %then
  %tmp160 = sub i32 %r_mat154, 1
  %tmp165 = icmp slt i32 %tmp160, %i157
  br i1 %tmp165, label %then162, label %else164

then:                                             ; preds = %while_body151
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge158

else:                                             ; preds = %while_body151
  br label %merge158

merge161:                                         ; preds = %else164, %then162
  %i166 = load i32, i32* %i138
  %tmp171 = icmp sgt i32 0, %i166
  br i1 %tmp171, label %then168, label %else170

then162:                                          ; preds = %merge158
  %printf163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge161

else164:                                          ; preds = %merge158
  br label %merge161

merge167:                                         ; preds = %else170, %then168
  %tmp172 = sub i32 %r_mat154, 1
  %tmp177 = icmp slt i32 %tmp172, %i166
  br i1 %tmp177, label %then174, label %else176

then168:                                          ; preds = %merge161
  %printf169 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge167

else170:                                          ; preds = %merge161
  br label %merge167

merge173:                                         ; preds = %else176, %then174
  %j178 = load i32, i32* %j140
  %tmp183 = icmp sgt i32 0, %j178
  br i1 %tmp183, label %then180, label %else182

then174:                                          ; preds = %merge167
  %printf175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge173

else176:                                          ; preds = %merge167
  br label %merge173

merge179:                                         ; preds = %else182, %then180
  %tmp184 = sub i32 %c_mat156, 1
  %tmp189 = icmp slt i32 %tmp184, %j178
  br i1 %tmp189, label %then186, label %else188

then180:                                          ; preds = %merge173
  %printf181 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge179

else182:                                          ; preds = %merge173
  br label %merge179

merge185:                                         ; preds = %else188, %then186
  %j190 = load i32, i32* %j140
  %tmp195 = icmp sgt i32 0, %j190
  br i1 %tmp195, label %then192, label %else194

then186:                                          ; preds = %merge179
  %printf187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge185

else188:                                          ; preds = %merge179
  br label %merge185

merge191:                                         ; preds = %else194, %then192
  %tmp196 = sub i32 %c_mat156, 1
  %tmp201 = icmp slt i32 %tmp196, %j190
  br i1 %tmp201, label %then198, label %else200

then192:                                          ; preds = %merge185
  %printf193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge191

else194:                                          ; preds = %merge185
  br label %merge191

merge197:                                         ; preds = %else200, %then198
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat202 = load double*, double** %mat
  %tmp203 = mul i32 %c_mat156, %i157
  %index204 = add i32 %j178, %tmp203
  %element_ptr205 = getelementptr double, double* %mat202, i32 %index204
  %element = load double, double* %element_ptr205
  %m_r206 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 1
  %r_mat207 = load i32, i32* %m_r206
  %m_c208 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 2
  %c_mat209 = load i32, i32* %m_c208
  %i210 = load i32, i32* %i138
  %tmp215 = icmp sgt i32 0, %i210
  br i1 %tmp215, label %then212, label %else214

then198:                                          ; preds = %merge191
  %printf199 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge197

else200:                                          ; preds = %merge191
  br label %merge197

merge211:                                         ; preds = %else214, %then212
  %tmp216 = sub i32 %r_mat207, 1
  %tmp221 = icmp slt i32 %tmp216, %i210
  br i1 %tmp221, label %then218, label %else220

then212:                                          ; preds = %merge197
  %printf213 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge211

else214:                                          ; preds = %merge197
  br label %merge211

merge217:                                         ; preds = %else220, %then218
  %i222 = load i32, i32* %i138
  %tmp227 = icmp sgt i32 0, %i222
  br i1 %tmp227, label %then224, label %else226

then218:                                          ; preds = %merge211
  %printf219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge217

else220:                                          ; preds = %merge211
  br label %merge217

merge223:                                         ; preds = %else226, %then224
  %tmp228 = sub i32 %r_mat207, 1
  %tmp233 = icmp slt i32 %tmp228, %i222
  br i1 %tmp233, label %then230, label %else232

then224:                                          ; preds = %merge217
  %printf225 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge223

else226:                                          ; preds = %merge217
  br label %merge223

merge229:                                         ; preds = %else232, %then230
  %j234 = load i32, i32* %j140
  %tmp239 = icmp sgt i32 0, %j234
  br i1 %tmp239, label %then236, label %else238

then230:                                          ; preds = %merge223
  %printf231 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge229

else232:                                          ; preds = %merge223
  br label %merge229

merge235:                                         ; preds = %else238, %then236
  %tmp240 = sub i32 %c_mat209, 1
  %tmp245 = icmp slt i32 %tmp240, %j234
  br i1 %tmp245, label %then242, label %else244

then236:                                          ; preds = %merge229
  %printf237 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge235

else238:                                          ; preds = %merge229
  br label %merge235

merge241:                                         ; preds = %else244, %then242
  %j246 = load i32, i32* %j140
  %tmp251 = icmp sgt i32 0, %j246
  br i1 %tmp251, label %then248, label %else250

then242:                                          ; preds = %merge235
  %printf243 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge241

else244:                                          ; preds = %merge235
  br label %merge241

merge247:                                         ; preds = %else250, %then248
  %tmp252 = sub i32 %c_mat209, 1
  %tmp257 = icmp slt i32 %tmp252, %j246
  br i1 %tmp257, label %then254, label %else256

then248:                                          ; preds = %merge241
  %printf249 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge247

else250:                                          ; preds = %merge241
  br label %merge247

merge253:                                         ; preds = %else256, %then254
  %mat258 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 0
  %mat259 = load double*, double** %mat258
  %tmp260 = mul i32 %c_mat209, %i210
  %index261 = add i32 %j234, %tmp260
  %element_ptr262 = getelementptr double, double* %mat259, i32 %index261
  %element263 = load double, double* %element_ptr262
  %tmp264 = fmul double %element, %element263
  %tmp265 = fadd double %k152, %tmp264
  %tmp266 = load double, double* %k
  store double %tmp265, double* %k
  %j267 = load i32, i32* %j140
  %tmp268 = add i32 %j267, 1
  %tmp269 = load i32, i32* %j140
  store i32 %tmp268, i32* %j140
  br label %while150

then254:                                          ; preds = %merge247
  %printf255 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge253

else256:                                          ; preds = %merge247
  br label %merge253

merge270:                                         ; preds = %while150
  %i273 = load i32, i32* %i138
  %tmp274 = add i32 %i273, 1
  %tmp275 = load i32, i32* %i138
  store i32 %tmp274, i32* %i138
  br label %while145

merge276:                                         ; preds = %while145
  %malloccall279 = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall279 to %return_t*
  %k280 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k280, double* %return0
  ret %return_t* %return
  %tmp281 = alloca %return_t
  ret %return_t* %tmp281
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall to double*
  %malloccall1 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall1 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r2
  %m_c3 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c3
  %tmp = sub i32 %r_mat, 1
  %tmp4 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v14 = load i32, i32* %i
  %bool_val15 = icmp sle i32 %i_v14, %tmp
  br i1 %bool_val15, label %while_body, label %merge13

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while5

while5:                                           ; preds = %while_body6, %while_body
  %j_v10 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v10, %tmp4
  br i1 %bool_val, label %while_body6, label %merge

while_body6:                                      ; preds = %while5
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp7 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp7
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v8 = load i32, i32* %j
  %tmp9 = add i32 %j_v8, 1
  store i32 %tmp9, i32* %j
  br label %while5

merge:                                            ; preds = %while5
  %i_v11 = load i32, i32* %i
  %tmp12 = add i32 %i_v11, 1
  store i32 %tmp12, i32* %i
  br label %while

merge13:                                          ; preds = %while
  %tmp16 = sub i32 %c_mat, 1
  %tmp17 = sub i32 %r_mat, 1
  %m_mat18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat18
  %m_r19 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat20 = load i32, i32* %m_r19
  %m_c21 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat22 = load i32, i32* %m_c21
  %m_mat23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat23
  %m_r24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r24
  %m_c25 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c25
  %i26 = alloca i32
  store i32 0, i32* %i26
  br label %while27

while27:                                          ; preds = %merge48, %merge13
  %i_v54 = load i32, i32* %i26
  %bool_val55 = icmp sle i32 %i_v54, %tmp17
  br i1 %bool_val55, label %while_body28, label %merge53

while_body28:                                     ; preds = %while27
  %j29 = alloca i32
  store i32 0, i32* %j29
  br label %while30

while30:                                          ; preds = %while_body31, %while_body28
  %j_v49 = load i32, i32* %j29
  %bool_val50 = icmp sle i32 %j_v49, %tmp16
  br i1 %bool_val50, label %while_body31, label %merge48

while_body31:                                     ; preds = %while30
  %j_v32 = load i32, i32* %j29
  %i_v33 = load i32, i32* %i26
  %tmp34 = mul i32 %c_mat22, %i_v33
  %index35 = add i32 %j_v32, %tmp34
  %element_ptr36 = getelementptr double, double* %mat_mat, i32 %index35
  %j_v37 = load i32, i32* %j29
  %tmp38 = sub i32 %j_v37, 0
  %tmp39 = add i32 %tmp38, 0
  %i_v40 = load i32, i32* %i26
  %tmp41 = sub i32 %i_v40, 0
  %tmp42 = add i32 %tmp41, 0
  %tmp43 = mul i32 %c_v, %tmp42
  %index44 = add i32 %tmp39, %tmp43
  %element_ptr45 = getelementptr double, double* %mat_v, i32 %index44
  %tmp_element = load double, double* %element_ptr45
  store double %tmp_element, double* %element_ptr36
  %j_v46 = load i32, i32* %j29
  %tmp47 = add i32 %j_v46, 1
  store i32 %tmp47, i32* %j29
  br label %while30

merge48:                                          ; preds = %while30
  %i_v51 = load i32, i32* %i26
  %tmp52 = add i32 %i_v51, 1
  store i32 %tmp52, i32* %i26
  br label %while27

merge53:                                          ; preds = %while27
  %m_r56 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat57 = load i32, i32* %m_r56
  %m_c58 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat59 = load i32, i32* %m_c58
  %size60 = mul i32 %r_mat57, %c_mat59
  %mallocsize61 = mul i32 %size60, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall62 = tail call i8* @malloc(i32 %mallocsize61)
  %system_mat63 = bitcast i8* %malloccall62 to double*
  %malloccall64 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m65 = bitcast i8* %malloccall64 to %matrix_t*
  %m_mat66 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 0
  store double* %system_mat63, double** %m_mat66
  %m_r67 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 1
  store i32 %r_mat57, i32* %m_r67
  %m_c68 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 2
  store i32 %c_mat59, i32* %m_c68
  %tmp69 = sub i32 %r_mat57, 1
  %tmp70 = sub i32 %c_mat59, 1
  %i71 = alloca i32
  store i32 0, i32* %i71
  br label %while72

while72:                                          ; preds = %merge84, %merge53
  %i_v90 = load i32, i32* %i71
  %bool_val91 = icmp sle i32 %i_v90, %tmp69
  br i1 %bool_val91, label %while_body73, label %merge89

while_body73:                                     ; preds = %while72
  %j74 = alloca i32
  store i32 0, i32* %j74
  br label %while75

while75:                                          ; preds = %while_body76, %while_body73
  %j_v85 = load i32, i32* %j74
  %bool_val86 = icmp sle i32 %j_v85, %tmp70
  br i1 %bool_val86, label %while_body76, label %merge84

while_body76:                                     ; preds = %while75
  %j_v77 = load i32, i32* %j74
  %i_v78 = load i32, i32* %i71
  %tmp79 = mul i32 %c_mat59, %i_v78
  %index80 = add i32 %j_v77, %tmp79
  %element_ptr81 = getelementptr double, double* %system_mat63, i32 %index80
  store double 0.000000e+00, double* %element_ptr81
  %j_v82 = load i32, i32* %j74
  %tmp83 = add i32 %j_v82, 1
  store i32 %tmp83, i32* %j74
  br label %while75

merge84:                                          ; preds = %while75
  %i_v87 = load i32, i32* %i71
  %tmp88 = add i32 %i_v87, 1
  store i32 %tmp88, i32* %i71
  br label %while72

merge89:                                          ; preds = %while72
  %tmp92 = sub i32 %c_mat59, 1
  %tmp93 = sub i32 %r_mat57, 1
  %m_mat94 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 0
  %mat_mat95 = load double*, double** %m_mat94
  %m_r96 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 1
  %r_mat97 = load i32, i32* %m_r96
  %m_c98 = getelementptr inbounds %matrix_t, %matrix_t* %m65, i32 0, i32 2
  %c_mat99 = load i32, i32* %m_c98
  %m_mat100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v101 = load double*, double** %m_mat100
  %m_r102 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v103 = load i32, i32* %m_r102
  %m_c104 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v105 = load i32, i32* %m_c104
  %i106 = alloca i32
  store i32 0, i32* %i106
  br label %while107

while107:                                         ; preds = %merge129, %merge89
  %i_v135 = load i32, i32* %i106
  %bool_val136 = icmp sle i32 %i_v135, %tmp93
  br i1 %bool_val136, label %while_body108, label %merge134

while_body108:                                    ; preds = %while107
  %j109 = alloca i32
  store i32 0, i32* %j109
  br label %while110

while110:                                         ; preds = %while_body111, %while_body108
  %j_v130 = load i32, i32* %j109
  %bool_val131 = icmp sle i32 %j_v130, %tmp92
  br i1 %bool_val131, label %while_body111, label %merge129

while_body111:                                    ; preds = %while110
  %j_v112 = load i32, i32* %j109
  %i_v113 = load i32, i32* %i106
  %tmp114 = mul i32 %c_mat99, %i_v113
  %index115 = add i32 %j_v112, %tmp114
  %element_ptr116 = getelementptr double, double* %mat_mat95, i32 %index115
  %j_v117 = load i32, i32* %j109
  %tmp118 = sub i32 %j_v117, 0
  %tmp119 = add i32 %tmp118, 0
  %i_v120 = load i32, i32* %i106
  %tmp121 = sub i32 %i_v120, 0
  %tmp122 = add i32 %tmp121, 0
  %tmp123 = mul i32 %c_v105, %tmp122
  %index124 = add i32 %tmp119, %tmp123
  %element_ptr125 = getelementptr double, double* %mat_v101, i32 %index124
  %tmp_element126 = load double, double* %element_ptr125
  store double %tmp_element126, double* %element_ptr116
  %j_v127 = load i32, i32* %j109
  %tmp128 = add i32 %j_v127, 1
  store i32 %tmp128, i32* %j109
  br label %while110

merge129:                                         ; preds = %while110
  %i_v132 = load i32, i32* %i106
  %tmp133 = add i32 %i_v132, 1
  store i32 %tmp133, i32* %i106
  br label %while107

merge134:                                         ; preds = %while107
  %a = alloca i32
  %tmp137 = load i32, i32* %a
  store i32 0, i32* %a
  %b = alloca i32
  %tmp138 = load i32, i32* %b
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp139 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr140 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v141 = load i32, i32* %v_ptr140
  %tmp142 = load i32, i32* %b
  store i32 %v141, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b143 = load i32, i32* %b
  %tmp144 = add i32 %b143, 2
  %a145 = load i32, i32* %a
  %tmp146 = add i32 %a145, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp146, i32 %tmp144)
  %v_ptr147 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v148 = load %matrix_t*, %matrix_t** %v_ptr147
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat149 = getelementptr inbounds %matrix_t, %matrix_t* %v148, i32 0, i32 0
  %mat_mat150 = load double*, double** %m_mat149
  %m_r151 = getelementptr inbounds %matrix_t, %matrix_t* %v148, i32 0, i32 1
  %r_mat152 = load i32, i32* %m_r151
  %m_c153 = getelementptr inbounds %matrix_t, %matrix_t* %v148, i32 0, i32 2
  %c_mat154 = load i32, i32* %m_c153
  %size155 = mul i32 %r_mat152, %c_mat154
  %mallocsize156 = mul i32 %size155, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall157 = tail call i8* @malloc(i32 %mallocsize156)
  %system_mat158 = bitcast i8* %malloccall157 to double*
  %malloccall159 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m160 = bitcast i8* %malloccall159 to %matrix_t*
  %m_mat161 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 0
  store double* %system_mat158, double** %m_mat161
  %m_r162 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 1
  store i32 %r_mat152, i32* %m_r162
  %m_c163 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 2
  store i32 %c_mat154, i32* %m_c163
  %tmp164 = sub i32 %r_mat152, 1
  %tmp165 = sub i32 %c_mat154, 1
  %i166 = alloca i32
  store i32 0, i32* %i166
  br label %while167

while167:                                         ; preds = %merge179, %merge134
  %i_v185 = load i32, i32* %i166
  %bool_val186 = icmp sle i32 %i_v185, %tmp164
  br i1 %bool_val186, label %while_body168, label %merge184

while_body168:                                    ; preds = %while167
  %j169 = alloca i32
  store i32 0, i32* %j169
  br label %while170

while170:                                         ; preds = %while_body171, %while_body168
  %j_v180 = load i32, i32* %j169
  %bool_val181 = icmp sle i32 %j_v180, %tmp165
  br i1 %bool_val181, label %while_body171, label %merge179

while_body171:                                    ; preds = %while170
  %j_v172 = load i32, i32* %j169
  %i_v173 = load i32, i32* %i166
  %tmp174 = mul i32 %c_mat154, %i_v173
  %index175 = add i32 %j_v172, %tmp174
  %element_ptr176 = getelementptr double, double* %system_mat158, i32 %index175
  store double 0.000000e+00, double* %element_ptr176
  %j_v177 = load i32, i32* %j169
  %tmp178 = add i32 %j_v177, 1
  store i32 %tmp178, i32* %j169
  br label %while170

merge179:                                         ; preds = %while170
  %i_v182 = load i32, i32* %i166
  %tmp183 = add i32 %i_v182, 1
  store i32 %tmp183, i32* %i166
  br label %while167

merge184:                                         ; preds = %while167
  %tmp187 = sub i32 %c_mat154, 1
  %tmp188 = sub i32 %r_mat152, 1
  %m_mat189 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 0
  %mat_mat190 = load double*, double** %m_mat189
  %m_r191 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 1
  %r_mat192 = load i32, i32* %m_r191
  %m_c193 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 2
  %c_mat194 = load i32, i32* %m_c193
  %m_mat195 = getelementptr inbounds %matrix_t, %matrix_t* %v148, i32 0, i32 0
  %mat_v196 = load double*, double** %m_mat195
  %m_r197 = getelementptr inbounds %matrix_t, %matrix_t* %v148, i32 0, i32 1
  %r_v198 = load i32, i32* %m_r197
  %m_c199 = getelementptr inbounds %matrix_t, %matrix_t* %v148, i32 0, i32 2
  %c_v200 = load i32, i32* %m_c199
  %i201 = alloca i32
  store i32 0, i32* %i201
  br label %while202

while202:                                         ; preds = %merge224, %merge184
  %i_v230 = load i32, i32* %i201
  %bool_val231 = icmp sle i32 %i_v230, %tmp188
  br i1 %bool_val231, label %while_body203, label %merge229

while_body203:                                    ; preds = %while202
  %j204 = alloca i32
  store i32 0, i32* %j204
  br label %while205

while205:                                         ; preds = %while_body206, %while_body203
  %j_v225 = load i32, i32* %j204
  %bool_val226 = icmp sle i32 %j_v225, %tmp187
  br i1 %bool_val226, label %while_body206, label %merge224

while_body206:                                    ; preds = %while205
  %j_v207 = load i32, i32* %j204
  %i_v208 = load i32, i32* %i201
  %tmp209 = mul i32 %c_mat194, %i_v208
  %index210 = add i32 %j_v207, %tmp209
  %element_ptr211 = getelementptr double, double* %mat_mat190, i32 %index210
  %j_v212 = load i32, i32* %j204
  %tmp213 = sub i32 %j_v212, 0
  %tmp214 = add i32 %tmp213, 0
  %i_v215 = load i32, i32* %i201
  %tmp216 = sub i32 %i_v215, 0
  %tmp217 = add i32 %tmp216, 0
  %tmp218 = mul i32 %c_v200, %tmp217
  %index219 = add i32 %tmp214, %tmp218
  %element_ptr220 = getelementptr double, double* %mat_v196, i32 %index219
  %tmp_element221 = load double, double* %element_ptr220
  store double %tmp_element221, double* %element_ptr211
  %j_v222 = load i32, i32* %j204
  %tmp223 = add i32 %j_v222, 1
  store i32 %tmp223, i32* %j204
  br label %while205

merge224:                                         ; preds = %while205
  %i_v227 = load i32, i32* %i201
  %tmp228 = add i32 %i_v227, 1
  store i32 %tmp228, i32* %i201
  br label %while202

merge229:                                         ; preds = %while202
  %4 = bitcast double* %mat_mat150 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v148 to i8*
  tail call void @free(i8* %5)
  %m_r232 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 1
  %r_mat233 = load i32, i32* %m_r232
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 2
  %c_mat235 = load i32, i32* %m_c234
  %size236 = mul i32 %r_mat233, %c_mat235
  %mallocsize237 = mul i32 %size236, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall238 = tail call i8* @malloc(i32 %mallocsize237)
  %system_mat239 = bitcast i8* %malloccall238 to double*
  %malloccall240 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m241 = bitcast i8* %malloccall240 to %matrix_t*
  %m_mat242 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 0
  store double* %system_mat239, double** %m_mat242
  %m_r243 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 1
  store i32 %r_mat233, i32* %m_r243
  %m_c244 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 2
  store i32 %c_mat235, i32* %m_c244
  %tmp245 = sub i32 %r_mat233, 1
  %tmp246 = sub i32 %c_mat235, 1
  %i247 = alloca i32
  store i32 0, i32* %i247
  br label %while248

while248:                                         ; preds = %merge260, %merge229
  %i_v266 = load i32, i32* %i247
  %bool_val267 = icmp sle i32 %i_v266, %tmp245
  br i1 %bool_val267, label %while_body249, label %merge265

while_body249:                                    ; preds = %while248
  %j250 = alloca i32
  store i32 0, i32* %j250
  br label %while251

while251:                                         ; preds = %while_body252, %while_body249
  %j_v261 = load i32, i32* %j250
  %bool_val262 = icmp sle i32 %j_v261, %tmp246
  br i1 %bool_val262, label %while_body252, label %merge260

while_body252:                                    ; preds = %while251
  %j_v253 = load i32, i32* %j250
  %i_v254 = load i32, i32* %i247
  %tmp255 = mul i32 %c_mat235, %i_v254
  %index256 = add i32 %j_v253, %tmp255
  %element_ptr257 = getelementptr double, double* %system_mat239, i32 %index256
  store double 0.000000e+00, double* %element_ptr257
  %j_v258 = load i32, i32* %j250
  %tmp259 = add i32 %j_v258, 1
  store i32 %tmp259, i32* %j250
  br label %while251

merge260:                                         ; preds = %while251
  %i_v263 = load i32, i32* %i247
  %tmp264 = add i32 %i_v263, 1
  store i32 %tmp264, i32* %i247
  br label %while248

merge265:                                         ; preds = %while248
  %tmp268 = sub i32 %c_mat235, 1
  %tmp269 = sub i32 %r_mat233, 1
  %m_mat270 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 0
  %mat_mat271 = load double*, double** %m_mat270
  %m_r272 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 1
  %r_mat273 = load i32, i32* %m_r272
  %m_c274 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 2
  %c_mat275 = load i32, i32* %m_c274
  %m_mat276 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 0
  %mat_v277 = load double*, double** %m_mat276
  %m_r278 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 1
  %r_v279 = load i32, i32* %m_r278
  %m_c280 = getelementptr inbounds %matrix_t, %matrix_t* %m160, i32 0, i32 2
  %c_v281 = load i32, i32* %m_c280
  %i282 = alloca i32
  store i32 0, i32* %i282
  br label %while283

while283:                                         ; preds = %merge305, %merge265
  %i_v311 = load i32, i32* %i282
  %bool_val312 = icmp sle i32 %i_v311, %tmp269
  br i1 %bool_val312, label %while_body284, label %merge310

while_body284:                                    ; preds = %while283
  %j285 = alloca i32
  store i32 0, i32* %j285
  br label %while286

while286:                                         ; preds = %while_body287, %while_body284
  %j_v306 = load i32, i32* %j285
  %bool_val307 = icmp sle i32 %j_v306, %tmp268
  br i1 %bool_val307, label %while_body287, label %merge305

while_body287:                                    ; preds = %while286
  %j_v288 = load i32, i32* %j285
  %i_v289 = load i32, i32* %i282
  %tmp290 = mul i32 %c_mat275, %i_v289
  %index291 = add i32 %j_v288, %tmp290
  %element_ptr292 = getelementptr double, double* %mat_mat271, i32 %index291
  %j_v293 = load i32, i32* %j285
  %tmp294 = sub i32 %j_v293, 0
  %tmp295 = add i32 %tmp294, 0
  %i_v296 = load i32, i32* %i282
  %tmp297 = sub i32 %i_v296, 0
  %tmp298 = add i32 %tmp297, 0
  %tmp299 = mul i32 %c_v281, %tmp298
  %index300 = add i32 %tmp295, %tmp299
  %element_ptr301 = getelementptr double, double* %mat_v277, i32 %index300
  %tmp_element302 = load double, double* %element_ptr301
  store double %tmp_element302, double* %element_ptr292
  %j_v303 = load i32, i32* %j285
  %tmp304 = add i32 %j_v303, 1
  store i32 %tmp304, i32* %j285
  br label %while286

merge305:                                         ; preds = %while286
  %i_v308 = load i32, i32* %i282
  %tmp309 = add i32 %i_v308, 1
  store i32 %tmp309, i32* %i282
  br label %while283

merge310:                                         ; preds = %while283
  %b313 = load i32, i32* %b
  %a314 = load i32, i32* %a
  %zeros_result315 = call %zero_matrix_t* @zeros(i32 %a314, i32 %b313)
  %v_ptr316 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result315, i32 0, i32 0
  %v317 = load %matrix_t*, %matrix_t** %v_ptr316
  %6 = bitcast %zero_matrix_t* %zeros_result315 to i8*
  tail call void @free(i8* %6)
  %m_mat318 = getelementptr inbounds %matrix_t, %matrix_t* %v317, i32 0, i32 0
  %mat_mat319 = load double*, double** %m_mat318
  %m_r320 = getelementptr inbounds %matrix_t, %matrix_t* %v317, i32 0, i32 1
  %r_mat321 = load i32, i32* %m_r320
  %m_c322 = getelementptr inbounds %matrix_t, %matrix_t* %v317, i32 0, i32 2
  %c_mat323 = load i32, i32* %m_c322
  %size324 = mul i32 %r_mat321, %c_mat323
  %mallocsize325 = mul i32 %size324, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall326 = tail call i8* @malloc(i32 %mallocsize325)
  %system_mat327 = bitcast i8* %malloccall326 to double*
  %malloccall328 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m329 = bitcast i8* %malloccall328 to %matrix_t*
  %m_mat330 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 0
  store double* %system_mat327, double** %m_mat330
  %m_r331 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 1
  store i32 %r_mat321, i32* %m_r331
  %m_c332 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 2
  store i32 %c_mat323, i32* %m_c332
  %tmp333 = sub i32 %r_mat321, 1
  %tmp334 = sub i32 %c_mat323, 1
  %i335 = alloca i32
  store i32 0, i32* %i335
  br label %while336

while336:                                         ; preds = %merge348, %merge310
  %i_v354 = load i32, i32* %i335
  %bool_val355 = icmp sle i32 %i_v354, %tmp333
  br i1 %bool_val355, label %while_body337, label %merge353

while_body337:                                    ; preds = %while336
  %j338 = alloca i32
  store i32 0, i32* %j338
  br label %while339

while339:                                         ; preds = %while_body340, %while_body337
  %j_v349 = load i32, i32* %j338
  %bool_val350 = icmp sle i32 %j_v349, %tmp334
  br i1 %bool_val350, label %while_body340, label %merge348

while_body340:                                    ; preds = %while339
  %j_v341 = load i32, i32* %j338
  %i_v342 = load i32, i32* %i335
  %tmp343 = mul i32 %c_mat323, %i_v342
  %index344 = add i32 %j_v341, %tmp343
  %element_ptr345 = getelementptr double, double* %system_mat327, i32 %index344
  store double 0.000000e+00, double* %element_ptr345
  %j_v346 = load i32, i32* %j338
  %tmp347 = add i32 %j_v346, 1
  store i32 %tmp347, i32* %j338
  br label %while339

merge348:                                         ; preds = %while339
  %i_v351 = load i32, i32* %i335
  %tmp352 = add i32 %i_v351, 1
  store i32 %tmp352, i32* %i335
  br label %while336

merge353:                                         ; preds = %while336
  %tmp356 = sub i32 %c_mat323, 1
  %tmp357 = sub i32 %r_mat321, 1
  %m_mat358 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 0
  %mat_mat359 = load double*, double** %m_mat358
  %m_r360 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 1
  %r_mat361 = load i32, i32* %m_r360
  %m_c362 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 2
  %c_mat363 = load i32, i32* %m_c362
  %m_mat364 = getelementptr inbounds %matrix_t, %matrix_t* %v317, i32 0, i32 0
  %mat_v365 = load double*, double** %m_mat364
  %m_r366 = getelementptr inbounds %matrix_t, %matrix_t* %v317, i32 0, i32 1
  %r_v367 = load i32, i32* %m_r366
  %m_c368 = getelementptr inbounds %matrix_t, %matrix_t* %v317, i32 0, i32 2
  %c_v369 = load i32, i32* %m_c368
  %i370 = alloca i32
  store i32 0, i32* %i370
  br label %while371

while371:                                         ; preds = %merge393, %merge353
  %i_v399 = load i32, i32* %i370
  %bool_val400 = icmp sle i32 %i_v399, %tmp357
  br i1 %bool_val400, label %while_body372, label %merge398

while_body372:                                    ; preds = %while371
  %j373 = alloca i32
  store i32 0, i32* %j373
  br label %while374

while374:                                         ; preds = %while_body375, %while_body372
  %j_v394 = load i32, i32* %j373
  %bool_val395 = icmp sle i32 %j_v394, %tmp356
  br i1 %bool_val395, label %while_body375, label %merge393

while_body375:                                    ; preds = %while374
  %j_v376 = load i32, i32* %j373
  %i_v377 = load i32, i32* %i370
  %tmp378 = mul i32 %c_mat363, %i_v377
  %index379 = add i32 %j_v376, %tmp378
  %element_ptr380 = getelementptr double, double* %mat_mat359, i32 %index379
  %j_v381 = load i32, i32* %j373
  %tmp382 = sub i32 %j_v381, 0
  %tmp383 = add i32 %tmp382, 0
  %i_v384 = load i32, i32* %i370
  %tmp385 = sub i32 %i_v384, 0
  %tmp386 = add i32 %tmp385, 0
  %tmp387 = mul i32 %c_v369, %tmp386
  %index388 = add i32 %tmp383, %tmp387
  %element_ptr389 = getelementptr double, double* %mat_v365, i32 %index388
  %tmp_element390 = load double, double* %element_ptr389
  store double %tmp_element390, double* %element_ptr380
  %j_v391 = load i32, i32* %j373
  %tmp392 = add i32 %j_v391, 1
  store i32 %tmp392, i32* %j373
  br label %while374

merge393:                                         ; preds = %while374
  %i_v396 = load i32, i32* %i370
  %tmp397 = add i32 %i_v396, 1
  store i32 %tmp397, i32* %i370
  br label %while371

merge398:                                         ; preds = %while371
  %7 = bitcast double* %mat_mat319 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v317 to i8*
  tail call void @free(i8* %8)
  %m_r401 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 1
  %r_mat402 = load i32, i32* %m_r401
  %m_c403 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 2
  %c_mat404 = load i32, i32* %m_c403
  %size405 = mul i32 %r_mat402, %c_mat404
  %mallocsize406 = mul i32 %size405, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall407 = tail call i8* @malloc(i32 %mallocsize406)
  %system_mat408 = bitcast i8* %malloccall407 to double*
  %malloccall409 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m410 = bitcast i8* %malloccall409 to %matrix_t*
  %m_mat411 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 0
  store double* %system_mat408, double** %m_mat411
  %m_r412 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 1
  store i32 %r_mat402, i32* %m_r412
  %m_c413 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 2
  store i32 %c_mat404, i32* %m_c413
  %tmp414 = sub i32 %r_mat402, 1
  %tmp415 = sub i32 %c_mat404, 1
  %i416 = alloca i32
  store i32 0, i32* %i416
  br label %while417

while417:                                         ; preds = %merge429, %merge398
  %i_v435 = load i32, i32* %i416
  %bool_val436 = icmp sle i32 %i_v435, %tmp414
  br i1 %bool_val436, label %while_body418, label %merge434

while_body418:                                    ; preds = %while417
  %j419 = alloca i32
  store i32 0, i32* %j419
  br label %while420

while420:                                         ; preds = %while_body421, %while_body418
  %j_v430 = load i32, i32* %j419
  %bool_val431 = icmp sle i32 %j_v430, %tmp415
  br i1 %bool_val431, label %while_body421, label %merge429

while_body421:                                    ; preds = %while420
  %j_v422 = load i32, i32* %j419
  %i_v423 = load i32, i32* %i416
  %tmp424 = mul i32 %c_mat404, %i_v423
  %index425 = add i32 %j_v422, %tmp424
  %element_ptr426 = getelementptr double, double* %system_mat408, i32 %index425
  store double 0.000000e+00, double* %element_ptr426
  %j_v427 = load i32, i32* %j419
  %tmp428 = add i32 %j_v427, 1
  store i32 %tmp428, i32* %j419
  br label %while420

merge429:                                         ; preds = %while420
  %i_v432 = load i32, i32* %i416
  %tmp433 = add i32 %i_v432, 1
  store i32 %tmp433, i32* %i416
  br label %while417

merge434:                                         ; preds = %while417
  %tmp437 = sub i32 %c_mat404, 1
  %tmp438 = sub i32 %r_mat402, 1
  %m_mat439 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 0
  %mat_mat440 = load double*, double** %m_mat439
  %m_r441 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 1
  %r_mat442 = load i32, i32* %m_r441
  %m_c443 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 2
  %c_mat444 = load i32, i32* %m_c443
  %m_mat445 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 0
  %mat_v446 = load double*, double** %m_mat445
  %m_r447 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 1
  %r_v448 = load i32, i32* %m_r447
  %m_c449 = getelementptr inbounds %matrix_t, %matrix_t* %m329, i32 0, i32 2
  %c_v450 = load i32, i32* %m_c449
  %i451 = alloca i32
  store i32 0, i32* %i451
  br label %while452

while452:                                         ; preds = %merge474, %merge434
  %i_v480 = load i32, i32* %i451
  %bool_val481 = icmp sle i32 %i_v480, %tmp438
  br i1 %bool_val481, label %while_body453, label %merge479

while_body453:                                    ; preds = %while452
  %j454 = alloca i32
  store i32 0, i32* %j454
  br label %while455

while455:                                         ; preds = %while_body456, %while_body453
  %j_v475 = load i32, i32* %j454
  %bool_val476 = icmp sle i32 %j_v475, %tmp437
  br i1 %bool_val476, label %while_body456, label %merge474

while_body456:                                    ; preds = %while455
  %j_v457 = load i32, i32* %j454
  %i_v458 = load i32, i32* %i451
  %tmp459 = mul i32 %c_mat444, %i_v458
  %index460 = add i32 %j_v457, %tmp459
  %element_ptr461 = getelementptr double, double* %mat_mat440, i32 %index460
  %j_v462 = load i32, i32* %j454
  %tmp463 = sub i32 %j_v462, 0
  %tmp464 = add i32 %tmp463, 0
  %i_v465 = load i32, i32* %i451
  %tmp466 = sub i32 %i_v465, 0
  %tmp467 = add i32 %tmp466, 0
  %tmp468 = mul i32 %c_v450, %tmp467
  %index469 = add i32 %tmp464, %tmp468
  %element_ptr470 = getelementptr double, double* %mat_v446, i32 %index469
  %tmp_element471 = load double, double* %element_ptr470
  store double %tmp_element471, double* %element_ptr461
  %j_v472 = load i32, i32* %j454
  %tmp473 = add i32 %j_v472, 1
  store i32 %tmp473, i32* %j454
  br label %while455

merge474:                                         ; preds = %while455
  %i_v477 = load i32, i32* %i451
  %tmp478 = add i32 %i_v477, 1
  store i32 %tmp478, i32* %i451
  br label %while452

merge479:                                         ; preds = %while452
  %m_r482 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat483 = load i32, i32* %m_r482
  %m_c484 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat485 = load i32, i32* %m_c484
  br i1 false, label %then, label %else

merge486:                                         ; preds = %else, %then
  %tmp487 = sub i32 %r_mat483, 1
  %tmp492 = icmp slt i32 %tmp487, 0
  br i1 %tmp492, label %then489, label %else491

then:                                             ; preds = %merge479
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge486

else:                                             ; preds = %merge479
  br label %merge486

merge488:                                         ; preds = %else491, %then489
  %a493 = load i32, i32* %a
  %tmp494 = sub i32 %a493, 1
  %tmp499 = icmp sgt i32 0, %tmp494
  br i1 %tmp499, label %then496, label %else498

then489:                                          ; preds = %merge486
  %printf490 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge488

else491:                                          ; preds = %merge486
  br label %merge488

merge495:                                         ; preds = %else498, %then496
  %tmp500 = sub i32 %r_mat483, 1
  %tmp505 = icmp slt i32 %tmp500, %tmp494
  br i1 %tmp505, label %then502, label %else504

then496:                                          ; preds = %merge488
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge495

else498:                                          ; preds = %merge488
  br label %merge495

merge501:                                         ; preds = %else504, %then502
  br i1 false, label %then507, label %else509

then502:                                          ; preds = %merge495
  %printf503 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge501

else504:                                          ; preds = %merge495
  br label %merge501

merge506:                                         ; preds = %else509, %then507
  %tmp510 = sub i32 %c_mat485, 1
  %tmp515 = icmp slt i32 %tmp510, 0
  br i1 %tmp515, label %then512, label %else514

then507:                                          ; preds = %merge501
  %printf508 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge506

else509:                                          ; preds = %merge501
  br label %merge506

merge511:                                         ; preds = %else514, %then512
  %b516 = load i32, i32* %b
  %tmp517 = sub i32 %b516, 1
  %tmp522 = icmp sgt i32 0, %tmp517
  br i1 %tmp522, label %then519, label %else521

then512:                                          ; preds = %merge506
  %printf513 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge511

else514:                                          ; preds = %merge506
  br label %merge511

merge518:                                         ; preds = %else521, %then519
  %tmp523 = sub i32 %c_mat485, 1
  %tmp528 = icmp slt i32 %tmp523, %tmp517
  br i1 %tmp528, label %then525, label %else527

then519:                                          ; preds = %merge511
  %printf520 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge518

else521:                                          ; preds = %merge511
  br label %merge518

merge524:                                         ; preds = %else527, %then525
  %tmp529 = sub i32 %tmp494, 0
  %tmp530 = sub i32 %tmp517, 0
  %tmp531 = add i32 %tmp530, 1
  %tmp532 = add i32 %tmp529, 1
  %size533 = mul i32 %tmp532, %tmp531
  %mallocsize534 = mul i32 %size533, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall535 = tail call i8* @malloc(i32 %mallocsize534)
  %system_mat536 = bitcast i8* %malloccall535 to double*
  %malloccall537 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m538 = bitcast i8* %malloccall537 to %matrix_t*
  %m_mat539 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 0
  store double* %system_mat536, double** %m_mat539
  %m_r540 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 1
  store i32 %tmp532, i32* %m_r540
  %m_c541 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 2
  store i32 %tmp531, i32* %m_c541
  %tmp542 = sub i32 %tmp532, 1
  %tmp543 = sub i32 %tmp531, 1
  %i544 = alloca i32
  store i32 0, i32* %i544
  br label %while545

then525:                                          ; preds = %merge518
  %printf526 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge524

else527:                                          ; preds = %merge518
  br label %merge524

while545:                                         ; preds = %merge557, %merge524
  %i_v563 = load i32, i32* %i544
  %bool_val564 = icmp sle i32 %i_v563, %tmp542
  br i1 %bool_val564, label %while_body546, label %merge562

while_body546:                                    ; preds = %while545
  %j547 = alloca i32
  store i32 0, i32* %j547
  br label %while548

while548:                                         ; preds = %while_body549, %while_body546
  %j_v558 = load i32, i32* %j547
  %bool_val559 = icmp sle i32 %j_v558, %tmp543
  br i1 %bool_val559, label %while_body549, label %merge557

while_body549:                                    ; preds = %while548
  %j_v550 = load i32, i32* %j547
  %i_v551 = load i32, i32* %i544
  %tmp552 = mul i32 %tmp531, %i_v551
  %index553 = add i32 %j_v550, %tmp552
  %element_ptr554 = getelementptr double, double* %system_mat536, i32 %index553
  store double 0.000000e+00, double* %element_ptr554
  %j_v555 = load i32, i32* %j547
  %tmp556 = add i32 %j_v555, 1
  store i32 %tmp556, i32* %j547
  br label %while548

merge557:                                         ; preds = %while548
  %i_v560 = load i32, i32* %i544
  %tmp561 = add i32 %i_v560, 1
  store i32 %tmp561, i32* %i544
  br label %while545

merge562:                                         ; preds = %while545
  %m_mat565 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 0
  %mat_mat566 = load double*, double** %m_mat565
  %m_r567 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 1
  %r_mat568 = load i32, i32* %m_r567
  %m_c569 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 2
  %c_mat570 = load i32, i32* %m_c569
  %m_mat571 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v572 = load double*, double** %m_mat571
  %m_r573 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v574 = load i32, i32* %m_r573
  %m_c575 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v576 = load i32, i32* %m_c575
  %i577 = alloca i32
  store i32 0, i32* %i577
  br label %while578

while578:                                         ; preds = %merge600, %merge562
  %i_v606 = load i32, i32* %i577
  %bool_val607 = icmp sle i32 %i_v606, %tmp529
  br i1 %bool_val607, label %while_body579, label %merge605

while_body579:                                    ; preds = %while578
  %j580 = alloca i32
  store i32 0, i32* %j580
  br label %while581

while581:                                         ; preds = %while_body582, %while_body579
  %j_v601 = load i32, i32* %j580
  %bool_val602 = icmp sle i32 %j_v601, %tmp530
  br i1 %bool_val602, label %while_body582, label %merge600

while_body582:                                    ; preds = %while581
  %j_v583 = load i32, i32* %j580
  %i_v584 = load i32, i32* %i577
  %tmp585 = mul i32 %c_mat570, %i_v584
  %index586 = add i32 %j_v583, %tmp585
  %element_ptr587 = getelementptr double, double* %mat_mat566, i32 %index586
  %j_v588 = load i32, i32* %j580
  %tmp589 = sub i32 %j_v588, 0
  %tmp590 = add i32 %tmp589, 0
  %i_v591 = load i32, i32* %i577
  %tmp592 = sub i32 %i_v591, 0
  %tmp593 = add i32 %tmp592, 0
  %tmp594 = mul i32 %c_v576, %tmp593
  %index595 = add i32 %tmp590, %tmp594
  %element_ptr596 = getelementptr double, double* %mat_v572, i32 %index595
  %tmp_element597 = load double, double* %element_ptr596
  store double %tmp_element597, double* %element_ptr587
  %j_v598 = load i32, i32* %j580
  %tmp599 = add i32 %j_v598, 1
  store i32 %tmp599, i32* %j580
  br label %while581

merge600:                                         ; preds = %while581
  %i_v603 = load i32, i32* %i577
  %tmp604 = add i32 %i_v603, 1
  store i32 %tmp604, i32* %i577
  br label %while578

merge605:                                         ; preds = %while578
  %m_r608 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 1
  %r_mat609 = load i32, i32* %m_r608
  %m_c610 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 2
  %c_mat611 = load i32, i32* %m_c610
  br i1 false, label %then613, label %else615

merge612:                                         ; preds = %else615, %then613
  %tmp616 = sub i32 %r_mat609, 1
  %tmp621 = icmp slt i32 %tmp616, 1
  br i1 %tmp621, label %then618, label %else620

then613:                                          ; preds = %merge605
  %printf614 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge612

else615:                                          ; preds = %merge605
  br label %merge612

merge617:                                         ; preds = %else620, %then618
  %a622 = load i32, i32* %a
  %tmp627 = icmp sgt i32 0, %a622
  br i1 %tmp627, label %then624, label %else626

then618:                                          ; preds = %merge612
  %printf619 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge617

else620:                                          ; preds = %merge612
  br label %merge617

merge623:                                         ; preds = %else626, %then624
  %tmp628 = sub i32 %r_mat609, 1
  %tmp633 = icmp slt i32 %tmp628, %a622
  br i1 %tmp633, label %then630, label %else632

then624:                                          ; preds = %merge617
  %printf625 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge623

else626:                                          ; preds = %merge617
  br label %merge623

merge629:                                         ; preds = %else632, %then630
  br i1 false, label %then635, label %else637

then630:                                          ; preds = %merge623
  %printf631 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge629

else632:                                          ; preds = %merge623
  br label %merge629

merge634:                                         ; preds = %else637, %then635
  %tmp638 = sub i32 %c_mat611, 1
  %tmp643 = icmp slt i32 %tmp638, 1
  br i1 %tmp643, label %then640, label %else642

then635:                                          ; preds = %merge629
  %printf636 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge634

else637:                                          ; preds = %merge629
  br label %merge634

merge639:                                         ; preds = %else642, %then640
  %b644 = load i32, i32* %b
  %tmp649 = icmp sgt i32 0, %b644
  br i1 %tmp649, label %then646, label %else648

then640:                                          ; preds = %merge634
  %printf641 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge639

else642:                                          ; preds = %merge634
  br label %merge639

merge645:                                         ; preds = %else648, %then646
  %tmp650 = sub i32 %c_mat611, 1
  %tmp655 = icmp slt i32 %tmp650, %b644
  br i1 %tmp655, label %then652, label %else654

then646:                                          ; preds = %merge639
  %printf647 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge645

else648:                                          ; preds = %merge639
  br label %merge645

merge651:                                         ; preds = %else654, %then652
  %tmp656 = sub i32 %a622, 1
  %tmp657 = add i32 %tmp656, 1
  %m_r658 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 1
  %r_mat659 = load i32, i32* %m_r658
  %tmp664 = icmp ne i32 %tmp657, %r_mat659
  br i1 %tmp664, label %then661, label %else663

then652:                                          ; preds = %merge645
  %printf653 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge651

else654:                                          ; preds = %merge645
  br label %merge651

merge660:                                         ; preds = %else663, %then661
  %tmp665 = sub i32 %b644, 1
  %tmp666 = add i32 %tmp665, 1
  %m_r667 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 2
  %r_mat668 = load i32, i32* %m_r667
  %tmp673 = icmp ne i32 %tmp666, %r_mat668
  br i1 %tmp673, label %then670, label %else672

then661:                                          ; preds = %merge651
  %printf662 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge660

else663:                                          ; preds = %merge651
  br label %merge660

merge669:                                         ; preds = %else672, %then670
  %m_mat674 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 0
  %mat_mat675 = load double*, double** %m_mat674
  %m_r676 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 1
  %r_mat677 = load i32, i32* %m_r676
  %m_c678 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 2
  %c_mat679 = load i32, i32* %m_c678
  %m_mat680 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 0
  %mat_v681 = load double*, double** %m_mat680
  %m_r682 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 1
  %r_v683 = load i32, i32* %m_r682
  %m_c684 = getelementptr inbounds %matrix_t, %matrix_t* %m538, i32 0, i32 2
  %c_v685 = load i32, i32* %m_c684
  %i686 = alloca i32
  store i32 1, i32* %i686
  br label %while687

then670:                                          ; preds = %merge660
  %printf671 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge669

else672:                                          ; preds = %merge660
  br label %merge669

while687:                                         ; preds = %merge709, %merge669
  %i_v715 = load i32, i32* %i686
  %bool_val716 = icmp sle i32 %i_v715, %a622
  br i1 %bool_val716, label %while_body688, label %merge714

while_body688:                                    ; preds = %while687
  %j689 = alloca i32
  store i32 1, i32* %j689
  br label %while690

while690:                                         ; preds = %while_body691, %while_body688
  %j_v710 = load i32, i32* %j689
  %bool_val711 = icmp sle i32 %j_v710, %b644
  br i1 %bool_val711, label %while_body691, label %merge709

while_body691:                                    ; preds = %while690
  %j_v692 = load i32, i32* %j689
  %i_v693 = load i32, i32* %i686
  %tmp694 = mul i32 %c_mat679, %i_v693
  %index695 = add i32 %j_v692, %tmp694
  %element_ptr696 = getelementptr double, double* %mat_mat675, i32 %index695
  %j_v697 = load i32, i32* %j689
  %tmp698 = sub i32 %j_v697, 1
  %tmp699 = add i32 %tmp698, 0
  %i_v700 = load i32, i32* %i686
  %tmp701 = sub i32 %i_v700, 1
  %tmp702 = add i32 %tmp701, 0
  %tmp703 = mul i32 %c_v685, %tmp702
  %index704 = add i32 %tmp699, %tmp703
  %element_ptr705 = getelementptr double, double* %mat_v681, i32 %index704
  %tmp_element706 = load double, double* %element_ptr705
  store double %tmp_element706, double* %element_ptr696
  %j_v707 = load i32, i32* %j689
  %tmp708 = add i32 %j_v707, 1
  store i32 %tmp708, i32* %j689
  br label %while690

merge709:                                         ; preds = %while690
  %i_v712 = load i32, i32* %i686
  %tmp713 = add i32 %i_v712, 1
  store i32 %tmp713, i32* %i686
  br label %while687

merge714:                                         ; preds = %while687
  %i717 = alloca i32
  %tmp718 = load i32, i32* %i717
  store i32 0, i32* %i717
  %j719 = alloca i32
  %tmp720 = load i32, i32* %j719
  store i32 0, i32* %j719
  %i721 = load i32, i32* %i717
  %a722 = load i32, i32* %a
  %tmp723 = icmp slt i32 %i721, %a722
  %tmp724 = load i32, i32* %i717
  store i32 0, i32* %i717
  br label %while725

while725:                                         ; preds = %merge930, %merge714
  %i938 = load i32, i32* %i717
  %a939 = load i32, i32* %a
  %tmp940 = icmp slt i32 %i938, %a939
  br i1 %tmp940, label %while_body726, label %merge937

while_body726:                                    ; preds = %while725
  %j727 = load i32, i32* %j719
  %b728 = load i32, i32* %b
  %tmp729 = icmp slt i32 %j727, %b728
  %tmp730 = load i32, i32* %j719
  store i32 0, i32* %j719
  br label %while731

while731:                                         ; preds = %merge918, %while_body726
  %j931 = load i32, i32* %j719
  %b932 = load i32, i32* %b
  %tmp933 = icmp slt i32 %j931, %b932
  br i1 %tmp933, label %while_body732, label %merge930

while_body732:                                    ; preds = %while731
  %k = alloca double
  %tmp733 = load double, double* %k
  store double 0.000000e+00, double* %k
  %m_r734 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 1
  %r_mat735 = load i32, i32* %m_r734
  %m_c736 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 2
  %c_mat737 = load i32, i32* %m_c736
  %i738 = load i32, i32* %i717
  %tmp743 = icmp sgt i32 0, %i738
  br i1 %tmp743, label %then740, label %else742

merge739:                                         ; preds = %else742, %then740
  %tmp744 = sub i32 %r_mat735, 1
  %tmp749 = icmp slt i32 %tmp744, %i738
  br i1 %tmp749, label %then746, label %else748

then740:                                          ; preds = %while_body732
  %printf741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge739

else742:                                          ; preds = %while_body732
  br label %merge739

merge745:                                         ; preds = %else748, %then746
  %i750 = load i32, i32* %i717
  %tmp751 = add i32 %i750, 2
  %tmp756 = icmp sgt i32 0, %tmp751
  br i1 %tmp756, label %then753, label %else755

then746:                                          ; preds = %merge739
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge739
  br label %merge745

merge752:                                         ; preds = %else755, %then753
  %tmp757 = sub i32 %r_mat735, 1
  %tmp762 = icmp slt i32 %tmp757, %tmp751
  br i1 %tmp762, label %then759, label %else761

then753:                                          ; preds = %merge745
  %printf754 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge752

else755:                                          ; preds = %merge745
  br label %merge752

merge758:                                         ; preds = %else761, %then759
  %j763 = load i32, i32* %j719
  %tmp768 = icmp sgt i32 0, %j763
  br i1 %tmp768, label %then765, label %else767

then759:                                          ; preds = %merge752
  %printf760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge758

else761:                                          ; preds = %merge752
  br label %merge758

merge764:                                         ; preds = %else767, %then765
  %tmp769 = sub i32 %c_mat737, 1
  %tmp774 = icmp slt i32 %tmp769, %j763
  br i1 %tmp774, label %then771, label %else773

then765:                                          ; preds = %merge758
  %printf766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge764

else767:                                          ; preds = %merge758
  br label %merge764

merge770:                                         ; preds = %else773, %then771
  %j775 = load i32, i32* %j719
  %tmp776 = add i32 %j775, 2
  %tmp781 = icmp sgt i32 0, %tmp776
  br i1 %tmp781, label %then778, label %else780

then771:                                          ; preds = %merge764
  %printf772 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge770

else773:                                          ; preds = %merge764
  br label %merge770

merge777:                                         ; preds = %else780, %then778
  %tmp782 = sub i32 %c_mat737, 1
  %tmp787 = icmp slt i32 %tmp782, %tmp776
  br i1 %tmp787, label %then784, label %else786

then778:                                          ; preds = %merge770
  %printf779 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge777

else780:                                          ; preds = %merge770
  br label %merge777

merge783:                                         ; preds = %else786, %then784
  %tmp788 = sub i32 %tmp751, %i738
  %tmp789 = sub i32 %tmp776, %j763
  %tmp790 = add i32 %tmp789, 1
  %tmp791 = add i32 %tmp788, 1
  %size792 = mul i32 %tmp791, %tmp790
  %mallocsize793 = mul i32 %size792, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall794 = tail call i8* @malloc(i32 %mallocsize793)
  %system_mat795 = bitcast i8* %malloccall794 to double*
  %malloccall796 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m797 = bitcast i8* %malloccall796 to %matrix_t*
  %m_mat798 = getelementptr inbounds %matrix_t, %matrix_t* %m797, i32 0, i32 0
  store double* %system_mat795, double** %m_mat798
  %m_r799 = getelementptr inbounds %matrix_t, %matrix_t* %m797, i32 0, i32 1
  store i32 %tmp791, i32* %m_r799
  %m_c800 = getelementptr inbounds %matrix_t, %matrix_t* %m797, i32 0, i32 2
  store i32 %tmp790, i32* %m_c800
  %tmp801 = sub i32 %tmp791, 1
  %tmp802 = sub i32 %tmp790, 1
  %i803 = alloca i32
  store i32 0, i32* %i803
  br label %while804

then784:                                          ; preds = %merge777
  %printf785 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge783

else786:                                          ; preds = %merge777
  br label %merge783

while804:                                         ; preds = %merge816, %merge783
  %i_v822 = load i32, i32* %i803
  %bool_val823 = icmp sle i32 %i_v822, %tmp801
  br i1 %bool_val823, label %while_body805, label %merge821

while_body805:                                    ; preds = %while804
  %j806 = alloca i32
  store i32 0, i32* %j806
  br label %while807

while807:                                         ; preds = %while_body808, %while_body805
  %j_v817 = load i32, i32* %j806
  %bool_val818 = icmp sle i32 %j_v817, %tmp802
  br i1 %bool_val818, label %while_body808, label %merge816

while_body808:                                    ; preds = %while807
  %j_v809 = load i32, i32* %j806
  %i_v810 = load i32, i32* %i803
  %tmp811 = mul i32 %tmp790, %i_v810
  %index812 = add i32 %j_v809, %tmp811
  %element_ptr813 = getelementptr double, double* %system_mat795, i32 %index812
  store double 0.000000e+00, double* %element_ptr813
  %j_v814 = load i32, i32* %j806
  %tmp815 = add i32 %j_v814, 1
  store i32 %tmp815, i32* %j806
  br label %while807

merge816:                                         ; preds = %while807
  %i_v819 = load i32, i32* %i803
  %tmp820 = add i32 %i_v819, 1
  store i32 %tmp820, i32* %i803
  br label %while804

merge821:                                         ; preds = %while804
  %m_mat824 = getelementptr inbounds %matrix_t, %matrix_t* %m797, i32 0, i32 0
  %mat_mat825 = load double*, double** %m_mat824
  %m_r826 = getelementptr inbounds %matrix_t, %matrix_t* %m797, i32 0, i32 1
  %r_mat827 = load i32, i32* %m_r826
  %m_c828 = getelementptr inbounds %matrix_t, %matrix_t* %m797, i32 0, i32 2
  %c_mat829 = load i32, i32* %m_c828
  %m_mat830 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 0
  %mat_v831 = load double*, double** %m_mat830
  %m_r832 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 1
  %r_v833 = load i32, i32* %m_r832
  %m_c834 = getelementptr inbounds %matrix_t, %matrix_t* %m241, i32 0, i32 2
  %c_v835 = load i32, i32* %m_c834
  %i836 = alloca i32
  store i32 0, i32* %i836
  br label %while837

while837:                                         ; preds = %merge859, %merge821
  %i_v865 = load i32, i32* %i836
  %bool_val866 = icmp sle i32 %i_v865, %tmp788
  br i1 %bool_val866, label %while_body838, label %merge864

while_body838:                                    ; preds = %while837
  %j839 = alloca i32
  store i32 0, i32* %j839
  br label %while840

while840:                                         ; preds = %while_body841, %while_body838
  %j_v860 = load i32, i32* %j839
  %bool_val861 = icmp sle i32 %j_v860, %tmp789
  br i1 %bool_val861, label %while_body841, label %merge859

while_body841:                                    ; preds = %while840
  %j_v842 = load i32, i32* %j839
  %i_v843 = load i32, i32* %i836
  %tmp844 = mul i32 %c_mat829, %i_v843
  %index845 = add i32 %j_v842, %tmp844
  %element_ptr846 = getelementptr double, double* %mat_mat825, i32 %index845
  %j_v847 = load i32, i32* %j839
  %tmp848 = sub i32 %j_v847, 0
  %tmp849 = add i32 %tmp848, %j763
  %i_v850 = load i32, i32* %i836
  %tmp851 = sub i32 %i_v850, 0
  %tmp852 = add i32 %tmp851, %i738
  %tmp853 = mul i32 %c_v835, %tmp852
  %index854 = add i32 %tmp849, %tmp853
  %element_ptr855 = getelementptr double, double* %mat_v831, i32 %index854
  %tmp_element856 = load double, double* %element_ptr855
  store double %tmp_element856, double* %element_ptr846
  %j_v857 = load i32, i32* %j839
  %tmp858 = add i32 %j_v857, 1
  store i32 %tmp858, i32* %j839
  br label %while840

merge859:                                         ; preds = %while840
  %i_v862 = load i32, i32* %i836
  %tmp863 = add i32 %i_v862, 1
  store i32 %tmp863, i32* %i836
  br label %while837

merge864:                                         ; preds = %while837
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m797, %matrix_t* %m65)
  %v_ptr867 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v868 = load double, double* %v_ptr867
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp869 = load double, double* %k
  store double %v868, double* %k
  %k870 = load double, double* %k
  %m_r871 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 1
  %r_mat872 = load i32, i32* %m_r871
  %m_c873 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 2
  %c_mat874 = load i32, i32* %m_c873
  %i875 = load i32, i32* %i717
  %tmp880 = icmp sgt i32 0, %i875
  br i1 %tmp880, label %then877, label %else879

merge876:                                         ; preds = %else879, %then877
  %tmp881 = sub i32 %r_mat872, 1
  %tmp886 = icmp slt i32 %tmp881, %i875
  br i1 %tmp886, label %then883, label %else885

then877:                                          ; preds = %merge864
  %printf878 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge876

else879:                                          ; preds = %merge864
  br label %merge876

merge882:                                         ; preds = %else885, %then883
  %i887 = load i32, i32* %i717
  %tmp892 = icmp sgt i32 0, %i887
  br i1 %tmp892, label %then889, label %else891

then883:                                          ; preds = %merge876
  %printf884 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge882

else885:                                          ; preds = %merge876
  br label %merge882

merge888:                                         ; preds = %else891, %then889
  %tmp893 = sub i32 %r_mat872, 1
  %tmp898 = icmp slt i32 %tmp893, %i887
  br i1 %tmp898, label %then895, label %else897

then889:                                          ; preds = %merge882
  %printf890 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge888

else891:                                          ; preds = %merge882
  br label %merge888

merge894:                                         ; preds = %else897, %then895
  %j899 = load i32, i32* %j719
  %tmp904 = icmp sgt i32 0, %j899
  br i1 %tmp904, label %then901, label %else903

then895:                                          ; preds = %merge888
  %printf896 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge894

else897:                                          ; preds = %merge888
  br label %merge894

merge900:                                         ; preds = %else903, %then901
  %tmp905 = sub i32 %c_mat874, 1
  %tmp910 = icmp slt i32 %tmp905, %j899
  br i1 %tmp910, label %then907, label %else909

then901:                                          ; preds = %merge894
  %printf902 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge900

else903:                                          ; preds = %merge894
  br label %merge900

merge906:                                         ; preds = %else909, %then907
  %j911 = load i32, i32* %j719
  %tmp916 = icmp sgt i32 0, %j911
  br i1 %tmp916, label %then913, label %else915

then907:                                          ; preds = %merge900
  %printf908 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge906

else909:                                          ; preds = %merge900
  br label %merge906

merge912:                                         ; preds = %else915, %then913
  %tmp917 = sub i32 %c_mat874, 1
  %tmp922 = icmp slt i32 %tmp917, %j911
  br i1 %tmp922, label %then919, label %else921

then913:                                          ; preds = %merge906
  %printf914 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge912

else915:                                          ; preds = %merge906
  br label %merge912

merge918:                                         ; preds = %else921, %then919
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 0
  %mat923 = load double*, double** %mat
  %tmp924 = mul i32 %c_mat874, %i875
  %index925 = add i32 %j899, %tmp924
  %element_ptr926 = getelementptr double, double* %mat923, i32 %index925
  store double %k870, double* %element_ptr926
  %j927 = load i32, i32* %j719
  %tmp928 = add i32 %j927, 1
  %tmp929 = load i32, i32* %j719
  store i32 %tmp928, i32* %j719
  br label %while731

then919:                                          ; preds = %merge912
  %printf920 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge918

else921:                                          ; preds = %merge912
  br label %merge918

merge930:                                         ; preds = %while731
  %i934 = load i32, i32* %i717
  %tmp935 = add i32 %i934, 1
  %tmp936 = load i32, i32* %i717
  store i32 %tmp935, i32* %i717
  br label %while725

merge937:                                         ; preds = %while725
  %malloccall941 = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall941 to %return_t.0*
  %m_r942 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 1
  %r_mat943 = load i32, i32* %m_r942
  %m_c944 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 2
  %c_mat945 = load i32, i32* %m_c944
  %size946 = mul i32 %r_mat943, %c_mat945
  %mallocsize947 = mul i32 %size946, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall948 = tail call i8* @malloc(i32 %mallocsize947)
  %system_mat949 = bitcast i8* %malloccall948 to double*
  %malloccall950 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m951 = bitcast i8* %malloccall950 to %matrix_t*
  %m_mat952 = getelementptr inbounds %matrix_t, %matrix_t* %m951, i32 0, i32 0
  store double* %system_mat949, double** %m_mat952
  %m_r953 = getelementptr inbounds %matrix_t, %matrix_t* %m951, i32 0, i32 1
  store i32 %r_mat943, i32* %m_r953
  %m_c954 = getelementptr inbounds %matrix_t, %matrix_t* %m951, i32 0, i32 2
  store i32 %c_mat945, i32* %m_c954
  %tmp955 = sub i32 %r_mat943, 1
  %tmp956 = sub i32 %c_mat945, 1
  %i957 = alloca i32
  store i32 0, i32* %i957
  br label %while958

while958:                                         ; preds = %merge970, %merge937
  %i_v976 = load i32, i32* %i957
  %bool_val977 = icmp sle i32 %i_v976, %tmp955
  br i1 %bool_val977, label %while_body959, label %merge975

while_body959:                                    ; preds = %while958
  %j960 = alloca i32
  store i32 0, i32* %j960
  br label %while961

while961:                                         ; preds = %while_body962, %while_body959
  %j_v971 = load i32, i32* %j960
  %bool_val972 = icmp sle i32 %j_v971, %tmp956
  br i1 %bool_val972, label %while_body962, label %merge970

while_body962:                                    ; preds = %while961
  %j_v963 = load i32, i32* %j960
  %i_v964 = load i32, i32* %i957
  %tmp965 = mul i32 %c_mat945, %i_v964
  %index966 = add i32 %j_v963, %tmp965
  %element_ptr967 = getelementptr double, double* %system_mat949, i32 %index966
  store double 0.000000e+00, double* %element_ptr967
  %j_v968 = load i32, i32* %j960
  %tmp969 = add i32 %j_v968, 1
  store i32 %tmp969, i32* %j960
  br label %while961

merge970:                                         ; preds = %while961
  %i_v973 = load i32, i32* %i957
  %tmp974 = add i32 %i_v973, 1
  store i32 %tmp974, i32* %i957
  br label %while958

merge975:                                         ; preds = %while958
  %tmp978 = sub i32 %c_mat945, 1
  %tmp979 = sub i32 %r_mat943, 1
  %m_mat980 = getelementptr inbounds %matrix_t, %matrix_t* %m951, i32 0, i32 0
  %mat_mat981 = load double*, double** %m_mat980
  %m_r982 = getelementptr inbounds %matrix_t, %matrix_t* %m951, i32 0, i32 1
  %r_mat983 = load i32, i32* %m_r982
  %m_c984 = getelementptr inbounds %matrix_t, %matrix_t* %m951, i32 0, i32 2
  %c_mat985 = load i32, i32* %m_c984
  %m_mat986 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 0
  %mat_v987 = load double*, double** %m_mat986
  %m_r988 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 1
  %r_v989 = load i32, i32* %m_r988
  %m_c990 = getelementptr inbounds %matrix_t, %matrix_t* %m410, i32 0, i32 2
  %c_v991 = load i32, i32* %m_c990
  %i992 = alloca i32
  store i32 0, i32* %i992
  br label %while993

while993:                                         ; preds = %merge1015, %merge975
  %i_v1021 = load i32, i32* %i992
  %bool_val1022 = icmp sle i32 %i_v1021, %tmp979
  br i1 %bool_val1022, label %while_body994, label %merge1020

while_body994:                                    ; preds = %while993
  %j995 = alloca i32
  store i32 0, i32* %j995
  br label %while996

while996:                                         ; preds = %while_body997, %while_body994
  %j_v1016 = load i32, i32* %j995
  %bool_val1017 = icmp sle i32 %j_v1016, %tmp978
  br i1 %bool_val1017, label %while_body997, label %merge1015

while_body997:                                    ; preds = %while996
  %j_v998 = load i32, i32* %j995
  %i_v999 = load i32, i32* %i992
  %tmp1000 = mul i32 %c_mat985, %i_v999
  %index1001 = add i32 %j_v998, %tmp1000
  %element_ptr1002 = getelementptr double, double* %mat_mat981, i32 %index1001
  %j_v1003 = load i32, i32* %j995
  %tmp1004 = sub i32 %j_v1003, 0
  %tmp1005 = add i32 %tmp1004, 0
  %i_v1006 = load i32, i32* %i992
  %tmp1007 = sub i32 %i_v1006, 0
  %tmp1008 = add i32 %tmp1007, 0
  %tmp1009 = mul i32 %c_v991, %tmp1008
  %index1010 = add i32 %tmp1005, %tmp1009
  %element_ptr1011 = getelementptr double, double* %mat_v987, i32 %index1010
  %tmp_element1012 = load double, double* %element_ptr1011
  store double %tmp_element1012, double* %element_ptr1002
  %j_v1013 = load i32, i32* %j995
  %tmp1014 = add i32 %j_v1013, 1
  store i32 %tmp1014, i32* %j995
  br label %while996

merge1015:                                        ; preds = %while996
  %i_v1018 = load i32, i32* %i992
  %tmp1019 = add i32 %i_v1018, 1
  store i32 %tmp1019, i32* %i992
  br label %while993

merge1020:                                        ; preds = %while993
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m951, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp1023 = alloca %return_t.0
  ret %return_t.0* %tmp1023
}
