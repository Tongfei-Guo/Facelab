; ModuleID = 'Facelab'
source_filename = "Facelab"

%matrix_t = type { double*, i32, i32 }
%face_t = type { %matrix_t* }
%load_t = type { %matrix_t*, %matrix_t*, %matrix_t* }
%double_to_int_t = type { i32 }
%zero_matrix_t = type { %matrix_t* }
%matrix_size_t = type { i32, i32 }
%int_to_double_t = type { double }
%return_t = type { double }
%return_t.0 = type { %matrix_t* }

@fmt_str = private unnamed_addr constant [3 x i8] c"%s\00"
@fmt_double = private unnamed_addr constant [3 x i8] c"%f\00"
@fmt_int = private unnamed_addr constant [3 x i8] c"%d\00"
@fmt_str.1 = private unnamed_addr constant [2 x i8] c"\0A\00"
@fmt_str.2 = private unnamed_addr constant [3 x i8] c"  \00"
@fmt_str.3 = private unnamed_addr constant [1 x i8] zeroinitializer
@fmt_str.4 = private unnamed_addr constant [5 x i8] c"true\00"
@fmt_str.5 = private unnamed_addr constant [6 x i8] c"false\00"
@fmt_str.6 = private unnamed_addr constant [66 x i8] c"Semantic error : wrong dimension of operands of matrix operation.\00"
@fmt_str.7 = private unnamed_addr constant [45 x i8] c"Semantic error : matrix index out of bounds.\00"
@fmt_str.8 = private unnamed_addr constant [86 x i8] c"Semantic error : matrix block assignment must have agreeable dimension on both sides.\00"
@system_string = private unnamed_addr constant [6 x i8] c"b.jpg\00"
@system_string.9 = private unnamed_addr constant [6 x i8] c"b.jpg\00"
@system_string.10 = private unnamed_addr constant [18 x i8] c"face_2_result.jpg\00"

define i32 @main() {
entry:
  %system_mat = alloca double, i32 0
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 0, i32* %m_c
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v9 = load i32, i32* %i
  %bool_val10 = icmp sle i32 %i_v9, -1
  br i1 %bool_val10, label %while_body, label %merge8

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while1

while1:                                           ; preds = %while_body2, %while_body
  %j_v5 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v5, -1
  br i1 %bool_val, label %while_body2, label %merge

while_body2:                                      ; preds = %while1
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp = mul i32 0, %i_v
  %index = add i32 %j_v, %tmp
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v3 = load i32, i32* %j
  %tmp4 = add i32 %j_v3, 1
  store i32 %tmp4, i32* %j
  br label %while1

merge:                                            ; preds = %while1
  %i_v6 = load i32, i32* %i
  %tmp7 = add i32 %i_v6, 1
  store i32 %tmp7, i32* %i
  br label %while

merge8:                                           ; preds = %while
  %face_result = call %face_t* @face(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @system_string, i32 0, i32 0))
  %v_ptr = getelementptr inbounds %face_t, %face_t* %face_result, i32 0, i32 0
  %v = load %matrix_t*, %matrix_t** %v_ptr
  %0 = bitcast %face_t* %face_result to i8*
  tail call void @free(i8* %0)
  %m_mat11 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat11
  %m_r12 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_mat = load i32, i32* %m_r12
  %m_c13 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_mat = load i32, i32* %m_c13
  %size = mul i32 %r_mat, %c_mat
  %system_mat14 = alloca double, i32 %size
  %m15 = alloca %matrix_t
  %m_mat16 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  store double* %system_mat14, double** %m_mat16
  %m_r17 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  store i32 %r_mat, i32* %m_r17
  %m_c18 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  store i32 %c_mat, i32* %m_c18
  %tmp19 = sub i32 %r_mat, 1
  %tmp20 = sub i32 %c_mat, 1
  %i21 = alloca i32
  store i32 0, i32* %i21
  br label %while22

while22:                                          ; preds = %merge34, %merge8
  %i_v40 = load i32, i32* %i21
  %bool_val41 = icmp sle i32 %i_v40, %tmp19
  br i1 %bool_val41, label %while_body23, label %merge39

while_body23:                                     ; preds = %while22
  %j24 = alloca i32
  store i32 0, i32* %j24
  br label %while25

while25:                                          ; preds = %while_body26, %while_body23
  %j_v35 = load i32, i32* %j24
  %bool_val36 = icmp sle i32 %j_v35, %tmp20
  br i1 %bool_val36, label %while_body26, label %merge34

while_body26:                                     ; preds = %while25
  %j_v27 = load i32, i32* %j24
  %i_v28 = load i32, i32* %i21
  %tmp29 = mul i32 %c_mat, %i_v28
  %index30 = add i32 %j_v27, %tmp29
  %element_ptr31 = getelementptr double, double* %system_mat14, i32 %index30
  store double 0.000000e+00, double* %element_ptr31
  %j_v32 = load i32, i32* %j24
  %tmp33 = add i32 %j_v32, 1
  store i32 %tmp33, i32* %j24
  br label %while25

merge34:                                          ; preds = %while25
  %i_v37 = load i32, i32* %i21
  %tmp38 = add i32 %i_v37, 1
  store i32 %tmp38, i32* %i21
  br label %while22

merge39:                                          ; preds = %while22
  %tmp42 = sub i32 %c_mat, 1
  %tmp43 = sub i32 %r_mat, 1
  %m_mat44 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_mat45 = load double*, double** %m_mat44
  %m_r46 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat47 = load i32, i32* %m_r46
  %m_c48 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat49 = load i32, i32* %m_c48
  %m_mat50 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 0
  %mat_v = load double*, double** %m_mat50
  %m_r51 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 1
  %r_v = load i32, i32* %m_r51
  %m_c52 = getelementptr inbounds %matrix_t, %matrix_t* %v, i32 0, i32 2
  %c_v = load i32, i32* %m_c52
  %i53 = alloca i32
  store i32 0, i32* %i53
  br label %while54

while54:                                          ; preds = %merge75, %merge39
  %i_v81 = load i32, i32* %i53
  %bool_val82 = icmp sle i32 %i_v81, %tmp43
  br i1 %bool_val82, label %while_body55, label %merge80

while_body55:                                     ; preds = %while54
  %j56 = alloca i32
  store i32 0, i32* %j56
  br label %while57

while57:                                          ; preds = %while_body58, %while_body55
  %j_v76 = load i32, i32* %j56
  %bool_val77 = icmp sle i32 %j_v76, %tmp42
  br i1 %bool_val77, label %while_body58, label %merge75

while_body58:                                     ; preds = %while57
  %j_v59 = load i32, i32* %j56
  %i_v60 = load i32, i32* %i53
  %tmp61 = mul i32 %c_mat49, %i_v60
  %index62 = add i32 %j_v59, %tmp61
  %element_ptr63 = getelementptr double, double* %mat_mat45, i32 %index62
  %j_v64 = load i32, i32* %j56
  %tmp65 = sub i32 %j_v64, 0
  %tmp66 = add i32 %tmp65, 0
  %i_v67 = load i32, i32* %i53
  %tmp68 = sub i32 %i_v67, 0
  %tmp69 = add i32 %tmp68, 0
  %tmp70 = mul i32 %c_v, %tmp69
  %index71 = add i32 %tmp66, %tmp70
  %element_ptr72 = getelementptr double, double* %mat_v, i32 %index71
  %tmp_element = load double, double* %element_ptr72
  store double %tmp_element, double* %element_ptr63
  %j_v73 = load i32, i32* %j56
  %tmp74 = add i32 %j_v73, 1
  store i32 %tmp74, i32* %j56
  br label %while57

merge75:                                          ; preds = %while57
  %i_v78 = load i32, i32* %i53
  %tmp79 = add i32 %i_v78, 1
  store i32 %tmp79, i32* %i53
  br label %while54

merge80:                                          ; preds = %while54
  %1 = bitcast double* %mat_mat to i8*
  tail call void @free(i8* %1)
  %2 = bitcast %matrix_t* %v to i8*
  tail call void @free(i8* %2)
  %m_r83 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_mat84 = load i32, i32* %m_r83
  %m_c85 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_mat86 = load i32, i32* %m_c85
  %size87 = mul i32 %r_mat84, %c_mat86
  %system_mat88 = alloca double, i32 %size87
  %m89 = alloca %matrix_t
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 0
  store double* %system_mat88, double** %m_mat90
  %m_r91 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 1
  store i32 %r_mat84, i32* %m_r91
  %m_c92 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 2
  store i32 %c_mat86, i32* %m_c92
  %tmp93 = sub i32 %r_mat84, 1
  %tmp94 = sub i32 %c_mat86, 1
  %i95 = alloca i32
  store i32 0, i32* %i95
  br label %while96

while96:                                          ; preds = %merge108, %merge80
  %i_v114 = load i32, i32* %i95
  %bool_val115 = icmp sle i32 %i_v114, %tmp93
  br i1 %bool_val115, label %while_body97, label %merge113

while_body97:                                     ; preds = %while96
  %j98 = alloca i32
  store i32 0, i32* %j98
  br label %while99

while99:                                          ; preds = %while_body100, %while_body97
  %j_v109 = load i32, i32* %j98
  %bool_val110 = icmp sle i32 %j_v109, %tmp94
  br i1 %bool_val110, label %while_body100, label %merge108

while_body100:                                    ; preds = %while99
  %j_v101 = load i32, i32* %j98
  %i_v102 = load i32, i32* %i95
  %tmp103 = mul i32 %c_mat86, %i_v102
  %index104 = add i32 %j_v101, %tmp103
  %element_ptr105 = getelementptr double, double* %system_mat88, i32 %index104
  store double 0.000000e+00, double* %element_ptr105
  %j_v106 = load i32, i32* %j98
  %tmp107 = add i32 %j_v106, 1
  store i32 %tmp107, i32* %j98
  br label %while99

merge108:                                         ; preds = %while99
  %i_v111 = load i32, i32* %i95
  %tmp112 = add i32 %i_v111, 1
  store i32 %tmp112, i32* %i95
  br label %while96

merge113:                                         ; preds = %while96
  %tmp116 = sub i32 %c_mat86, 1
  %tmp117 = sub i32 %r_mat84, 1
  %m_mat118 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 0
  %mat_mat119 = load double*, double** %m_mat118
  %m_r120 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 1
  %r_mat121 = load i32, i32* %m_r120
  %m_c122 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 2
  %c_mat123 = load i32, i32* %m_c122
  %m_mat124 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 0
  %mat_v125 = load double*, double** %m_mat124
  %m_r126 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 1
  %r_v127 = load i32, i32* %m_r126
  %m_c128 = getelementptr inbounds %matrix_t, %matrix_t* %m15, i32 0, i32 2
  %c_v129 = load i32, i32* %m_c128
  %i130 = alloca i32
  store i32 0, i32* %i130
  br label %while131

while131:                                         ; preds = %merge153, %merge113
  %i_v159 = load i32, i32* %i130
  %bool_val160 = icmp sle i32 %i_v159, %tmp117
  br i1 %bool_val160, label %while_body132, label %merge158

while_body132:                                    ; preds = %while131
  %j133 = alloca i32
  store i32 0, i32* %j133
  br label %while134

while134:                                         ; preds = %while_body135, %while_body132
  %j_v154 = load i32, i32* %j133
  %bool_val155 = icmp sle i32 %j_v154, %tmp116
  br i1 %bool_val155, label %while_body135, label %merge153

while_body135:                                    ; preds = %while134
  %j_v136 = load i32, i32* %j133
  %i_v137 = load i32, i32* %i130
  %tmp138 = mul i32 %c_mat123, %i_v137
  %index139 = add i32 %j_v136, %tmp138
  %element_ptr140 = getelementptr double, double* %mat_mat119, i32 %index139
  %j_v141 = load i32, i32* %j133
  %tmp142 = sub i32 %j_v141, 0
  %tmp143 = add i32 %tmp142, 0
  %i_v144 = load i32, i32* %i130
  %tmp145 = sub i32 %i_v144, 0
  %tmp146 = add i32 %tmp145, 0
  %tmp147 = mul i32 %c_v129, %tmp146
  %index148 = add i32 %tmp143, %tmp147
  %element_ptr149 = getelementptr double, double* %mat_v125, i32 %index148
  %tmp_element150 = load double, double* %element_ptr149
  store double %tmp_element150, double* %element_ptr140
  %j_v151 = load i32, i32* %j133
  %tmp152 = add i32 %j_v151, 1
  store i32 %tmp152, i32* %j133
  br label %while134

merge153:                                         ; preds = %while134
  %i_v156 = load i32, i32* %i130
  %tmp157 = add i32 %i_v156, 1
  store i32 %tmp157, i32* %i130
  br label %while131

merge158:                                         ; preds = %while131
  %system_mat161 = alloca double, i32 0
  %m162 = alloca %matrix_t
  %m_mat163 = getelementptr inbounds %matrix_t, %matrix_t* %m162, i32 0, i32 0
  store double* %system_mat161, double** %m_mat163
  %m_r164 = getelementptr inbounds %matrix_t, %matrix_t* %m162, i32 0, i32 1
  store i32 0, i32* %m_r164
  %m_c165 = getelementptr inbounds %matrix_t, %matrix_t* %m162, i32 0, i32 2
  store i32 0, i32* %m_c165
  %i166 = alloca i32
  store i32 0, i32* %i166
  br label %while167

while167:                                         ; preds = %merge179, %merge158
  %i_v185 = load i32, i32* %i166
  %bool_val186 = icmp sle i32 %i_v185, -1
  br i1 %bool_val186, label %while_body168, label %merge184

while_body168:                                    ; preds = %while167
  %j169 = alloca i32
  store i32 0, i32* %j169
  br label %while170

while170:                                         ; preds = %while_body171, %while_body168
  %j_v180 = load i32, i32* %j169
  %bool_val181 = icmp sle i32 %j_v180, -1
  br i1 %bool_val181, label %while_body171, label %merge179

while_body171:                                    ; preds = %while170
  %j_v172 = load i32, i32* %j169
  %i_v173 = load i32, i32* %i166
  %tmp174 = mul i32 0, %i_v173
  %index175 = add i32 %j_v172, %tmp174
  %element_ptr176 = getelementptr double, double* %system_mat161, i32 %index175
  store double 0.000000e+00, double* %element_ptr176
  %j_v177 = load i32, i32* %j169
  %tmp178 = add i32 %j_v177, 1
  store i32 %tmp178, i32* %j169
  br label %while170

merge179:                                         ; preds = %while170
  %i_v182 = load i32, i32* %i166
  %tmp183 = add i32 %i_v182, 1
  store i32 %tmp183, i32* %i166
  br label %while167

merge184:                                         ; preds = %while167
  %system_mat187 = alloca double, i32 0
  %m188 = alloca %matrix_t
  %m_mat189 = getelementptr inbounds %matrix_t, %matrix_t* %m188, i32 0, i32 0
  store double* %system_mat187, double** %m_mat189
  %m_r190 = getelementptr inbounds %matrix_t, %matrix_t* %m188, i32 0, i32 1
  store i32 0, i32* %m_r190
  %m_c191 = getelementptr inbounds %matrix_t, %matrix_t* %m188, i32 0, i32 2
  store i32 0, i32* %m_c191
  %i192 = alloca i32
  store i32 0, i32* %i192
  br label %while193

while193:                                         ; preds = %merge205, %merge184
  %i_v211 = load i32, i32* %i192
  %bool_val212 = icmp sle i32 %i_v211, -1
  br i1 %bool_val212, label %while_body194, label %merge210

while_body194:                                    ; preds = %while193
  %j195 = alloca i32
  store i32 0, i32* %j195
  br label %while196

while196:                                         ; preds = %while_body197, %while_body194
  %j_v206 = load i32, i32* %j195
  %bool_val207 = icmp sle i32 %j_v206, -1
  br i1 %bool_val207, label %while_body197, label %merge205

while_body197:                                    ; preds = %while196
  %j_v198 = load i32, i32* %j195
  %i_v199 = load i32, i32* %i192
  %tmp200 = mul i32 0, %i_v199
  %index201 = add i32 %j_v198, %tmp200
  %element_ptr202 = getelementptr double, double* %system_mat187, i32 %index201
  store double 0.000000e+00, double* %element_ptr202
  %j_v203 = load i32, i32* %j195
  %tmp204 = add i32 %j_v203, 1
  store i32 %tmp204, i32* %j195
  br label %while196

merge205:                                         ; preds = %while196
  %i_v208 = load i32, i32* %i192
  %tmp209 = add i32 %i_v208, 1
  store i32 %tmp209, i32* %i192
  br label %while193

merge210:                                         ; preds = %while193
  %system_mat213 = alloca double, i32 0
  %m214 = alloca %matrix_t
  %m_mat215 = getelementptr inbounds %matrix_t, %matrix_t* %m214, i32 0, i32 0
  store double* %system_mat213, double** %m_mat215
  %m_r216 = getelementptr inbounds %matrix_t, %matrix_t* %m214, i32 0, i32 1
  store i32 0, i32* %m_r216
  %m_c217 = getelementptr inbounds %matrix_t, %matrix_t* %m214, i32 0, i32 2
  store i32 0, i32* %m_c217
  %i218 = alloca i32
  store i32 0, i32* %i218
  br label %while219

while219:                                         ; preds = %merge231, %merge210
  %i_v237 = load i32, i32* %i218
  %bool_val238 = icmp sle i32 %i_v237, -1
  br i1 %bool_val238, label %while_body220, label %merge236

while_body220:                                    ; preds = %while219
  %j221 = alloca i32
  store i32 0, i32* %j221
  br label %while222

while222:                                         ; preds = %while_body223, %while_body220
  %j_v232 = load i32, i32* %j221
  %bool_val233 = icmp sle i32 %j_v232, -1
  br i1 %bool_val233, label %while_body223, label %merge231

while_body223:                                    ; preds = %while222
  %j_v224 = load i32, i32* %j221
  %i_v225 = load i32, i32* %i218
  %tmp226 = mul i32 0, %i_v225
  %index227 = add i32 %j_v224, %tmp226
  %element_ptr228 = getelementptr double, double* %system_mat213, i32 %index227
  store double 0.000000e+00, double* %element_ptr228
  %j_v229 = load i32, i32* %j221
  %tmp230 = add i32 %j_v229, 1
  store i32 %tmp230, i32* %j221
  br label %while222

merge231:                                         ; preds = %while222
  %i_v234 = load i32, i32* %i218
  %tmp235 = add i32 %i_v234, 1
  store i32 %tmp235, i32* %i218
  br label %while219

merge236:                                         ; preds = %while219
  %load_result = call %load_t* @load(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @system_string.9, i32 0, i32 0))
  %v_ptr239 = getelementptr inbounds %load_t, %load_t* %load_result, i32 0, i32 0
  %v240 = load %matrix_t*, %matrix_t** %v_ptr239
  %m_mat241 = getelementptr inbounds %matrix_t, %matrix_t* %v240, i32 0, i32 0
  %mat_mat242 = load double*, double** %m_mat241
  %m_r243 = getelementptr inbounds %matrix_t, %matrix_t* %v240, i32 0, i32 1
  %r_mat244 = load i32, i32* %m_r243
  %m_c245 = getelementptr inbounds %matrix_t, %matrix_t* %v240, i32 0, i32 2
  %c_mat246 = load i32, i32* %m_c245
  %size247 = mul i32 %r_mat244, %c_mat246
  %system_mat248 = alloca double, i32 %size247
  %m249 = alloca %matrix_t
  %m_mat250 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 0
  store double* %system_mat248, double** %m_mat250
  %m_r251 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 1
  store i32 %r_mat244, i32* %m_r251
  %m_c252 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 2
  store i32 %c_mat246, i32* %m_c252
  %tmp253 = sub i32 %r_mat244, 1
  %tmp254 = sub i32 %c_mat246, 1
  %i255 = alloca i32
  store i32 0, i32* %i255
  br label %while256

while256:                                         ; preds = %merge268, %merge236
  %i_v274 = load i32, i32* %i255
  %bool_val275 = icmp sle i32 %i_v274, %tmp253
  br i1 %bool_val275, label %while_body257, label %merge273

while_body257:                                    ; preds = %while256
  %j258 = alloca i32
  store i32 0, i32* %j258
  br label %while259

while259:                                         ; preds = %while_body260, %while_body257
  %j_v269 = load i32, i32* %j258
  %bool_val270 = icmp sle i32 %j_v269, %tmp254
  br i1 %bool_val270, label %while_body260, label %merge268

while_body260:                                    ; preds = %while259
  %j_v261 = load i32, i32* %j258
  %i_v262 = load i32, i32* %i255
  %tmp263 = mul i32 %c_mat246, %i_v262
  %index264 = add i32 %j_v261, %tmp263
  %element_ptr265 = getelementptr double, double* %system_mat248, i32 %index264
  store double 0.000000e+00, double* %element_ptr265
  %j_v266 = load i32, i32* %j258
  %tmp267 = add i32 %j_v266, 1
  store i32 %tmp267, i32* %j258
  br label %while259

merge268:                                         ; preds = %while259
  %i_v271 = load i32, i32* %i255
  %tmp272 = add i32 %i_v271, 1
  store i32 %tmp272, i32* %i255
  br label %while256

merge273:                                         ; preds = %while256
  %tmp276 = sub i32 %c_mat246, 1
  %tmp277 = sub i32 %r_mat244, 1
  %m_mat278 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 0
  %mat_mat279 = load double*, double** %m_mat278
  %m_r280 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 1
  %r_mat281 = load i32, i32* %m_r280
  %m_c282 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 2
  %c_mat283 = load i32, i32* %m_c282
  %m_mat284 = getelementptr inbounds %matrix_t, %matrix_t* %v240, i32 0, i32 0
  %mat_v285 = load double*, double** %m_mat284
  %m_r286 = getelementptr inbounds %matrix_t, %matrix_t* %v240, i32 0, i32 1
  %r_v287 = load i32, i32* %m_r286
  %m_c288 = getelementptr inbounds %matrix_t, %matrix_t* %v240, i32 0, i32 2
  %c_v289 = load i32, i32* %m_c288
  %i290 = alloca i32
  store i32 0, i32* %i290
  br label %while291

while291:                                         ; preds = %merge313, %merge273
  %i_v319 = load i32, i32* %i290
  %bool_val320 = icmp sle i32 %i_v319, %tmp277
  br i1 %bool_val320, label %while_body292, label %merge318

while_body292:                                    ; preds = %while291
  %j293 = alloca i32
  store i32 0, i32* %j293
  br label %while294

while294:                                         ; preds = %while_body295, %while_body292
  %j_v314 = load i32, i32* %j293
  %bool_val315 = icmp sle i32 %j_v314, %tmp276
  br i1 %bool_val315, label %while_body295, label %merge313

while_body295:                                    ; preds = %while294
  %j_v296 = load i32, i32* %j293
  %i_v297 = load i32, i32* %i290
  %tmp298 = mul i32 %c_mat283, %i_v297
  %index299 = add i32 %j_v296, %tmp298
  %element_ptr300 = getelementptr double, double* %mat_mat279, i32 %index299
  %j_v301 = load i32, i32* %j293
  %tmp302 = sub i32 %j_v301, 0
  %tmp303 = add i32 %tmp302, 0
  %i_v304 = load i32, i32* %i290
  %tmp305 = sub i32 %i_v304, 0
  %tmp306 = add i32 %tmp305, 0
  %tmp307 = mul i32 %c_v289, %tmp306
  %index308 = add i32 %tmp303, %tmp307
  %element_ptr309 = getelementptr double, double* %mat_v285, i32 %index308
  %tmp_element310 = load double, double* %element_ptr309
  store double %tmp_element310, double* %element_ptr300
  %j_v311 = load i32, i32* %j293
  %tmp312 = add i32 %j_v311, 1
  store i32 %tmp312, i32* %j293
  br label %while294

merge313:                                         ; preds = %while294
  %i_v316 = load i32, i32* %i290
  %tmp317 = add i32 %i_v316, 1
  store i32 %tmp317, i32* %i290
  br label %while291

merge318:                                         ; preds = %while291
  %3 = bitcast double* %mat_mat242 to i8*
  tail call void @free(i8* %3)
  %4 = bitcast %matrix_t* %v240 to i8*
  tail call void @free(i8* %4)
  %m_r321 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 1
  %r_mat322 = load i32, i32* %m_r321
  %m_c323 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 2
  %c_mat324 = load i32, i32* %m_c323
  %size325 = mul i32 %r_mat322, %c_mat324
  %system_mat326 = alloca double, i32 %size325
  %m327 = alloca %matrix_t
  %m_mat328 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  store double* %system_mat326, double** %m_mat328
  %m_r329 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  store i32 %r_mat322, i32* %m_r329
  %m_c330 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  store i32 %c_mat324, i32* %m_c330
  %tmp331 = sub i32 %r_mat322, 1
  %tmp332 = sub i32 %c_mat324, 1
  %i333 = alloca i32
  store i32 0, i32* %i333
  br label %while334

while334:                                         ; preds = %merge346, %merge318
  %i_v352 = load i32, i32* %i333
  %bool_val353 = icmp sle i32 %i_v352, %tmp331
  br i1 %bool_val353, label %while_body335, label %merge351

while_body335:                                    ; preds = %while334
  %j336 = alloca i32
  store i32 0, i32* %j336
  br label %while337

while337:                                         ; preds = %while_body338, %while_body335
  %j_v347 = load i32, i32* %j336
  %bool_val348 = icmp sle i32 %j_v347, %tmp332
  br i1 %bool_val348, label %while_body338, label %merge346

while_body338:                                    ; preds = %while337
  %j_v339 = load i32, i32* %j336
  %i_v340 = load i32, i32* %i333
  %tmp341 = mul i32 %c_mat324, %i_v340
  %index342 = add i32 %j_v339, %tmp341
  %element_ptr343 = getelementptr double, double* %system_mat326, i32 %index342
  store double 0.000000e+00, double* %element_ptr343
  %j_v344 = load i32, i32* %j336
  %tmp345 = add i32 %j_v344, 1
  store i32 %tmp345, i32* %j336
  br label %while337

merge346:                                         ; preds = %while337
  %i_v349 = load i32, i32* %i333
  %tmp350 = add i32 %i_v349, 1
  store i32 %tmp350, i32* %i333
  br label %while334

merge351:                                         ; preds = %while334
  %tmp354 = sub i32 %c_mat324, 1
  %tmp355 = sub i32 %r_mat322, 1
  %m_mat356 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat357 = load double*, double** %m_mat356
  %m_r358 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat359 = load i32, i32* %m_r358
  %m_c360 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat361 = load i32, i32* %m_c360
  %m_mat362 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 0
  %mat_v363 = load double*, double** %m_mat362
  %m_r364 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 1
  %r_v365 = load i32, i32* %m_r364
  %m_c366 = getelementptr inbounds %matrix_t, %matrix_t* %m249, i32 0, i32 2
  %c_v367 = load i32, i32* %m_c366
  %i368 = alloca i32
  store i32 0, i32* %i368
  br label %while369

while369:                                         ; preds = %merge391, %merge351
  %i_v397 = load i32, i32* %i368
  %bool_val398 = icmp sle i32 %i_v397, %tmp355
  br i1 %bool_val398, label %while_body370, label %merge396

while_body370:                                    ; preds = %while369
  %j371 = alloca i32
  store i32 0, i32* %j371
  br label %while372

while372:                                         ; preds = %while_body373, %while_body370
  %j_v392 = load i32, i32* %j371
  %bool_val393 = icmp sle i32 %j_v392, %tmp354
  br i1 %bool_val393, label %while_body373, label %merge391

while_body373:                                    ; preds = %while372
  %j_v374 = load i32, i32* %j371
  %i_v375 = load i32, i32* %i368
  %tmp376 = mul i32 %c_mat361, %i_v375
  %index377 = add i32 %j_v374, %tmp376
  %element_ptr378 = getelementptr double, double* %mat_mat357, i32 %index377
  %j_v379 = load i32, i32* %j371
  %tmp380 = sub i32 %j_v379, 0
  %tmp381 = add i32 %tmp380, 0
  %i_v382 = load i32, i32* %i368
  %tmp383 = sub i32 %i_v382, 0
  %tmp384 = add i32 %tmp383, 0
  %tmp385 = mul i32 %c_v367, %tmp384
  %index386 = add i32 %tmp381, %tmp385
  %element_ptr387 = getelementptr double, double* %mat_v363, i32 %index386
  %tmp_element388 = load double, double* %element_ptr387
  store double %tmp_element388, double* %element_ptr378
  %j_v389 = load i32, i32* %j371
  %tmp390 = add i32 %j_v389, 1
  store i32 %tmp390, i32* %j371
  br label %while372

merge391:                                         ; preds = %while372
  %i_v394 = load i32, i32* %i368
  %tmp395 = add i32 %i_v394, 1
  store i32 %tmp395, i32* %i368
  br label %while369

merge396:                                         ; preds = %while369
  %v_ptr399 = getelementptr inbounds %load_t, %load_t* %load_result, i32 0, i32 1
  %v400 = load %matrix_t*, %matrix_t** %v_ptr399
  %m_mat401 = getelementptr inbounds %matrix_t, %matrix_t* %v400, i32 0, i32 0
  %mat_mat402 = load double*, double** %m_mat401
  %m_r403 = getelementptr inbounds %matrix_t, %matrix_t* %v400, i32 0, i32 1
  %r_mat404 = load i32, i32* %m_r403
  %m_c405 = getelementptr inbounds %matrix_t, %matrix_t* %v400, i32 0, i32 2
  %c_mat406 = load i32, i32* %m_c405
  %size407 = mul i32 %r_mat404, %c_mat406
  %system_mat408 = alloca double, i32 %size407
  %m409 = alloca %matrix_t
  %m_mat410 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 0
  store double* %system_mat408, double** %m_mat410
  %m_r411 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 1
  store i32 %r_mat404, i32* %m_r411
  %m_c412 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 2
  store i32 %c_mat406, i32* %m_c412
  %tmp413 = sub i32 %r_mat404, 1
  %tmp414 = sub i32 %c_mat406, 1
  %i415 = alloca i32
  store i32 0, i32* %i415
  br label %while416

while416:                                         ; preds = %merge428, %merge396
  %i_v434 = load i32, i32* %i415
  %bool_val435 = icmp sle i32 %i_v434, %tmp413
  br i1 %bool_val435, label %while_body417, label %merge433

while_body417:                                    ; preds = %while416
  %j418 = alloca i32
  store i32 0, i32* %j418
  br label %while419

while419:                                         ; preds = %while_body420, %while_body417
  %j_v429 = load i32, i32* %j418
  %bool_val430 = icmp sle i32 %j_v429, %tmp414
  br i1 %bool_val430, label %while_body420, label %merge428

while_body420:                                    ; preds = %while419
  %j_v421 = load i32, i32* %j418
  %i_v422 = load i32, i32* %i415
  %tmp423 = mul i32 %c_mat406, %i_v422
  %index424 = add i32 %j_v421, %tmp423
  %element_ptr425 = getelementptr double, double* %system_mat408, i32 %index424
  store double 0.000000e+00, double* %element_ptr425
  %j_v426 = load i32, i32* %j418
  %tmp427 = add i32 %j_v426, 1
  store i32 %tmp427, i32* %j418
  br label %while419

merge428:                                         ; preds = %while419
  %i_v431 = load i32, i32* %i415
  %tmp432 = add i32 %i_v431, 1
  store i32 %tmp432, i32* %i415
  br label %while416

merge433:                                         ; preds = %while416
  %tmp436 = sub i32 %c_mat406, 1
  %tmp437 = sub i32 %r_mat404, 1
  %m_mat438 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 0
  %mat_mat439 = load double*, double** %m_mat438
  %m_r440 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 1
  %r_mat441 = load i32, i32* %m_r440
  %m_c442 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 2
  %c_mat443 = load i32, i32* %m_c442
  %m_mat444 = getelementptr inbounds %matrix_t, %matrix_t* %v400, i32 0, i32 0
  %mat_v445 = load double*, double** %m_mat444
  %m_r446 = getelementptr inbounds %matrix_t, %matrix_t* %v400, i32 0, i32 1
  %r_v447 = load i32, i32* %m_r446
  %m_c448 = getelementptr inbounds %matrix_t, %matrix_t* %v400, i32 0, i32 2
  %c_v449 = load i32, i32* %m_c448
  %i450 = alloca i32
  store i32 0, i32* %i450
  br label %while451

while451:                                         ; preds = %merge473, %merge433
  %i_v479 = load i32, i32* %i450
  %bool_val480 = icmp sle i32 %i_v479, %tmp437
  br i1 %bool_val480, label %while_body452, label %merge478

while_body452:                                    ; preds = %while451
  %j453 = alloca i32
  store i32 0, i32* %j453
  br label %while454

while454:                                         ; preds = %while_body455, %while_body452
  %j_v474 = load i32, i32* %j453
  %bool_val475 = icmp sle i32 %j_v474, %tmp436
  br i1 %bool_val475, label %while_body455, label %merge473

while_body455:                                    ; preds = %while454
  %j_v456 = load i32, i32* %j453
  %i_v457 = load i32, i32* %i450
  %tmp458 = mul i32 %c_mat443, %i_v457
  %index459 = add i32 %j_v456, %tmp458
  %element_ptr460 = getelementptr double, double* %mat_mat439, i32 %index459
  %j_v461 = load i32, i32* %j453
  %tmp462 = sub i32 %j_v461, 0
  %tmp463 = add i32 %tmp462, 0
  %i_v464 = load i32, i32* %i450
  %tmp465 = sub i32 %i_v464, 0
  %tmp466 = add i32 %tmp465, 0
  %tmp467 = mul i32 %c_v449, %tmp466
  %index468 = add i32 %tmp463, %tmp467
  %element_ptr469 = getelementptr double, double* %mat_v445, i32 %index468
  %tmp_element470 = load double, double* %element_ptr469
  store double %tmp_element470, double* %element_ptr460
  %j_v471 = load i32, i32* %j453
  %tmp472 = add i32 %j_v471, 1
  store i32 %tmp472, i32* %j453
  br label %while454

merge473:                                         ; preds = %while454
  %i_v476 = load i32, i32* %i450
  %tmp477 = add i32 %i_v476, 1
  store i32 %tmp477, i32* %i450
  br label %while451

merge478:                                         ; preds = %while451
  %5 = bitcast double* %mat_mat402 to i8*
  tail call void @free(i8* %5)
  %6 = bitcast %matrix_t* %v400 to i8*
  tail call void @free(i8* %6)
  %m_r481 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 1
  %r_mat482 = load i32, i32* %m_r481
  %m_c483 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 2
  %c_mat484 = load i32, i32* %m_c483
  %size485 = mul i32 %r_mat482, %c_mat484
  %system_mat486 = alloca double, i32 %size485
  %m487 = alloca %matrix_t
  %m_mat488 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 0
  store double* %system_mat486, double** %m_mat488
  %m_r489 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  store i32 %r_mat482, i32* %m_r489
  %m_c490 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  store i32 %c_mat484, i32* %m_c490
  %tmp491 = sub i32 %r_mat482, 1
  %tmp492 = sub i32 %c_mat484, 1
  %i493 = alloca i32
  store i32 0, i32* %i493
  br label %while494

while494:                                         ; preds = %merge506, %merge478
  %i_v512 = load i32, i32* %i493
  %bool_val513 = icmp sle i32 %i_v512, %tmp491
  br i1 %bool_val513, label %while_body495, label %merge511

while_body495:                                    ; preds = %while494
  %j496 = alloca i32
  store i32 0, i32* %j496
  br label %while497

while497:                                         ; preds = %while_body498, %while_body495
  %j_v507 = load i32, i32* %j496
  %bool_val508 = icmp sle i32 %j_v507, %tmp492
  br i1 %bool_val508, label %while_body498, label %merge506

while_body498:                                    ; preds = %while497
  %j_v499 = load i32, i32* %j496
  %i_v500 = load i32, i32* %i493
  %tmp501 = mul i32 %c_mat484, %i_v500
  %index502 = add i32 %j_v499, %tmp501
  %element_ptr503 = getelementptr double, double* %system_mat486, i32 %index502
  store double 0.000000e+00, double* %element_ptr503
  %j_v504 = load i32, i32* %j496
  %tmp505 = add i32 %j_v504, 1
  store i32 %tmp505, i32* %j496
  br label %while497

merge506:                                         ; preds = %while497
  %i_v509 = load i32, i32* %i493
  %tmp510 = add i32 %i_v509, 1
  store i32 %tmp510, i32* %i493
  br label %while494

merge511:                                         ; preds = %while494
  %tmp514 = sub i32 %c_mat484, 1
  %tmp515 = sub i32 %r_mat482, 1
  %m_mat516 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 0
  %mat_mat517 = load double*, double** %m_mat516
  %m_r518 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat519 = load i32, i32* %m_r518
  %m_c520 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat521 = load i32, i32* %m_c520
  %m_mat522 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 0
  %mat_v523 = load double*, double** %m_mat522
  %m_r524 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 1
  %r_v525 = load i32, i32* %m_r524
  %m_c526 = getelementptr inbounds %matrix_t, %matrix_t* %m409, i32 0, i32 2
  %c_v527 = load i32, i32* %m_c526
  %i528 = alloca i32
  store i32 0, i32* %i528
  br label %while529

while529:                                         ; preds = %merge551, %merge511
  %i_v557 = load i32, i32* %i528
  %bool_val558 = icmp sle i32 %i_v557, %tmp515
  br i1 %bool_val558, label %while_body530, label %merge556

while_body530:                                    ; preds = %while529
  %j531 = alloca i32
  store i32 0, i32* %j531
  br label %while532

while532:                                         ; preds = %while_body533, %while_body530
  %j_v552 = load i32, i32* %j531
  %bool_val553 = icmp sle i32 %j_v552, %tmp514
  br i1 %bool_val553, label %while_body533, label %merge551

while_body533:                                    ; preds = %while532
  %j_v534 = load i32, i32* %j531
  %i_v535 = load i32, i32* %i528
  %tmp536 = mul i32 %c_mat521, %i_v535
  %index537 = add i32 %j_v534, %tmp536
  %element_ptr538 = getelementptr double, double* %mat_mat517, i32 %index537
  %j_v539 = load i32, i32* %j531
  %tmp540 = sub i32 %j_v539, 0
  %tmp541 = add i32 %tmp540, 0
  %i_v542 = load i32, i32* %i528
  %tmp543 = sub i32 %i_v542, 0
  %tmp544 = add i32 %tmp543, 0
  %tmp545 = mul i32 %c_v527, %tmp544
  %index546 = add i32 %tmp541, %tmp545
  %element_ptr547 = getelementptr double, double* %mat_v523, i32 %index546
  %tmp_element548 = load double, double* %element_ptr547
  store double %tmp_element548, double* %element_ptr538
  %j_v549 = load i32, i32* %j531
  %tmp550 = add i32 %j_v549, 1
  store i32 %tmp550, i32* %j531
  br label %while532

merge551:                                         ; preds = %while532
  %i_v554 = load i32, i32* %i528
  %tmp555 = add i32 %i_v554, 1
  store i32 %tmp555, i32* %i528
  br label %while529

merge556:                                         ; preds = %while529
  %v_ptr559 = getelementptr inbounds %load_t, %load_t* %load_result, i32 0, i32 2
  %v560 = load %matrix_t*, %matrix_t** %v_ptr559
  %m_mat561 = getelementptr inbounds %matrix_t, %matrix_t* %v560, i32 0, i32 0
  %mat_mat562 = load double*, double** %m_mat561
  %m_r563 = getelementptr inbounds %matrix_t, %matrix_t* %v560, i32 0, i32 1
  %r_mat564 = load i32, i32* %m_r563
  %m_c565 = getelementptr inbounds %matrix_t, %matrix_t* %v560, i32 0, i32 2
  %c_mat566 = load i32, i32* %m_c565
  %size567 = mul i32 %r_mat564, %c_mat566
  %system_mat568 = alloca double, i32 %size567
  %m569 = alloca %matrix_t
  %m_mat570 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 0
  store double* %system_mat568, double** %m_mat570
  %m_r571 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 1
  store i32 %r_mat564, i32* %m_r571
  %m_c572 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 2
  store i32 %c_mat566, i32* %m_c572
  %tmp573 = sub i32 %r_mat564, 1
  %tmp574 = sub i32 %c_mat566, 1
  %i575 = alloca i32
  store i32 0, i32* %i575
  br label %while576

while576:                                         ; preds = %merge588, %merge556
  %i_v594 = load i32, i32* %i575
  %bool_val595 = icmp sle i32 %i_v594, %tmp573
  br i1 %bool_val595, label %while_body577, label %merge593

while_body577:                                    ; preds = %while576
  %j578 = alloca i32
  store i32 0, i32* %j578
  br label %while579

while579:                                         ; preds = %while_body580, %while_body577
  %j_v589 = load i32, i32* %j578
  %bool_val590 = icmp sle i32 %j_v589, %tmp574
  br i1 %bool_val590, label %while_body580, label %merge588

while_body580:                                    ; preds = %while579
  %j_v581 = load i32, i32* %j578
  %i_v582 = load i32, i32* %i575
  %tmp583 = mul i32 %c_mat566, %i_v582
  %index584 = add i32 %j_v581, %tmp583
  %element_ptr585 = getelementptr double, double* %system_mat568, i32 %index584
  store double 0.000000e+00, double* %element_ptr585
  %j_v586 = load i32, i32* %j578
  %tmp587 = add i32 %j_v586, 1
  store i32 %tmp587, i32* %j578
  br label %while579

merge588:                                         ; preds = %while579
  %i_v591 = load i32, i32* %i575
  %tmp592 = add i32 %i_v591, 1
  store i32 %tmp592, i32* %i575
  br label %while576

merge593:                                         ; preds = %while576
  %tmp596 = sub i32 %c_mat566, 1
  %tmp597 = sub i32 %r_mat564, 1
  %m_mat598 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 0
  %mat_mat599 = load double*, double** %m_mat598
  %m_r600 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 1
  %r_mat601 = load i32, i32* %m_r600
  %m_c602 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 2
  %c_mat603 = load i32, i32* %m_c602
  %m_mat604 = getelementptr inbounds %matrix_t, %matrix_t* %v560, i32 0, i32 0
  %mat_v605 = load double*, double** %m_mat604
  %m_r606 = getelementptr inbounds %matrix_t, %matrix_t* %v560, i32 0, i32 1
  %r_v607 = load i32, i32* %m_r606
  %m_c608 = getelementptr inbounds %matrix_t, %matrix_t* %v560, i32 0, i32 2
  %c_v609 = load i32, i32* %m_c608
  %i610 = alloca i32
  store i32 0, i32* %i610
  br label %while611

while611:                                         ; preds = %merge633, %merge593
  %i_v639 = load i32, i32* %i610
  %bool_val640 = icmp sle i32 %i_v639, %tmp597
  br i1 %bool_val640, label %while_body612, label %merge638

while_body612:                                    ; preds = %while611
  %j613 = alloca i32
  store i32 0, i32* %j613
  br label %while614

while614:                                         ; preds = %while_body615, %while_body612
  %j_v634 = load i32, i32* %j613
  %bool_val635 = icmp sle i32 %j_v634, %tmp596
  br i1 %bool_val635, label %while_body615, label %merge633

while_body615:                                    ; preds = %while614
  %j_v616 = load i32, i32* %j613
  %i_v617 = load i32, i32* %i610
  %tmp618 = mul i32 %c_mat603, %i_v617
  %index619 = add i32 %j_v616, %tmp618
  %element_ptr620 = getelementptr double, double* %mat_mat599, i32 %index619
  %j_v621 = load i32, i32* %j613
  %tmp622 = sub i32 %j_v621, 0
  %tmp623 = add i32 %tmp622, 0
  %i_v624 = load i32, i32* %i610
  %tmp625 = sub i32 %i_v624, 0
  %tmp626 = add i32 %tmp625, 0
  %tmp627 = mul i32 %c_v609, %tmp626
  %index628 = add i32 %tmp623, %tmp627
  %element_ptr629 = getelementptr double, double* %mat_v605, i32 %index628
  %tmp_element630 = load double, double* %element_ptr629
  store double %tmp_element630, double* %element_ptr620
  %j_v631 = load i32, i32* %j613
  %tmp632 = add i32 %j_v631, 1
  store i32 %tmp632, i32* %j613
  br label %while614

merge633:                                         ; preds = %while614
  %i_v636 = load i32, i32* %i610
  %tmp637 = add i32 %i_v636, 1
  store i32 %tmp637, i32* %i610
  br label %while611

merge638:                                         ; preds = %while611
  %7 = bitcast double* %mat_mat562 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v560 to i8*
  tail call void @free(i8* %8)
  %m_r641 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 1
  %r_mat642 = load i32, i32* %m_r641
  %m_c643 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 2
  %c_mat644 = load i32, i32* %m_c643
  %size645 = mul i32 %r_mat642, %c_mat644
  %system_mat646 = alloca double, i32 %size645
  %m647 = alloca %matrix_t
  %m_mat648 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 0
  store double* %system_mat646, double** %m_mat648
  %m_r649 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  store i32 %r_mat642, i32* %m_r649
  %m_c650 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  store i32 %c_mat644, i32* %m_c650
  %tmp651 = sub i32 %r_mat642, 1
  %tmp652 = sub i32 %c_mat644, 1
  %i653 = alloca i32
  store i32 0, i32* %i653
  br label %while654

while654:                                         ; preds = %merge666, %merge638
  %i_v672 = load i32, i32* %i653
  %bool_val673 = icmp sle i32 %i_v672, %tmp651
  br i1 %bool_val673, label %while_body655, label %merge671

while_body655:                                    ; preds = %while654
  %j656 = alloca i32
  store i32 0, i32* %j656
  br label %while657

while657:                                         ; preds = %while_body658, %while_body655
  %j_v667 = load i32, i32* %j656
  %bool_val668 = icmp sle i32 %j_v667, %tmp652
  br i1 %bool_val668, label %while_body658, label %merge666

while_body658:                                    ; preds = %while657
  %j_v659 = load i32, i32* %j656
  %i_v660 = load i32, i32* %i653
  %tmp661 = mul i32 %c_mat644, %i_v660
  %index662 = add i32 %j_v659, %tmp661
  %element_ptr663 = getelementptr double, double* %system_mat646, i32 %index662
  store double 0.000000e+00, double* %element_ptr663
  %j_v664 = load i32, i32* %j656
  %tmp665 = add i32 %j_v664, 1
  store i32 %tmp665, i32* %j656
  br label %while657

merge666:                                         ; preds = %while657
  %i_v669 = load i32, i32* %i653
  %tmp670 = add i32 %i_v669, 1
  store i32 %tmp670, i32* %i653
  br label %while654

merge671:                                         ; preds = %while654
  %tmp674 = sub i32 %c_mat644, 1
  %tmp675 = sub i32 %r_mat642, 1
  %m_mat676 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 0
  %mat_mat677 = load double*, double** %m_mat676
  %m_r678 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat679 = load i32, i32* %m_r678
  %m_c680 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat681 = load i32, i32* %m_c680
  %m_mat682 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 0
  %mat_v683 = load double*, double** %m_mat682
  %m_r684 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 1
  %r_v685 = load i32, i32* %m_r684
  %m_c686 = getelementptr inbounds %matrix_t, %matrix_t* %m569, i32 0, i32 2
  %c_v687 = load i32, i32* %m_c686
  %i688 = alloca i32
  store i32 0, i32* %i688
  br label %while689

while689:                                         ; preds = %merge711, %merge671
  %i_v717 = load i32, i32* %i688
  %bool_val718 = icmp sle i32 %i_v717, %tmp675
  br i1 %bool_val718, label %while_body690, label %merge716

while_body690:                                    ; preds = %while689
  %j691 = alloca i32
  store i32 0, i32* %j691
  br label %while692

while692:                                         ; preds = %while_body693, %while_body690
  %j_v712 = load i32, i32* %j691
  %bool_val713 = icmp sle i32 %j_v712, %tmp674
  br i1 %bool_val713, label %while_body693, label %merge711

while_body693:                                    ; preds = %while692
  %j_v694 = load i32, i32* %j691
  %i_v695 = load i32, i32* %i688
  %tmp696 = mul i32 %c_mat681, %i_v695
  %index697 = add i32 %j_v694, %tmp696
  %element_ptr698 = getelementptr double, double* %mat_mat677, i32 %index697
  %j_v699 = load i32, i32* %j691
  %tmp700 = sub i32 %j_v699, 0
  %tmp701 = add i32 %tmp700, 0
  %i_v702 = load i32, i32* %i688
  %tmp703 = sub i32 %i_v702, 0
  %tmp704 = add i32 %tmp703, 0
  %tmp705 = mul i32 %c_v687, %tmp704
  %index706 = add i32 %tmp701, %tmp705
  %element_ptr707 = getelementptr double, double* %mat_v683, i32 %index706
  %tmp_element708 = load double, double* %element_ptr707
  store double %tmp_element708, double* %element_ptr698
  %j_v709 = load i32, i32* %j691
  %tmp710 = add i32 %j_v709, 1
  store i32 %tmp710, i32* %j691
  br label %while692

merge711:                                         ; preds = %while692
  %i_v714 = load i32, i32* %i688
  %tmp715 = add i32 %i_v714, 1
  store i32 %tmp715, i32* %i688
  br label %while689

merge716:                                         ; preds = %while689
  %9 = bitcast %load_t* %load_result to i8*
  tail call void @free(i8* %9)
  %x = alloca double
  %m_r719 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 1
  %r_mat720 = load i32, i32* %m_r719
  %m_c721 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 2
  %c_mat722 = load i32, i32* %m_c721
  br i1 false, label %then, label %else

merge723:                                         ; preds = %else, %then
  %tmp724 = sub i32 %r_mat720, 1
  %tmp729 = icmp slt i32 %tmp724, 0
  br i1 %tmp729, label %then726, label %else728

then:                                             ; preds = %merge716
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge723

else:                                             ; preds = %merge716
  br label %merge723

merge725:                                         ; preds = %else728, %then726
  br i1 false, label %then731, label %else733

then726:                                          ; preds = %merge723
  %printf727 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge725

else728:                                          ; preds = %merge723
  br label %merge725

merge730:                                         ; preds = %else733, %then731
  %tmp734 = sub i32 %r_mat720, 1
  %tmp739 = icmp slt i32 %tmp734, 0
  br i1 %tmp739, label %then736, label %else738

then731:                                          ; preds = %merge725
  %printf732 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge730

else733:                                          ; preds = %merge725
  br label %merge730

merge735:                                         ; preds = %else738, %then736
  br i1 false, label %then741, label %else743

then736:                                          ; preds = %merge730
  %printf737 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge735

else738:                                          ; preds = %merge730
  br label %merge735

merge740:                                         ; preds = %else743, %then741
  %tmp744 = sub i32 %c_mat722, 1
  %tmp749 = icmp slt i32 %tmp744, 0
  br i1 %tmp749, label %then746, label %else748

then741:                                          ; preds = %merge735
  %printf742 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge740

else743:                                          ; preds = %merge735
  br label %merge740

merge745:                                         ; preds = %else748, %then746
  br i1 false, label %then751, label %else753

then746:                                          ; preds = %merge740
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge740
  br label %merge745

merge750:                                         ; preds = %else753, %then751
  %tmp754 = sub i32 %c_mat722, 1
  %tmp759 = icmp slt i32 %tmp754, 0
  br i1 %tmp759, label %then756, label %else758

then751:                                          ; preds = %merge745
  %printf752 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge750

else753:                                          ; preds = %merge745
  br label %merge750

merge755:                                         ; preds = %else758, %then756
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 0
  %mat760 = load double*, double** %mat
  %tmp761 = mul i32 %c_mat722, 0
  %index762 = add i32 0, %tmp761
  %element_ptr763 = getelementptr double, double* %mat760, i32 %index762
  %element = load double, double* %element_ptr763
  %tmp764 = load double, double* %x
  store double %element, double* %x
  %y = alloca double
  %m_r765 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 1
  %r_mat766 = load i32, i32* %m_r765
  %m_c767 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 2
  %c_mat768 = load i32, i32* %m_c767
  br i1 false, label %then770, label %else772

then756:                                          ; preds = %merge750
  %printf757 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge755

else758:                                          ; preds = %merge750
  br label %merge755

merge769:                                         ; preds = %else772, %then770
  %tmp773 = sub i32 %r_mat766, 1
  %tmp778 = icmp slt i32 %tmp773, 1
  br i1 %tmp778, label %then775, label %else777

then770:                                          ; preds = %merge755
  %printf771 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge769

else772:                                          ; preds = %merge755
  br label %merge769

merge774:                                         ; preds = %else777, %then775
  br i1 false, label %then780, label %else782

then775:                                          ; preds = %merge769
  %printf776 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge774

else777:                                          ; preds = %merge769
  br label %merge774

merge779:                                         ; preds = %else782, %then780
  %tmp783 = sub i32 %r_mat766, 1
  %tmp788 = icmp slt i32 %tmp783, 1
  br i1 %tmp788, label %then785, label %else787

then780:                                          ; preds = %merge774
  %printf781 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge779

else782:                                          ; preds = %merge774
  br label %merge779

merge784:                                         ; preds = %else787, %then785
  br i1 false, label %then790, label %else792

then785:                                          ; preds = %merge779
  %printf786 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge784

else787:                                          ; preds = %merge779
  br label %merge784

merge789:                                         ; preds = %else792, %then790
  %tmp793 = sub i32 %c_mat768, 1
  %tmp798 = icmp slt i32 %tmp793, 0
  br i1 %tmp798, label %then795, label %else797

then790:                                          ; preds = %merge784
  %printf791 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge789

else792:                                          ; preds = %merge784
  br label %merge789

merge794:                                         ; preds = %else797, %then795
  br i1 false, label %then800, label %else802

then795:                                          ; preds = %merge789
  %printf796 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge794

else797:                                          ; preds = %merge789
  br label %merge794

merge799:                                         ; preds = %else802, %then800
  %tmp803 = sub i32 %c_mat768, 1
  %tmp808 = icmp slt i32 %tmp803, 0
  br i1 %tmp808, label %then805, label %else807

then800:                                          ; preds = %merge794
  %printf801 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge799

else802:                                          ; preds = %merge794
  br label %merge799

merge804:                                         ; preds = %else807, %then805
  %mat809 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 0
  %mat810 = load double*, double** %mat809
  %tmp811 = mul i32 %c_mat768, 1
  %index812 = add i32 0, %tmp811
  %element_ptr813 = getelementptr double, double* %mat810, i32 %index812
  %element814 = load double, double* %element_ptr813
  %tmp815 = load double, double* %y
  store double %element814, double* %y
  %l = alloca double
  %m_r816 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 1
  %r_mat817 = load i32, i32* %m_r816
  %m_c818 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 2
  %c_mat819 = load i32, i32* %m_c818
  br i1 false, label %then821, label %else823

then805:                                          ; preds = %merge799
  %printf806 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge804

else807:                                          ; preds = %merge799
  br label %merge804

merge820:                                         ; preds = %else823, %then821
  %tmp824 = sub i32 %r_mat817, 1
  %tmp829 = icmp slt i32 %tmp824, 2
  br i1 %tmp829, label %then826, label %else828

then821:                                          ; preds = %merge804
  %printf822 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge820

else823:                                          ; preds = %merge804
  br label %merge820

merge825:                                         ; preds = %else828, %then826
  br i1 false, label %then831, label %else833

then826:                                          ; preds = %merge820
  %printf827 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge825

else828:                                          ; preds = %merge820
  br label %merge825

merge830:                                         ; preds = %else833, %then831
  %tmp834 = sub i32 %r_mat817, 1
  %tmp839 = icmp slt i32 %tmp834, 2
  br i1 %tmp839, label %then836, label %else838

then831:                                          ; preds = %merge825
  %printf832 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge830

else833:                                          ; preds = %merge825
  br label %merge830

merge835:                                         ; preds = %else838, %then836
  br i1 false, label %then841, label %else843

then836:                                          ; preds = %merge830
  %printf837 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge835

else838:                                          ; preds = %merge830
  br label %merge835

merge840:                                         ; preds = %else843, %then841
  %tmp844 = sub i32 %c_mat819, 1
  %tmp849 = icmp slt i32 %tmp844, 0
  br i1 %tmp849, label %then846, label %else848

then841:                                          ; preds = %merge835
  %printf842 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge840

else843:                                          ; preds = %merge835
  br label %merge840

merge845:                                         ; preds = %else848, %then846
  br i1 false, label %then851, label %else853

then846:                                          ; preds = %merge840
  %printf847 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge845

else848:                                          ; preds = %merge840
  br label %merge845

merge850:                                         ; preds = %else853, %then851
  %tmp854 = sub i32 %c_mat819, 1
  %tmp859 = icmp slt i32 %tmp854, 0
  br i1 %tmp859, label %then856, label %else858

then851:                                          ; preds = %merge845
  %printf852 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge850

else853:                                          ; preds = %merge845
  br label %merge850

merge855:                                         ; preds = %else858, %then856
  %mat860 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 0
  %mat861 = load double*, double** %mat860
  %tmp862 = mul i32 %c_mat819, 2
  %index863 = add i32 0, %tmp862
  %element_ptr864 = getelementptr double, double* %mat861, i32 %index863
  %element865 = load double, double* %element_ptr864
  %tmp866 = load double, double* %l
  store double %element865, double* %l
  %w = alloca double
  %m_r867 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 1
  %r_mat868 = load i32, i32* %m_r867
  %m_c869 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 2
  %c_mat870 = load i32, i32* %m_c869
  br i1 false, label %then872, label %else874

then856:                                          ; preds = %merge850
  %printf857 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge855

else858:                                          ; preds = %merge850
  br label %merge855

merge871:                                         ; preds = %else874, %then872
  %tmp875 = sub i32 %r_mat868, 1
  %tmp880 = icmp slt i32 %tmp875, 3
  br i1 %tmp880, label %then877, label %else879

then872:                                          ; preds = %merge855
  %printf873 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge871

else874:                                          ; preds = %merge855
  br label %merge871

merge876:                                         ; preds = %else879, %then877
  br i1 false, label %then882, label %else884

then877:                                          ; preds = %merge871
  %printf878 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge876

else879:                                          ; preds = %merge871
  br label %merge876

merge881:                                         ; preds = %else884, %then882
  %tmp885 = sub i32 %r_mat868, 1
  %tmp890 = icmp slt i32 %tmp885, 3
  br i1 %tmp890, label %then887, label %else889

then882:                                          ; preds = %merge876
  %printf883 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge881

else884:                                          ; preds = %merge876
  br label %merge881

merge886:                                         ; preds = %else889, %then887
  br i1 false, label %then892, label %else894

then887:                                          ; preds = %merge881
  %printf888 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge886

else889:                                          ; preds = %merge881
  br label %merge886

merge891:                                         ; preds = %else894, %then892
  %tmp895 = sub i32 %c_mat870, 1
  %tmp900 = icmp slt i32 %tmp895, 0
  br i1 %tmp900, label %then897, label %else899

then892:                                          ; preds = %merge886
  %printf893 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge891

else894:                                          ; preds = %merge886
  br label %merge891

merge896:                                         ; preds = %else899, %then897
  br i1 false, label %then902, label %else904

then897:                                          ; preds = %merge891
  %printf898 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge896

else899:                                          ; preds = %merge891
  br label %merge896

merge901:                                         ; preds = %else904, %then902
  %tmp905 = sub i32 %c_mat870, 1
  %tmp910 = icmp slt i32 %tmp905, 0
  br i1 %tmp910, label %then907, label %else909

then902:                                          ; preds = %merge896
  %printf903 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge901

else904:                                          ; preds = %merge896
  br label %merge901

merge906:                                         ; preds = %else909, %then907
  %mat911 = getelementptr inbounds %matrix_t, %matrix_t* %m89, i32 0, i32 0
  %mat912 = load double*, double** %mat911
  %tmp913 = mul i32 %c_mat870, 3
  %index914 = add i32 0, %tmp913
  %element_ptr915 = getelementptr double, double* %mat912, i32 %index914
  %element916 = load double, double* %element_ptr915
  %tmp917 = load double, double* %w
  store double %element916, double* %w
  %i918 = alloca i32
  %tmp919 = load i32, i32* %i918
  store i32 0, i32* %i918
  %i920 = load i32, i32* %i918
  %x921 = load double, double* %x
  %l922 = load double, double* %l
  %tmp923 = fdiv double %l922, 2.000000e+00
  %tmp924 = fadd double %x921, %tmp923
  %double2int_result = call %double_to_int_t* @double2int(double %tmp924)
  %v_ptr925 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result, i32 0, i32 0
  %v926 = load i32, i32* %v_ptr925
  %10 = bitcast %double_to_int_t* %double2int_result to i8*
  tail call void @free(i8* %10)
  %tmp927 = icmp sle i32 %i920, %v926
  %x928 = load double, double* %x
  %l929 = load double, double* %l
  %tmp930 = fdiv double %l929, 2.000000e+00
  %tmp931 = fsub double %x928, %tmp930
  %double2int_result932 = call %double_to_int_t* @double2int(double %tmp931)
  %v_ptr933 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result932, i32 0, i32 0
  %v934 = load i32, i32* %v_ptr933
  %11 = bitcast %double_to_int_t* %double2int_result932 to i8*
  tail call void @free(i8* %11)
  %tmp935 = load i32, i32* %i918
  store i32 %v934, i32* %i918
  br label %while936

then907:                                          ; preds = %merge901
  %printf908 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge906

else909:                                          ; preds = %merge901
  br label %merge906

while936:                                         ; preds = %merge2462, %merge906
  %i2469 = load i32, i32* %i918
  %x2470 = load double, double* %x
  %l2471 = load double, double* %l
  %tmp2472 = fdiv double %l2471, 2.000000e+00
  %tmp2473 = fadd double %x2470, %tmp2472
  %double2int_result2474 = call %double_to_int_t* @double2int(double %tmp2473)
  %v_ptr2475 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2474, i32 0, i32 0
  %v2476 = load i32, i32* %v_ptr2475
  %12 = bitcast %double_to_int_t* %double2int_result2474 to i8*
  tail call void @free(i8* %12)
  %tmp2477 = icmp sle i32 %i2469, %v2476
  br i1 %tmp2477, label %while_body937, label %merge2468

while_body937:                                    ; preds = %while936
  %zeros_result = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr938 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v939 = load %matrix_t*, %matrix_t** %v_ptr938
  %13 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %13)
  %m_mat940 = getelementptr inbounds %matrix_t, %matrix_t* %v939, i32 0, i32 0
  %mat_mat941 = load double*, double** %m_mat940
  %m_r942 = getelementptr inbounds %matrix_t, %matrix_t* %v939, i32 0, i32 1
  %r_mat943 = load i32, i32* %m_r942
  %m_c944 = getelementptr inbounds %matrix_t, %matrix_t* %v939, i32 0, i32 2
  %c_mat945 = load i32, i32* %m_c944
  %size946 = mul i32 %r_mat943, %c_mat945
  %system_mat947 = alloca double, i32 %size946
  %m948 = alloca %matrix_t
  %m_mat949 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 0
  store double* %system_mat947, double** %m_mat949
  %m_r950 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 1
  store i32 %r_mat943, i32* %m_r950
  %m_c951 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 2
  store i32 %c_mat945, i32* %m_c951
  %tmp952 = sub i32 %r_mat943, 1
  %tmp953 = sub i32 %c_mat945, 1
  %i954 = alloca i32
  store i32 0, i32* %i954
  br label %while955

while955:                                         ; preds = %merge967, %while_body937
  %i_v973 = load i32, i32* %i954
  %bool_val974 = icmp sle i32 %i_v973, %tmp952
  br i1 %bool_val974, label %while_body956, label %merge972

while_body956:                                    ; preds = %while955
  %j957 = alloca i32
  store i32 0, i32* %j957
  br label %while958

while958:                                         ; preds = %while_body959, %while_body956
  %j_v968 = load i32, i32* %j957
  %bool_val969 = icmp sle i32 %j_v968, %tmp953
  br i1 %bool_val969, label %while_body959, label %merge967

while_body959:                                    ; preds = %while958
  %j_v960 = load i32, i32* %j957
  %i_v961 = load i32, i32* %i954
  %tmp962 = mul i32 %c_mat945, %i_v961
  %index963 = add i32 %j_v960, %tmp962
  %element_ptr964 = getelementptr double, double* %system_mat947, i32 %index963
  store double 0.000000e+00, double* %element_ptr964
  %j_v965 = load i32, i32* %j957
  %tmp966 = add i32 %j_v965, 1
  store i32 %tmp966, i32* %j957
  br label %while958

merge967:                                         ; preds = %while958
  %i_v970 = load i32, i32* %i954
  %tmp971 = add i32 %i_v970, 1
  store i32 %tmp971, i32* %i954
  br label %while955

merge972:                                         ; preds = %while955
  %tmp975 = sub i32 %c_mat945, 1
  %tmp976 = sub i32 %r_mat943, 1
  %m_mat977 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 0
  %mat_mat978 = load double*, double** %m_mat977
  %m_r979 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 1
  %r_mat980 = load i32, i32* %m_r979
  %m_c981 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 2
  %c_mat982 = load i32, i32* %m_c981
  %m_mat983 = getelementptr inbounds %matrix_t, %matrix_t* %v939, i32 0, i32 0
  %mat_v984 = load double*, double** %m_mat983
  %m_r985 = getelementptr inbounds %matrix_t, %matrix_t* %v939, i32 0, i32 1
  %r_v986 = load i32, i32* %m_r985
  %m_c987 = getelementptr inbounds %matrix_t, %matrix_t* %v939, i32 0, i32 2
  %c_v988 = load i32, i32* %m_c987
  %i989 = alloca i32
  store i32 0, i32* %i989
  br label %while990

while990:                                         ; preds = %merge1012, %merge972
  %i_v1018 = load i32, i32* %i989
  %bool_val1019 = icmp sle i32 %i_v1018, %tmp976
  br i1 %bool_val1019, label %while_body991, label %merge1017

while_body991:                                    ; preds = %while990
  %j992 = alloca i32
  store i32 0, i32* %j992
  br label %while993

while993:                                         ; preds = %while_body994, %while_body991
  %j_v1013 = load i32, i32* %j992
  %bool_val1014 = icmp sle i32 %j_v1013, %tmp975
  br i1 %bool_val1014, label %while_body994, label %merge1012

while_body994:                                    ; preds = %while993
  %j_v995 = load i32, i32* %j992
  %i_v996 = load i32, i32* %i989
  %tmp997 = mul i32 %c_mat982, %i_v996
  %index998 = add i32 %j_v995, %tmp997
  %element_ptr999 = getelementptr double, double* %mat_mat978, i32 %index998
  %j_v1000 = load i32, i32* %j992
  %tmp1001 = sub i32 %j_v1000, 0
  %tmp1002 = add i32 %tmp1001, 0
  %i_v1003 = load i32, i32* %i989
  %tmp1004 = sub i32 %i_v1003, 0
  %tmp1005 = add i32 %tmp1004, 0
  %tmp1006 = mul i32 %c_v988, %tmp1005
  %index1007 = add i32 %tmp1002, %tmp1006
  %element_ptr1008 = getelementptr double, double* %mat_v984, i32 %index1007
  %tmp_element1009 = load double, double* %element_ptr1008
  store double %tmp_element1009, double* %element_ptr999
  %j_v1010 = load i32, i32* %j992
  %tmp1011 = add i32 %j_v1010, 1
  store i32 %tmp1011, i32* %j992
  br label %while993

merge1012:                                        ; preds = %while993
  %i_v1015 = load i32, i32* %i989
  %tmp1016 = add i32 %i_v1015, 1
  store i32 %tmp1016, i32* %i989
  br label %while990

merge1017:                                        ; preds = %while990
  %14 = bitcast double* %mat_mat941 to i8*
  tail call void @free(i8* %14)
  %15 = bitcast %matrix_t* %v939 to i8*
  tail call void @free(i8* %15)
  %m_mat1020 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 0
  %mat_mat1021 = load double*, double** %m_mat1020
  %m_r1022 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 1
  %r_mat1023 = load i32, i32* %m_r1022
  %tmp1024 = sub i32 %r_mat1023, 1
  %m_c1025 = getelementptr inbounds %matrix_t, %matrix_t* %m948, i32 0, i32 2
  %c_mat1026 = load i32, i32* %m_c1025
  %tmp1027 = sub i32 %c_mat1026, 1
  %size1028 = mul i32 %r_mat1023, %c_mat1026
  %system_mat1029 = alloca double, i32 %size1028
  %m1030 = alloca %matrix_t
  %m_mat1031 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 0
  store double* %system_mat1029, double** %m_mat1031
  %m_r1032 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 1
  store i32 %r_mat1023, i32* %m_r1032
  %m_c1033 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 2
  store i32 %c_mat1026, i32* %m_c1033
  %tmp1034 = sub i32 %r_mat1023, 1
  %tmp1035 = sub i32 %c_mat1026, 1
  %i1036 = alloca i32
  store i32 0, i32* %i1036
  br label %while1037

while1037:                                        ; preds = %merge1049, %merge1017
  %i_v1055 = load i32, i32* %i1036
  %bool_val1056 = icmp sle i32 %i_v1055, %tmp1034
  br i1 %bool_val1056, label %while_body1038, label %merge1054

while_body1038:                                   ; preds = %while1037
  %j1039 = alloca i32
  store i32 0, i32* %j1039
  br label %while1040

while1040:                                        ; preds = %while_body1041, %while_body1038
  %j_v1050 = load i32, i32* %j1039
  %bool_val1051 = icmp sle i32 %j_v1050, %tmp1035
  br i1 %bool_val1051, label %while_body1041, label %merge1049

while_body1041:                                   ; preds = %while1040
  %j_v1042 = load i32, i32* %j1039
  %i_v1043 = load i32, i32* %i1036
  %tmp1044 = mul i32 %c_mat1026, %i_v1043
  %index1045 = add i32 %j_v1042, %tmp1044
  %element_ptr1046 = getelementptr double, double* %system_mat1029, i32 %index1045
  store double 0.000000e+00, double* %element_ptr1046
  %j_v1047 = load i32, i32* %j1039
  %tmp1048 = add i32 %j_v1047, 1
  store i32 %tmp1048, i32* %j1039
  br label %while1040

merge1049:                                        ; preds = %while1040
  %i_v1052 = load i32, i32* %i1036
  %tmp1053 = add i32 %i_v1052, 1
  store i32 %tmp1053, i32* %i1036
  br label %while1037

merge1054:                                        ; preds = %while1037
  %m_mat1057 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 0
  %mat_mat1058 = load double*, double** %m_mat1057
  %i1059 = alloca i32
  store i32 0, i32* %i1059
  br label %while1060

while1060:                                        ; preds = %merge1079, %merge1054
  %i_v1085 = load i32, i32* %i1059
  %bool_val1086 = icmp sle i32 %i_v1085, %tmp1024
  br i1 %bool_val1086, label %while_body1061, label %merge1084

while_body1061:                                   ; preds = %while1060
  %j1062 = alloca i32
  store i32 0, i32* %j1062
  br label %while1063

while1063:                                        ; preds = %while_body1064, %while_body1061
  %j_v1080 = load i32, i32* %j1062
  %bool_val1081 = icmp sle i32 %j_v1080, %tmp1027
  br i1 %bool_val1081, label %while_body1064, label %merge1079

while_body1064:                                   ; preds = %while1063
  %j_v1065 = load i32, i32* %j1062
  %i_v1066 = load i32, i32* %i1059
  %tmp1067 = mul i32 %c_mat1026, %i_v1066
  %index1068 = add i32 %j_v1065, %tmp1067
  %element_ptr1069 = getelementptr double, double* %mat_mat1021, i32 %index1068
  %tmp_element1070 = load double, double* %element_ptr1069
  %j_v1071 = load i32, i32* %j1062
  %i_v1072 = load i32, i32* %i1059
  %tmp1073 = mul i32 %c_mat1026, %i_v1072
  %index1074 = add i32 %j_v1071, %tmp1073
  %element_ptr1075 = getelementptr double, double* %mat_mat1058, i32 %index1074
  %tmp_element1076 = fsub double %tmp_element1070, 2.550000e+02
  store double %tmp_element1076, double* %element_ptr1075
  %j_v1077 = load i32, i32* %j1062
  %tmp1078 = add i32 %j_v1077, 1
  store i32 %tmp1078, i32* %j1062
  br label %while1063

merge1079:                                        ; preds = %while1063
  %i_v1082 = load i32, i32* %i1059
  %tmp1083 = add i32 %i_v1082, 1
  store i32 %tmp1083, i32* %i1059
  br label %while1060

merge1084:                                        ; preds = %while1060
  %m_r1087 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat1088 = load i32, i32* %m_r1087
  %m_c1089 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat1090 = load i32, i32* %m_c1089
  %i1091 = load i32, i32* %i918
  %tmp1096 = icmp sgt i32 0, %i1091
  br i1 %tmp1096, label %then1093, label %else1095

merge1092:                                        ; preds = %else1095, %then1093
  %tmp1097 = sub i32 %r_mat1088, 1
  %tmp1102 = icmp slt i32 %tmp1097, %i1091
  br i1 %tmp1102, label %then1099, label %else1101

then1093:                                         ; preds = %merge1084
  %printf1094 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1092

else1095:                                         ; preds = %merge1084
  br label %merge1092

merge1098:                                        ; preds = %else1101, %then1099
  %i1103 = load i32, i32* %i918
  %tmp1108 = icmp sgt i32 0, %i1103
  br i1 %tmp1108, label %then1105, label %else1107

then1099:                                         ; preds = %merge1092
  %printf1100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1098

else1101:                                         ; preds = %merge1092
  br label %merge1098

merge1104:                                        ; preds = %else1107, %then1105
  %tmp1109 = sub i32 %r_mat1088, 1
  %tmp1114 = icmp slt i32 %tmp1109, %i1103
  br i1 %tmp1114, label %then1111, label %else1113

then1105:                                         ; preds = %merge1098
  %printf1106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1104

else1107:                                         ; preds = %merge1098
  br label %merge1104

merge1110:                                        ; preds = %else1113, %then1111
  %y1115 = load double, double* %y
  %w1116 = load double, double* %w
  %tmp1117 = fdiv double %w1116, 2.000000e+00
  %tmp1118 = fsub double %y1115, %tmp1117
  %tmp1119 = fsub double %tmp1118, 2.000000e+00
  %double2int_result1120 = call %double_to_int_t* @double2int(double %tmp1119)
  %v_ptr1121 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1120, i32 0, i32 0
  %v1122 = load i32, i32* %v_ptr1121
  %16 = bitcast %double_to_int_t* %double2int_result1120 to i8*
  tail call void @free(i8* %16)
  %tmp1127 = icmp sgt i32 0, %v1122
  br i1 %tmp1127, label %then1124, label %else1126

then1111:                                         ; preds = %merge1104
  %printf1112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1110

else1113:                                         ; preds = %merge1104
  br label %merge1110

merge1123:                                        ; preds = %else1126, %then1124
  %tmp1128 = sub i32 %c_mat1090, 1
  %tmp1133 = icmp slt i32 %tmp1128, %v1122
  br i1 %tmp1133, label %then1130, label %else1132

then1124:                                         ; preds = %merge1110
  %printf1125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1123

else1126:                                         ; preds = %merge1110
  br label %merge1123

merge1129:                                        ; preds = %else1132, %then1130
  %y1134 = load double, double* %y
  %w1135 = load double, double* %w
  %tmp1136 = fdiv double %w1135, 2.000000e+00
  %tmp1137 = fsub double %y1134, %tmp1136
  %tmp1138 = fadd double %tmp1137, 2.000000e+00
  %double2int_result1139 = call %double_to_int_t* @double2int(double %tmp1138)
  %v_ptr1140 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1139, i32 0, i32 0
  %v1141 = load i32, i32* %v_ptr1140
  %17 = bitcast %double_to_int_t* %double2int_result1139 to i8*
  tail call void @free(i8* %17)
  %tmp1146 = icmp sgt i32 0, %v1141
  br i1 %tmp1146, label %then1143, label %else1145

then1130:                                         ; preds = %merge1123
  %printf1131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1129

else1132:                                         ; preds = %merge1123
  br label %merge1129

merge1142:                                        ; preds = %else1145, %then1143
  %tmp1147 = sub i32 %c_mat1090, 1
  %tmp1152 = icmp slt i32 %tmp1147, %v1141
  br i1 %tmp1152, label %then1149, label %else1151

then1143:                                         ; preds = %merge1129
  %printf1144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1142

else1145:                                         ; preds = %merge1129
  br label %merge1142

merge1148:                                        ; preds = %else1151, %then1149
  %tmp1153 = sub i32 %i1103, %i1091
  %tmp1154 = add i32 %tmp1153, 1
  %m_r1155 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 1
  %r_mat1156 = load i32, i32* %m_r1155
  %tmp1161 = icmp ne i32 %tmp1154, %r_mat1156
  br i1 %tmp1161, label %then1158, label %else1160

then1149:                                         ; preds = %merge1142
  %printf1150 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1148

else1151:                                         ; preds = %merge1142
  br label %merge1148

merge1157:                                        ; preds = %else1160, %then1158
  %tmp1162 = sub i32 %v1141, %v1122
  %tmp1163 = add i32 %tmp1162, 1
  %m_r1164 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 2
  %r_mat1165 = load i32, i32* %m_r1164
  %tmp1170 = icmp ne i32 %tmp1163, %r_mat1165
  br i1 %tmp1170, label %then1167, label %else1169

then1158:                                         ; preds = %merge1148
  %printf1159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1157

else1160:                                         ; preds = %merge1148
  br label %merge1157

merge1166:                                        ; preds = %else1169, %then1167
  %m_mat1171 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 0
  %mat_mat1172 = load double*, double** %m_mat1171
  %m_r1173 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat1174 = load i32, i32* %m_r1173
  %m_c1175 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat1176 = load i32, i32* %m_c1175
  %m_mat1177 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 0
  %mat_v1178 = load double*, double** %m_mat1177
  %m_r1179 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 1
  %r_v1180 = load i32, i32* %m_r1179
  %m_c1181 = getelementptr inbounds %matrix_t, %matrix_t* %m1030, i32 0, i32 2
  %c_v1182 = load i32, i32* %m_c1181
  %i1183 = alloca i32
  store i32 %i1091, i32* %i1183
  br label %while1184

then1167:                                         ; preds = %merge1157
  %printf1168 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1166

else1169:                                         ; preds = %merge1157
  br label %merge1166

while1184:                                        ; preds = %merge1206, %merge1166
  %i_v1212 = load i32, i32* %i1183
  %bool_val1213 = icmp sle i32 %i_v1212, %i1103
  br i1 %bool_val1213, label %while_body1185, label %merge1211

while_body1185:                                   ; preds = %while1184
  %j1186 = alloca i32
  store i32 %v1122, i32* %j1186
  br label %while1187

while1187:                                        ; preds = %while_body1188, %while_body1185
  %j_v1207 = load i32, i32* %j1186
  %bool_val1208 = icmp sle i32 %j_v1207, %v1141
  br i1 %bool_val1208, label %while_body1188, label %merge1206

while_body1188:                                   ; preds = %while1187
  %j_v1189 = load i32, i32* %j1186
  %i_v1190 = load i32, i32* %i1183
  %tmp1191 = mul i32 %c_mat1176, %i_v1190
  %index1192 = add i32 %j_v1189, %tmp1191
  %element_ptr1193 = getelementptr double, double* %mat_mat1172, i32 %index1192
  %j_v1194 = load i32, i32* %j1186
  %tmp1195 = sub i32 %j_v1194, %v1122
  %tmp1196 = add i32 %tmp1195, 0
  %i_v1197 = load i32, i32* %i1183
  %tmp1198 = sub i32 %i_v1197, %i1091
  %tmp1199 = add i32 %tmp1198, 0
  %tmp1200 = mul i32 %c_v1182, %tmp1199
  %index1201 = add i32 %tmp1196, %tmp1200
  %element_ptr1202 = getelementptr double, double* %mat_v1178, i32 %index1201
  %tmp_element1203 = load double, double* %element_ptr1202
  store double %tmp_element1203, double* %element_ptr1193
  %j_v1204 = load i32, i32* %j1186
  %tmp1205 = add i32 %j_v1204, 1
  store i32 %tmp1205, i32* %j1186
  br label %while1187

merge1206:                                        ; preds = %while1187
  %i_v1209 = load i32, i32* %i1183
  %tmp1210 = add i32 %i_v1209, 1
  store i32 %tmp1210, i32* %i1183
  br label %while1184

merge1211:                                        ; preds = %while1184
  %zeros_result1214 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1215 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1214, i32 0, i32 0
  %v1216 = load %matrix_t*, %matrix_t** %v_ptr1215
  %18 = bitcast %zero_matrix_t* %zeros_result1214 to i8*
  tail call void @free(i8* %18)
  %m_mat1217 = getelementptr inbounds %matrix_t, %matrix_t* %v1216, i32 0, i32 0
  %mat_mat1218 = load double*, double** %m_mat1217
  %m_r1219 = getelementptr inbounds %matrix_t, %matrix_t* %v1216, i32 0, i32 1
  %r_mat1220 = load i32, i32* %m_r1219
  %m_c1221 = getelementptr inbounds %matrix_t, %matrix_t* %v1216, i32 0, i32 2
  %c_mat1222 = load i32, i32* %m_c1221
  %size1223 = mul i32 %r_mat1220, %c_mat1222
  %system_mat1224 = alloca double, i32 %size1223
  %m1225 = alloca %matrix_t
  %m_mat1226 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 0
  store double* %system_mat1224, double** %m_mat1226
  %m_r1227 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 1
  store i32 %r_mat1220, i32* %m_r1227
  %m_c1228 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 2
  store i32 %c_mat1222, i32* %m_c1228
  %tmp1229 = sub i32 %r_mat1220, 1
  %tmp1230 = sub i32 %c_mat1222, 1
  %i1231 = alloca i32
  store i32 0, i32* %i1231
  br label %while1232

while1232:                                        ; preds = %merge1244, %merge1211
  %i_v1250 = load i32, i32* %i1231
  %bool_val1251 = icmp sle i32 %i_v1250, %tmp1229
  br i1 %bool_val1251, label %while_body1233, label %merge1249

while_body1233:                                   ; preds = %while1232
  %j1234 = alloca i32
  store i32 0, i32* %j1234
  br label %while1235

while1235:                                        ; preds = %while_body1236, %while_body1233
  %j_v1245 = load i32, i32* %j1234
  %bool_val1246 = icmp sle i32 %j_v1245, %tmp1230
  br i1 %bool_val1246, label %while_body1236, label %merge1244

while_body1236:                                   ; preds = %while1235
  %j_v1237 = load i32, i32* %j1234
  %i_v1238 = load i32, i32* %i1231
  %tmp1239 = mul i32 %c_mat1222, %i_v1238
  %index1240 = add i32 %j_v1237, %tmp1239
  %element_ptr1241 = getelementptr double, double* %system_mat1224, i32 %index1240
  store double 0.000000e+00, double* %element_ptr1241
  %j_v1242 = load i32, i32* %j1234
  %tmp1243 = add i32 %j_v1242, 1
  store i32 %tmp1243, i32* %j1234
  br label %while1235

merge1244:                                        ; preds = %while1235
  %i_v1247 = load i32, i32* %i1231
  %tmp1248 = add i32 %i_v1247, 1
  store i32 %tmp1248, i32* %i1231
  br label %while1232

merge1249:                                        ; preds = %while1232
  %tmp1252 = sub i32 %c_mat1222, 1
  %tmp1253 = sub i32 %r_mat1220, 1
  %m_mat1254 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 0
  %mat_mat1255 = load double*, double** %m_mat1254
  %m_r1256 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 1
  %r_mat1257 = load i32, i32* %m_r1256
  %m_c1258 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 2
  %c_mat1259 = load i32, i32* %m_c1258
  %m_mat1260 = getelementptr inbounds %matrix_t, %matrix_t* %v1216, i32 0, i32 0
  %mat_v1261 = load double*, double** %m_mat1260
  %m_r1262 = getelementptr inbounds %matrix_t, %matrix_t* %v1216, i32 0, i32 1
  %r_v1263 = load i32, i32* %m_r1262
  %m_c1264 = getelementptr inbounds %matrix_t, %matrix_t* %v1216, i32 0, i32 2
  %c_v1265 = load i32, i32* %m_c1264
  %i1266 = alloca i32
  store i32 0, i32* %i1266
  br label %while1267

while1267:                                        ; preds = %merge1289, %merge1249
  %i_v1295 = load i32, i32* %i1266
  %bool_val1296 = icmp sle i32 %i_v1295, %tmp1253
  br i1 %bool_val1296, label %while_body1268, label %merge1294

while_body1268:                                   ; preds = %while1267
  %j1269 = alloca i32
  store i32 0, i32* %j1269
  br label %while1270

while1270:                                        ; preds = %while_body1271, %while_body1268
  %j_v1290 = load i32, i32* %j1269
  %bool_val1291 = icmp sle i32 %j_v1290, %tmp1252
  br i1 %bool_val1291, label %while_body1271, label %merge1289

while_body1271:                                   ; preds = %while1270
  %j_v1272 = load i32, i32* %j1269
  %i_v1273 = load i32, i32* %i1266
  %tmp1274 = mul i32 %c_mat1259, %i_v1273
  %index1275 = add i32 %j_v1272, %tmp1274
  %element_ptr1276 = getelementptr double, double* %mat_mat1255, i32 %index1275
  %j_v1277 = load i32, i32* %j1269
  %tmp1278 = sub i32 %j_v1277, 0
  %tmp1279 = add i32 %tmp1278, 0
  %i_v1280 = load i32, i32* %i1266
  %tmp1281 = sub i32 %i_v1280, 0
  %tmp1282 = add i32 %tmp1281, 0
  %tmp1283 = mul i32 %c_v1265, %tmp1282
  %index1284 = add i32 %tmp1279, %tmp1283
  %element_ptr1285 = getelementptr double, double* %mat_v1261, i32 %index1284
  %tmp_element1286 = load double, double* %element_ptr1285
  store double %tmp_element1286, double* %element_ptr1276
  %j_v1287 = load i32, i32* %j1269
  %tmp1288 = add i32 %j_v1287, 1
  store i32 %tmp1288, i32* %j1269
  br label %while1270

merge1289:                                        ; preds = %while1270
  %i_v1292 = load i32, i32* %i1266
  %tmp1293 = add i32 %i_v1292, 1
  store i32 %tmp1293, i32* %i1266
  br label %while1267

merge1294:                                        ; preds = %while1267
  %19 = bitcast double* %mat_mat1218 to i8*
  tail call void @free(i8* %19)
  %20 = bitcast %matrix_t* %v1216 to i8*
  tail call void @free(i8* %20)
  %m_mat1297 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 0
  %mat_mat1298 = load double*, double** %m_mat1297
  %m_r1299 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 1
  %r_mat1300 = load i32, i32* %m_r1299
  %tmp1301 = sub i32 %r_mat1300, 1
  %m_c1302 = getelementptr inbounds %matrix_t, %matrix_t* %m1225, i32 0, i32 2
  %c_mat1303 = load i32, i32* %m_c1302
  %tmp1304 = sub i32 %c_mat1303, 1
  %size1305 = mul i32 %r_mat1300, %c_mat1303
  %system_mat1306 = alloca double, i32 %size1305
  %m1307 = alloca %matrix_t
  %m_mat1308 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 0
  store double* %system_mat1306, double** %m_mat1308
  %m_r1309 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 1
  store i32 %r_mat1300, i32* %m_r1309
  %m_c1310 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 2
  store i32 %c_mat1303, i32* %m_c1310
  %tmp1311 = sub i32 %r_mat1300, 1
  %tmp1312 = sub i32 %c_mat1303, 1
  %i1313 = alloca i32
  store i32 0, i32* %i1313
  br label %while1314

while1314:                                        ; preds = %merge1326, %merge1294
  %i_v1332 = load i32, i32* %i1313
  %bool_val1333 = icmp sle i32 %i_v1332, %tmp1311
  br i1 %bool_val1333, label %while_body1315, label %merge1331

while_body1315:                                   ; preds = %while1314
  %j1316 = alloca i32
  store i32 0, i32* %j1316
  br label %while1317

while1317:                                        ; preds = %while_body1318, %while_body1315
  %j_v1327 = load i32, i32* %j1316
  %bool_val1328 = icmp sle i32 %j_v1327, %tmp1312
  br i1 %bool_val1328, label %while_body1318, label %merge1326

while_body1318:                                   ; preds = %while1317
  %j_v1319 = load i32, i32* %j1316
  %i_v1320 = load i32, i32* %i1313
  %tmp1321 = mul i32 %c_mat1303, %i_v1320
  %index1322 = add i32 %j_v1319, %tmp1321
  %element_ptr1323 = getelementptr double, double* %system_mat1306, i32 %index1322
  store double 0.000000e+00, double* %element_ptr1323
  %j_v1324 = load i32, i32* %j1316
  %tmp1325 = add i32 %j_v1324, 1
  store i32 %tmp1325, i32* %j1316
  br label %while1317

merge1326:                                        ; preds = %while1317
  %i_v1329 = load i32, i32* %i1313
  %tmp1330 = add i32 %i_v1329, 1
  store i32 %tmp1330, i32* %i1313
  br label %while1314

merge1331:                                        ; preds = %while1314
  %m_mat1334 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 0
  %mat_mat1335 = load double*, double** %m_mat1334
  %i1336 = alloca i32
  store i32 0, i32* %i1336
  br label %while1337

while1337:                                        ; preds = %merge1356, %merge1331
  %i_v1362 = load i32, i32* %i1336
  %bool_val1363 = icmp sle i32 %i_v1362, %tmp1301
  br i1 %bool_val1363, label %while_body1338, label %merge1361

while_body1338:                                   ; preds = %while1337
  %j1339 = alloca i32
  store i32 0, i32* %j1339
  br label %while1340

while1340:                                        ; preds = %while_body1341, %while_body1338
  %j_v1357 = load i32, i32* %j1339
  %bool_val1358 = icmp sle i32 %j_v1357, %tmp1304
  br i1 %bool_val1358, label %while_body1341, label %merge1356

while_body1341:                                   ; preds = %while1340
  %j_v1342 = load i32, i32* %j1339
  %i_v1343 = load i32, i32* %i1336
  %tmp1344 = mul i32 %c_mat1303, %i_v1343
  %index1345 = add i32 %j_v1342, %tmp1344
  %element_ptr1346 = getelementptr double, double* %mat_mat1298, i32 %index1345
  %tmp_element1347 = load double, double* %element_ptr1346
  %j_v1348 = load i32, i32* %j1339
  %i_v1349 = load i32, i32* %i1336
  %tmp1350 = mul i32 %c_mat1303, %i_v1349
  %index1351 = add i32 %j_v1348, %tmp1350
  %element_ptr1352 = getelementptr double, double* %mat_mat1335, i32 %index1351
  %tmp_element1353 = fsub double %tmp_element1347, 2.550000e+02
  store double %tmp_element1353, double* %element_ptr1352
  %j_v1354 = load i32, i32* %j1339
  %tmp1355 = add i32 %j_v1354, 1
  store i32 %tmp1355, i32* %j1339
  br label %while1340

merge1356:                                        ; preds = %while1340
  %i_v1359 = load i32, i32* %i1336
  %tmp1360 = add i32 %i_v1359, 1
  store i32 %tmp1360, i32* %i1336
  br label %while1337

merge1361:                                        ; preds = %while1337
  %m_r1364 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat1365 = load i32, i32* %m_r1364
  %m_c1366 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat1367 = load i32, i32* %m_c1366
  %i1368 = load i32, i32* %i918
  %tmp1373 = icmp sgt i32 0, %i1368
  br i1 %tmp1373, label %then1370, label %else1372

merge1369:                                        ; preds = %else1372, %then1370
  %tmp1374 = sub i32 %r_mat1365, 1
  %tmp1379 = icmp slt i32 %tmp1374, %i1368
  br i1 %tmp1379, label %then1376, label %else1378

then1370:                                         ; preds = %merge1361
  %printf1371 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1369

else1372:                                         ; preds = %merge1361
  br label %merge1369

merge1375:                                        ; preds = %else1378, %then1376
  %i1380 = load i32, i32* %i918
  %tmp1385 = icmp sgt i32 0, %i1380
  br i1 %tmp1385, label %then1382, label %else1384

then1376:                                         ; preds = %merge1369
  %printf1377 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1375

else1378:                                         ; preds = %merge1369
  br label %merge1375

merge1381:                                        ; preds = %else1384, %then1382
  %tmp1386 = sub i32 %r_mat1365, 1
  %tmp1391 = icmp slt i32 %tmp1386, %i1380
  br i1 %tmp1391, label %then1388, label %else1390

then1382:                                         ; preds = %merge1375
  %printf1383 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1381

else1384:                                         ; preds = %merge1375
  br label %merge1381

merge1387:                                        ; preds = %else1390, %then1388
  %y1392 = load double, double* %y
  %w1393 = load double, double* %w
  %tmp1394 = fdiv double %w1393, 2.000000e+00
  %tmp1395 = fsub double %y1392, %tmp1394
  %tmp1396 = fsub double %tmp1395, 2.000000e+00
  %double2int_result1397 = call %double_to_int_t* @double2int(double %tmp1396)
  %v_ptr1398 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1397, i32 0, i32 0
  %v1399 = load i32, i32* %v_ptr1398
  %21 = bitcast %double_to_int_t* %double2int_result1397 to i8*
  tail call void @free(i8* %21)
  %tmp1404 = icmp sgt i32 0, %v1399
  br i1 %tmp1404, label %then1401, label %else1403

then1388:                                         ; preds = %merge1381
  %printf1389 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1387

else1390:                                         ; preds = %merge1381
  br label %merge1387

merge1400:                                        ; preds = %else1403, %then1401
  %tmp1405 = sub i32 %c_mat1367, 1
  %tmp1410 = icmp slt i32 %tmp1405, %v1399
  br i1 %tmp1410, label %then1407, label %else1409

then1401:                                         ; preds = %merge1387
  %printf1402 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1400

else1403:                                         ; preds = %merge1387
  br label %merge1400

merge1406:                                        ; preds = %else1409, %then1407
  %y1411 = load double, double* %y
  %w1412 = load double, double* %w
  %tmp1413 = fdiv double %w1412, 2.000000e+00
  %tmp1414 = fsub double %y1411, %tmp1413
  %tmp1415 = fadd double %tmp1414, 2.000000e+00
  %double2int_result1416 = call %double_to_int_t* @double2int(double %tmp1415)
  %v_ptr1417 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1416, i32 0, i32 0
  %v1418 = load i32, i32* %v_ptr1417
  %22 = bitcast %double_to_int_t* %double2int_result1416 to i8*
  tail call void @free(i8* %22)
  %tmp1423 = icmp sgt i32 0, %v1418
  br i1 %tmp1423, label %then1420, label %else1422

then1407:                                         ; preds = %merge1400
  %printf1408 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1406

else1409:                                         ; preds = %merge1400
  br label %merge1406

merge1419:                                        ; preds = %else1422, %then1420
  %tmp1424 = sub i32 %c_mat1367, 1
  %tmp1429 = icmp slt i32 %tmp1424, %v1418
  br i1 %tmp1429, label %then1426, label %else1428

then1420:                                         ; preds = %merge1406
  %printf1421 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1419

else1422:                                         ; preds = %merge1406
  br label %merge1419

merge1425:                                        ; preds = %else1428, %then1426
  %tmp1430 = sub i32 %i1380, %i1368
  %tmp1431 = add i32 %tmp1430, 1
  %m_r1432 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 1
  %r_mat1433 = load i32, i32* %m_r1432
  %tmp1438 = icmp ne i32 %tmp1431, %r_mat1433
  br i1 %tmp1438, label %then1435, label %else1437

then1426:                                         ; preds = %merge1419
  %printf1427 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1425

else1428:                                         ; preds = %merge1419
  br label %merge1425

merge1434:                                        ; preds = %else1437, %then1435
  %tmp1439 = sub i32 %v1418, %v1399
  %tmp1440 = add i32 %tmp1439, 1
  %m_r1441 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 2
  %r_mat1442 = load i32, i32* %m_r1441
  %tmp1447 = icmp ne i32 %tmp1440, %r_mat1442
  br i1 %tmp1447, label %then1444, label %else1446

then1435:                                         ; preds = %merge1425
  %printf1436 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1434

else1437:                                         ; preds = %merge1425
  br label %merge1434

merge1443:                                        ; preds = %else1446, %then1444
  %m_mat1448 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 0
  %mat_mat1449 = load double*, double** %m_mat1448
  %m_r1450 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat1451 = load i32, i32* %m_r1450
  %m_c1452 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat1453 = load i32, i32* %m_c1452
  %m_mat1454 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 0
  %mat_v1455 = load double*, double** %m_mat1454
  %m_r1456 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 1
  %r_v1457 = load i32, i32* %m_r1456
  %m_c1458 = getelementptr inbounds %matrix_t, %matrix_t* %m1307, i32 0, i32 2
  %c_v1459 = load i32, i32* %m_c1458
  %i1460 = alloca i32
  store i32 %i1368, i32* %i1460
  br label %while1461

then1444:                                         ; preds = %merge1434
  %printf1445 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1443

else1446:                                         ; preds = %merge1434
  br label %merge1443

while1461:                                        ; preds = %merge1483, %merge1443
  %i_v1489 = load i32, i32* %i1460
  %bool_val1490 = icmp sle i32 %i_v1489, %i1380
  br i1 %bool_val1490, label %while_body1462, label %merge1488

while_body1462:                                   ; preds = %while1461
  %j1463 = alloca i32
  store i32 %v1399, i32* %j1463
  br label %while1464

while1464:                                        ; preds = %while_body1465, %while_body1462
  %j_v1484 = load i32, i32* %j1463
  %bool_val1485 = icmp sle i32 %j_v1484, %v1418
  br i1 %bool_val1485, label %while_body1465, label %merge1483

while_body1465:                                   ; preds = %while1464
  %j_v1466 = load i32, i32* %j1463
  %i_v1467 = load i32, i32* %i1460
  %tmp1468 = mul i32 %c_mat1453, %i_v1467
  %index1469 = add i32 %j_v1466, %tmp1468
  %element_ptr1470 = getelementptr double, double* %mat_mat1449, i32 %index1469
  %j_v1471 = load i32, i32* %j1463
  %tmp1472 = sub i32 %j_v1471, %v1399
  %tmp1473 = add i32 %tmp1472, 0
  %i_v1474 = load i32, i32* %i1460
  %tmp1475 = sub i32 %i_v1474, %i1368
  %tmp1476 = add i32 %tmp1475, 0
  %tmp1477 = mul i32 %c_v1459, %tmp1476
  %index1478 = add i32 %tmp1473, %tmp1477
  %element_ptr1479 = getelementptr double, double* %mat_v1455, i32 %index1478
  %tmp_element1480 = load double, double* %element_ptr1479
  store double %tmp_element1480, double* %element_ptr1470
  %j_v1481 = load i32, i32* %j1463
  %tmp1482 = add i32 %j_v1481, 1
  store i32 %tmp1482, i32* %j1463
  br label %while1464

merge1483:                                        ; preds = %while1464
  %i_v1486 = load i32, i32* %i1460
  %tmp1487 = add i32 %i_v1486, 1
  store i32 %tmp1487, i32* %i1460
  br label %while1461

merge1488:                                        ; preds = %while1461
  %zeros_result1491 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1492 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1491, i32 0, i32 0
  %v1493 = load %matrix_t*, %matrix_t** %v_ptr1492
  %23 = bitcast %zero_matrix_t* %zeros_result1491 to i8*
  tail call void @free(i8* %23)
  %m_mat1494 = getelementptr inbounds %matrix_t, %matrix_t* %v1493, i32 0, i32 0
  %mat_mat1495 = load double*, double** %m_mat1494
  %m_r1496 = getelementptr inbounds %matrix_t, %matrix_t* %v1493, i32 0, i32 1
  %r_mat1497 = load i32, i32* %m_r1496
  %m_c1498 = getelementptr inbounds %matrix_t, %matrix_t* %v1493, i32 0, i32 2
  %c_mat1499 = load i32, i32* %m_c1498
  %size1500 = mul i32 %r_mat1497, %c_mat1499
  %system_mat1501 = alloca double, i32 %size1500
  %m1502 = alloca %matrix_t
  %m_mat1503 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 0
  store double* %system_mat1501, double** %m_mat1503
  %m_r1504 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 1
  store i32 %r_mat1497, i32* %m_r1504
  %m_c1505 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 2
  store i32 %c_mat1499, i32* %m_c1505
  %tmp1506 = sub i32 %r_mat1497, 1
  %tmp1507 = sub i32 %c_mat1499, 1
  %i1508 = alloca i32
  store i32 0, i32* %i1508
  br label %while1509

while1509:                                        ; preds = %merge1521, %merge1488
  %i_v1527 = load i32, i32* %i1508
  %bool_val1528 = icmp sle i32 %i_v1527, %tmp1506
  br i1 %bool_val1528, label %while_body1510, label %merge1526

while_body1510:                                   ; preds = %while1509
  %j1511 = alloca i32
  store i32 0, i32* %j1511
  br label %while1512

while1512:                                        ; preds = %while_body1513, %while_body1510
  %j_v1522 = load i32, i32* %j1511
  %bool_val1523 = icmp sle i32 %j_v1522, %tmp1507
  br i1 %bool_val1523, label %while_body1513, label %merge1521

while_body1513:                                   ; preds = %while1512
  %j_v1514 = load i32, i32* %j1511
  %i_v1515 = load i32, i32* %i1508
  %tmp1516 = mul i32 %c_mat1499, %i_v1515
  %index1517 = add i32 %j_v1514, %tmp1516
  %element_ptr1518 = getelementptr double, double* %system_mat1501, i32 %index1517
  store double 0.000000e+00, double* %element_ptr1518
  %j_v1519 = load i32, i32* %j1511
  %tmp1520 = add i32 %j_v1519, 1
  store i32 %tmp1520, i32* %j1511
  br label %while1512

merge1521:                                        ; preds = %while1512
  %i_v1524 = load i32, i32* %i1508
  %tmp1525 = add i32 %i_v1524, 1
  store i32 %tmp1525, i32* %i1508
  br label %while1509

merge1526:                                        ; preds = %while1509
  %tmp1529 = sub i32 %c_mat1499, 1
  %tmp1530 = sub i32 %r_mat1497, 1
  %m_mat1531 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 0
  %mat_mat1532 = load double*, double** %m_mat1531
  %m_r1533 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 1
  %r_mat1534 = load i32, i32* %m_r1533
  %m_c1535 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 2
  %c_mat1536 = load i32, i32* %m_c1535
  %m_mat1537 = getelementptr inbounds %matrix_t, %matrix_t* %v1493, i32 0, i32 0
  %mat_v1538 = load double*, double** %m_mat1537
  %m_r1539 = getelementptr inbounds %matrix_t, %matrix_t* %v1493, i32 0, i32 1
  %r_v1540 = load i32, i32* %m_r1539
  %m_c1541 = getelementptr inbounds %matrix_t, %matrix_t* %v1493, i32 0, i32 2
  %c_v1542 = load i32, i32* %m_c1541
  %i1543 = alloca i32
  store i32 0, i32* %i1543
  br label %while1544

while1544:                                        ; preds = %merge1566, %merge1526
  %i_v1572 = load i32, i32* %i1543
  %bool_val1573 = icmp sle i32 %i_v1572, %tmp1530
  br i1 %bool_val1573, label %while_body1545, label %merge1571

while_body1545:                                   ; preds = %while1544
  %j1546 = alloca i32
  store i32 0, i32* %j1546
  br label %while1547

while1547:                                        ; preds = %while_body1548, %while_body1545
  %j_v1567 = load i32, i32* %j1546
  %bool_val1568 = icmp sle i32 %j_v1567, %tmp1529
  br i1 %bool_val1568, label %while_body1548, label %merge1566

while_body1548:                                   ; preds = %while1547
  %j_v1549 = load i32, i32* %j1546
  %i_v1550 = load i32, i32* %i1543
  %tmp1551 = mul i32 %c_mat1536, %i_v1550
  %index1552 = add i32 %j_v1549, %tmp1551
  %element_ptr1553 = getelementptr double, double* %mat_mat1532, i32 %index1552
  %j_v1554 = load i32, i32* %j1546
  %tmp1555 = sub i32 %j_v1554, 0
  %tmp1556 = add i32 %tmp1555, 0
  %i_v1557 = load i32, i32* %i1543
  %tmp1558 = sub i32 %i_v1557, 0
  %tmp1559 = add i32 %tmp1558, 0
  %tmp1560 = mul i32 %c_v1542, %tmp1559
  %index1561 = add i32 %tmp1556, %tmp1560
  %element_ptr1562 = getelementptr double, double* %mat_v1538, i32 %index1561
  %tmp_element1563 = load double, double* %element_ptr1562
  store double %tmp_element1563, double* %element_ptr1553
  %j_v1564 = load i32, i32* %j1546
  %tmp1565 = add i32 %j_v1564, 1
  store i32 %tmp1565, i32* %j1546
  br label %while1547

merge1566:                                        ; preds = %while1547
  %i_v1569 = load i32, i32* %i1543
  %tmp1570 = add i32 %i_v1569, 1
  store i32 %tmp1570, i32* %i1543
  br label %while1544

merge1571:                                        ; preds = %while1544
  %24 = bitcast double* %mat_mat1495 to i8*
  tail call void @free(i8* %24)
  %25 = bitcast %matrix_t* %v1493 to i8*
  tail call void @free(i8* %25)
  %m_r1574 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat1575 = load i32, i32* %m_r1574
  %m_c1576 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat1577 = load i32, i32* %m_c1576
  %i1578 = load i32, i32* %i918
  %tmp1583 = icmp sgt i32 0, %i1578
  br i1 %tmp1583, label %then1580, label %else1582

merge1579:                                        ; preds = %else1582, %then1580
  %tmp1584 = sub i32 %r_mat1575, 1
  %tmp1589 = icmp slt i32 %tmp1584, %i1578
  br i1 %tmp1589, label %then1586, label %else1588

then1580:                                         ; preds = %merge1571
  %printf1581 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1579

else1582:                                         ; preds = %merge1571
  br label %merge1579

merge1585:                                        ; preds = %else1588, %then1586
  %i1590 = load i32, i32* %i918
  %tmp1595 = icmp sgt i32 0, %i1590
  br i1 %tmp1595, label %then1592, label %else1594

then1586:                                         ; preds = %merge1579
  %printf1587 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1585

else1588:                                         ; preds = %merge1579
  br label %merge1585

merge1591:                                        ; preds = %else1594, %then1592
  %tmp1596 = sub i32 %r_mat1575, 1
  %tmp1601 = icmp slt i32 %tmp1596, %i1590
  br i1 %tmp1601, label %then1598, label %else1600

then1592:                                         ; preds = %merge1585
  %printf1593 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1591

else1594:                                         ; preds = %merge1585
  br label %merge1591

merge1597:                                        ; preds = %else1600, %then1598
  %y1602 = load double, double* %y
  %w1603 = load double, double* %w
  %tmp1604 = fdiv double %w1603, 2.000000e+00
  %tmp1605 = fsub double %y1602, %tmp1604
  %tmp1606 = fsub double %tmp1605, 2.000000e+00
  %double2int_result1607 = call %double_to_int_t* @double2int(double %tmp1606)
  %v_ptr1608 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1607, i32 0, i32 0
  %v1609 = load i32, i32* %v_ptr1608
  %26 = bitcast %double_to_int_t* %double2int_result1607 to i8*
  tail call void @free(i8* %26)
  %tmp1614 = icmp sgt i32 0, %v1609
  br i1 %tmp1614, label %then1611, label %else1613

then1598:                                         ; preds = %merge1591
  %printf1599 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1597

else1600:                                         ; preds = %merge1591
  br label %merge1597

merge1610:                                        ; preds = %else1613, %then1611
  %tmp1615 = sub i32 %c_mat1577, 1
  %tmp1620 = icmp slt i32 %tmp1615, %v1609
  br i1 %tmp1620, label %then1617, label %else1619

then1611:                                         ; preds = %merge1597
  %printf1612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1610

else1613:                                         ; preds = %merge1597
  br label %merge1610

merge1616:                                        ; preds = %else1619, %then1617
  %y1621 = load double, double* %y
  %w1622 = load double, double* %w
  %tmp1623 = fdiv double %w1622, 2.000000e+00
  %tmp1624 = fsub double %y1621, %tmp1623
  %tmp1625 = fadd double %tmp1624, 2.000000e+00
  %double2int_result1626 = call %double_to_int_t* @double2int(double %tmp1625)
  %v_ptr1627 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1626, i32 0, i32 0
  %v1628 = load i32, i32* %v_ptr1627
  %27 = bitcast %double_to_int_t* %double2int_result1626 to i8*
  tail call void @free(i8* %27)
  %tmp1633 = icmp sgt i32 0, %v1628
  br i1 %tmp1633, label %then1630, label %else1632

then1617:                                         ; preds = %merge1610
  %printf1618 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1616

else1619:                                         ; preds = %merge1610
  br label %merge1616

merge1629:                                        ; preds = %else1632, %then1630
  %tmp1634 = sub i32 %c_mat1577, 1
  %tmp1639 = icmp slt i32 %tmp1634, %v1628
  br i1 %tmp1639, label %then1636, label %else1638

then1630:                                         ; preds = %merge1616
  %printf1631 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1629

else1632:                                         ; preds = %merge1616
  br label %merge1629

merge1635:                                        ; preds = %else1638, %then1636
  %tmp1640 = sub i32 %i1590, %i1578
  %tmp1641 = add i32 %tmp1640, 1
  %m_r1642 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 1
  %r_mat1643 = load i32, i32* %m_r1642
  %tmp1648 = icmp ne i32 %tmp1641, %r_mat1643
  br i1 %tmp1648, label %then1645, label %else1647

then1636:                                         ; preds = %merge1629
  %printf1637 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1635

else1638:                                         ; preds = %merge1629
  br label %merge1635

merge1644:                                        ; preds = %else1647, %then1645
  %tmp1649 = sub i32 %v1628, %v1609
  %tmp1650 = add i32 %tmp1649, 1
  %m_r1651 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 2
  %r_mat1652 = load i32, i32* %m_r1651
  %tmp1657 = icmp ne i32 %tmp1650, %r_mat1652
  br i1 %tmp1657, label %then1654, label %else1656

then1645:                                         ; preds = %merge1635
  %printf1646 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1644

else1647:                                         ; preds = %merge1635
  br label %merge1644

merge1653:                                        ; preds = %else1656, %then1654
  %m_mat1658 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat1659 = load double*, double** %m_mat1658
  %m_r1660 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat1661 = load i32, i32* %m_r1660
  %m_c1662 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat1663 = load i32, i32* %m_c1662
  %m_mat1664 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 0
  %mat_v1665 = load double*, double** %m_mat1664
  %m_r1666 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 1
  %r_v1667 = load i32, i32* %m_r1666
  %m_c1668 = getelementptr inbounds %matrix_t, %matrix_t* %m1502, i32 0, i32 2
  %c_v1669 = load i32, i32* %m_c1668
  %i1670 = alloca i32
  store i32 %i1578, i32* %i1670
  br label %while1671

then1654:                                         ; preds = %merge1644
  %printf1655 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1653

else1656:                                         ; preds = %merge1644
  br label %merge1653

while1671:                                        ; preds = %merge1693, %merge1653
  %i_v1699 = load i32, i32* %i1670
  %bool_val1700 = icmp sle i32 %i_v1699, %i1590
  br i1 %bool_val1700, label %while_body1672, label %merge1698

while_body1672:                                   ; preds = %while1671
  %j1673 = alloca i32
  store i32 %v1609, i32* %j1673
  br label %while1674

while1674:                                        ; preds = %while_body1675, %while_body1672
  %j_v1694 = load i32, i32* %j1673
  %bool_val1695 = icmp sle i32 %j_v1694, %v1628
  br i1 %bool_val1695, label %while_body1675, label %merge1693

while_body1675:                                   ; preds = %while1674
  %j_v1676 = load i32, i32* %j1673
  %i_v1677 = load i32, i32* %i1670
  %tmp1678 = mul i32 %c_mat1663, %i_v1677
  %index1679 = add i32 %j_v1676, %tmp1678
  %element_ptr1680 = getelementptr double, double* %mat_mat1659, i32 %index1679
  %j_v1681 = load i32, i32* %j1673
  %tmp1682 = sub i32 %j_v1681, %v1609
  %tmp1683 = add i32 %tmp1682, 0
  %i_v1684 = load i32, i32* %i1670
  %tmp1685 = sub i32 %i_v1684, %i1578
  %tmp1686 = add i32 %tmp1685, 0
  %tmp1687 = mul i32 %c_v1669, %tmp1686
  %index1688 = add i32 %tmp1683, %tmp1687
  %element_ptr1689 = getelementptr double, double* %mat_v1665, i32 %index1688
  %tmp_element1690 = load double, double* %element_ptr1689
  store double %tmp_element1690, double* %element_ptr1680
  %j_v1691 = load i32, i32* %j1673
  %tmp1692 = add i32 %j_v1691, 1
  store i32 %tmp1692, i32* %j1673
  br label %while1674

merge1693:                                        ; preds = %while1674
  %i_v1696 = load i32, i32* %i1670
  %tmp1697 = add i32 %i_v1696, 1
  store i32 %tmp1697, i32* %i1670
  br label %while1671

merge1698:                                        ; preds = %while1671
  %zeros_result1701 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1702 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1701, i32 0, i32 0
  %v1703 = load %matrix_t*, %matrix_t** %v_ptr1702
  %28 = bitcast %zero_matrix_t* %zeros_result1701 to i8*
  tail call void @free(i8* %28)
  %m_mat1704 = getelementptr inbounds %matrix_t, %matrix_t* %v1703, i32 0, i32 0
  %mat_mat1705 = load double*, double** %m_mat1704
  %m_r1706 = getelementptr inbounds %matrix_t, %matrix_t* %v1703, i32 0, i32 1
  %r_mat1707 = load i32, i32* %m_r1706
  %m_c1708 = getelementptr inbounds %matrix_t, %matrix_t* %v1703, i32 0, i32 2
  %c_mat1709 = load i32, i32* %m_c1708
  %size1710 = mul i32 %r_mat1707, %c_mat1709
  %system_mat1711 = alloca double, i32 %size1710
  %m1712 = alloca %matrix_t
  %m_mat1713 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 0
  store double* %system_mat1711, double** %m_mat1713
  %m_r1714 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 1
  store i32 %r_mat1707, i32* %m_r1714
  %m_c1715 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 2
  store i32 %c_mat1709, i32* %m_c1715
  %tmp1716 = sub i32 %r_mat1707, 1
  %tmp1717 = sub i32 %c_mat1709, 1
  %i1718 = alloca i32
  store i32 0, i32* %i1718
  br label %while1719

while1719:                                        ; preds = %merge1731, %merge1698
  %i_v1737 = load i32, i32* %i1718
  %bool_val1738 = icmp sle i32 %i_v1737, %tmp1716
  br i1 %bool_val1738, label %while_body1720, label %merge1736

while_body1720:                                   ; preds = %while1719
  %j1721 = alloca i32
  store i32 0, i32* %j1721
  br label %while1722

while1722:                                        ; preds = %while_body1723, %while_body1720
  %j_v1732 = load i32, i32* %j1721
  %bool_val1733 = icmp sle i32 %j_v1732, %tmp1717
  br i1 %bool_val1733, label %while_body1723, label %merge1731

while_body1723:                                   ; preds = %while1722
  %j_v1724 = load i32, i32* %j1721
  %i_v1725 = load i32, i32* %i1718
  %tmp1726 = mul i32 %c_mat1709, %i_v1725
  %index1727 = add i32 %j_v1724, %tmp1726
  %element_ptr1728 = getelementptr double, double* %system_mat1711, i32 %index1727
  store double 0.000000e+00, double* %element_ptr1728
  %j_v1729 = load i32, i32* %j1721
  %tmp1730 = add i32 %j_v1729, 1
  store i32 %tmp1730, i32* %j1721
  br label %while1722

merge1731:                                        ; preds = %while1722
  %i_v1734 = load i32, i32* %i1718
  %tmp1735 = add i32 %i_v1734, 1
  store i32 %tmp1735, i32* %i1718
  br label %while1719

merge1736:                                        ; preds = %while1719
  %tmp1739 = sub i32 %c_mat1709, 1
  %tmp1740 = sub i32 %r_mat1707, 1
  %m_mat1741 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 0
  %mat_mat1742 = load double*, double** %m_mat1741
  %m_r1743 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 1
  %r_mat1744 = load i32, i32* %m_r1743
  %m_c1745 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 2
  %c_mat1746 = load i32, i32* %m_c1745
  %m_mat1747 = getelementptr inbounds %matrix_t, %matrix_t* %v1703, i32 0, i32 0
  %mat_v1748 = load double*, double** %m_mat1747
  %m_r1749 = getelementptr inbounds %matrix_t, %matrix_t* %v1703, i32 0, i32 1
  %r_v1750 = load i32, i32* %m_r1749
  %m_c1751 = getelementptr inbounds %matrix_t, %matrix_t* %v1703, i32 0, i32 2
  %c_v1752 = load i32, i32* %m_c1751
  %i1753 = alloca i32
  store i32 0, i32* %i1753
  br label %while1754

while1754:                                        ; preds = %merge1776, %merge1736
  %i_v1782 = load i32, i32* %i1753
  %bool_val1783 = icmp sle i32 %i_v1782, %tmp1740
  br i1 %bool_val1783, label %while_body1755, label %merge1781

while_body1755:                                   ; preds = %while1754
  %j1756 = alloca i32
  store i32 0, i32* %j1756
  br label %while1757

while1757:                                        ; preds = %while_body1758, %while_body1755
  %j_v1777 = load i32, i32* %j1756
  %bool_val1778 = icmp sle i32 %j_v1777, %tmp1739
  br i1 %bool_val1778, label %while_body1758, label %merge1776

while_body1758:                                   ; preds = %while1757
  %j_v1759 = load i32, i32* %j1756
  %i_v1760 = load i32, i32* %i1753
  %tmp1761 = mul i32 %c_mat1746, %i_v1760
  %index1762 = add i32 %j_v1759, %tmp1761
  %element_ptr1763 = getelementptr double, double* %mat_mat1742, i32 %index1762
  %j_v1764 = load i32, i32* %j1756
  %tmp1765 = sub i32 %j_v1764, 0
  %tmp1766 = add i32 %tmp1765, 0
  %i_v1767 = load i32, i32* %i1753
  %tmp1768 = sub i32 %i_v1767, 0
  %tmp1769 = add i32 %tmp1768, 0
  %tmp1770 = mul i32 %c_v1752, %tmp1769
  %index1771 = add i32 %tmp1766, %tmp1770
  %element_ptr1772 = getelementptr double, double* %mat_v1748, i32 %index1771
  %tmp_element1773 = load double, double* %element_ptr1772
  store double %tmp_element1773, double* %element_ptr1763
  %j_v1774 = load i32, i32* %j1756
  %tmp1775 = add i32 %j_v1774, 1
  store i32 %tmp1775, i32* %j1756
  br label %while1757

merge1776:                                        ; preds = %while1757
  %i_v1779 = load i32, i32* %i1753
  %tmp1780 = add i32 %i_v1779, 1
  store i32 %tmp1780, i32* %i1753
  br label %while1754

merge1781:                                        ; preds = %while1754
  %29 = bitcast double* %mat_mat1705 to i8*
  tail call void @free(i8* %29)
  %30 = bitcast %matrix_t* %v1703 to i8*
  tail call void @free(i8* %30)
  %m_mat1784 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 0
  %mat_mat1785 = load double*, double** %m_mat1784
  %m_r1786 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 1
  %r_mat1787 = load i32, i32* %m_r1786
  %tmp1788 = sub i32 %r_mat1787, 1
  %m_c1789 = getelementptr inbounds %matrix_t, %matrix_t* %m1712, i32 0, i32 2
  %c_mat1790 = load i32, i32* %m_c1789
  %tmp1791 = sub i32 %c_mat1790, 1
  %size1792 = mul i32 %r_mat1787, %c_mat1790
  %system_mat1793 = alloca double, i32 %size1792
  %m1794 = alloca %matrix_t
  %m_mat1795 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 0
  store double* %system_mat1793, double** %m_mat1795
  %m_r1796 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 1
  store i32 %r_mat1787, i32* %m_r1796
  %m_c1797 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 2
  store i32 %c_mat1790, i32* %m_c1797
  %tmp1798 = sub i32 %r_mat1787, 1
  %tmp1799 = sub i32 %c_mat1790, 1
  %i1800 = alloca i32
  store i32 0, i32* %i1800
  br label %while1801

while1801:                                        ; preds = %merge1813, %merge1781
  %i_v1819 = load i32, i32* %i1800
  %bool_val1820 = icmp sle i32 %i_v1819, %tmp1798
  br i1 %bool_val1820, label %while_body1802, label %merge1818

while_body1802:                                   ; preds = %while1801
  %j1803 = alloca i32
  store i32 0, i32* %j1803
  br label %while1804

while1804:                                        ; preds = %while_body1805, %while_body1802
  %j_v1814 = load i32, i32* %j1803
  %bool_val1815 = icmp sle i32 %j_v1814, %tmp1799
  br i1 %bool_val1815, label %while_body1805, label %merge1813

while_body1805:                                   ; preds = %while1804
  %j_v1806 = load i32, i32* %j1803
  %i_v1807 = load i32, i32* %i1800
  %tmp1808 = mul i32 %c_mat1790, %i_v1807
  %index1809 = add i32 %j_v1806, %tmp1808
  %element_ptr1810 = getelementptr double, double* %system_mat1793, i32 %index1809
  store double 0.000000e+00, double* %element_ptr1810
  %j_v1811 = load i32, i32* %j1803
  %tmp1812 = add i32 %j_v1811, 1
  store i32 %tmp1812, i32* %j1803
  br label %while1804

merge1813:                                        ; preds = %while1804
  %i_v1816 = load i32, i32* %i1800
  %tmp1817 = add i32 %i_v1816, 1
  store i32 %tmp1817, i32* %i1800
  br label %while1801

merge1818:                                        ; preds = %while1801
  %m_mat1821 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 0
  %mat_mat1822 = load double*, double** %m_mat1821
  %i1823 = alloca i32
  store i32 0, i32* %i1823
  br label %while1824

while1824:                                        ; preds = %merge1843, %merge1818
  %i_v1849 = load i32, i32* %i1823
  %bool_val1850 = icmp sle i32 %i_v1849, %tmp1788
  br i1 %bool_val1850, label %while_body1825, label %merge1848

while_body1825:                                   ; preds = %while1824
  %j1826 = alloca i32
  store i32 0, i32* %j1826
  br label %while1827

while1827:                                        ; preds = %while_body1828, %while_body1825
  %j_v1844 = load i32, i32* %j1826
  %bool_val1845 = icmp sle i32 %j_v1844, %tmp1791
  br i1 %bool_val1845, label %while_body1828, label %merge1843

while_body1828:                                   ; preds = %while1827
  %j_v1829 = load i32, i32* %j1826
  %i_v1830 = load i32, i32* %i1823
  %tmp1831 = mul i32 %c_mat1790, %i_v1830
  %index1832 = add i32 %j_v1829, %tmp1831
  %element_ptr1833 = getelementptr double, double* %mat_mat1785, i32 %index1832
  %tmp_element1834 = load double, double* %element_ptr1833
  %j_v1835 = load i32, i32* %j1826
  %i_v1836 = load i32, i32* %i1823
  %tmp1837 = mul i32 %c_mat1790, %i_v1836
  %index1838 = add i32 %j_v1835, %tmp1837
  %element_ptr1839 = getelementptr double, double* %mat_mat1822, i32 %index1838
  %tmp_element1840 = fsub double %tmp_element1834, 2.550000e+02
  store double %tmp_element1840, double* %element_ptr1839
  %j_v1841 = load i32, i32* %j1826
  %tmp1842 = add i32 %j_v1841, 1
  store i32 %tmp1842, i32* %j1826
  br label %while1827

merge1843:                                        ; preds = %while1827
  %i_v1846 = load i32, i32* %i1823
  %tmp1847 = add i32 %i_v1846, 1
  store i32 %tmp1847, i32* %i1823
  br label %while1824

merge1848:                                        ; preds = %while1824
  %m_r1851 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat1852 = load i32, i32* %m_r1851
  %m_c1853 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat1854 = load i32, i32* %m_c1853
  %i1855 = load i32, i32* %i918
  %tmp1860 = icmp sgt i32 0, %i1855
  br i1 %tmp1860, label %then1857, label %else1859

merge1856:                                        ; preds = %else1859, %then1857
  %tmp1861 = sub i32 %r_mat1852, 1
  %tmp1866 = icmp slt i32 %tmp1861, %i1855
  br i1 %tmp1866, label %then1863, label %else1865

then1857:                                         ; preds = %merge1848
  %printf1858 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1856

else1859:                                         ; preds = %merge1848
  br label %merge1856

merge1862:                                        ; preds = %else1865, %then1863
  %i1867 = load i32, i32* %i918
  %tmp1872 = icmp sgt i32 0, %i1867
  br i1 %tmp1872, label %then1869, label %else1871

then1863:                                         ; preds = %merge1856
  %printf1864 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1862

else1865:                                         ; preds = %merge1856
  br label %merge1862

merge1868:                                        ; preds = %else1871, %then1869
  %tmp1873 = sub i32 %r_mat1852, 1
  %tmp1878 = icmp slt i32 %tmp1873, %i1867
  br i1 %tmp1878, label %then1875, label %else1877

then1869:                                         ; preds = %merge1862
  %printf1870 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1868

else1871:                                         ; preds = %merge1862
  br label %merge1868

merge1874:                                        ; preds = %else1877, %then1875
  %y1879 = load double, double* %y
  %w1880 = load double, double* %w
  %tmp1881 = fdiv double %w1880, 2.000000e+00
  %tmp1882 = fadd double %y1879, %tmp1881
  %tmp1883 = fsub double %tmp1882, 2.000000e+00
  %double2int_result1884 = call %double_to_int_t* @double2int(double %tmp1883)
  %v_ptr1885 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1884, i32 0, i32 0
  %v1886 = load i32, i32* %v_ptr1885
  %31 = bitcast %double_to_int_t* %double2int_result1884 to i8*
  tail call void @free(i8* %31)
  %tmp1891 = icmp sgt i32 0, %v1886
  br i1 %tmp1891, label %then1888, label %else1890

then1875:                                         ; preds = %merge1868
  %printf1876 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1874

else1877:                                         ; preds = %merge1868
  br label %merge1874

merge1887:                                        ; preds = %else1890, %then1888
  %tmp1892 = sub i32 %c_mat1854, 1
  %tmp1897 = icmp slt i32 %tmp1892, %v1886
  br i1 %tmp1897, label %then1894, label %else1896

then1888:                                         ; preds = %merge1874
  %printf1889 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1887

else1890:                                         ; preds = %merge1874
  br label %merge1887

merge1893:                                        ; preds = %else1896, %then1894
  %y1898 = load double, double* %y
  %w1899 = load double, double* %w
  %tmp1900 = fdiv double %w1899, 2.000000e+00
  %tmp1901 = fadd double %y1898, %tmp1900
  %tmp1902 = fadd double %tmp1901, 2.000000e+00
  %double2int_result1903 = call %double_to_int_t* @double2int(double %tmp1902)
  %v_ptr1904 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result1903, i32 0, i32 0
  %v1905 = load i32, i32* %v_ptr1904
  %32 = bitcast %double_to_int_t* %double2int_result1903 to i8*
  tail call void @free(i8* %32)
  %tmp1910 = icmp sgt i32 0, %v1905
  br i1 %tmp1910, label %then1907, label %else1909

then1894:                                         ; preds = %merge1887
  %printf1895 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1893

else1896:                                         ; preds = %merge1887
  br label %merge1893

merge1906:                                        ; preds = %else1909, %then1907
  %tmp1911 = sub i32 %c_mat1854, 1
  %tmp1916 = icmp slt i32 %tmp1911, %v1905
  br i1 %tmp1916, label %then1913, label %else1915

then1907:                                         ; preds = %merge1893
  %printf1908 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1906

else1909:                                         ; preds = %merge1893
  br label %merge1906

merge1912:                                        ; preds = %else1915, %then1913
  %tmp1917 = sub i32 %i1867, %i1855
  %tmp1918 = add i32 %tmp1917, 1
  %m_r1919 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 1
  %r_mat1920 = load i32, i32* %m_r1919
  %tmp1925 = icmp ne i32 %tmp1918, %r_mat1920
  br i1 %tmp1925, label %then1922, label %else1924

then1913:                                         ; preds = %merge1906
  %printf1914 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge1912

else1915:                                         ; preds = %merge1906
  br label %merge1912

merge1921:                                        ; preds = %else1924, %then1922
  %tmp1926 = sub i32 %v1905, %v1886
  %tmp1927 = add i32 %tmp1926, 1
  %m_r1928 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 2
  %r_mat1929 = load i32, i32* %m_r1928
  %tmp1934 = icmp ne i32 %tmp1927, %r_mat1929
  br i1 %tmp1934, label %then1931, label %else1933

then1922:                                         ; preds = %merge1912
  %printf1923 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1921

else1924:                                         ; preds = %merge1912
  br label %merge1921

merge1930:                                        ; preds = %else1933, %then1931
  %m_mat1935 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 0
  %mat_mat1936 = load double*, double** %m_mat1935
  %m_r1937 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat1938 = load i32, i32* %m_r1937
  %m_c1939 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat1940 = load i32, i32* %m_c1939
  %m_mat1941 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 0
  %mat_v1942 = load double*, double** %m_mat1941
  %m_r1943 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 1
  %r_v1944 = load i32, i32* %m_r1943
  %m_c1945 = getelementptr inbounds %matrix_t, %matrix_t* %m1794, i32 0, i32 2
  %c_v1946 = load i32, i32* %m_c1945
  %i1947 = alloca i32
  store i32 %i1855, i32* %i1947
  br label %while1948

then1931:                                         ; preds = %merge1921
  %printf1932 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge1930

else1933:                                         ; preds = %merge1921
  br label %merge1930

while1948:                                        ; preds = %merge1970, %merge1930
  %i_v1976 = load i32, i32* %i1947
  %bool_val1977 = icmp sle i32 %i_v1976, %i1867
  br i1 %bool_val1977, label %while_body1949, label %merge1975

while_body1949:                                   ; preds = %while1948
  %j1950 = alloca i32
  store i32 %v1886, i32* %j1950
  br label %while1951

while1951:                                        ; preds = %while_body1952, %while_body1949
  %j_v1971 = load i32, i32* %j1950
  %bool_val1972 = icmp sle i32 %j_v1971, %v1905
  br i1 %bool_val1972, label %while_body1952, label %merge1970

while_body1952:                                   ; preds = %while1951
  %j_v1953 = load i32, i32* %j1950
  %i_v1954 = load i32, i32* %i1947
  %tmp1955 = mul i32 %c_mat1940, %i_v1954
  %index1956 = add i32 %j_v1953, %tmp1955
  %element_ptr1957 = getelementptr double, double* %mat_mat1936, i32 %index1956
  %j_v1958 = load i32, i32* %j1950
  %tmp1959 = sub i32 %j_v1958, %v1886
  %tmp1960 = add i32 %tmp1959, 0
  %i_v1961 = load i32, i32* %i1947
  %tmp1962 = sub i32 %i_v1961, %i1855
  %tmp1963 = add i32 %tmp1962, 0
  %tmp1964 = mul i32 %c_v1946, %tmp1963
  %index1965 = add i32 %tmp1960, %tmp1964
  %element_ptr1966 = getelementptr double, double* %mat_v1942, i32 %index1965
  %tmp_element1967 = load double, double* %element_ptr1966
  store double %tmp_element1967, double* %element_ptr1957
  %j_v1968 = load i32, i32* %j1950
  %tmp1969 = add i32 %j_v1968, 1
  store i32 %tmp1969, i32* %j1950
  br label %while1951

merge1970:                                        ; preds = %while1951
  %i_v1973 = load i32, i32* %i1947
  %tmp1974 = add i32 %i_v1973, 1
  store i32 %tmp1974, i32* %i1947
  br label %while1948

merge1975:                                        ; preds = %while1948
  %zeros_result1978 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr1979 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result1978, i32 0, i32 0
  %v1980 = load %matrix_t*, %matrix_t** %v_ptr1979
  %33 = bitcast %zero_matrix_t* %zeros_result1978 to i8*
  tail call void @free(i8* %33)
  %m_mat1981 = getelementptr inbounds %matrix_t, %matrix_t* %v1980, i32 0, i32 0
  %mat_mat1982 = load double*, double** %m_mat1981
  %m_r1983 = getelementptr inbounds %matrix_t, %matrix_t* %v1980, i32 0, i32 1
  %r_mat1984 = load i32, i32* %m_r1983
  %m_c1985 = getelementptr inbounds %matrix_t, %matrix_t* %v1980, i32 0, i32 2
  %c_mat1986 = load i32, i32* %m_c1985
  %size1987 = mul i32 %r_mat1984, %c_mat1986
  %system_mat1988 = alloca double, i32 %size1987
  %m1989 = alloca %matrix_t
  %m_mat1990 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 0
  store double* %system_mat1988, double** %m_mat1990
  %m_r1991 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 1
  store i32 %r_mat1984, i32* %m_r1991
  %m_c1992 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 2
  store i32 %c_mat1986, i32* %m_c1992
  %tmp1993 = sub i32 %r_mat1984, 1
  %tmp1994 = sub i32 %c_mat1986, 1
  %i1995 = alloca i32
  store i32 0, i32* %i1995
  br label %while1996

while1996:                                        ; preds = %merge2008, %merge1975
  %i_v2014 = load i32, i32* %i1995
  %bool_val2015 = icmp sle i32 %i_v2014, %tmp1993
  br i1 %bool_val2015, label %while_body1997, label %merge2013

while_body1997:                                   ; preds = %while1996
  %j1998 = alloca i32
  store i32 0, i32* %j1998
  br label %while1999

while1999:                                        ; preds = %while_body2000, %while_body1997
  %j_v2009 = load i32, i32* %j1998
  %bool_val2010 = icmp sle i32 %j_v2009, %tmp1994
  br i1 %bool_val2010, label %while_body2000, label %merge2008

while_body2000:                                   ; preds = %while1999
  %j_v2001 = load i32, i32* %j1998
  %i_v2002 = load i32, i32* %i1995
  %tmp2003 = mul i32 %c_mat1986, %i_v2002
  %index2004 = add i32 %j_v2001, %tmp2003
  %element_ptr2005 = getelementptr double, double* %system_mat1988, i32 %index2004
  store double 0.000000e+00, double* %element_ptr2005
  %j_v2006 = load i32, i32* %j1998
  %tmp2007 = add i32 %j_v2006, 1
  store i32 %tmp2007, i32* %j1998
  br label %while1999

merge2008:                                        ; preds = %while1999
  %i_v2011 = load i32, i32* %i1995
  %tmp2012 = add i32 %i_v2011, 1
  store i32 %tmp2012, i32* %i1995
  br label %while1996

merge2013:                                        ; preds = %while1996
  %tmp2016 = sub i32 %c_mat1986, 1
  %tmp2017 = sub i32 %r_mat1984, 1
  %m_mat2018 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 0
  %mat_mat2019 = load double*, double** %m_mat2018
  %m_r2020 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 1
  %r_mat2021 = load i32, i32* %m_r2020
  %m_c2022 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 2
  %c_mat2023 = load i32, i32* %m_c2022
  %m_mat2024 = getelementptr inbounds %matrix_t, %matrix_t* %v1980, i32 0, i32 0
  %mat_v2025 = load double*, double** %m_mat2024
  %m_r2026 = getelementptr inbounds %matrix_t, %matrix_t* %v1980, i32 0, i32 1
  %r_v2027 = load i32, i32* %m_r2026
  %m_c2028 = getelementptr inbounds %matrix_t, %matrix_t* %v1980, i32 0, i32 2
  %c_v2029 = load i32, i32* %m_c2028
  %i2030 = alloca i32
  store i32 0, i32* %i2030
  br label %while2031

while2031:                                        ; preds = %merge2053, %merge2013
  %i_v2059 = load i32, i32* %i2030
  %bool_val2060 = icmp sle i32 %i_v2059, %tmp2017
  br i1 %bool_val2060, label %while_body2032, label %merge2058

while_body2032:                                   ; preds = %while2031
  %j2033 = alloca i32
  store i32 0, i32* %j2033
  br label %while2034

while2034:                                        ; preds = %while_body2035, %while_body2032
  %j_v2054 = load i32, i32* %j2033
  %bool_val2055 = icmp sle i32 %j_v2054, %tmp2016
  br i1 %bool_val2055, label %while_body2035, label %merge2053

while_body2035:                                   ; preds = %while2034
  %j_v2036 = load i32, i32* %j2033
  %i_v2037 = load i32, i32* %i2030
  %tmp2038 = mul i32 %c_mat2023, %i_v2037
  %index2039 = add i32 %j_v2036, %tmp2038
  %element_ptr2040 = getelementptr double, double* %mat_mat2019, i32 %index2039
  %j_v2041 = load i32, i32* %j2033
  %tmp2042 = sub i32 %j_v2041, 0
  %tmp2043 = add i32 %tmp2042, 0
  %i_v2044 = load i32, i32* %i2030
  %tmp2045 = sub i32 %i_v2044, 0
  %tmp2046 = add i32 %tmp2045, 0
  %tmp2047 = mul i32 %c_v2029, %tmp2046
  %index2048 = add i32 %tmp2043, %tmp2047
  %element_ptr2049 = getelementptr double, double* %mat_v2025, i32 %index2048
  %tmp_element2050 = load double, double* %element_ptr2049
  store double %tmp_element2050, double* %element_ptr2040
  %j_v2051 = load i32, i32* %j2033
  %tmp2052 = add i32 %j_v2051, 1
  store i32 %tmp2052, i32* %j2033
  br label %while2034

merge2053:                                        ; preds = %while2034
  %i_v2056 = load i32, i32* %i2030
  %tmp2057 = add i32 %i_v2056, 1
  store i32 %tmp2057, i32* %i2030
  br label %while2031

merge2058:                                        ; preds = %while2031
  %34 = bitcast double* %mat_mat1982 to i8*
  tail call void @free(i8* %34)
  %35 = bitcast %matrix_t* %v1980 to i8*
  tail call void @free(i8* %35)
  %m_mat2061 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 0
  %mat_mat2062 = load double*, double** %m_mat2061
  %m_r2063 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 1
  %r_mat2064 = load i32, i32* %m_r2063
  %tmp2065 = sub i32 %r_mat2064, 1
  %m_c2066 = getelementptr inbounds %matrix_t, %matrix_t* %m1989, i32 0, i32 2
  %c_mat2067 = load i32, i32* %m_c2066
  %tmp2068 = sub i32 %c_mat2067, 1
  %size2069 = mul i32 %r_mat2064, %c_mat2067
  %system_mat2070 = alloca double, i32 %size2069
  %m2071 = alloca %matrix_t
  %m_mat2072 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 0
  store double* %system_mat2070, double** %m_mat2072
  %m_r2073 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 1
  store i32 %r_mat2064, i32* %m_r2073
  %m_c2074 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 2
  store i32 %c_mat2067, i32* %m_c2074
  %tmp2075 = sub i32 %r_mat2064, 1
  %tmp2076 = sub i32 %c_mat2067, 1
  %i2077 = alloca i32
  store i32 0, i32* %i2077
  br label %while2078

while2078:                                        ; preds = %merge2090, %merge2058
  %i_v2096 = load i32, i32* %i2077
  %bool_val2097 = icmp sle i32 %i_v2096, %tmp2075
  br i1 %bool_val2097, label %while_body2079, label %merge2095

while_body2079:                                   ; preds = %while2078
  %j2080 = alloca i32
  store i32 0, i32* %j2080
  br label %while2081

while2081:                                        ; preds = %while_body2082, %while_body2079
  %j_v2091 = load i32, i32* %j2080
  %bool_val2092 = icmp sle i32 %j_v2091, %tmp2076
  br i1 %bool_val2092, label %while_body2082, label %merge2090

while_body2082:                                   ; preds = %while2081
  %j_v2083 = load i32, i32* %j2080
  %i_v2084 = load i32, i32* %i2077
  %tmp2085 = mul i32 %c_mat2067, %i_v2084
  %index2086 = add i32 %j_v2083, %tmp2085
  %element_ptr2087 = getelementptr double, double* %system_mat2070, i32 %index2086
  store double 0.000000e+00, double* %element_ptr2087
  %j_v2088 = load i32, i32* %j2080
  %tmp2089 = add i32 %j_v2088, 1
  store i32 %tmp2089, i32* %j2080
  br label %while2081

merge2090:                                        ; preds = %while2081
  %i_v2093 = load i32, i32* %i2077
  %tmp2094 = add i32 %i_v2093, 1
  store i32 %tmp2094, i32* %i2077
  br label %while2078

merge2095:                                        ; preds = %while2078
  %m_mat2098 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 0
  %mat_mat2099 = load double*, double** %m_mat2098
  %i2100 = alloca i32
  store i32 0, i32* %i2100
  br label %while2101

while2101:                                        ; preds = %merge2120, %merge2095
  %i_v2126 = load i32, i32* %i2100
  %bool_val2127 = icmp sle i32 %i_v2126, %tmp2065
  br i1 %bool_val2127, label %while_body2102, label %merge2125

while_body2102:                                   ; preds = %while2101
  %j2103 = alloca i32
  store i32 0, i32* %j2103
  br label %while2104

while2104:                                        ; preds = %while_body2105, %while_body2102
  %j_v2121 = load i32, i32* %j2103
  %bool_val2122 = icmp sle i32 %j_v2121, %tmp2068
  br i1 %bool_val2122, label %while_body2105, label %merge2120

while_body2105:                                   ; preds = %while2104
  %j_v2106 = load i32, i32* %j2103
  %i_v2107 = load i32, i32* %i2100
  %tmp2108 = mul i32 %c_mat2067, %i_v2107
  %index2109 = add i32 %j_v2106, %tmp2108
  %element_ptr2110 = getelementptr double, double* %mat_mat2062, i32 %index2109
  %tmp_element2111 = load double, double* %element_ptr2110
  %j_v2112 = load i32, i32* %j2103
  %i_v2113 = load i32, i32* %i2100
  %tmp2114 = mul i32 %c_mat2067, %i_v2113
  %index2115 = add i32 %j_v2112, %tmp2114
  %element_ptr2116 = getelementptr double, double* %mat_mat2099, i32 %index2115
  %tmp_element2117 = fsub double %tmp_element2111, 2.550000e+02
  store double %tmp_element2117, double* %element_ptr2116
  %j_v2118 = load i32, i32* %j2103
  %tmp2119 = add i32 %j_v2118, 1
  store i32 %tmp2119, i32* %j2103
  br label %while2104

merge2120:                                        ; preds = %while2104
  %i_v2123 = load i32, i32* %i2100
  %tmp2124 = add i32 %i_v2123, 1
  store i32 %tmp2124, i32* %i2100
  br label %while2101

merge2125:                                        ; preds = %while2101
  %m_r2128 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat2129 = load i32, i32* %m_r2128
  %m_c2130 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat2131 = load i32, i32* %m_c2130
  %i2132 = load i32, i32* %i918
  %tmp2137 = icmp sgt i32 0, %i2132
  br i1 %tmp2137, label %then2134, label %else2136

merge2133:                                        ; preds = %else2136, %then2134
  %tmp2138 = sub i32 %r_mat2129, 1
  %tmp2143 = icmp slt i32 %tmp2138, %i2132
  br i1 %tmp2143, label %then2140, label %else2142

then2134:                                         ; preds = %merge2125
  %printf2135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2133

else2136:                                         ; preds = %merge2125
  br label %merge2133

merge2139:                                        ; preds = %else2142, %then2140
  %i2144 = load i32, i32* %i918
  %tmp2149 = icmp sgt i32 0, %i2144
  br i1 %tmp2149, label %then2146, label %else2148

then2140:                                         ; preds = %merge2133
  %printf2141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2139

else2142:                                         ; preds = %merge2133
  br label %merge2139

merge2145:                                        ; preds = %else2148, %then2146
  %tmp2150 = sub i32 %r_mat2129, 1
  %tmp2155 = icmp slt i32 %tmp2150, %i2144
  br i1 %tmp2155, label %then2152, label %else2154

then2146:                                         ; preds = %merge2139
  %printf2147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2145

else2148:                                         ; preds = %merge2139
  br label %merge2145

merge2151:                                        ; preds = %else2154, %then2152
  %y2156 = load double, double* %y
  %w2157 = load double, double* %w
  %tmp2158 = fdiv double %w2157, 2.000000e+00
  %tmp2159 = fadd double %y2156, %tmp2158
  %tmp2160 = fsub double %tmp2159, 2.000000e+00
  %double2int_result2161 = call %double_to_int_t* @double2int(double %tmp2160)
  %v_ptr2162 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2161, i32 0, i32 0
  %v2163 = load i32, i32* %v_ptr2162
  %36 = bitcast %double_to_int_t* %double2int_result2161 to i8*
  tail call void @free(i8* %36)
  %tmp2168 = icmp sgt i32 0, %v2163
  br i1 %tmp2168, label %then2165, label %else2167

then2152:                                         ; preds = %merge2145
  %printf2153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2151

else2154:                                         ; preds = %merge2145
  br label %merge2151

merge2164:                                        ; preds = %else2167, %then2165
  %tmp2169 = sub i32 %c_mat2131, 1
  %tmp2174 = icmp slt i32 %tmp2169, %v2163
  br i1 %tmp2174, label %then2171, label %else2173

then2165:                                         ; preds = %merge2151
  %printf2166 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2164

else2167:                                         ; preds = %merge2151
  br label %merge2164

merge2170:                                        ; preds = %else2173, %then2171
  %y2175 = load double, double* %y
  %w2176 = load double, double* %w
  %tmp2177 = fdiv double %w2176, 2.000000e+00
  %tmp2178 = fadd double %y2175, %tmp2177
  %tmp2179 = fadd double %tmp2178, 2.000000e+00
  %double2int_result2180 = call %double_to_int_t* @double2int(double %tmp2179)
  %v_ptr2181 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2180, i32 0, i32 0
  %v2182 = load i32, i32* %v_ptr2181
  %37 = bitcast %double_to_int_t* %double2int_result2180 to i8*
  tail call void @free(i8* %37)
  %tmp2187 = icmp sgt i32 0, %v2182
  br i1 %tmp2187, label %then2184, label %else2186

then2171:                                         ; preds = %merge2164
  %printf2172 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2170

else2173:                                         ; preds = %merge2164
  br label %merge2170

merge2183:                                        ; preds = %else2186, %then2184
  %tmp2188 = sub i32 %c_mat2131, 1
  %tmp2193 = icmp slt i32 %tmp2188, %v2182
  br i1 %tmp2193, label %then2190, label %else2192

then2184:                                         ; preds = %merge2170
  %printf2185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2183

else2186:                                         ; preds = %merge2170
  br label %merge2183

merge2189:                                        ; preds = %else2192, %then2190
  %tmp2194 = sub i32 %i2144, %i2132
  %tmp2195 = add i32 %tmp2194, 1
  %m_r2196 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 1
  %r_mat2197 = load i32, i32* %m_r2196
  %tmp2202 = icmp ne i32 %tmp2195, %r_mat2197
  br i1 %tmp2202, label %then2199, label %else2201

then2190:                                         ; preds = %merge2183
  %printf2191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2189

else2192:                                         ; preds = %merge2183
  br label %merge2189

merge2198:                                        ; preds = %else2201, %then2199
  %tmp2203 = sub i32 %v2182, %v2163
  %tmp2204 = add i32 %tmp2203, 1
  %m_r2205 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 2
  %r_mat2206 = load i32, i32* %m_r2205
  %tmp2211 = icmp ne i32 %tmp2204, %r_mat2206
  br i1 %tmp2211, label %then2208, label %else2210

then2199:                                         ; preds = %merge2189
  %printf2200 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2198

else2201:                                         ; preds = %merge2189
  br label %merge2198

merge2207:                                        ; preds = %else2210, %then2208
  %m_mat2212 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 0
  %mat_mat2213 = load double*, double** %m_mat2212
  %m_r2214 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat2215 = load i32, i32* %m_r2214
  %m_c2216 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat2217 = load i32, i32* %m_c2216
  %m_mat2218 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 0
  %mat_v2219 = load double*, double** %m_mat2218
  %m_r2220 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 1
  %r_v2221 = load i32, i32* %m_r2220
  %m_c2222 = getelementptr inbounds %matrix_t, %matrix_t* %m2071, i32 0, i32 2
  %c_v2223 = load i32, i32* %m_c2222
  %i2224 = alloca i32
  store i32 %i2132, i32* %i2224
  br label %while2225

then2208:                                         ; preds = %merge2198
  %printf2209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2207

else2210:                                         ; preds = %merge2198
  br label %merge2207

while2225:                                        ; preds = %merge2247, %merge2207
  %i_v2253 = load i32, i32* %i2224
  %bool_val2254 = icmp sle i32 %i_v2253, %i2144
  br i1 %bool_val2254, label %while_body2226, label %merge2252

while_body2226:                                   ; preds = %while2225
  %j2227 = alloca i32
  store i32 %v2163, i32* %j2227
  br label %while2228

while2228:                                        ; preds = %while_body2229, %while_body2226
  %j_v2248 = load i32, i32* %j2227
  %bool_val2249 = icmp sle i32 %j_v2248, %v2182
  br i1 %bool_val2249, label %while_body2229, label %merge2247

while_body2229:                                   ; preds = %while2228
  %j_v2230 = load i32, i32* %j2227
  %i_v2231 = load i32, i32* %i2224
  %tmp2232 = mul i32 %c_mat2217, %i_v2231
  %index2233 = add i32 %j_v2230, %tmp2232
  %element_ptr2234 = getelementptr double, double* %mat_mat2213, i32 %index2233
  %j_v2235 = load i32, i32* %j2227
  %tmp2236 = sub i32 %j_v2235, %v2163
  %tmp2237 = add i32 %tmp2236, 0
  %i_v2238 = load i32, i32* %i2224
  %tmp2239 = sub i32 %i_v2238, %i2132
  %tmp2240 = add i32 %tmp2239, 0
  %tmp2241 = mul i32 %c_v2223, %tmp2240
  %index2242 = add i32 %tmp2237, %tmp2241
  %element_ptr2243 = getelementptr double, double* %mat_v2219, i32 %index2242
  %tmp_element2244 = load double, double* %element_ptr2243
  store double %tmp_element2244, double* %element_ptr2234
  %j_v2245 = load i32, i32* %j2227
  %tmp2246 = add i32 %j_v2245, 1
  store i32 %tmp2246, i32* %j2227
  br label %while2228

merge2247:                                        ; preds = %while2228
  %i_v2250 = load i32, i32* %i2224
  %tmp2251 = add i32 %i_v2250, 1
  store i32 %tmp2251, i32* %i2224
  br label %while2225

merge2252:                                        ; preds = %while2225
  %zeros_result2255 = call %zero_matrix_t* @zeros(i32 1, i32 5)
  %v_ptr2256 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2255, i32 0, i32 0
  %v2257 = load %matrix_t*, %matrix_t** %v_ptr2256
  %38 = bitcast %zero_matrix_t* %zeros_result2255 to i8*
  tail call void @free(i8* %38)
  %m_mat2258 = getelementptr inbounds %matrix_t, %matrix_t* %v2257, i32 0, i32 0
  %mat_mat2259 = load double*, double** %m_mat2258
  %m_r2260 = getelementptr inbounds %matrix_t, %matrix_t* %v2257, i32 0, i32 1
  %r_mat2261 = load i32, i32* %m_r2260
  %m_c2262 = getelementptr inbounds %matrix_t, %matrix_t* %v2257, i32 0, i32 2
  %c_mat2263 = load i32, i32* %m_c2262
  %size2264 = mul i32 %r_mat2261, %c_mat2263
  %system_mat2265 = alloca double, i32 %size2264
  %m2266 = alloca %matrix_t
  %m_mat2267 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 0
  store double* %system_mat2265, double** %m_mat2267
  %m_r2268 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 1
  store i32 %r_mat2261, i32* %m_r2268
  %m_c2269 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 2
  store i32 %c_mat2263, i32* %m_c2269
  %tmp2270 = sub i32 %r_mat2261, 1
  %tmp2271 = sub i32 %c_mat2263, 1
  %i2272 = alloca i32
  store i32 0, i32* %i2272
  br label %while2273

while2273:                                        ; preds = %merge2285, %merge2252
  %i_v2291 = load i32, i32* %i2272
  %bool_val2292 = icmp sle i32 %i_v2291, %tmp2270
  br i1 %bool_val2292, label %while_body2274, label %merge2290

while_body2274:                                   ; preds = %while2273
  %j2275 = alloca i32
  store i32 0, i32* %j2275
  br label %while2276

while2276:                                        ; preds = %while_body2277, %while_body2274
  %j_v2286 = load i32, i32* %j2275
  %bool_val2287 = icmp sle i32 %j_v2286, %tmp2271
  br i1 %bool_val2287, label %while_body2277, label %merge2285

while_body2277:                                   ; preds = %while2276
  %j_v2278 = load i32, i32* %j2275
  %i_v2279 = load i32, i32* %i2272
  %tmp2280 = mul i32 %c_mat2263, %i_v2279
  %index2281 = add i32 %j_v2278, %tmp2280
  %element_ptr2282 = getelementptr double, double* %system_mat2265, i32 %index2281
  store double 0.000000e+00, double* %element_ptr2282
  %j_v2283 = load i32, i32* %j2275
  %tmp2284 = add i32 %j_v2283, 1
  store i32 %tmp2284, i32* %j2275
  br label %while2276

merge2285:                                        ; preds = %while2276
  %i_v2288 = load i32, i32* %i2272
  %tmp2289 = add i32 %i_v2288, 1
  store i32 %tmp2289, i32* %i2272
  br label %while2273

merge2290:                                        ; preds = %while2273
  %tmp2293 = sub i32 %c_mat2263, 1
  %tmp2294 = sub i32 %r_mat2261, 1
  %m_mat2295 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 0
  %mat_mat2296 = load double*, double** %m_mat2295
  %m_r2297 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 1
  %r_mat2298 = load i32, i32* %m_r2297
  %m_c2299 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 2
  %c_mat2300 = load i32, i32* %m_c2299
  %m_mat2301 = getelementptr inbounds %matrix_t, %matrix_t* %v2257, i32 0, i32 0
  %mat_v2302 = load double*, double** %m_mat2301
  %m_r2303 = getelementptr inbounds %matrix_t, %matrix_t* %v2257, i32 0, i32 1
  %r_v2304 = load i32, i32* %m_r2303
  %m_c2305 = getelementptr inbounds %matrix_t, %matrix_t* %v2257, i32 0, i32 2
  %c_v2306 = load i32, i32* %m_c2305
  %i2307 = alloca i32
  store i32 0, i32* %i2307
  br label %while2308

while2308:                                        ; preds = %merge2330, %merge2290
  %i_v2336 = load i32, i32* %i2307
  %bool_val2337 = icmp sle i32 %i_v2336, %tmp2294
  br i1 %bool_val2337, label %while_body2309, label %merge2335

while_body2309:                                   ; preds = %while2308
  %j2310 = alloca i32
  store i32 0, i32* %j2310
  br label %while2311

while2311:                                        ; preds = %while_body2312, %while_body2309
  %j_v2331 = load i32, i32* %j2310
  %bool_val2332 = icmp sle i32 %j_v2331, %tmp2293
  br i1 %bool_val2332, label %while_body2312, label %merge2330

while_body2312:                                   ; preds = %while2311
  %j_v2313 = load i32, i32* %j2310
  %i_v2314 = load i32, i32* %i2307
  %tmp2315 = mul i32 %c_mat2300, %i_v2314
  %index2316 = add i32 %j_v2313, %tmp2315
  %element_ptr2317 = getelementptr double, double* %mat_mat2296, i32 %index2316
  %j_v2318 = load i32, i32* %j2310
  %tmp2319 = sub i32 %j_v2318, 0
  %tmp2320 = add i32 %tmp2319, 0
  %i_v2321 = load i32, i32* %i2307
  %tmp2322 = sub i32 %i_v2321, 0
  %tmp2323 = add i32 %tmp2322, 0
  %tmp2324 = mul i32 %c_v2306, %tmp2323
  %index2325 = add i32 %tmp2320, %tmp2324
  %element_ptr2326 = getelementptr double, double* %mat_v2302, i32 %index2325
  %tmp_element2327 = load double, double* %element_ptr2326
  store double %tmp_element2327, double* %element_ptr2317
  %j_v2328 = load i32, i32* %j2310
  %tmp2329 = add i32 %j_v2328, 1
  store i32 %tmp2329, i32* %j2310
  br label %while2311

merge2330:                                        ; preds = %while2311
  %i_v2333 = load i32, i32* %i2307
  %tmp2334 = add i32 %i_v2333, 1
  store i32 %tmp2334, i32* %i2307
  br label %while2308

merge2335:                                        ; preds = %while2308
  %39 = bitcast double* %mat_mat2259 to i8*
  tail call void @free(i8* %39)
  %40 = bitcast %matrix_t* %v2257 to i8*
  tail call void @free(i8* %40)
  %m_r2338 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat2339 = load i32, i32* %m_r2338
  %m_c2340 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat2341 = load i32, i32* %m_c2340
  %i2342 = load i32, i32* %i918
  %tmp2347 = icmp sgt i32 0, %i2342
  br i1 %tmp2347, label %then2344, label %else2346

merge2343:                                        ; preds = %else2346, %then2344
  %tmp2348 = sub i32 %r_mat2339, 1
  %tmp2353 = icmp slt i32 %tmp2348, %i2342
  br i1 %tmp2353, label %then2350, label %else2352

then2344:                                         ; preds = %merge2335
  %printf2345 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2343

else2346:                                         ; preds = %merge2335
  br label %merge2343

merge2349:                                        ; preds = %else2352, %then2350
  %i2354 = load i32, i32* %i918
  %tmp2359 = icmp sgt i32 0, %i2354
  br i1 %tmp2359, label %then2356, label %else2358

then2350:                                         ; preds = %merge2343
  %printf2351 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2349

else2352:                                         ; preds = %merge2343
  br label %merge2349

merge2355:                                        ; preds = %else2358, %then2356
  %tmp2360 = sub i32 %r_mat2339, 1
  %tmp2365 = icmp slt i32 %tmp2360, %i2354
  br i1 %tmp2365, label %then2362, label %else2364

then2356:                                         ; preds = %merge2349
  %printf2357 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2355

else2358:                                         ; preds = %merge2349
  br label %merge2355

merge2361:                                        ; preds = %else2364, %then2362
  %y2366 = load double, double* %y
  %w2367 = load double, double* %w
  %tmp2368 = fdiv double %w2367, 2.000000e+00
  %tmp2369 = fadd double %y2366, %tmp2368
  %tmp2370 = fsub double %tmp2369, 2.000000e+00
  %double2int_result2371 = call %double_to_int_t* @double2int(double %tmp2370)
  %v_ptr2372 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2371, i32 0, i32 0
  %v2373 = load i32, i32* %v_ptr2372
  %41 = bitcast %double_to_int_t* %double2int_result2371 to i8*
  tail call void @free(i8* %41)
  %tmp2378 = icmp sgt i32 0, %v2373
  br i1 %tmp2378, label %then2375, label %else2377

then2362:                                         ; preds = %merge2355
  %printf2363 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2361

else2364:                                         ; preds = %merge2355
  br label %merge2361

merge2374:                                        ; preds = %else2377, %then2375
  %tmp2379 = sub i32 %c_mat2341, 1
  %tmp2384 = icmp slt i32 %tmp2379, %v2373
  br i1 %tmp2384, label %then2381, label %else2383

then2375:                                         ; preds = %merge2361
  %printf2376 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2374

else2377:                                         ; preds = %merge2361
  br label %merge2374

merge2380:                                        ; preds = %else2383, %then2381
  %y2385 = load double, double* %y
  %w2386 = load double, double* %w
  %tmp2387 = fdiv double %w2386, 2.000000e+00
  %tmp2388 = fadd double %y2385, %tmp2387
  %tmp2389 = fadd double %tmp2388, 2.000000e+00
  %double2int_result2390 = call %double_to_int_t* @double2int(double %tmp2389)
  %v_ptr2391 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2390, i32 0, i32 0
  %v2392 = load i32, i32* %v_ptr2391
  %42 = bitcast %double_to_int_t* %double2int_result2390 to i8*
  tail call void @free(i8* %42)
  %tmp2397 = icmp sgt i32 0, %v2392
  br i1 %tmp2397, label %then2394, label %else2396

then2381:                                         ; preds = %merge2374
  %printf2382 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2380

else2383:                                         ; preds = %merge2374
  br label %merge2380

merge2393:                                        ; preds = %else2396, %then2394
  %tmp2398 = sub i32 %c_mat2341, 1
  %tmp2403 = icmp slt i32 %tmp2398, %v2392
  br i1 %tmp2403, label %then2400, label %else2402

then2394:                                         ; preds = %merge2380
  %printf2395 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2393

else2396:                                         ; preds = %merge2380
  br label %merge2393

merge2399:                                        ; preds = %else2402, %then2400
  %tmp2404 = sub i32 %i2354, %i2342
  %tmp2405 = add i32 %tmp2404, 1
  %m_r2406 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 1
  %r_mat2407 = load i32, i32* %m_r2406
  %tmp2412 = icmp ne i32 %tmp2405, %r_mat2407
  br i1 %tmp2412, label %then2409, label %else2411

then2400:                                         ; preds = %merge2393
  %printf2401 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2399

else2402:                                         ; preds = %merge2393
  br label %merge2399

merge2408:                                        ; preds = %else2411, %then2409
  %tmp2413 = sub i32 %v2392, %v2373
  %tmp2414 = add i32 %tmp2413, 1
  %m_r2415 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 2
  %r_mat2416 = load i32, i32* %m_r2415
  %tmp2421 = icmp ne i32 %tmp2414, %r_mat2416
  br i1 %tmp2421, label %then2418, label %else2420

then2409:                                         ; preds = %merge2399
  %printf2410 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2408

else2411:                                         ; preds = %merge2399
  br label %merge2408

merge2417:                                        ; preds = %else2420, %then2418
  %m_mat2422 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat2423 = load double*, double** %m_mat2422
  %m_r2424 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat2425 = load i32, i32* %m_r2424
  %m_c2426 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat2427 = load i32, i32* %m_c2426
  %m_mat2428 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 0
  %mat_v2429 = load double*, double** %m_mat2428
  %m_r2430 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 1
  %r_v2431 = load i32, i32* %m_r2430
  %m_c2432 = getelementptr inbounds %matrix_t, %matrix_t* %m2266, i32 0, i32 2
  %c_v2433 = load i32, i32* %m_c2432
  %i2434 = alloca i32
  store i32 %i2342, i32* %i2434
  br label %while2435

then2418:                                         ; preds = %merge2408
  %printf2419 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2417

else2420:                                         ; preds = %merge2408
  br label %merge2417

while2435:                                        ; preds = %merge2457, %merge2417
  %i_v2463 = load i32, i32* %i2434
  %bool_val2464 = icmp sle i32 %i_v2463, %i2354
  br i1 %bool_val2464, label %while_body2436, label %merge2462

while_body2436:                                   ; preds = %while2435
  %j2437 = alloca i32
  store i32 %v2373, i32* %j2437
  br label %while2438

while2438:                                        ; preds = %while_body2439, %while_body2436
  %j_v2458 = load i32, i32* %j2437
  %bool_val2459 = icmp sle i32 %j_v2458, %v2392
  br i1 %bool_val2459, label %while_body2439, label %merge2457

while_body2439:                                   ; preds = %while2438
  %j_v2440 = load i32, i32* %j2437
  %i_v2441 = load i32, i32* %i2434
  %tmp2442 = mul i32 %c_mat2427, %i_v2441
  %index2443 = add i32 %j_v2440, %tmp2442
  %element_ptr2444 = getelementptr double, double* %mat_mat2423, i32 %index2443
  %j_v2445 = load i32, i32* %j2437
  %tmp2446 = sub i32 %j_v2445, %v2373
  %tmp2447 = add i32 %tmp2446, 0
  %i_v2448 = load i32, i32* %i2434
  %tmp2449 = sub i32 %i_v2448, %i2342
  %tmp2450 = add i32 %tmp2449, 0
  %tmp2451 = mul i32 %c_v2433, %tmp2450
  %index2452 = add i32 %tmp2447, %tmp2451
  %element_ptr2453 = getelementptr double, double* %mat_v2429, i32 %index2452
  %tmp_element2454 = load double, double* %element_ptr2453
  store double %tmp_element2454, double* %element_ptr2444
  %j_v2455 = load i32, i32* %j2437
  %tmp2456 = add i32 %j_v2455, 1
  store i32 %tmp2456, i32* %j2437
  br label %while2438

merge2457:                                        ; preds = %while2438
  %i_v2460 = load i32, i32* %i2434
  %tmp2461 = add i32 %i_v2460, 1
  store i32 %tmp2461, i32* %i2434
  br label %while2435

merge2462:                                        ; preds = %while2435
  %i2465 = load i32, i32* %i918
  %tmp2466 = add i32 %i2465, 1
  %tmp2467 = load i32, i32* %i918
  store i32 %tmp2466, i32* %i918
  br label %while936

merge2468:                                        ; preds = %while936
  %i2478 = load i32, i32* %i918
  %y2479 = load double, double* %y
  %w2480 = load double, double* %w
  %tmp2481 = fdiv double %w2480, 2.000000e+00
  %tmp2482 = fadd double %y2479, %tmp2481
  %double2int_result2483 = call %double_to_int_t* @double2int(double %tmp2482)
  %v_ptr2484 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2483, i32 0, i32 0
  %v2485 = load i32, i32* %v_ptr2484
  %43 = bitcast %double_to_int_t* %double2int_result2483 to i8*
  tail call void @free(i8* %43)
  %tmp2486 = icmp sle i32 %i2478, %v2485
  %y2487 = load double, double* %y
  %w2488 = load double, double* %w
  %tmp2489 = fdiv double %w2488, 2.000000e+00
  %tmp2490 = fsub double %y2487, %tmp2489
  %double2int_result2491 = call %double_to_int_t* @double2int(double %tmp2490)
  %v_ptr2492 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2491, i32 0, i32 0
  %v2493 = load i32, i32* %v_ptr2492
  %44 = bitcast %double_to_int_t* %double2int_result2491 to i8*
  tail call void @free(i8* %44)
  %tmp2494 = load i32, i32* %i918
  store i32 %v2493, i32* %i918
  br label %while2495

while2495:                                        ; preds = %merge4022, %merge2468
  %i4029 = load i32, i32* %i918
  %y4030 = load double, double* %y
  %w4031 = load double, double* %w
  %tmp4032 = fdiv double %w4031, 2.000000e+00
  %tmp4033 = fadd double %y4030, %tmp4032
  %double2int_result4034 = call %double_to_int_t* @double2int(double %tmp4033)
  %v_ptr4035 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result4034, i32 0, i32 0
  %v4036 = load i32, i32* %v_ptr4035
  %45 = bitcast %double_to_int_t* %double2int_result4034 to i8*
  tail call void @free(i8* %45)
  %tmp4037 = icmp sle i32 %i4029, %v4036
  br i1 %tmp4037, label %while_body2496, label %merge4028

while_body2496:                                   ; preds = %while2495
  %zeros_result2497 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr2498 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2497, i32 0, i32 0
  %v2499 = load %matrix_t*, %matrix_t** %v_ptr2498
  %46 = bitcast %zero_matrix_t* %zeros_result2497 to i8*
  tail call void @free(i8* %46)
  %m_mat2500 = getelementptr inbounds %matrix_t, %matrix_t* %v2499, i32 0, i32 0
  %mat_mat2501 = load double*, double** %m_mat2500
  %m_r2502 = getelementptr inbounds %matrix_t, %matrix_t* %v2499, i32 0, i32 1
  %r_mat2503 = load i32, i32* %m_r2502
  %m_c2504 = getelementptr inbounds %matrix_t, %matrix_t* %v2499, i32 0, i32 2
  %c_mat2505 = load i32, i32* %m_c2504
  %size2506 = mul i32 %r_mat2503, %c_mat2505
  %system_mat2507 = alloca double, i32 %size2506
  %m2508 = alloca %matrix_t
  %m_mat2509 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 0
  store double* %system_mat2507, double** %m_mat2509
  %m_r2510 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 1
  store i32 %r_mat2503, i32* %m_r2510
  %m_c2511 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 2
  store i32 %c_mat2505, i32* %m_c2511
  %tmp2512 = sub i32 %r_mat2503, 1
  %tmp2513 = sub i32 %c_mat2505, 1
  %i2514 = alloca i32
  store i32 0, i32* %i2514
  br label %while2515

while2515:                                        ; preds = %merge2527, %while_body2496
  %i_v2533 = load i32, i32* %i2514
  %bool_val2534 = icmp sle i32 %i_v2533, %tmp2512
  br i1 %bool_val2534, label %while_body2516, label %merge2532

while_body2516:                                   ; preds = %while2515
  %j2517 = alloca i32
  store i32 0, i32* %j2517
  br label %while2518

while2518:                                        ; preds = %while_body2519, %while_body2516
  %j_v2528 = load i32, i32* %j2517
  %bool_val2529 = icmp sle i32 %j_v2528, %tmp2513
  br i1 %bool_val2529, label %while_body2519, label %merge2527

while_body2519:                                   ; preds = %while2518
  %j_v2520 = load i32, i32* %j2517
  %i_v2521 = load i32, i32* %i2514
  %tmp2522 = mul i32 %c_mat2505, %i_v2521
  %index2523 = add i32 %j_v2520, %tmp2522
  %element_ptr2524 = getelementptr double, double* %system_mat2507, i32 %index2523
  store double 0.000000e+00, double* %element_ptr2524
  %j_v2525 = load i32, i32* %j2517
  %tmp2526 = add i32 %j_v2525, 1
  store i32 %tmp2526, i32* %j2517
  br label %while2518

merge2527:                                        ; preds = %while2518
  %i_v2530 = load i32, i32* %i2514
  %tmp2531 = add i32 %i_v2530, 1
  store i32 %tmp2531, i32* %i2514
  br label %while2515

merge2532:                                        ; preds = %while2515
  %tmp2535 = sub i32 %c_mat2505, 1
  %tmp2536 = sub i32 %r_mat2503, 1
  %m_mat2537 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 0
  %mat_mat2538 = load double*, double** %m_mat2537
  %m_r2539 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 1
  %r_mat2540 = load i32, i32* %m_r2539
  %m_c2541 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 2
  %c_mat2542 = load i32, i32* %m_c2541
  %m_mat2543 = getelementptr inbounds %matrix_t, %matrix_t* %v2499, i32 0, i32 0
  %mat_v2544 = load double*, double** %m_mat2543
  %m_r2545 = getelementptr inbounds %matrix_t, %matrix_t* %v2499, i32 0, i32 1
  %r_v2546 = load i32, i32* %m_r2545
  %m_c2547 = getelementptr inbounds %matrix_t, %matrix_t* %v2499, i32 0, i32 2
  %c_v2548 = load i32, i32* %m_c2547
  %i2549 = alloca i32
  store i32 0, i32* %i2549
  br label %while2550

while2550:                                        ; preds = %merge2572, %merge2532
  %i_v2578 = load i32, i32* %i2549
  %bool_val2579 = icmp sle i32 %i_v2578, %tmp2536
  br i1 %bool_val2579, label %while_body2551, label %merge2577

while_body2551:                                   ; preds = %while2550
  %j2552 = alloca i32
  store i32 0, i32* %j2552
  br label %while2553

while2553:                                        ; preds = %while_body2554, %while_body2551
  %j_v2573 = load i32, i32* %j2552
  %bool_val2574 = icmp sle i32 %j_v2573, %tmp2535
  br i1 %bool_val2574, label %while_body2554, label %merge2572

while_body2554:                                   ; preds = %while2553
  %j_v2555 = load i32, i32* %j2552
  %i_v2556 = load i32, i32* %i2549
  %tmp2557 = mul i32 %c_mat2542, %i_v2556
  %index2558 = add i32 %j_v2555, %tmp2557
  %element_ptr2559 = getelementptr double, double* %mat_mat2538, i32 %index2558
  %j_v2560 = load i32, i32* %j2552
  %tmp2561 = sub i32 %j_v2560, 0
  %tmp2562 = add i32 %tmp2561, 0
  %i_v2563 = load i32, i32* %i2549
  %tmp2564 = sub i32 %i_v2563, 0
  %tmp2565 = add i32 %tmp2564, 0
  %tmp2566 = mul i32 %c_v2548, %tmp2565
  %index2567 = add i32 %tmp2562, %tmp2566
  %element_ptr2568 = getelementptr double, double* %mat_v2544, i32 %index2567
  %tmp_element2569 = load double, double* %element_ptr2568
  store double %tmp_element2569, double* %element_ptr2559
  %j_v2570 = load i32, i32* %j2552
  %tmp2571 = add i32 %j_v2570, 1
  store i32 %tmp2571, i32* %j2552
  br label %while2553

merge2572:                                        ; preds = %while2553
  %i_v2575 = load i32, i32* %i2549
  %tmp2576 = add i32 %i_v2575, 1
  store i32 %tmp2576, i32* %i2549
  br label %while2550

merge2577:                                        ; preds = %while2550
  %47 = bitcast double* %mat_mat2501 to i8*
  tail call void @free(i8* %47)
  %48 = bitcast %matrix_t* %v2499 to i8*
  tail call void @free(i8* %48)
  %m_mat2580 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 0
  %mat_mat2581 = load double*, double** %m_mat2580
  %m_r2582 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 1
  %r_mat2583 = load i32, i32* %m_r2582
  %tmp2584 = sub i32 %r_mat2583, 1
  %m_c2585 = getelementptr inbounds %matrix_t, %matrix_t* %m2508, i32 0, i32 2
  %c_mat2586 = load i32, i32* %m_c2585
  %tmp2587 = sub i32 %c_mat2586, 1
  %size2588 = mul i32 %r_mat2583, %c_mat2586
  %system_mat2589 = alloca double, i32 %size2588
  %m2590 = alloca %matrix_t
  %m_mat2591 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 0
  store double* %system_mat2589, double** %m_mat2591
  %m_r2592 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 1
  store i32 %r_mat2583, i32* %m_r2592
  %m_c2593 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 2
  store i32 %c_mat2586, i32* %m_c2593
  %tmp2594 = sub i32 %r_mat2583, 1
  %tmp2595 = sub i32 %c_mat2586, 1
  %i2596 = alloca i32
  store i32 0, i32* %i2596
  br label %while2597

while2597:                                        ; preds = %merge2609, %merge2577
  %i_v2615 = load i32, i32* %i2596
  %bool_val2616 = icmp sle i32 %i_v2615, %tmp2594
  br i1 %bool_val2616, label %while_body2598, label %merge2614

while_body2598:                                   ; preds = %while2597
  %j2599 = alloca i32
  store i32 0, i32* %j2599
  br label %while2600

while2600:                                        ; preds = %while_body2601, %while_body2598
  %j_v2610 = load i32, i32* %j2599
  %bool_val2611 = icmp sle i32 %j_v2610, %tmp2595
  br i1 %bool_val2611, label %while_body2601, label %merge2609

while_body2601:                                   ; preds = %while2600
  %j_v2602 = load i32, i32* %j2599
  %i_v2603 = load i32, i32* %i2596
  %tmp2604 = mul i32 %c_mat2586, %i_v2603
  %index2605 = add i32 %j_v2602, %tmp2604
  %element_ptr2606 = getelementptr double, double* %system_mat2589, i32 %index2605
  store double 0.000000e+00, double* %element_ptr2606
  %j_v2607 = load i32, i32* %j2599
  %tmp2608 = add i32 %j_v2607, 1
  store i32 %tmp2608, i32* %j2599
  br label %while2600

merge2609:                                        ; preds = %while2600
  %i_v2612 = load i32, i32* %i2596
  %tmp2613 = add i32 %i_v2612, 1
  store i32 %tmp2613, i32* %i2596
  br label %while2597

merge2614:                                        ; preds = %while2597
  %m_mat2617 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 0
  %mat_mat2618 = load double*, double** %m_mat2617
  %i2619 = alloca i32
  store i32 0, i32* %i2619
  br label %while2620

while2620:                                        ; preds = %merge2639, %merge2614
  %i_v2645 = load i32, i32* %i2619
  %bool_val2646 = icmp sle i32 %i_v2645, %tmp2584
  br i1 %bool_val2646, label %while_body2621, label %merge2644

while_body2621:                                   ; preds = %while2620
  %j2622 = alloca i32
  store i32 0, i32* %j2622
  br label %while2623

while2623:                                        ; preds = %while_body2624, %while_body2621
  %j_v2640 = load i32, i32* %j2622
  %bool_val2641 = icmp sle i32 %j_v2640, %tmp2587
  br i1 %bool_val2641, label %while_body2624, label %merge2639

while_body2624:                                   ; preds = %while2623
  %j_v2625 = load i32, i32* %j2622
  %i_v2626 = load i32, i32* %i2619
  %tmp2627 = mul i32 %c_mat2586, %i_v2626
  %index2628 = add i32 %j_v2625, %tmp2627
  %element_ptr2629 = getelementptr double, double* %mat_mat2581, i32 %index2628
  %tmp_element2630 = load double, double* %element_ptr2629
  %j_v2631 = load i32, i32* %j2622
  %i_v2632 = load i32, i32* %i2619
  %tmp2633 = mul i32 %c_mat2586, %i_v2632
  %index2634 = add i32 %j_v2631, %tmp2633
  %element_ptr2635 = getelementptr double, double* %mat_mat2618, i32 %index2634
  %tmp_element2636 = fsub double %tmp_element2630, 2.550000e+02
  store double %tmp_element2636, double* %element_ptr2635
  %j_v2637 = load i32, i32* %j2622
  %tmp2638 = add i32 %j_v2637, 1
  store i32 %tmp2638, i32* %j2622
  br label %while2623

merge2639:                                        ; preds = %while2623
  %i_v2642 = load i32, i32* %i2619
  %tmp2643 = add i32 %i_v2642, 1
  store i32 %tmp2643, i32* %i2619
  br label %while2620

merge2644:                                        ; preds = %while2620
  %m_r2647 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat2648 = load i32, i32* %m_r2647
  %m_c2649 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat2650 = load i32, i32* %m_c2649
  %x2651 = load double, double* %x
  %l2652 = load double, double* %l
  %tmp2653 = fdiv double %l2652, 2.000000e+00
  %tmp2654 = fsub double %x2651, %tmp2653
  %tmp2655 = fsub double %tmp2654, 2.000000e+00
  %double2int_result2656 = call %double_to_int_t* @double2int(double %tmp2655)
  %v_ptr2657 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2656, i32 0, i32 0
  %v2658 = load i32, i32* %v_ptr2657
  %49 = bitcast %double_to_int_t* %double2int_result2656 to i8*
  tail call void @free(i8* %49)
  %tmp2663 = icmp sgt i32 0, %v2658
  br i1 %tmp2663, label %then2660, label %else2662

merge2659:                                        ; preds = %else2662, %then2660
  %tmp2664 = sub i32 %r_mat2648, 1
  %tmp2669 = icmp slt i32 %tmp2664, %v2658
  br i1 %tmp2669, label %then2666, label %else2668

then2660:                                         ; preds = %merge2644
  %printf2661 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2659

else2662:                                         ; preds = %merge2644
  br label %merge2659

merge2665:                                        ; preds = %else2668, %then2666
  %x2670 = load double, double* %x
  %l2671 = load double, double* %l
  %tmp2672 = fdiv double %l2671, 2.000000e+00
  %tmp2673 = fsub double %x2670, %tmp2672
  %tmp2674 = fadd double %tmp2673, 2.000000e+00
  %double2int_result2675 = call %double_to_int_t* @double2int(double %tmp2674)
  %v_ptr2676 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2675, i32 0, i32 0
  %v2677 = load i32, i32* %v_ptr2676
  %50 = bitcast %double_to_int_t* %double2int_result2675 to i8*
  tail call void @free(i8* %50)
  %tmp2682 = icmp sgt i32 0, %v2677
  br i1 %tmp2682, label %then2679, label %else2681

then2666:                                         ; preds = %merge2659
  %printf2667 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2665

else2668:                                         ; preds = %merge2659
  br label %merge2665

merge2678:                                        ; preds = %else2681, %then2679
  %tmp2683 = sub i32 %r_mat2648, 1
  %tmp2688 = icmp slt i32 %tmp2683, %v2677
  br i1 %tmp2688, label %then2685, label %else2687

then2679:                                         ; preds = %merge2665
  %printf2680 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2678

else2681:                                         ; preds = %merge2665
  br label %merge2678

merge2684:                                        ; preds = %else2687, %then2685
  %i2689 = load i32, i32* %i918
  %tmp2694 = icmp sgt i32 0, %i2689
  br i1 %tmp2694, label %then2691, label %else2693

then2685:                                         ; preds = %merge2678
  %printf2686 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2684

else2687:                                         ; preds = %merge2678
  br label %merge2684

merge2690:                                        ; preds = %else2693, %then2691
  %tmp2695 = sub i32 %c_mat2650, 1
  %tmp2700 = icmp slt i32 %tmp2695, %i2689
  br i1 %tmp2700, label %then2697, label %else2699

then2691:                                         ; preds = %merge2684
  %printf2692 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2690

else2693:                                         ; preds = %merge2684
  br label %merge2690

merge2696:                                        ; preds = %else2699, %then2697
  %i2701 = load i32, i32* %i918
  %tmp2706 = icmp sgt i32 0, %i2701
  br i1 %tmp2706, label %then2703, label %else2705

then2697:                                         ; preds = %merge2690
  %printf2698 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2696

else2699:                                         ; preds = %merge2690
  br label %merge2696

merge2702:                                        ; preds = %else2705, %then2703
  %tmp2707 = sub i32 %c_mat2650, 1
  %tmp2712 = icmp slt i32 %tmp2707, %i2701
  br i1 %tmp2712, label %then2709, label %else2711

then2703:                                         ; preds = %merge2696
  %printf2704 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2702

else2705:                                         ; preds = %merge2696
  br label %merge2702

merge2708:                                        ; preds = %else2711, %then2709
  %tmp2713 = sub i32 %v2677, %v2658
  %tmp2714 = add i32 %tmp2713, 1
  %m_r2715 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 1
  %r_mat2716 = load i32, i32* %m_r2715
  %tmp2721 = icmp ne i32 %tmp2714, %r_mat2716
  br i1 %tmp2721, label %then2718, label %else2720

then2709:                                         ; preds = %merge2702
  %printf2710 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2708

else2711:                                         ; preds = %merge2702
  br label %merge2708

merge2717:                                        ; preds = %else2720, %then2718
  %tmp2722 = sub i32 %i2701, %i2689
  %tmp2723 = add i32 %tmp2722, 1
  %m_r2724 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 2
  %r_mat2725 = load i32, i32* %m_r2724
  %tmp2730 = icmp ne i32 %tmp2723, %r_mat2725
  br i1 %tmp2730, label %then2727, label %else2729

then2718:                                         ; preds = %merge2708
  %printf2719 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2717

else2720:                                         ; preds = %merge2708
  br label %merge2717

merge2726:                                        ; preds = %else2729, %then2727
  %m_mat2731 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 0
  %mat_mat2732 = load double*, double** %m_mat2731
  %m_r2733 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat2734 = load i32, i32* %m_r2733
  %m_c2735 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat2736 = load i32, i32* %m_c2735
  %m_mat2737 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 0
  %mat_v2738 = load double*, double** %m_mat2737
  %m_r2739 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 1
  %r_v2740 = load i32, i32* %m_r2739
  %m_c2741 = getelementptr inbounds %matrix_t, %matrix_t* %m2590, i32 0, i32 2
  %c_v2742 = load i32, i32* %m_c2741
  %i2743 = alloca i32
  store i32 %v2658, i32* %i2743
  br label %while2744

then2727:                                         ; preds = %merge2717
  %printf2728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2726

else2729:                                         ; preds = %merge2717
  br label %merge2726

while2744:                                        ; preds = %merge2766, %merge2726
  %i_v2772 = load i32, i32* %i2743
  %bool_val2773 = icmp sle i32 %i_v2772, %v2677
  br i1 %bool_val2773, label %while_body2745, label %merge2771

while_body2745:                                   ; preds = %while2744
  %j2746 = alloca i32
  store i32 %i2689, i32* %j2746
  br label %while2747

while2747:                                        ; preds = %while_body2748, %while_body2745
  %j_v2767 = load i32, i32* %j2746
  %bool_val2768 = icmp sle i32 %j_v2767, %i2701
  br i1 %bool_val2768, label %while_body2748, label %merge2766

while_body2748:                                   ; preds = %while2747
  %j_v2749 = load i32, i32* %j2746
  %i_v2750 = load i32, i32* %i2743
  %tmp2751 = mul i32 %c_mat2736, %i_v2750
  %index2752 = add i32 %j_v2749, %tmp2751
  %element_ptr2753 = getelementptr double, double* %mat_mat2732, i32 %index2752
  %j_v2754 = load i32, i32* %j2746
  %tmp2755 = sub i32 %j_v2754, %i2689
  %tmp2756 = add i32 %tmp2755, 0
  %i_v2757 = load i32, i32* %i2743
  %tmp2758 = sub i32 %i_v2757, %v2658
  %tmp2759 = add i32 %tmp2758, 0
  %tmp2760 = mul i32 %c_v2742, %tmp2759
  %index2761 = add i32 %tmp2756, %tmp2760
  %element_ptr2762 = getelementptr double, double* %mat_v2738, i32 %index2761
  %tmp_element2763 = load double, double* %element_ptr2762
  store double %tmp_element2763, double* %element_ptr2753
  %j_v2764 = load i32, i32* %j2746
  %tmp2765 = add i32 %j_v2764, 1
  store i32 %tmp2765, i32* %j2746
  br label %while2747

merge2766:                                        ; preds = %while2747
  %i_v2769 = load i32, i32* %i2743
  %tmp2770 = add i32 %i_v2769, 1
  store i32 %tmp2770, i32* %i2743
  br label %while2744

merge2771:                                        ; preds = %while2744
  %zeros_result2774 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr2775 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result2774, i32 0, i32 0
  %v2776 = load %matrix_t*, %matrix_t** %v_ptr2775
  %51 = bitcast %zero_matrix_t* %zeros_result2774 to i8*
  tail call void @free(i8* %51)
  %m_mat2777 = getelementptr inbounds %matrix_t, %matrix_t* %v2776, i32 0, i32 0
  %mat_mat2778 = load double*, double** %m_mat2777
  %m_r2779 = getelementptr inbounds %matrix_t, %matrix_t* %v2776, i32 0, i32 1
  %r_mat2780 = load i32, i32* %m_r2779
  %m_c2781 = getelementptr inbounds %matrix_t, %matrix_t* %v2776, i32 0, i32 2
  %c_mat2782 = load i32, i32* %m_c2781
  %size2783 = mul i32 %r_mat2780, %c_mat2782
  %system_mat2784 = alloca double, i32 %size2783
  %m2785 = alloca %matrix_t
  %m_mat2786 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 0
  store double* %system_mat2784, double** %m_mat2786
  %m_r2787 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 1
  store i32 %r_mat2780, i32* %m_r2787
  %m_c2788 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 2
  store i32 %c_mat2782, i32* %m_c2788
  %tmp2789 = sub i32 %r_mat2780, 1
  %tmp2790 = sub i32 %c_mat2782, 1
  %i2791 = alloca i32
  store i32 0, i32* %i2791
  br label %while2792

while2792:                                        ; preds = %merge2804, %merge2771
  %i_v2810 = load i32, i32* %i2791
  %bool_val2811 = icmp sle i32 %i_v2810, %tmp2789
  br i1 %bool_val2811, label %while_body2793, label %merge2809

while_body2793:                                   ; preds = %while2792
  %j2794 = alloca i32
  store i32 0, i32* %j2794
  br label %while2795

while2795:                                        ; preds = %while_body2796, %while_body2793
  %j_v2805 = load i32, i32* %j2794
  %bool_val2806 = icmp sle i32 %j_v2805, %tmp2790
  br i1 %bool_val2806, label %while_body2796, label %merge2804

while_body2796:                                   ; preds = %while2795
  %j_v2797 = load i32, i32* %j2794
  %i_v2798 = load i32, i32* %i2791
  %tmp2799 = mul i32 %c_mat2782, %i_v2798
  %index2800 = add i32 %j_v2797, %tmp2799
  %element_ptr2801 = getelementptr double, double* %system_mat2784, i32 %index2800
  store double 0.000000e+00, double* %element_ptr2801
  %j_v2802 = load i32, i32* %j2794
  %tmp2803 = add i32 %j_v2802, 1
  store i32 %tmp2803, i32* %j2794
  br label %while2795

merge2804:                                        ; preds = %while2795
  %i_v2807 = load i32, i32* %i2791
  %tmp2808 = add i32 %i_v2807, 1
  store i32 %tmp2808, i32* %i2791
  br label %while2792

merge2809:                                        ; preds = %while2792
  %tmp2812 = sub i32 %c_mat2782, 1
  %tmp2813 = sub i32 %r_mat2780, 1
  %m_mat2814 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 0
  %mat_mat2815 = load double*, double** %m_mat2814
  %m_r2816 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 1
  %r_mat2817 = load i32, i32* %m_r2816
  %m_c2818 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 2
  %c_mat2819 = load i32, i32* %m_c2818
  %m_mat2820 = getelementptr inbounds %matrix_t, %matrix_t* %v2776, i32 0, i32 0
  %mat_v2821 = load double*, double** %m_mat2820
  %m_r2822 = getelementptr inbounds %matrix_t, %matrix_t* %v2776, i32 0, i32 1
  %r_v2823 = load i32, i32* %m_r2822
  %m_c2824 = getelementptr inbounds %matrix_t, %matrix_t* %v2776, i32 0, i32 2
  %c_v2825 = load i32, i32* %m_c2824
  %i2826 = alloca i32
  store i32 0, i32* %i2826
  br label %while2827

while2827:                                        ; preds = %merge2849, %merge2809
  %i_v2855 = load i32, i32* %i2826
  %bool_val2856 = icmp sle i32 %i_v2855, %tmp2813
  br i1 %bool_val2856, label %while_body2828, label %merge2854

while_body2828:                                   ; preds = %while2827
  %j2829 = alloca i32
  store i32 0, i32* %j2829
  br label %while2830

while2830:                                        ; preds = %while_body2831, %while_body2828
  %j_v2850 = load i32, i32* %j2829
  %bool_val2851 = icmp sle i32 %j_v2850, %tmp2812
  br i1 %bool_val2851, label %while_body2831, label %merge2849

while_body2831:                                   ; preds = %while2830
  %j_v2832 = load i32, i32* %j2829
  %i_v2833 = load i32, i32* %i2826
  %tmp2834 = mul i32 %c_mat2819, %i_v2833
  %index2835 = add i32 %j_v2832, %tmp2834
  %element_ptr2836 = getelementptr double, double* %mat_mat2815, i32 %index2835
  %j_v2837 = load i32, i32* %j2829
  %tmp2838 = sub i32 %j_v2837, 0
  %tmp2839 = add i32 %tmp2838, 0
  %i_v2840 = load i32, i32* %i2826
  %tmp2841 = sub i32 %i_v2840, 0
  %tmp2842 = add i32 %tmp2841, 0
  %tmp2843 = mul i32 %c_v2825, %tmp2842
  %index2844 = add i32 %tmp2839, %tmp2843
  %element_ptr2845 = getelementptr double, double* %mat_v2821, i32 %index2844
  %tmp_element2846 = load double, double* %element_ptr2845
  store double %tmp_element2846, double* %element_ptr2836
  %j_v2847 = load i32, i32* %j2829
  %tmp2848 = add i32 %j_v2847, 1
  store i32 %tmp2848, i32* %j2829
  br label %while2830

merge2849:                                        ; preds = %while2830
  %i_v2852 = load i32, i32* %i2826
  %tmp2853 = add i32 %i_v2852, 1
  store i32 %tmp2853, i32* %i2826
  br label %while2827

merge2854:                                        ; preds = %while2827
  %52 = bitcast double* %mat_mat2778 to i8*
  tail call void @free(i8* %52)
  %53 = bitcast %matrix_t* %v2776 to i8*
  tail call void @free(i8* %53)
  %m_mat2857 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 0
  %mat_mat2858 = load double*, double** %m_mat2857
  %m_r2859 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 1
  %r_mat2860 = load i32, i32* %m_r2859
  %tmp2861 = sub i32 %r_mat2860, 1
  %m_c2862 = getelementptr inbounds %matrix_t, %matrix_t* %m2785, i32 0, i32 2
  %c_mat2863 = load i32, i32* %m_c2862
  %tmp2864 = sub i32 %c_mat2863, 1
  %size2865 = mul i32 %r_mat2860, %c_mat2863
  %system_mat2866 = alloca double, i32 %size2865
  %m2867 = alloca %matrix_t
  %m_mat2868 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 0
  store double* %system_mat2866, double** %m_mat2868
  %m_r2869 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 1
  store i32 %r_mat2860, i32* %m_r2869
  %m_c2870 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 2
  store i32 %c_mat2863, i32* %m_c2870
  %tmp2871 = sub i32 %r_mat2860, 1
  %tmp2872 = sub i32 %c_mat2863, 1
  %i2873 = alloca i32
  store i32 0, i32* %i2873
  br label %while2874

while2874:                                        ; preds = %merge2886, %merge2854
  %i_v2892 = load i32, i32* %i2873
  %bool_val2893 = icmp sle i32 %i_v2892, %tmp2871
  br i1 %bool_val2893, label %while_body2875, label %merge2891

while_body2875:                                   ; preds = %while2874
  %j2876 = alloca i32
  store i32 0, i32* %j2876
  br label %while2877

while2877:                                        ; preds = %while_body2878, %while_body2875
  %j_v2887 = load i32, i32* %j2876
  %bool_val2888 = icmp sle i32 %j_v2887, %tmp2872
  br i1 %bool_val2888, label %while_body2878, label %merge2886

while_body2878:                                   ; preds = %while2877
  %j_v2879 = load i32, i32* %j2876
  %i_v2880 = load i32, i32* %i2873
  %tmp2881 = mul i32 %c_mat2863, %i_v2880
  %index2882 = add i32 %j_v2879, %tmp2881
  %element_ptr2883 = getelementptr double, double* %system_mat2866, i32 %index2882
  store double 0.000000e+00, double* %element_ptr2883
  %j_v2884 = load i32, i32* %j2876
  %tmp2885 = add i32 %j_v2884, 1
  store i32 %tmp2885, i32* %j2876
  br label %while2877

merge2886:                                        ; preds = %while2877
  %i_v2889 = load i32, i32* %i2873
  %tmp2890 = add i32 %i_v2889, 1
  store i32 %tmp2890, i32* %i2873
  br label %while2874

merge2891:                                        ; preds = %while2874
  %m_mat2894 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 0
  %mat_mat2895 = load double*, double** %m_mat2894
  %i2896 = alloca i32
  store i32 0, i32* %i2896
  br label %while2897

while2897:                                        ; preds = %merge2916, %merge2891
  %i_v2922 = load i32, i32* %i2896
  %bool_val2923 = icmp sle i32 %i_v2922, %tmp2861
  br i1 %bool_val2923, label %while_body2898, label %merge2921

while_body2898:                                   ; preds = %while2897
  %j2899 = alloca i32
  store i32 0, i32* %j2899
  br label %while2900

while2900:                                        ; preds = %while_body2901, %while_body2898
  %j_v2917 = load i32, i32* %j2899
  %bool_val2918 = icmp sle i32 %j_v2917, %tmp2864
  br i1 %bool_val2918, label %while_body2901, label %merge2916

while_body2901:                                   ; preds = %while2900
  %j_v2902 = load i32, i32* %j2899
  %i_v2903 = load i32, i32* %i2896
  %tmp2904 = mul i32 %c_mat2863, %i_v2903
  %index2905 = add i32 %j_v2902, %tmp2904
  %element_ptr2906 = getelementptr double, double* %mat_mat2858, i32 %index2905
  %tmp_element2907 = load double, double* %element_ptr2906
  %j_v2908 = load i32, i32* %j2899
  %i_v2909 = load i32, i32* %i2896
  %tmp2910 = mul i32 %c_mat2863, %i_v2909
  %index2911 = add i32 %j_v2908, %tmp2910
  %element_ptr2912 = getelementptr double, double* %mat_mat2895, i32 %index2911
  %tmp_element2913 = fsub double %tmp_element2907, 2.550000e+02
  store double %tmp_element2913, double* %element_ptr2912
  %j_v2914 = load i32, i32* %j2899
  %tmp2915 = add i32 %j_v2914, 1
  store i32 %tmp2915, i32* %j2899
  br label %while2900

merge2916:                                        ; preds = %while2900
  %i_v2919 = load i32, i32* %i2896
  %tmp2920 = add i32 %i_v2919, 1
  store i32 %tmp2920, i32* %i2896
  br label %while2897

merge2921:                                        ; preds = %while2897
  %m_r2924 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat2925 = load i32, i32* %m_r2924
  %m_c2926 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat2927 = load i32, i32* %m_c2926
  %x2928 = load double, double* %x
  %l2929 = load double, double* %l
  %tmp2930 = fdiv double %l2929, 2.000000e+00
  %tmp2931 = fsub double %x2928, %tmp2930
  %tmp2932 = fsub double %tmp2931, 2.000000e+00
  %double2int_result2933 = call %double_to_int_t* @double2int(double %tmp2932)
  %v_ptr2934 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2933, i32 0, i32 0
  %v2935 = load i32, i32* %v_ptr2934
  %54 = bitcast %double_to_int_t* %double2int_result2933 to i8*
  tail call void @free(i8* %54)
  %tmp2940 = icmp sgt i32 0, %v2935
  br i1 %tmp2940, label %then2937, label %else2939

merge2936:                                        ; preds = %else2939, %then2937
  %tmp2941 = sub i32 %r_mat2925, 1
  %tmp2946 = icmp slt i32 %tmp2941, %v2935
  br i1 %tmp2946, label %then2943, label %else2945

then2937:                                         ; preds = %merge2921
  %printf2938 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2936

else2939:                                         ; preds = %merge2921
  br label %merge2936

merge2942:                                        ; preds = %else2945, %then2943
  %x2947 = load double, double* %x
  %l2948 = load double, double* %l
  %tmp2949 = fdiv double %l2948, 2.000000e+00
  %tmp2950 = fsub double %x2947, %tmp2949
  %tmp2951 = fadd double %tmp2950, 2.000000e+00
  %double2int_result2952 = call %double_to_int_t* @double2int(double %tmp2951)
  %v_ptr2953 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result2952, i32 0, i32 0
  %v2954 = load i32, i32* %v_ptr2953
  %55 = bitcast %double_to_int_t* %double2int_result2952 to i8*
  tail call void @free(i8* %55)
  %tmp2959 = icmp sgt i32 0, %v2954
  br i1 %tmp2959, label %then2956, label %else2958

then2943:                                         ; preds = %merge2936
  %printf2944 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2942

else2945:                                         ; preds = %merge2936
  br label %merge2942

merge2955:                                        ; preds = %else2958, %then2956
  %tmp2960 = sub i32 %r_mat2925, 1
  %tmp2965 = icmp slt i32 %tmp2960, %v2954
  br i1 %tmp2965, label %then2962, label %else2964

then2956:                                         ; preds = %merge2942
  %printf2957 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2955

else2958:                                         ; preds = %merge2942
  br label %merge2955

merge2961:                                        ; preds = %else2964, %then2962
  %i2966 = load i32, i32* %i918
  %tmp2971 = icmp sgt i32 0, %i2966
  br i1 %tmp2971, label %then2968, label %else2970

then2962:                                         ; preds = %merge2955
  %printf2963 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2961

else2964:                                         ; preds = %merge2955
  br label %merge2961

merge2967:                                        ; preds = %else2970, %then2968
  %tmp2972 = sub i32 %c_mat2927, 1
  %tmp2977 = icmp slt i32 %tmp2972, %i2966
  br i1 %tmp2977, label %then2974, label %else2976

then2968:                                         ; preds = %merge2961
  %printf2969 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2967

else2970:                                         ; preds = %merge2961
  br label %merge2967

merge2973:                                        ; preds = %else2976, %then2974
  %i2978 = load i32, i32* %i918
  %tmp2983 = icmp sgt i32 0, %i2978
  br i1 %tmp2983, label %then2980, label %else2982

then2974:                                         ; preds = %merge2967
  %printf2975 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2973

else2976:                                         ; preds = %merge2967
  br label %merge2973

merge2979:                                        ; preds = %else2982, %then2980
  %tmp2984 = sub i32 %c_mat2927, 1
  %tmp2989 = icmp slt i32 %tmp2984, %i2978
  br i1 %tmp2989, label %then2986, label %else2988

then2980:                                         ; preds = %merge2973
  %printf2981 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2979

else2982:                                         ; preds = %merge2973
  br label %merge2979

merge2985:                                        ; preds = %else2988, %then2986
  %tmp2990 = sub i32 %v2954, %v2935
  %tmp2991 = add i32 %tmp2990, 1
  %m_r2992 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 1
  %r_mat2993 = load i32, i32* %m_r2992
  %tmp2998 = icmp ne i32 %tmp2991, %r_mat2993
  br i1 %tmp2998, label %then2995, label %else2997

then2986:                                         ; preds = %merge2979
  %printf2987 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge2985

else2988:                                         ; preds = %merge2979
  br label %merge2985

merge2994:                                        ; preds = %else2997, %then2995
  %tmp2999 = sub i32 %i2978, %i2966
  %tmp3000 = add i32 %tmp2999, 1
  %m_r3001 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 2
  %r_mat3002 = load i32, i32* %m_r3001
  %tmp3007 = icmp ne i32 %tmp3000, %r_mat3002
  br i1 %tmp3007, label %then3004, label %else3006

then2995:                                         ; preds = %merge2985
  %printf2996 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge2994

else2997:                                         ; preds = %merge2985
  br label %merge2994

merge3003:                                        ; preds = %else3006, %then3004
  %m_mat3008 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 0
  %mat_mat3009 = load double*, double** %m_mat3008
  %m_r3010 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat3011 = load i32, i32* %m_r3010
  %m_c3012 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat3013 = load i32, i32* %m_c3012
  %m_mat3014 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 0
  %mat_v3015 = load double*, double** %m_mat3014
  %m_r3016 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 1
  %r_v3017 = load i32, i32* %m_r3016
  %m_c3018 = getelementptr inbounds %matrix_t, %matrix_t* %m2867, i32 0, i32 2
  %c_v3019 = load i32, i32* %m_c3018
  %i3020 = alloca i32
  store i32 %v2935, i32* %i3020
  br label %while3021

then3004:                                         ; preds = %merge2994
  %printf3005 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3003

else3006:                                         ; preds = %merge2994
  br label %merge3003

while3021:                                        ; preds = %merge3043, %merge3003
  %i_v3049 = load i32, i32* %i3020
  %bool_val3050 = icmp sle i32 %i_v3049, %v2954
  br i1 %bool_val3050, label %while_body3022, label %merge3048

while_body3022:                                   ; preds = %while3021
  %j3023 = alloca i32
  store i32 %i2966, i32* %j3023
  br label %while3024

while3024:                                        ; preds = %while_body3025, %while_body3022
  %j_v3044 = load i32, i32* %j3023
  %bool_val3045 = icmp sle i32 %j_v3044, %i2978
  br i1 %bool_val3045, label %while_body3025, label %merge3043

while_body3025:                                   ; preds = %while3024
  %j_v3026 = load i32, i32* %j3023
  %i_v3027 = load i32, i32* %i3020
  %tmp3028 = mul i32 %c_mat3013, %i_v3027
  %index3029 = add i32 %j_v3026, %tmp3028
  %element_ptr3030 = getelementptr double, double* %mat_mat3009, i32 %index3029
  %j_v3031 = load i32, i32* %j3023
  %tmp3032 = sub i32 %j_v3031, %i2966
  %tmp3033 = add i32 %tmp3032, 0
  %i_v3034 = load i32, i32* %i3020
  %tmp3035 = sub i32 %i_v3034, %v2935
  %tmp3036 = add i32 %tmp3035, 0
  %tmp3037 = mul i32 %c_v3019, %tmp3036
  %index3038 = add i32 %tmp3033, %tmp3037
  %element_ptr3039 = getelementptr double, double* %mat_v3015, i32 %index3038
  %tmp_element3040 = load double, double* %element_ptr3039
  store double %tmp_element3040, double* %element_ptr3030
  %j_v3041 = load i32, i32* %j3023
  %tmp3042 = add i32 %j_v3041, 1
  store i32 %tmp3042, i32* %j3023
  br label %while3024

merge3043:                                        ; preds = %while3024
  %i_v3046 = load i32, i32* %i3020
  %tmp3047 = add i32 %i_v3046, 1
  store i32 %tmp3047, i32* %i3020
  br label %while3021

merge3048:                                        ; preds = %while3021
  %zeros_result3051 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3052 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3051, i32 0, i32 0
  %v3053 = load %matrix_t*, %matrix_t** %v_ptr3052
  %56 = bitcast %zero_matrix_t* %zeros_result3051 to i8*
  tail call void @free(i8* %56)
  %m_mat3054 = getelementptr inbounds %matrix_t, %matrix_t* %v3053, i32 0, i32 0
  %mat_mat3055 = load double*, double** %m_mat3054
  %m_r3056 = getelementptr inbounds %matrix_t, %matrix_t* %v3053, i32 0, i32 1
  %r_mat3057 = load i32, i32* %m_r3056
  %m_c3058 = getelementptr inbounds %matrix_t, %matrix_t* %v3053, i32 0, i32 2
  %c_mat3059 = load i32, i32* %m_c3058
  %size3060 = mul i32 %r_mat3057, %c_mat3059
  %system_mat3061 = alloca double, i32 %size3060
  %m3062 = alloca %matrix_t
  %m_mat3063 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 0
  store double* %system_mat3061, double** %m_mat3063
  %m_r3064 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 1
  store i32 %r_mat3057, i32* %m_r3064
  %m_c3065 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 2
  store i32 %c_mat3059, i32* %m_c3065
  %tmp3066 = sub i32 %r_mat3057, 1
  %tmp3067 = sub i32 %c_mat3059, 1
  %i3068 = alloca i32
  store i32 0, i32* %i3068
  br label %while3069

while3069:                                        ; preds = %merge3081, %merge3048
  %i_v3087 = load i32, i32* %i3068
  %bool_val3088 = icmp sle i32 %i_v3087, %tmp3066
  br i1 %bool_val3088, label %while_body3070, label %merge3086

while_body3070:                                   ; preds = %while3069
  %j3071 = alloca i32
  store i32 0, i32* %j3071
  br label %while3072

while3072:                                        ; preds = %while_body3073, %while_body3070
  %j_v3082 = load i32, i32* %j3071
  %bool_val3083 = icmp sle i32 %j_v3082, %tmp3067
  br i1 %bool_val3083, label %while_body3073, label %merge3081

while_body3073:                                   ; preds = %while3072
  %j_v3074 = load i32, i32* %j3071
  %i_v3075 = load i32, i32* %i3068
  %tmp3076 = mul i32 %c_mat3059, %i_v3075
  %index3077 = add i32 %j_v3074, %tmp3076
  %element_ptr3078 = getelementptr double, double* %system_mat3061, i32 %index3077
  store double 0.000000e+00, double* %element_ptr3078
  %j_v3079 = load i32, i32* %j3071
  %tmp3080 = add i32 %j_v3079, 1
  store i32 %tmp3080, i32* %j3071
  br label %while3072

merge3081:                                        ; preds = %while3072
  %i_v3084 = load i32, i32* %i3068
  %tmp3085 = add i32 %i_v3084, 1
  store i32 %tmp3085, i32* %i3068
  br label %while3069

merge3086:                                        ; preds = %while3069
  %tmp3089 = sub i32 %c_mat3059, 1
  %tmp3090 = sub i32 %r_mat3057, 1
  %m_mat3091 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 0
  %mat_mat3092 = load double*, double** %m_mat3091
  %m_r3093 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 1
  %r_mat3094 = load i32, i32* %m_r3093
  %m_c3095 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 2
  %c_mat3096 = load i32, i32* %m_c3095
  %m_mat3097 = getelementptr inbounds %matrix_t, %matrix_t* %v3053, i32 0, i32 0
  %mat_v3098 = load double*, double** %m_mat3097
  %m_r3099 = getelementptr inbounds %matrix_t, %matrix_t* %v3053, i32 0, i32 1
  %r_v3100 = load i32, i32* %m_r3099
  %m_c3101 = getelementptr inbounds %matrix_t, %matrix_t* %v3053, i32 0, i32 2
  %c_v3102 = load i32, i32* %m_c3101
  %i3103 = alloca i32
  store i32 0, i32* %i3103
  br label %while3104

while3104:                                        ; preds = %merge3126, %merge3086
  %i_v3132 = load i32, i32* %i3103
  %bool_val3133 = icmp sle i32 %i_v3132, %tmp3090
  br i1 %bool_val3133, label %while_body3105, label %merge3131

while_body3105:                                   ; preds = %while3104
  %j3106 = alloca i32
  store i32 0, i32* %j3106
  br label %while3107

while3107:                                        ; preds = %while_body3108, %while_body3105
  %j_v3127 = load i32, i32* %j3106
  %bool_val3128 = icmp sle i32 %j_v3127, %tmp3089
  br i1 %bool_val3128, label %while_body3108, label %merge3126

while_body3108:                                   ; preds = %while3107
  %j_v3109 = load i32, i32* %j3106
  %i_v3110 = load i32, i32* %i3103
  %tmp3111 = mul i32 %c_mat3096, %i_v3110
  %index3112 = add i32 %j_v3109, %tmp3111
  %element_ptr3113 = getelementptr double, double* %mat_mat3092, i32 %index3112
  %j_v3114 = load i32, i32* %j3106
  %tmp3115 = sub i32 %j_v3114, 0
  %tmp3116 = add i32 %tmp3115, 0
  %i_v3117 = load i32, i32* %i3103
  %tmp3118 = sub i32 %i_v3117, 0
  %tmp3119 = add i32 %tmp3118, 0
  %tmp3120 = mul i32 %c_v3102, %tmp3119
  %index3121 = add i32 %tmp3116, %tmp3120
  %element_ptr3122 = getelementptr double, double* %mat_v3098, i32 %index3121
  %tmp_element3123 = load double, double* %element_ptr3122
  store double %tmp_element3123, double* %element_ptr3113
  %j_v3124 = load i32, i32* %j3106
  %tmp3125 = add i32 %j_v3124, 1
  store i32 %tmp3125, i32* %j3106
  br label %while3107

merge3126:                                        ; preds = %while3107
  %i_v3129 = load i32, i32* %i3103
  %tmp3130 = add i32 %i_v3129, 1
  store i32 %tmp3130, i32* %i3103
  br label %while3104

merge3131:                                        ; preds = %while3104
  %57 = bitcast double* %mat_mat3055 to i8*
  tail call void @free(i8* %57)
  %58 = bitcast %matrix_t* %v3053 to i8*
  tail call void @free(i8* %58)
  %m_r3134 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat3135 = load i32, i32* %m_r3134
  %m_c3136 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat3137 = load i32, i32* %m_c3136
  %x3138 = load double, double* %x
  %l3139 = load double, double* %l
  %tmp3140 = fdiv double %l3139, 2.000000e+00
  %tmp3141 = fsub double %x3138, %tmp3140
  %tmp3142 = fsub double %tmp3141, 2.000000e+00
  %double2int_result3143 = call %double_to_int_t* @double2int(double %tmp3142)
  %v_ptr3144 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3143, i32 0, i32 0
  %v3145 = load i32, i32* %v_ptr3144
  %59 = bitcast %double_to_int_t* %double2int_result3143 to i8*
  tail call void @free(i8* %59)
  %tmp3150 = icmp sgt i32 0, %v3145
  br i1 %tmp3150, label %then3147, label %else3149

merge3146:                                        ; preds = %else3149, %then3147
  %tmp3151 = sub i32 %r_mat3135, 1
  %tmp3156 = icmp slt i32 %tmp3151, %v3145
  br i1 %tmp3156, label %then3153, label %else3155

then3147:                                         ; preds = %merge3131
  %printf3148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3146

else3149:                                         ; preds = %merge3131
  br label %merge3146

merge3152:                                        ; preds = %else3155, %then3153
  %x3157 = load double, double* %x
  %l3158 = load double, double* %l
  %tmp3159 = fdiv double %l3158, 2.000000e+00
  %tmp3160 = fsub double %x3157, %tmp3159
  %tmp3161 = fadd double %tmp3160, 2.000000e+00
  %double2int_result3162 = call %double_to_int_t* @double2int(double %tmp3161)
  %v_ptr3163 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3162, i32 0, i32 0
  %v3164 = load i32, i32* %v_ptr3163
  %60 = bitcast %double_to_int_t* %double2int_result3162 to i8*
  tail call void @free(i8* %60)
  %tmp3169 = icmp sgt i32 0, %v3164
  br i1 %tmp3169, label %then3166, label %else3168

then3153:                                         ; preds = %merge3146
  %printf3154 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3152

else3155:                                         ; preds = %merge3146
  br label %merge3152

merge3165:                                        ; preds = %else3168, %then3166
  %tmp3170 = sub i32 %r_mat3135, 1
  %tmp3175 = icmp slt i32 %tmp3170, %v3164
  br i1 %tmp3175, label %then3172, label %else3174

then3166:                                         ; preds = %merge3152
  %printf3167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3165

else3168:                                         ; preds = %merge3152
  br label %merge3165

merge3171:                                        ; preds = %else3174, %then3172
  %i3176 = load i32, i32* %i918
  %tmp3181 = icmp sgt i32 0, %i3176
  br i1 %tmp3181, label %then3178, label %else3180

then3172:                                         ; preds = %merge3165
  %printf3173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3171

else3174:                                         ; preds = %merge3165
  br label %merge3171

merge3177:                                        ; preds = %else3180, %then3178
  %tmp3182 = sub i32 %c_mat3137, 1
  %tmp3187 = icmp slt i32 %tmp3182, %i3176
  br i1 %tmp3187, label %then3184, label %else3186

then3178:                                         ; preds = %merge3171
  %printf3179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3177

else3180:                                         ; preds = %merge3171
  br label %merge3177

merge3183:                                        ; preds = %else3186, %then3184
  %i3188 = load i32, i32* %i918
  %tmp3193 = icmp sgt i32 0, %i3188
  br i1 %tmp3193, label %then3190, label %else3192

then3184:                                         ; preds = %merge3177
  %printf3185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3183

else3186:                                         ; preds = %merge3177
  br label %merge3183

merge3189:                                        ; preds = %else3192, %then3190
  %tmp3194 = sub i32 %c_mat3137, 1
  %tmp3199 = icmp slt i32 %tmp3194, %i3188
  br i1 %tmp3199, label %then3196, label %else3198

then3190:                                         ; preds = %merge3183
  %printf3191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3189

else3192:                                         ; preds = %merge3183
  br label %merge3189

merge3195:                                        ; preds = %else3198, %then3196
  %tmp3200 = sub i32 %v3164, %v3145
  %tmp3201 = add i32 %tmp3200, 1
  %m_r3202 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 1
  %r_mat3203 = load i32, i32* %m_r3202
  %tmp3208 = icmp ne i32 %tmp3201, %r_mat3203
  br i1 %tmp3208, label %then3205, label %else3207

then3196:                                         ; preds = %merge3189
  %printf3197 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3195

else3198:                                         ; preds = %merge3189
  br label %merge3195

merge3204:                                        ; preds = %else3207, %then3205
  %tmp3209 = sub i32 %i3188, %i3176
  %tmp3210 = add i32 %tmp3209, 1
  %m_r3211 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 2
  %r_mat3212 = load i32, i32* %m_r3211
  %tmp3217 = icmp ne i32 %tmp3210, %r_mat3212
  br i1 %tmp3217, label %then3214, label %else3216

then3205:                                         ; preds = %merge3195
  %printf3206 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3204

else3207:                                         ; preds = %merge3195
  br label %merge3204

merge3213:                                        ; preds = %else3216, %then3214
  %m_mat3218 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat3219 = load double*, double** %m_mat3218
  %m_r3220 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat3221 = load i32, i32* %m_r3220
  %m_c3222 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat3223 = load i32, i32* %m_c3222
  %m_mat3224 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 0
  %mat_v3225 = load double*, double** %m_mat3224
  %m_r3226 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 1
  %r_v3227 = load i32, i32* %m_r3226
  %m_c3228 = getelementptr inbounds %matrix_t, %matrix_t* %m3062, i32 0, i32 2
  %c_v3229 = load i32, i32* %m_c3228
  %i3230 = alloca i32
  store i32 %v3145, i32* %i3230
  br label %while3231

then3214:                                         ; preds = %merge3204
  %printf3215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3213

else3216:                                         ; preds = %merge3204
  br label %merge3213

while3231:                                        ; preds = %merge3253, %merge3213
  %i_v3259 = load i32, i32* %i3230
  %bool_val3260 = icmp sle i32 %i_v3259, %v3164
  br i1 %bool_val3260, label %while_body3232, label %merge3258

while_body3232:                                   ; preds = %while3231
  %j3233 = alloca i32
  store i32 %i3176, i32* %j3233
  br label %while3234

while3234:                                        ; preds = %while_body3235, %while_body3232
  %j_v3254 = load i32, i32* %j3233
  %bool_val3255 = icmp sle i32 %j_v3254, %i3188
  br i1 %bool_val3255, label %while_body3235, label %merge3253

while_body3235:                                   ; preds = %while3234
  %j_v3236 = load i32, i32* %j3233
  %i_v3237 = load i32, i32* %i3230
  %tmp3238 = mul i32 %c_mat3223, %i_v3237
  %index3239 = add i32 %j_v3236, %tmp3238
  %element_ptr3240 = getelementptr double, double* %mat_mat3219, i32 %index3239
  %j_v3241 = load i32, i32* %j3233
  %tmp3242 = sub i32 %j_v3241, %i3176
  %tmp3243 = add i32 %tmp3242, 0
  %i_v3244 = load i32, i32* %i3230
  %tmp3245 = sub i32 %i_v3244, %v3145
  %tmp3246 = add i32 %tmp3245, 0
  %tmp3247 = mul i32 %c_v3229, %tmp3246
  %index3248 = add i32 %tmp3243, %tmp3247
  %element_ptr3249 = getelementptr double, double* %mat_v3225, i32 %index3248
  %tmp_element3250 = load double, double* %element_ptr3249
  store double %tmp_element3250, double* %element_ptr3240
  %j_v3251 = load i32, i32* %j3233
  %tmp3252 = add i32 %j_v3251, 1
  store i32 %tmp3252, i32* %j3233
  br label %while3234

merge3253:                                        ; preds = %while3234
  %i_v3256 = load i32, i32* %i3230
  %tmp3257 = add i32 %i_v3256, 1
  store i32 %tmp3257, i32* %i3230
  br label %while3231

merge3258:                                        ; preds = %while3231
  %zeros_result3261 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3262 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3261, i32 0, i32 0
  %v3263 = load %matrix_t*, %matrix_t** %v_ptr3262
  %61 = bitcast %zero_matrix_t* %zeros_result3261 to i8*
  tail call void @free(i8* %61)
  %m_mat3264 = getelementptr inbounds %matrix_t, %matrix_t* %v3263, i32 0, i32 0
  %mat_mat3265 = load double*, double** %m_mat3264
  %m_r3266 = getelementptr inbounds %matrix_t, %matrix_t* %v3263, i32 0, i32 1
  %r_mat3267 = load i32, i32* %m_r3266
  %m_c3268 = getelementptr inbounds %matrix_t, %matrix_t* %v3263, i32 0, i32 2
  %c_mat3269 = load i32, i32* %m_c3268
  %size3270 = mul i32 %r_mat3267, %c_mat3269
  %system_mat3271 = alloca double, i32 %size3270
  %m3272 = alloca %matrix_t
  %m_mat3273 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 0
  store double* %system_mat3271, double** %m_mat3273
  %m_r3274 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 1
  store i32 %r_mat3267, i32* %m_r3274
  %m_c3275 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 2
  store i32 %c_mat3269, i32* %m_c3275
  %tmp3276 = sub i32 %r_mat3267, 1
  %tmp3277 = sub i32 %c_mat3269, 1
  %i3278 = alloca i32
  store i32 0, i32* %i3278
  br label %while3279

while3279:                                        ; preds = %merge3291, %merge3258
  %i_v3297 = load i32, i32* %i3278
  %bool_val3298 = icmp sle i32 %i_v3297, %tmp3276
  br i1 %bool_val3298, label %while_body3280, label %merge3296

while_body3280:                                   ; preds = %while3279
  %j3281 = alloca i32
  store i32 0, i32* %j3281
  br label %while3282

while3282:                                        ; preds = %while_body3283, %while_body3280
  %j_v3292 = load i32, i32* %j3281
  %bool_val3293 = icmp sle i32 %j_v3292, %tmp3277
  br i1 %bool_val3293, label %while_body3283, label %merge3291

while_body3283:                                   ; preds = %while3282
  %j_v3284 = load i32, i32* %j3281
  %i_v3285 = load i32, i32* %i3278
  %tmp3286 = mul i32 %c_mat3269, %i_v3285
  %index3287 = add i32 %j_v3284, %tmp3286
  %element_ptr3288 = getelementptr double, double* %system_mat3271, i32 %index3287
  store double 0.000000e+00, double* %element_ptr3288
  %j_v3289 = load i32, i32* %j3281
  %tmp3290 = add i32 %j_v3289, 1
  store i32 %tmp3290, i32* %j3281
  br label %while3282

merge3291:                                        ; preds = %while3282
  %i_v3294 = load i32, i32* %i3278
  %tmp3295 = add i32 %i_v3294, 1
  store i32 %tmp3295, i32* %i3278
  br label %while3279

merge3296:                                        ; preds = %while3279
  %tmp3299 = sub i32 %c_mat3269, 1
  %tmp3300 = sub i32 %r_mat3267, 1
  %m_mat3301 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 0
  %mat_mat3302 = load double*, double** %m_mat3301
  %m_r3303 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 1
  %r_mat3304 = load i32, i32* %m_r3303
  %m_c3305 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 2
  %c_mat3306 = load i32, i32* %m_c3305
  %m_mat3307 = getelementptr inbounds %matrix_t, %matrix_t* %v3263, i32 0, i32 0
  %mat_v3308 = load double*, double** %m_mat3307
  %m_r3309 = getelementptr inbounds %matrix_t, %matrix_t* %v3263, i32 0, i32 1
  %r_v3310 = load i32, i32* %m_r3309
  %m_c3311 = getelementptr inbounds %matrix_t, %matrix_t* %v3263, i32 0, i32 2
  %c_v3312 = load i32, i32* %m_c3311
  %i3313 = alloca i32
  store i32 0, i32* %i3313
  br label %while3314

while3314:                                        ; preds = %merge3336, %merge3296
  %i_v3342 = load i32, i32* %i3313
  %bool_val3343 = icmp sle i32 %i_v3342, %tmp3300
  br i1 %bool_val3343, label %while_body3315, label %merge3341

while_body3315:                                   ; preds = %while3314
  %j3316 = alloca i32
  store i32 0, i32* %j3316
  br label %while3317

while3317:                                        ; preds = %while_body3318, %while_body3315
  %j_v3337 = load i32, i32* %j3316
  %bool_val3338 = icmp sle i32 %j_v3337, %tmp3299
  br i1 %bool_val3338, label %while_body3318, label %merge3336

while_body3318:                                   ; preds = %while3317
  %j_v3319 = load i32, i32* %j3316
  %i_v3320 = load i32, i32* %i3313
  %tmp3321 = mul i32 %c_mat3306, %i_v3320
  %index3322 = add i32 %j_v3319, %tmp3321
  %element_ptr3323 = getelementptr double, double* %mat_mat3302, i32 %index3322
  %j_v3324 = load i32, i32* %j3316
  %tmp3325 = sub i32 %j_v3324, 0
  %tmp3326 = add i32 %tmp3325, 0
  %i_v3327 = load i32, i32* %i3313
  %tmp3328 = sub i32 %i_v3327, 0
  %tmp3329 = add i32 %tmp3328, 0
  %tmp3330 = mul i32 %c_v3312, %tmp3329
  %index3331 = add i32 %tmp3326, %tmp3330
  %element_ptr3332 = getelementptr double, double* %mat_v3308, i32 %index3331
  %tmp_element3333 = load double, double* %element_ptr3332
  store double %tmp_element3333, double* %element_ptr3323
  %j_v3334 = load i32, i32* %j3316
  %tmp3335 = add i32 %j_v3334, 1
  store i32 %tmp3335, i32* %j3316
  br label %while3317

merge3336:                                        ; preds = %while3317
  %i_v3339 = load i32, i32* %i3313
  %tmp3340 = add i32 %i_v3339, 1
  store i32 %tmp3340, i32* %i3313
  br label %while3314

merge3341:                                        ; preds = %while3314
  %62 = bitcast double* %mat_mat3265 to i8*
  tail call void @free(i8* %62)
  %63 = bitcast %matrix_t* %v3263 to i8*
  tail call void @free(i8* %63)
  %m_mat3344 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 0
  %mat_mat3345 = load double*, double** %m_mat3344
  %m_r3346 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 1
  %r_mat3347 = load i32, i32* %m_r3346
  %tmp3348 = sub i32 %r_mat3347, 1
  %m_c3349 = getelementptr inbounds %matrix_t, %matrix_t* %m3272, i32 0, i32 2
  %c_mat3350 = load i32, i32* %m_c3349
  %tmp3351 = sub i32 %c_mat3350, 1
  %size3352 = mul i32 %r_mat3347, %c_mat3350
  %system_mat3353 = alloca double, i32 %size3352
  %m3354 = alloca %matrix_t
  %m_mat3355 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 0
  store double* %system_mat3353, double** %m_mat3355
  %m_r3356 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 1
  store i32 %r_mat3347, i32* %m_r3356
  %m_c3357 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 2
  store i32 %c_mat3350, i32* %m_c3357
  %tmp3358 = sub i32 %r_mat3347, 1
  %tmp3359 = sub i32 %c_mat3350, 1
  %i3360 = alloca i32
  store i32 0, i32* %i3360
  br label %while3361

while3361:                                        ; preds = %merge3373, %merge3341
  %i_v3379 = load i32, i32* %i3360
  %bool_val3380 = icmp sle i32 %i_v3379, %tmp3358
  br i1 %bool_val3380, label %while_body3362, label %merge3378

while_body3362:                                   ; preds = %while3361
  %j3363 = alloca i32
  store i32 0, i32* %j3363
  br label %while3364

while3364:                                        ; preds = %while_body3365, %while_body3362
  %j_v3374 = load i32, i32* %j3363
  %bool_val3375 = icmp sle i32 %j_v3374, %tmp3359
  br i1 %bool_val3375, label %while_body3365, label %merge3373

while_body3365:                                   ; preds = %while3364
  %j_v3366 = load i32, i32* %j3363
  %i_v3367 = load i32, i32* %i3360
  %tmp3368 = mul i32 %c_mat3350, %i_v3367
  %index3369 = add i32 %j_v3366, %tmp3368
  %element_ptr3370 = getelementptr double, double* %system_mat3353, i32 %index3369
  store double 0.000000e+00, double* %element_ptr3370
  %j_v3371 = load i32, i32* %j3363
  %tmp3372 = add i32 %j_v3371, 1
  store i32 %tmp3372, i32* %j3363
  br label %while3364

merge3373:                                        ; preds = %while3364
  %i_v3376 = load i32, i32* %i3360
  %tmp3377 = add i32 %i_v3376, 1
  store i32 %tmp3377, i32* %i3360
  br label %while3361

merge3378:                                        ; preds = %while3361
  %m_mat3381 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 0
  %mat_mat3382 = load double*, double** %m_mat3381
  %i3383 = alloca i32
  store i32 0, i32* %i3383
  br label %while3384

while3384:                                        ; preds = %merge3403, %merge3378
  %i_v3409 = load i32, i32* %i3383
  %bool_val3410 = icmp sle i32 %i_v3409, %tmp3348
  br i1 %bool_val3410, label %while_body3385, label %merge3408

while_body3385:                                   ; preds = %while3384
  %j3386 = alloca i32
  store i32 0, i32* %j3386
  br label %while3387

while3387:                                        ; preds = %while_body3388, %while_body3385
  %j_v3404 = load i32, i32* %j3386
  %bool_val3405 = icmp sle i32 %j_v3404, %tmp3351
  br i1 %bool_val3405, label %while_body3388, label %merge3403

while_body3388:                                   ; preds = %while3387
  %j_v3389 = load i32, i32* %j3386
  %i_v3390 = load i32, i32* %i3383
  %tmp3391 = mul i32 %c_mat3350, %i_v3390
  %index3392 = add i32 %j_v3389, %tmp3391
  %element_ptr3393 = getelementptr double, double* %mat_mat3345, i32 %index3392
  %tmp_element3394 = load double, double* %element_ptr3393
  %j_v3395 = load i32, i32* %j3386
  %i_v3396 = load i32, i32* %i3383
  %tmp3397 = mul i32 %c_mat3350, %i_v3396
  %index3398 = add i32 %j_v3395, %tmp3397
  %element_ptr3399 = getelementptr double, double* %mat_mat3382, i32 %index3398
  %tmp_element3400 = fsub double %tmp_element3394, 2.550000e+02
  store double %tmp_element3400, double* %element_ptr3399
  %j_v3401 = load i32, i32* %j3386
  %tmp3402 = add i32 %j_v3401, 1
  store i32 %tmp3402, i32* %j3386
  br label %while3387

merge3403:                                        ; preds = %while3387
  %i_v3406 = load i32, i32* %i3383
  %tmp3407 = add i32 %i_v3406, 1
  store i32 %tmp3407, i32* %i3383
  br label %while3384

merge3408:                                        ; preds = %while3384
  %m_r3411 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat3412 = load i32, i32* %m_r3411
  %m_c3413 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat3414 = load i32, i32* %m_c3413
  %x3415 = load double, double* %x
  %l3416 = load double, double* %l
  %tmp3417 = fdiv double %l3416, 2.000000e+00
  %tmp3418 = fadd double %x3415, %tmp3417
  %tmp3419 = fsub double %tmp3418, 2.000000e+00
  %double2int_result3420 = call %double_to_int_t* @double2int(double %tmp3419)
  %v_ptr3421 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3420, i32 0, i32 0
  %v3422 = load i32, i32* %v_ptr3421
  %64 = bitcast %double_to_int_t* %double2int_result3420 to i8*
  tail call void @free(i8* %64)
  %tmp3427 = icmp sgt i32 0, %v3422
  br i1 %tmp3427, label %then3424, label %else3426

merge3423:                                        ; preds = %else3426, %then3424
  %tmp3428 = sub i32 %r_mat3412, 1
  %tmp3433 = icmp slt i32 %tmp3428, %v3422
  br i1 %tmp3433, label %then3430, label %else3432

then3424:                                         ; preds = %merge3408
  %printf3425 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3423

else3426:                                         ; preds = %merge3408
  br label %merge3423

merge3429:                                        ; preds = %else3432, %then3430
  %x3434 = load double, double* %x
  %l3435 = load double, double* %l
  %tmp3436 = fdiv double %l3435, 2.000000e+00
  %tmp3437 = fadd double %x3434, %tmp3436
  %tmp3438 = fadd double %tmp3437, 2.000000e+00
  %double2int_result3439 = call %double_to_int_t* @double2int(double %tmp3438)
  %v_ptr3440 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3439, i32 0, i32 0
  %v3441 = load i32, i32* %v_ptr3440
  %65 = bitcast %double_to_int_t* %double2int_result3439 to i8*
  tail call void @free(i8* %65)
  %tmp3446 = icmp sgt i32 0, %v3441
  br i1 %tmp3446, label %then3443, label %else3445

then3430:                                         ; preds = %merge3423
  %printf3431 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3429

else3432:                                         ; preds = %merge3423
  br label %merge3429

merge3442:                                        ; preds = %else3445, %then3443
  %tmp3447 = sub i32 %r_mat3412, 1
  %tmp3452 = icmp slt i32 %tmp3447, %v3441
  br i1 %tmp3452, label %then3449, label %else3451

then3443:                                         ; preds = %merge3429
  %printf3444 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3442

else3445:                                         ; preds = %merge3429
  br label %merge3442

merge3448:                                        ; preds = %else3451, %then3449
  %i3453 = load i32, i32* %i918
  %tmp3458 = icmp sgt i32 0, %i3453
  br i1 %tmp3458, label %then3455, label %else3457

then3449:                                         ; preds = %merge3442
  %printf3450 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3448

else3451:                                         ; preds = %merge3442
  br label %merge3448

merge3454:                                        ; preds = %else3457, %then3455
  %tmp3459 = sub i32 %c_mat3414, 1
  %tmp3464 = icmp slt i32 %tmp3459, %i3453
  br i1 %tmp3464, label %then3461, label %else3463

then3455:                                         ; preds = %merge3448
  %printf3456 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3454

else3457:                                         ; preds = %merge3448
  br label %merge3454

merge3460:                                        ; preds = %else3463, %then3461
  %i3465 = load i32, i32* %i918
  %tmp3470 = icmp sgt i32 0, %i3465
  br i1 %tmp3470, label %then3467, label %else3469

then3461:                                         ; preds = %merge3454
  %printf3462 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3460

else3463:                                         ; preds = %merge3454
  br label %merge3460

merge3466:                                        ; preds = %else3469, %then3467
  %tmp3471 = sub i32 %c_mat3414, 1
  %tmp3476 = icmp slt i32 %tmp3471, %i3465
  br i1 %tmp3476, label %then3473, label %else3475

then3467:                                         ; preds = %merge3460
  %printf3468 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3466

else3469:                                         ; preds = %merge3460
  br label %merge3466

merge3472:                                        ; preds = %else3475, %then3473
  %tmp3477 = sub i32 %v3441, %v3422
  %tmp3478 = add i32 %tmp3477, 1
  %m_r3479 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 1
  %r_mat3480 = load i32, i32* %m_r3479
  %tmp3485 = icmp ne i32 %tmp3478, %r_mat3480
  br i1 %tmp3485, label %then3482, label %else3484

then3473:                                         ; preds = %merge3466
  %printf3474 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3472

else3475:                                         ; preds = %merge3466
  br label %merge3472

merge3481:                                        ; preds = %else3484, %then3482
  %tmp3486 = sub i32 %i3465, %i3453
  %tmp3487 = add i32 %tmp3486, 1
  %m_r3488 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 2
  %r_mat3489 = load i32, i32* %m_r3488
  %tmp3494 = icmp ne i32 %tmp3487, %r_mat3489
  br i1 %tmp3494, label %then3491, label %else3493

then3482:                                         ; preds = %merge3472
  %printf3483 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3481

else3484:                                         ; preds = %merge3472
  br label %merge3481

merge3490:                                        ; preds = %else3493, %then3491
  %m_mat3495 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 0
  %mat_mat3496 = load double*, double** %m_mat3495
  %m_r3497 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 1
  %r_mat3498 = load i32, i32* %m_r3497
  %m_c3499 = getelementptr inbounds %matrix_t, %matrix_t* %m487, i32 0, i32 2
  %c_mat3500 = load i32, i32* %m_c3499
  %m_mat3501 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 0
  %mat_v3502 = load double*, double** %m_mat3501
  %m_r3503 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 1
  %r_v3504 = load i32, i32* %m_r3503
  %m_c3505 = getelementptr inbounds %matrix_t, %matrix_t* %m3354, i32 0, i32 2
  %c_v3506 = load i32, i32* %m_c3505
  %i3507 = alloca i32
  store i32 %v3422, i32* %i3507
  br label %while3508

then3491:                                         ; preds = %merge3481
  %printf3492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3490

else3493:                                         ; preds = %merge3481
  br label %merge3490

while3508:                                        ; preds = %merge3530, %merge3490
  %i_v3536 = load i32, i32* %i3507
  %bool_val3537 = icmp sle i32 %i_v3536, %v3441
  br i1 %bool_val3537, label %while_body3509, label %merge3535

while_body3509:                                   ; preds = %while3508
  %j3510 = alloca i32
  store i32 %i3453, i32* %j3510
  br label %while3511

while3511:                                        ; preds = %while_body3512, %while_body3509
  %j_v3531 = load i32, i32* %j3510
  %bool_val3532 = icmp sle i32 %j_v3531, %i3465
  br i1 %bool_val3532, label %while_body3512, label %merge3530

while_body3512:                                   ; preds = %while3511
  %j_v3513 = load i32, i32* %j3510
  %i_v3514 = load i32, i32* %i3507
  %tmp3515 = mul i32 %c_mat3500, %i_v3514
  %index3516 = add i32 %j_v3513, %tmp3515
  %element_ptr3517 = getelementptr double, double* %mat_mat3496, i32 %index3516
  %j_v3518 = load i32, i32* %j3510
  %tmp3519 = sub i32 %j_v3518, %i3453
  %tmp3520 = add i32 %tmp3519, 0
  %i_v3521 = load i32, i32* %i3507
  %tmp3522 = sub i32 %i_v3521, %v3422
  %tmp3523 = add i32 %tmp3522, 0
  %tmp3524 = mul i32 %c_v3506, %tmp3523
  %index3525 = add i32 %tmp3520, %tmp3524
  %element_ptr3526 = getelementptr double, double* %mat_v3502, i32 %index3525
  %tmp_element3527 = load double, double* %element_ptr3526
  store double %tmp_element3527, double* %element_ptr3517
  %j_v3528 = load i32, i32* %j3510
  %tmp3529 = add i32 %j_v3528, 1
  store i32 %tmp3529, i32* %j3510
  br label %while3511

merge3530:                                        ; preds = %while3511
  %i_v3533 = load i32, i32* %i3507
  %tmp3534 = add i32 %i_v3533, 1
  store i32 %tmp3534, i32* %i3507
  br label %while3508

merge3535:                                        ; preds = %while3508
  %zeros_result3538 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3539 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3538, i32 0, i32 0
  %v3540 = load %matrix_t*, %matrix_t** %v_ptr3539
  %66 = bitcast %zero_matrix_t* %zeros_result3538 to i8*
  tail call void @free(i8* %66)
  %m_mat3541 = getelementptr inbounds %matrix_t, %matrix_t* %v3540, i32 0, i32 0
  %mat_mat3542 = load double*, double** %m_mat3541
  %m_r3543 = getelementptr inbounds %matrix_t, %matrix_t* %v3540, i32 0, i32 1
  %r_mat3544 = load i32, i32* %m_r3543
  %m_c3545 = getelementptr inbounds %matrix_t, %matrix_t* %v3540, i32 0, i32 2
  %c_mat3546 = load i32, i32* %m_c3545
  %size3547 = mul i32 %r_mat3544, %c_mat3546
  %system_mat3548 = alloca double, i32 %size3547
  %m3549 = alloca %matrix_t
  %m_mat3550 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 0
  store double* %system_mat3548, double** %m_mat3550
  %m_r3551 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 1
  store i32 %r_mat3544, i32* %m_r3551
  %m_c3552 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 2
  store i32 %c_mat3546, i32* %m_c3552
  %tmp3553 = sub i32 %r_mat3544, 1
  %tmp3554 = sub i32 %c_mat3546, 1
  %i3555 = alloca i32
  store i32 0, i32* %i3555
  br label %while3556

while3556:                                        ; preds = %merge3568, %merge3535
  %i_v3574 = load i32, i32* %i3555
  %bool_val3575 = icmp sle i32 %i_v3574, %tmp3553
  br i1 %bool_val3575, label %while_body3557, label %merge3573

while_body3557:                                   ; preds = %while3556
  %j3558 = alloca i32
  store i32 0, i32* %j3558
  br label %while3559

while3559:                                        ; preds = %while_body3560, %while_body3557
  %j_v3569 = load i32, i32* %j3558
  %bool_val3570 = icmp sle i32 %j_v3569, %tmp3554
  br i1 %bool_val3570, label %while_body3560, label %merge3568

while_body3560:                                   ; preds = %while3559
  %j_v3561 = load i32, i32* %j3558
  %i_v3562 = load i32, i32* %i3555
  %tmp3563 = mul i32 %c_mat3546, %i_v3562
  %index3564 = add i32 %j_v3561, %tmp3563
  %element_ptr3565 = getelementptr double, double* %system_mat3548, i32 %index3564
  store double 0.000000e+00, double* %element_ptr3565
  %j_v3566 = load i32, i32* %j3558
  %tmp3567 = add i32 %j_v3566, 1
  store i32 %tmp3567, i32* %j3558
  br label %while3559

merge3568:                                        ; preds = %while3559
  %i_v3571 = load i32, i32* %i3555
  %tmp3572 = add i32 %i_v3571, 1
  store i32 %tmp3572, i32* %i3555
  br label %while3556

merge3573:                                        ; preds = %while3556
  %tmp3576 = sub i32 %c_mat3546, 1
  %tmp3577 = sub i32 %r_mat3544, 1
  %m_mat3578 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 0
  %mat_mat3579 = load double*, double** %m_mat3578
  %m_r3580 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 1
  %r_mat3581 = load i32, i32* %m_r3580
  %m_c3582 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 2
  %c_mat3583 = load i32, i32* %m_c3582
  %m_mat3584 = getelementptr inbounds %matrix_t, %matrix_t* %v3540, i32 0, i32 0
  %mat_v3585 = load double*, double** %m_mat3584
  %m_r3586 = getelementptr inbounds %matrix_t, %matrix_t* %v3540, i32 0, i32 1
  %r_v3587 = load i32, i32* %m_r3586
  %m_c3588 = getelementptr inbounds %matrix_t, %matrix_t* %v3540, i32 0, i32 2
  %c_v3589 = load i32, i32* %m_c3588
  %i3590 = alloca i32
  store i32 0, i32* %i3590
  br label %while3591

while3591:                                        ; preds = %merge3613, %merge3573
  %i_v3619 = load i32, i32* %i3590
  %bool_val3620 = icmp sle i32 %i_v3619, %tmp3577
  br i1 %bool_val3620, label %while_body3592, label %merge3618

while_body3592:                                   ; preds = %while3591
  %j3593 = alloca i32
  store i32 0, i32* %j3593
  br label %while3594

while3594:                                        ; preds = %while_body3595, %while_body3592
  %j_v3614 = load i32, i32* %j3593
  %bool_val3615 = icmp sle i32 %j_v3614, %tmp3576
  br i1 %bool_val3615, label %while_body3595, label %merge3613

while_body3595:                                   ; preds = %while3594
  %j_v3596 = load i32, i32* %j3593
  %i_v3597 = load i32, i32* %i3590
  %tmp3598 = mul i32 %c_mat3583, %i_v3597
  %index3599 = add i32 %j_v3596, %tmp3598
  %element_ptr3600 = getelementptr double, double* %mat_mat3579, i32 %index3599
  %j_v3601 = load i32, i32* %j3593
  %tmp3602 = sub i32 %j_v3601, 0
  %tmp3603 = add i32 %tmp3602, 0
  %i_v3604 = load i32, i32* %i3590
  %tmp3605 = sub i32 %i_v3604, 0
  %tmp3606 = add i32 %tmp3605, 0
  %tmp3607 = mul i32 %c_v3589, %tmp3606
  %index3608 = add i32 %tmp3603, %tmp3607
  %element_ptr3609 = getelementptr double, double* %mat_v3585, i32 %index3608
  %tmp_element3610 = load double, double* %element_ptr3609
  store double %tmp_element3610, double* %element_ptr3600
  %j_v3611 = load i32, i32* %j3593
  %tmp3612 = add i32 %j_v3611, 1
  store i32 %tmp3612, i32* %j3593
  br label %while3594

merge3613:                                        ; preds = %while3594
  %i_v3616 = load i32, i32* %i3590
  %tmp3617 = add i32 %i_v3616, 1
  store i32 %tmp3617, i32* %i3590
  br label %while3591

merge3618:                                        ; preds = %while3591
  %67 = bitcast double* %mat_mat3542 to i8*
  tail call void @free(i8* %67)
  %68 = bitcast %matrix_t* %v3540 to i8*
  tail call void @free(i8* %68)
  %m_mat3621 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 0
  %mat_mat3622 = load double*, double** %m_mat3621
  %m_r3623 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 1
  %r_mat3624 = load i32, i32* %m_r3623
  %tmp3625 = sub i32 %r_mat3624, 1
  %m_c3626 = getelementptr inbounds %matrix_t, %matrix_t* %m3549, i32 0, i32 2
  %c_mat3627 = load i32, i32* %m_c3626
  %tmp3628 = sub i32 %c_mat3627, 1
  %size3629 = mul i32 %r_mat3624, %c_mat3627
  %system_mat3630 = alloca double, i32 %size3629
  %m3631 = alloca %matrix_t
  %m_mat3632 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 0
  store double* %system_mat3630, double** %m_mat3632
  %m_r3633 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 1
  store i32 %r_mat3624, i32* %m_r3633
  %m_c3634 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 2
  store i32 %c_mat3627, i32* %m_c3634
  %tmp3635 = sub i32 %r_mat3624, 1
  %tmp3636 = sub i32 %c_mat3627, 1
  %i3637 = alloca i32
  store i32 0, i32* %i3637
  br label %while3638

while3638:                                        ; preds = %merge3650, %merge3618
  %i_v3656 = load i32, i32* %i3637
  %bool_val3657 = icmp sle i32 %i_v3656, %tmp3635
  br i1 %bool_val3657, label %while_body3639, label %merge3655

while_body3639:                                   ; preds = %while3638
  %j3640 = alloca i32
  store i32 0, i32* %j3640
  br label %while3641

while3641:                                        ; preds = %while_body3642, %while_body3639
  %j_v3651 = load i32, i32* %j3640
  %bool_val3652 = icmp sle i32 %j_v3651, %tmp3636
  br i1 %bool_val3652, label %while_body3642, label %merge3650

while_body3642:                                   ; preds = %while3641
  %j_v3643 = load i32, i32* %j3640
  %i_v3644 = load i32, i32* %i3637
  %tmp3645 = mul i32 %c_mat3627, %i_v3644
  %index3646 = add i32 %j_v3643, %tmp3645
  %element_ptr3647 = getelementptr double, double* %system_mat3630, i32 %index3646
  store double 0.000000e+00, double* %element_ptr3647
  %j_v3648 = load i32, i32* %j3640
  %tmp3649 = add i32 %j_v3648, 1
  store i32 %tmp3649, i32* %j3640
  br label %while3641

merge3650:                                        ; preds = %while3641
  %i_v3653 = load i32, i32* %i3637
  %tmp3654 = add i32 %i_v3653, 1
  store i32 %tmp3654, i32* %i3637
  br label %while3638

merge3655:                                        ; preds = %while3638
  %m_mat3658 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 0
  %mat_mat3659 = load double*, double** %m_mat3658
  %i3660 = alloca i32
  store i32 0, i32* %i3660
  br label %while3661

while3661:                                        ; preds = %merge3680, %merge3655
  %i_v3686 = load i32, i32* %i3660
  %bool_val3687 = icmp sle i32 %i_v3686, %tmp3625
  br i1 %bool_val3687, label %while_body3662, label %merge3685

while_body3662:                                   ; preds = %while3661
  %j3663 = alloca i32
  store i32 0, i32* %j3663
  br label %while3664

while3664:                                        ; preds = %while_body3665, %while_body3662
  %j_v3681 = load i32, i32* %j3663
  %bool_val3682 = icmp sle i32 %j_v3681, %tmp3628
  br i1 %bool_val3682, label %while_body3665, label %merge3680

while_body3665:                                   ; preds = %while3664
  %j_v3666 = load i32, i32* %j3663
  %i_v3667 = load i32, i32* %i3660
  %tmp3668 = mul i32 %c_mat3627, %i_v3667
  %index3669 = add i32 %j_v3666, %tmp3668
  %element_ptr3670 = getelementptr double, double* %mat_mat3622, i32 %index3669
  %tmp_element3671 = load double, double* %element_ptr3670
  %j_v3672 = load i32, i32* %j3663
  %i_v3673 = load i32, i32* %i3660
  %tmp3674 = mul i32 %c_mat3627, %i_v3673
  %index3675 = add i32 %j_v3672, %tmp3674
  %element_ptr3676 = getelementptr double, double* %mat_mat3659, i32 %index3675
  %tmp_element3677 = fsub double %tmp_element3671, 2.550000e+02
  store double %tmp_element3677, double* %element_ptr3676
  %j_v3678 = load i32, i32* %j3663
  %tmp3679 = add i32 %j_v3678, 1
  store i32 %tmp3679, i32* %j3663
  br label %while3664

merge3680:                                        ; preds = %while3664
  %i_v3683 = load i32, i32* %i3660
  %tmp3684 = add i32 %i_v3683, 1
  store i32 %tmp3684, i32* %i3660
  br label %while3661

merge3685:                                        ; preds = %while3661
  %m_r3688 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat3689 = load i32, i32* %m_r3688
  %m_c3690 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat3691 = load i32, i32* %m_c3690
  %x3692 = load double, double* %x
  %l3693 = load double, double* %l
  %tmp3694 = fdiv double %l3693, 2.000000e+00
  %tmp3695 = fadd double %x3692, %tmp3694
  %tmp3696 = fsub double %tmp3695, 2.000000e+00
  %double2int_result3697 = call %double_to_int_t* @double2int(double %tmp3696)
  %v_ptr3698 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3697, i32 0, i32 0
  %v3699 = load i32, i32* %v_ptr3698
  %69 = bitcast %double_to_int_t* %double2int_result3697 to i8*
  tail call void @free(i8* %69)
  %tmp3704 = icmp sgt i32 0, %v3699
  br i1 %tmp3704, label %then3701, label %else3703

merge3700:                                        ; preds = %else3703, %then3701
  %tmp3705 = sub i32 %r_mat3689, 1
  %tmp3710 = icmp slt i32 %tmp3705, %v3699
  br i1 %tmp3710, label %then3707, label %else3709

then3701:                                         ; preds = %merge3685
  %printf3702 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3700

else3703:                                         ; preds = %merge3685
  br label %merge3700

merge3706:                                        ; preds = %else3709, %then3707
  %x3711 = load double, double* %x
  %l3712 = load double, double* %l
  %tmp3713 = fdiv double %l3712, 2.000000e+00
  %tmp3714 = fadd double %x3711, %tmp3713
  %tmp3715 = fadd double %tmp3714, 2.000000e+00
  %double2int_result3716 = call %double_to_int_t* @double2int(double %tmp3715)
  %v_ptr3717 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3716, i32 0, i32 0
  %v3718 = load i32, i32* %v_ptr3717
  %70 = bitcast %double_to_int_t* %double2int_result3716 to i8*
  tail call void @free(i8* %70)
  %tmp3723 = icmp sgt i32 0, %v3718
  br i1 %tmp3723, label %then3720, label %else3722

then3707:                                         ; preds = %merge3700
  %printf3708 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3706

else3709:                                         ; preds = %merge3700
  br label %merge3706

merge3719:                                        ; preds = %else3722, %then3720
  %tmp3724 = sub i32 %r_mat3689, 1
  %tmp3729 = icmp slt i32 %tmp3724, %v3718
  br i1 %tmp3729, label %then3726, label %else3728

then3720:                                         ; preds = %merge3706
  %printf3721 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3719

else3722:                                         ; preds = %merge3706
  br label %merge3719

merge3725:                                        ; preds = %else3728, %then3726
  %i3730 = load i32, i32* %i918
  %tmp3735 = icmp sgt i32 0, %i3730
  br i1 %tmp3735, label %then3732, label %else3734

then3726:                                         ; preds = %merge3719
  %printf3727 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3725

else3728:                                         ; preds = %merge3719
  br label %merge3725

merge3731:                                        ; preds = %else3734, %then3732
  %tmp3736 = sub i32 %c_mat3691, 1
  %tmp3741 = icmp slt i32 %tmp3736, %i3730
  br i1 %tmp3741, label %then3738, label %else3740

then3732:                                         ; preds = %merge3725
  %printf3733 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3731

else3734:                                         ; preds = %merge3725
  br label %merge3731

merge3737:                                        ; preds = %else3740, %then3738
  %i3742 = load i32, i32* %i918
  %tmp3747 = icmp sgt i32 0, %i3742
  br i1 %tmp3747, label %then3744, label %else3746

then3738:                                         ; preds = %merge3731
  %printf3739 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3737

else3740:                                         ; preds = %merge3731
  br label %merge3737

merge3743:                                        ; preds = %else3746, %then3744
  %tmp3748 = sub i32 %c_mat3691, 1
  %tmp3753 = icmp slt i32 %tmp3748, %i3742
  br i1 %tmp3753, label %then3750, label %else3752

then3744:                                         ; preds = %merge3737
  %printf3745 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3743

else3746:                                         ; preds = %merge3737
  br label %merge3743

merge3749:                                        ; preds = %else3752, %then3750
  %tmp3754 = sub i32 %v3718, %v3699
  %tmp3755 = add i32 %tmp3754, 1
  %m_r3756 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 1
  %r_mat3757 = load i32, i32* %m_r3756
  %tmp3762 = icmp ne i32 %tmp3755, %r_mat3757
  br i1 %tmp3762, label %then3759, label %else3761

then3750:                                         ; preds = %merge3743
  %printf3751 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3749

else3752:                                         ; preds = %merge3743
  br label %merge3749

merge3758:                                        ; preds = %else3761, %then3759
  %tmp3763 = sub i32 %i3742, %i3730
  %tmp3764 = add i32 %tmp3763, 1
  %m_r3765 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 2
  %r_mat3766 = load i32, i32* %m_r3765
  %tmp3771 = icmp ne i32 %tmp3764, %r_mat3766
  br i1 %tmp3771, label %then3768, label %else3770

then3759:                                         ; preds = %merge3749
  %printf3760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3758

else3761:                                         ; preds = %merge3749
  br label %merge3758

merge3767:                                        ; preds = %else3770, %then3768
  %m_mat3772 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 0
  %mat_mat3773 = load double*, double** %m_mat3772
  %m_r3774 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 1
  %r_mat3775 = load i32, i32* %m_r3774
  %m_c3776 = getelementptr inbounds %matrix_t, %matrix_t* %m647, i32 0, i32 2
  %c_mat3777 = load i32, i32* %m_c3776
  %m_mat3778 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 0
  %mat_v3779 = load double*, double** %m_mat3778
  %m_r3780 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 1
  %r_v3781 = load i32, i32* %m_r3780
  %m_c3782 = getelementptr inbounds %matrix_t, %matrix_t* %m3631, i32 0, i32 2
  %c_v3783 = load i32, i32* %m_c3782
  %i3784 = alloca i32
  store i32 %v3699, i32* %i3784
  br label %while3785

then3768:                                         ; preds = %merge3758
  %printf3769 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3767

else3770:                                         ; preds = %merge3758
  br label %merge3767

while3785:                                        ; preds = %merge3807, %merge3767
  %i_v3813 = load i32, i32* %i3784
  %bool_val3814 = icmp sle i32 %i_v3813, %v3718
  br i1 %bool_val3814, label %while_body3786, label %merge3812

while_body3786:                                   ; preds = %while3785
  %j3787 = alloca i32
  store i32 %i3730, i32* %j3787
  br label %while3788

while3788:                                        ; preds = %while_body3789, %while_body3786
  %j_v3808 = load i32, i32* %j3787
  %bool_val3809 = icmp sle i32 %j_v3808, %i3742
  br i1 %bool_val3809, label %while_body3789, label %merge3807

while_body3789:                                   ; preds = %while3788
  %j_v3790 = load i32, i32* %j3787
  %i_v3791 = load i32, i32* %i3784
  %tmp3792 = mul i32 %c_mat3777, %i_v3791
  %index3793 = add i32 %j_v3790, %tmp3792
  %element_ptr3794 = getelementptr double, double* %mat_mat3773, i32 %index3793
  %j_v3795 = load i32, i32* %j3787
  %tmp3796 = sub i32 %j_v3795, %i3730
  %tmp3797 = add i32 %tmp3796, 0
  %i_v3798 = load i32, i32* %i3784
  %tmp3799 = sub i32 %i_v3798, %v3699
  %tmp3800 = add i32 %tmp3799, 0
  %tmp3801 = mul i32 %c_v3783, %tmp3800
  %index3802 = add i32 %tmp3797, %tmp3801
  %element_ptr3803 = getelementptr double, double* %mat_v3779, i32 %index3802
  %tmp_element3804 = load double, double* %element_ptr3803
  store double %tmp_element3804, double* %element_ptr3794
  %j_v3805 = load i32, i32* %j3787
  %tmp3806 = add i32 %j_v3805, 1
  store i32 %tmp3806, i32* %j3787
  br label %while3788

merge3807:                                        ; preds = %while3788
  %i_v3810 = load i32, i32* %i3784
  %tmp3811 = add i32 %i_v3810, 1
  store i32 %tmp3811, i32* %i3784
  br label %while3785

merge3812:                                        ; preds = %while3785
  %zeros_result3815 = call %zero_matrix_t* @zeros(i32 5, i32 1)
  %v_ptr3816 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result3815, i32 0, i32 0
  %v3817 = load %matrix_t*, %matrix_t** %v_ptr3816
  %71 = bitcast %zero_matrix_t* %zeros_result3815 to i8*
  tail call void @free(i8* %71)
  %m_mat3818 = getelementptr inbounds %matrix_t, %matrix_t* %v3817, i32 0, i32 0
  %mat_mat3819 = load double*, double** %m_mat3818
  %m_r3820 = getelementptr inbounds %matrix_t, %matrix_t* %v3817, i32 0, i32 1
  %r_mat3821 = load i32, i32* %m_r3820
  %m_c3822 = getelementptr inbounds %matrix_t, %matrix_t* %v3817, i32 0, i32 2
  %c_mat3823 = load i32, i32* %m_c3822
  %size3824 = mul i32 %r_mat3821, %c_mat3823
  %system_mat3825 = alloca double, i32 %size3824
  %m3826 = alloca %matrix_t
  %m_mat3827 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 0
  store double* %system_mat3825, double** %m_mat3827
  %m_r3828 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 1
  store i32 %r_mat3821, i32* %m_r3828
  %m_c3829 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 2
  store i32 %c_mat3823, i32* %m_c3829
  %tmp3830 = sub i32 %r_mat3821, 1
  %tmp3831 = sub i32 %c_mat3823, 1
  %i3832 = alloca i32
  store i32 0, i32* %i3832
  br label %while3833

while3833:                                        ; preds = %merge3845, %merge3812
  %i_v3851 = load i32, i32* %i3832
  %bool_val3852 = icmp sle i32 %i_v3851, %tmp3830
  br i1 %bool_val3852, label %while_body3834, label %merge3850

while_body3834:                                   ; preds = %while3833
  %j3835 = alloca i32
  store i32 0, i32* %j3835
  br label %while3836

while3836:                                        ; preds = %while_body3837, %while_body3834
  %j_v3846 = load i32, i32* %j3835
  %bool_val3847 = icmp sle i32 %j_v3846, %tmp3831
  br i1 %bool_val3847, label %while_body3837, label %merge3845

while_body3837:                                   ; preds = %while3836
  %j_v3838 = load i32, i32* %j3835
  %i_v3839 = load i32, i32* %i3832
  %tmp3840 = mul i32 %c_mat3823, %i_v3839
  %index3841 = add i32 %j_v3838, %tmp3840
  %element_ptr3842 = getelementptr double, double* %system_mat3825, i32 %index3841
  store double 0.000000e+00, double* %element_ptr3842
  %j_v3843 = load i32, i32* %j3835
  %tmp3844 = add i32 %j_v3843, 1
  store i32 %tmp3844, i32* %j3835
  br label %while3836

merge3845:                                        ; preds = %while3836
  %i_v3848 = load i32, i32* %i3832
  %tmp3849 = add i32 %i_v3848, 1
  store i32 %tmp3849, i32* %i3832
  br label %while3833

merge3850:                                        ; preds = %while3833
  %tmp3853 = sub i32 %c_mat3823, 1
  %tmp3854 = sub i32 %r_mat3821, 1
  %m_mat3855 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 0
  %mat_mat3856 = load double*, double** %m_mat3855
  %m_r3857 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 1
  %r_mat3858 = load i32, i32* %m_r3857
  %m_c3859 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 2
  %c_mat3860 = load i32, i32* %m_c3859
  %m_mat3861 = getelementptr inbounds %matrix_t, %matrix_t* %v3817, i32 0, i32 0
  %mat_v3862 = load double*, double** %m_mat3861
  %m_r3863 = getelementptr inbounds %matrix_t, %matrix_t* %v3817, i32 0, i32 1
  %r_v3864 = load i32, i32* %m_r3863
  %m_c3865 = getelementptr inbounds %matrix_t, %matrix_t* %v3817, i32 0, i32 2
  %c_v3866 = load i32, i32* %m_c3865
  %i3867 = alloca i32
  store i32 0, i32* %i3867
  br label %while3868

while3868:                                        ; preds = %merge3890, %merge3850
  %i_v3896 = load i32, i32* %i3867
  %bool_val3897 = icmp sle i32 %i_v3896, %tmp3854
  br i1 %bool_val3897, label %while_body3869, label %merge3895

while_body3869:                                   ; preds = %while3868
  %j3870 = alloca i32
  store i32 0, i32* %j3870
  br label %while3871

while3871:                                        ; preds = %while_body3872, %while_body3869
  %j_v3891 = load i32, i32* %j3870
  %bool_val3892 = icmp sle i32 %j_v3891, %tmp3853
  br i1 %bool_val3892, label %while_body3872, label %merge3890

while_body3872:                                   ; preds = %while3871
  %j_v3873 = load i32, i32* %j3870
  %i_v3874 = load i32, i32* %i3867
  %tmp3875 = mul i32 %c_mat3860, %i_v3874
  %index3876 = add i32 %j_v3873, %tmp3875
  %element_ptr3877 = getelementptr double, double* %mat_mat3856, i32 %index3876
  %j_v3878 = load i32, i32* %j3870
  %tmp3879 = sub i32 %j_v3878, 0
  %tmp3880 = add i32 %tmp3879, 0
  %i_v3881 = load i32, i32* %i3867
  %tmp3882 = sub i32 %i_v3881, 0
  %tmp3883 = add i32 %tmp3882, 0
  %tmp3884 = mul i32 %c_v3866, %tmp3883
  %index3885 = add i32 %tmp3880, %tmp3884
  %element_ptr3886 = getelementptr double, double* %mat_v3862, i32 %index3885
  %tmp_element3887 = load double, double* %element_ptr3886
  store double %tmp_element3887, double* %element_ptr3877
  %j_v3888 = load i32, i32* %j3870
  %tmp3889 = add i32 %j_v3888, 1
  store i32 %tmp3889, i32* %j3870
  br label %while3871

merge3890:                                        ; preds = %while3871
  %i_v3893 = load i32, i32* %i3867
  %tmp3894 = add i32 %i_v3893, 1
  store i32 %tmp3894, i32* %i3867
  br label %while3868

merge3895:                                        ; preds = %while3868
  %72 = bitcast double* %mat_mat3819 to i8*
  tail call void @free(i8* %72)
  %73 = bitcast %matrix_t* %v3817 to i8*
  tail call void @free(i8* %73)
  %m_r3898 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat3899 = load i32, i32* %m_r3898
  %m_c3900 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat3901 = load i32, i32* %m_c3900
  %x3902 = load double, double* %x
  %l3903 = load double, double* %l
  %tmp3904 = fdiv double %l3903, 2.000000e+00
  %tmp3905 = fadd double %x3902, %tmp3904
  %tmp3906 = fsub double %tmp3905, 2.000000e+00
  %double2int_result3907 = call %double_to_int_t* @double2int(double %tmp3906)
  %v_ptr3908 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3907, i32 0, i32 0
  %v3909 = load i32, i32* %v_ptr3908
  %74 = bitcast %double_to_int_t* %double2int_result3907 to i8*
  tail call void @free(i8* %74)
  %tmp3914 = icmp sgt i32 0, %v3909
  br i1 %tmp3914, label %then3911, label %else3913

merge3910:                                        ; preds = %else3913, %then3911
  %tmp3915 = sub i32 %r_mat3899, 1
  %tmp3920 = icmp slt i32 %tmp3915, %v3909
  br i1 %tmp3920, label %then3917, label %else3919

then3911:                                         ; preds = %merge3895
  %printf3912 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3910

else3913:                                         ; preds = %merge3895
  br label %merge3910

merge3916:                                        ; preds = %else3919, %then3917
  %x3921 = load double, double* %x
  %l3922 = load double, double* %l
  %tmp3923 = fdiv double %l3922, 2.000000e+00
  %tmp3924 = fadd double %x3921, %tmp3923
  %tmp3925 = fadd double %tmp3924, 2.000000e+00
  %double2int_result3926 = call %double_to_int_t* @double2int(double %tmp3925)
  %v_ptr3927 = getelementptr inbounds %double_to_int_t, %double_to_int_t* %double2int_result3926, i32 0, i32 0
  %v3928 = load i32, i32* %v_ptr3927
  %75 = bitcast %double_to_int_t* %double2int_result3926 to i8*
  tail call void @free(i8* %75)
  %tmp3933 = icmp sgt i32 0, %v3928
  br i1 %tmp3933, label %then3930, label %else3932

then3917:                                         ; preds = %merge3910
  %printf3918 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3916

else3919:                                         ; preds = %merge3910
  br label %merge3916

merge3929:                                        ; preds = %else3932, %then3930
  %tmp3934 = sub i32 %r_mat3899, 1
  %tmp3939 = icmp slt i32 %tmp3934, %v3928
  br i1 %tmp3939, label %then3936, label %else3938

then3930:                                         ; preds = %merge3916
  %printf3931 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3929

else3932:                                         ; preds = %merge3916
  br label %merge3929

merge3935:                                        ; preds = %else3938, %then3936
  %i3940 = load i32, i32* %i918
  %tmp3945 = icmp sgt i32 0, %i3940
  br i1 %tmp3945, label %then3942, label %else3944

then3936:                                         ; preds = %merge3929
  %printf3937 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3935

else3938:                                         ; preds = %merge3929
  br label %merge3935

merge3941:                                        ; preds = %else3944, %then3942
  %tmp3946 = sub i32 %c_mat3901, 1
  %tmp3951 = icmp slt i32 %tmp3946, %i3940
  br i1 %tmp3951, label %then3948, label %else3950

then3942:                                         ; preds = %merge3935
  %printf3943 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3941

else3944:                                         ; preds = %merge3935
  br label %merge3941

merge3947:                                        ; preds = %else3950, %then3948
  %i3952 = load i32, i32* %i918
  %tmp3957 = icmp sgt i32 0, %i3952
  br i1 %tmp3957, label %then3954, label %else3956

then3948:                                         ; preds = %merge3941
  %printf3949 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3947

else3950:                                         ; preds = %merge3941
  br label %merge3947

merge3953:                                        ; preds = %else3956, %then3954
  %tmp3958 = sub i32 %c_mat3901, 1
  %tmp3963 = icmp slt i32 %tmp3958, %i3952
  br i1 %tmp3963, label %then3960, label %else3962

then3954:                                         ; preds = %merge3947
  %printf3955 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3953

else3956:                                         ; preds = %merge3947
  br label %merge3953

merge3959:                                        ; preds = %else3962, %then3960
  %tmp3964 = sub i32 %v3928, %v3909
  %tmp3965 = add i32 %tmp3964, 1
  %m_r3966 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 1
  %r_mat3967 = load i32, i32* %m_r3966
  %tmp3972 = icmp ne i32 %tmp3965, %r_mat3967
  br i1 %tmp3972, label %then3969, label %else3971

then3960:                                         ; preds = %merge3953
  %printf3961 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge3959

else3962:                                         ; preds = %merge3953
  br label %merge3959

merge3968:                                        ; preds = %else3971, %then3969
  %tmp3973 = sub i32 %i3952, %i3940
  %tmp3974 = add i32 %tmp3973, 1
  %m_r3975 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 2
  %r_mat3976 = load i32, i32* %m_r3975
  %tmp3981 = icmp ne i32 %tmp3974, %r_mat3976
  br i1 %tmp3981, label %then3978, label %else3980

then3969:                                         ; preds = %merge3959
  %printf3970 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3968

else3971:                                         ; preds = %merge3959
  br label %merge3968

merge3977:                                        ; preds = %else3980, %then3978
  %m_mat3982 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 0
  %mat_mat3983 = load double*, double** %m_mat3982
  %m_r3984 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 1
  %r_mat3985 = load i32, i32* %m_r3984
  %m_c3986 = getelementptr inbounds %matrix_t, %matrix_t* %m327, i32 0, i32 2
  %c_mat3987 = load i32, i32* %m_c3986
  %m_mat3988 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 0
  %mat_v3989 = load double*, double** %m_mat3988
  %m_r3990 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 1
  %r_v3991 = load i32, i32* %m_r3990
  %m_c3992 = getelementptr inbounds %matrix_t, %matrix_t* %m3826, i32 0, i32 2
  %c_v3993 = load i32, i32* %m_c3992
  %i3994 = alloca i32
  store i32 %v3909, i32* %i3994
  br label %while3995

then3978:                                         ; preds = %merge3968
  %printf3979 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge3977

else3980:                                         ; preds = %merge3968
  br label %merge3977

while3995:                                        ; preds = %merge4017, %merge3977
  %i_v4023 = load i32, i32* %i3994
  %bool_val4024 = icmp sle i32 %i_v4023, %v3928
  br i1 %bool_val4024, label %while_body3996, label %merge4022

while_body3996:                                   ; preds = %while3995
  %j3997 = alloca i32
  store i32 %i3940, i32* %j3997
  br label %while3998

while3998:                                        ; preds = %while_body3999, %while_body3996
  %j_v4018 = load i32, i32* %j3997
  %bool_val4019 = icmp sle i32 %j_v4018, %i3952
  br i1 %bool_val4019, label %while_body3999, label %merge4017

while_body3999:                                   ; preds = %while3998
  %j_v4000 = load i32, i32* %j3997
  %i_v4001 = load i32, i32* %i3994
  %tmp4002 = mul i32 %c_mat3987, %i_v4001
  %index4003 = add i32 %j_v4000, %tmp4002
  %element_ptr4004 = getelementptr double, double* %mat_mat3983, i32 %index4003
  %j_v4005 = load i32, i32* %j3997
  %tmp4006 = sub i32 %j_v4005, %i3940
  %tmp4007 = add i32 %tmp4006, 0
  %i_v4008 = load i32, i32* %i3994
  %tmp4009 = sub i32 %i_v4008, %v3909
  %tmp4010 = add i32 %tmp4009, 0
  %tmp4011 = mul i32 %c_v3993, %tmp4010
  %index4012 = add i32 %tmp4007, %tmp4011
  %element_ptr4013 = getelementptr double, double* %mat_v3989, i32 %index4012
  %tmp_element4014 = load double, double* %element_ptr4013
  store double %tmp_element4014, double* %element_ptr4004
  %j_v4015 = load i32, i32* %j3997
  %tmp4016 = add i32 %j_v4015, 1
  store i32 %tmp4016, i32* %j3997
  br label %while3998

merge4017:                                        ; preds = %while3998
  %i_v4020 = load i32, i32* %i3994
  %tmp4021 = add i32 %i_v4020, 1
  store i32 %tmp4021, i32* %i3994
  br label %while3995

merge4022:                                        ; preds = %while3995
  %i4025 = load i32, i32* %i918
  %tmp4026 = add i32 %i4025, 1
  %tmp4027 = load i32, i32* %i918
  store i32 %tmp4026, i32* %i918
  br label %while2495

merge4028:                                        ; preds = %while2495
  call void @save(%matrix_t* %m327, %matrix_t* %m487, %matrix_t* %m647, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @system_string.10, i32 0, i32 0))
  ret i32 0
}

declare i32 @printf(i8*, ...)

declare void @abort()

define %matrix_size_t* @size(%matrix_t*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %return = bitcast i8* %malloccall to %matrix_size_t*
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %row_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 0
  store i32 %r_mat, i32* %row_size
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %col_size = getelementptr inbounds %matrix_size_t, %matrix_size_t* %return, i32 0, i32 1
  store i32 %c_mat, i32* %col_size
  ret %matrix_size_t* %return
}

declare noalias i8* @malloc(i32)

define %zero_matrix_t* @zeros(i32, i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %zero_matrix_t*
  %size = mul i32 %0, %1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall1 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall1 to double*
  %malloccall2 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall2 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %0, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %1, i32* %m_c
  %tmp = sub i32 %0, 1
  %tmp3 = sub i32 %1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %1, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %m15 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %m15
  ret %zero_matrix_t* %return
}

define %int_to_double_t* @int2double(i32) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %int_to_double_t*
  %tmp = sitofp i32 %0 to double
  %converted_double = getelementptr inbounds %int_to_double_t, %int_to_double_t* %return, i32 0, i32 0
  store double %tmp, double* %converted_double
  ret %int_to_double_t* %return
}

define %double_to_int_t* @double2int(double) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %double_to_int_t*
  %tmp = fptosi double %0 to i32
  %converted_int = getelementptr inbounds %double_to_int_t, %double_to_int_t* %return, i32 0, i32 0
  store i32 %tmp, i32* %converted_int
  ret %double_to_int_t* %return
}

declare double* @load_cpp(i8*)

define %load_t* @load(i8*) {
entry:
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i64), i64 3) to i32))
  %return = bitcast i8* %malloccall to %load_t*
  %mat_arr = call double* @load_cpp(i8* %0)
  %element_ptr = getelementptr double, double* %mat_arr, i32 0
  %tmp = load double, double* %element_ptr
  %tmp1 = fptosi double %tmp to i32
  %element_ptr2 = getelementptr double, double* %mat_arr, i32 1
  %tmp3 = load double, double* %element_ptr2
  %tmp4 = fptosi double %tmp3 to i32
  %size = mul i32 %tmp1, %tmp4
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall5 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall5 to double*
  %malloccall6 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall6 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %tmp1, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %tmp4, i32* %m_c
  %tmp7 = sub i32 %tmp1, 1
  %tmp8 = sub i32 %tmp4, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v19 = load i32, i32* %i
  %bool_val20 = icmp sle i32 %i_v19, %tmp7
  br i1 %bool_val20, label %while_body, label %merge18

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while9

while9:                                           ; preds = %while_body10, %while_body
  %j_v15 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v15, %tmp8
  br i1 %bool_val, label %while_body10, label %merge

while_body10:                                     ; preds = %while9
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp11 = mul i32 %tmp4, %i_v
  %index = add i32 %j_v, %tmp11
  %element_ptr12 = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr12
  %j_v13 = load i32, i32* %j
  %tmp14 = add i32 %j_v13, 1
  store i32 %tmp14, i32* %j
  br label %while9

merge:                                            ; preds = %while9
  %i_v16 = load i32, i32* %i
  %tmp17 = add i32 %i_v16, 1
  store i32 %tmp17, i32* %i
  br label %while

merge18:                                          ; preds = %while
  %size21 = mul i32 %tmp1, %tmp4
  %mallocsize22 = mul i32 %size21, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall23 = tail call i8* @malloc(i32 %mallocsize22)
  %system_mat24 = bitcast i8* %malloccall23 to double*
  %malloccall25 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m26 = bitcast i8* %malloccall25 to %matrix_t*
  %m_mat27 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 0
  store double* %system_mat24, double** %m_mat27
  %m_r28 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 1
  store i32 %tmp1, i32* %m_r28
  %m_c29 = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 2
  store i32 %tmp4, i32* %m_c29
  %tmp30 = sub i32 %tmp1, 1
  %tmp31 = sub i32 %tmp4, 1
  %i32 = alloca i32
  store i32 0, i32* %i32
  br label %while33

while33:                                          ; preds = %merge45, %merge18
  %i_v51 = load i32, i32* %i32
  %bool_val52 = icmp sle i32 %i_v51, %tmp30
  br i1 %bool_val52, label %while_body34, label %merge50

while_body34:                                     ; preds = %while33
  %j35 = alloca i32
  store i32 0, i32* %j35
  br label %while36

while36:                                          ; preds = %while_body37, %while_body34
  %j_v46 = load i32, i32* %j35
  %bool_val47 = icmp sle i32 %j_v46, %tmp31
  br i1 %bool_val47, label %while_body37, label %merge45

while_body37:                                     ; preds = %while36
  %j_v38 = load i32, i32* %j35
  %i_v39 = load i32, i32* %i32
  %tmp40 = mul i32 %tmp4, %i_v39
  %index41 = add i32 %j_v38, %tmp40
  %element_ptr42 = getelementptr double, double* %system_mat24, i32 %index41
  store double 0.000000e+00, double* %element_ptr42
  %j_v43 = load i32, i32* %j35
  %tmp44 = add i32 %j_v43, 1
  store i32 %tmp44, i32* %j35
  br label %while36

merge45:                                          ; preds = %while36
  %i_v48 = load i32, i32* %i32
  %tmp49 = add i32 %i_v48, 1
  store i32 %tmp49, i32* %i32
  br label %while33

merge50:                                          ; preds = %while33
  %size53 = mul i32 %tmp1, %tmp4
  %mallocsize54 = mul i32 %size53, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall55 = tail call i8* @malloc(i32 %mallocsize54)
  %system_mat56 = bitcast i8* %malloccall55 to double*
  %malloccall57 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m58 = bitcast i8* %malloccall57 to %matrix_t*
  %m_mat59 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 0
  store double* %system_mat56, double** %m_mat59
  %m_r60 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 1
  store i32 %tmp1, i32* %m_r60
  %m_c61 = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 2
  store i32 %tmp4, i32* %m_c61
  %tmp62 = sub i32 %tmp1, 1
  %tmp63 = sub i32 %tmp4, 1
  %i64 = alloca i32
  store i32 0, i32* %i64
  br label %while65

while65:                                          ; preds = %merge77, %merge50
  %i_v83 = load i32, i32* %i64
  %bool_val84 = icmp sle i32 %i_v83, %tmp62
  br i1 %bool_val84, label %while_body66, label %merge82

while_body66:                                     ; preds = %while65
  %j67 = alloca i32
  store i32 0, i32* %j67
  br label %while68

while68:                                          ; preds = %while_body69, %while_body66
  %j_v78 = load i32, i32* %j67
  %bool_val79 = icmp sle i32 %j_v78, %tmp63
  br i1 %bool_val79, label %while_body69, label %merge77

while_body69:                                     ; preds = %while68
  %j_v70 = load i32, i32* %j67
  %i_v71 = load i32, i32* %i64
  %tmp72 = mul i32 %tmp4, %i_v71
  %index73 = add i32 %j_v70, %tmp72
  %element_ptr74 = getelementptr double, double* %system_mat56, i32 %index73
  store double 0.000000e+00, double* %element_ptr74
  %j_v75 = load i32, i32* %j67
  %tmp76 = add i32 %j_v75, 1
  store i32 %tmp76, i32* %j67
  br label %while68

merge77:                                          ; preds = %while68
  %i_v80 = load i32, i32* %i64
  %tmp81 = add i32 %i_v80, 1
  store i32 %tmp81, i32* %i64
  br label %while65

merge82:                                          ; preds = %while65
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %mat_g = getelementptr inbounds %matrix_t, %matrix_t* %m26, i32 0, i32 0
  %mat_mat85 = load double*, double** %mat_g
  %mat_b = getelementptr inbounds %matrix_t, %matrix_t* %m58, i32 0, i32 0
  %mat_mat86 = load double*, double** %mat_b
  %tmp87 = sub i32 %tmp1, 1
  %tmp88 = sub i32 %tmp4, 1
  %counter = alloca i32
  store i32 2, i32* %counter
  %i89 = alloca i32
  store i32 0, i32* %i89
  br label %while90

while90:                                          ; preds = %merge126, %merge82
  %i_v132 = load i32, i32* %i89
  %bool_val133 = icmp sle i32 %i_v132, %tmp87
  br i1 %bool_val133, label %while_body91, label %merge131

while_body91:                                     ; preds = %while90
  %j92 = alloca i32
  store i32 0, i32* %j92
  br label %while93

while93:                                          ; preds = %while_body94, %while_body91
  %j_v127 = load i32, i32* %j92
  %bool_val128 = icmp sle i32 %j_v127, %tmp88
  br i1 %bool_val128, label %while_body94, label %merge126

while_body94:                                     ; preds = %while93
  %j_v95 = load i32, i32* %j92
  %i_v96 = load i32, i32* %i89
  %tmp97 = mul i32 %tmp4, %i_v96
  %index98 = add i32 %j_v95, %tmp97
  %element_ptr99 = getelementptr double, double* %mat_mat, i32 %index98
  %j_v100 = load i32, i32* %j92
  %i_v101 = load i32, i32* %i89
  %tmp102 = mul i32 %tmp4, %i_v101
  %index103 = add i32 %j_v100, %tmp102
  %element_ptr104 = getelementptr double, double* %mat_mat85, i32 %index103
  %j_v105 = load i32, i32* %j92
  %i_v106 = load i32, i32* %i89
  %tmp107 = mul i32 %tmp4, %i_v106
  %index108 = add i32 %j_v105, %tmp107
  %element_ptr109 = getelementptr double, double* %mat_mat86, i32 %index108
  %counter110 = load i32, i32* %counter
  %element_ptr111 = getelementptr double, double* %mat_arr, i32 %counter110
  %tmp_element = load double, double* %element_ptr111
  store double %tmp_element, double* %element_ptr109
  %counter112 = load i32, i32* %counter
  %tmp113 = add i32 %counter112, 1
  store i32 %tmp113, i32* %counter
  %counter114 = load i32, i32* %counter
  %element_ptr115 = getelementptr double, double* %mat_arr, i32 %counter114
  %tmp_element116 = load double, double* %element_ptr115
  store double %tmp_element116, double* %element_ptr104
  %counter117 = load i32, i32* %counter
  %tmp118 = add i32 %counter117, 1
  store i32 %tmp118, i32* %counter
  %counter119 = load i32, i32* %counter
  %element_ptr120 = getelementptr double, double* %mat_arr, i32 %counter119
  %tmp_element121 = load double, double* %element_ptr120
  store double %tmp_element121, double* %element_ptr99
  %counter122 = load i32, i32* %counter
  %tmp123 = add i32 %counter122, 1
  store i32 %tmp123, i32* %counter
  %j_v124 = load i32, i32* %j92
  %tmp125 = add i32 %j_v124, 1
  store i32 %tmp125, i32* %j92
  br label %while93

merge126:                                         ; preds = %while93
  %i_v129 = load i32, i32* %i89
  %tmp130 = add i32 %i_v129, 1
  store i32 %tmp130, i32* %i89
  br label %while90

merge131:                                         ; preds = %while90
  %mat_r134 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %mat_r134
  %mat_r135 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 1
  store %matrix_t* %m26, %matrix_t** %mat_r135
  %mat_r136 = getelementptr inbounds %load_t, %load_t* %return, i32 0, i32 2
  store %matrix_t* %m58, %matrix_t** %mat_r136
  ret %load_t* %return
}

declare void @save_cpp(double*, i8*)

define void @save(%matrix_t*, %matrix_t*, %matrix_t*, i8*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %tmp = mul i32 %r_mat, %c_mat
  %tmp1 = mul i32 %tmp, 3
  %tmp2 = add i32 %tmp1, 2
  %mallocsize = mul i32 %tmp2, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall = tail call i8* @malloc(i32 %mallocsize)
  %return_arr = bitcast i8* %malloccall to double*
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %mat_g = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_mat3 = load double*, double** %mat_g
  %mat_b = getelementptr inbounds %matrix_t, %matrix_t* %2, i32 0, i32 0
  %mat_mat4 = load double*, double** %mat_b
  %tmp5 = sub i32 %r_mat, 1
  %tmp6 = sub i32 %c_mat, 1
  %element_ptr = getelementptr double, double* %return_arr, i32 0
  %tmp7 = sitofp i32 %r_mat to double
  store double %tmp7, double* %element_ptr
  %element_ptr8 = getelementptr double, double* %return_arr, i32 1
  %tmp9 = sitofp i32 %c_mat to double
  store double %tmp9, double* %element_ptr8
  %counter = alloca i32
  store i32 2, i32* %counter
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v44 = load i32, i32* %i
  %bool_val45 = icmp sle i32 %i_v44, %tmp5
  br i1 %bool_val45, label %while_body, label %merge43

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while10

while10:                                          ; preds = %while_body11, %while_body
  %j_v40 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v40, %tmp6
  br i1 %bool_val, label %while_body11, label %merge

while_body11:                                     ; preds = %while10
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp12 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp12
  %element_ptr13 = getelementptr double, double* %mat_mat, i32 %index
  %j_v14 = load i32, i32* %j
  %i_v15 = load i32, i32* %i
  %tmp16 = mul i32 %c_mat, %i_v15
  %index17 = add i32 %j_v14, %tmp16
  %element_ptr18 = getelementptr double, double* %mat_mat3, i32 %index17
  %j_v19 = load i32, i32* %j
  %i_v20 = load i32, i32* %i
  %tmp21 = mul i32 %c_mat, %i_v20
  %index22 = add i32 %j_v19, %tmp21
  %element_ptr23 = getelementptr double, double* %mat_mat4, i32 %index22
  %counter24 = load i32, i32* %counter
  %element_ptr25 = getelementptr double, double* %return_arr, i32 %counter24
  %tmp_element = load double, double* %element_ptr23
  store double %tmp_element, double* %element_ptr25
  %counter26 = load i32, i32* %counter
  %tmp27 = add i32 %counter26, 1
  store i32 %tmp27, i32* %counter
  %counter28 = load i32, i32* %counter
  %element_ptr29 = getelementptr double, double* %return_arr, i32 %counter28
  %tmp_element30 = load double, double* %element_ptr18
  store double %tmp_element30, double* %element_ptr29
  %counter31 = load i32, i32* %counter
  %tmp32 = add i32 %counter31, 1
  store i32 %tmp32, i32* %counter
  %counter33 = load i32, i32* %counter
  %element_ptr34 = getelementptr double, double* %return_arr, i32 %counter33
  %tmp_element35 = load double, double* %element_ptr13
  store double %tmp_element35, double* %element_ptr34
  %counter36 = load i32, i32* %counter
  %tmp37 = add i32 %counter36, 1
  store i32 %tmp37, i32* %counter
  %j_v38 = load i32, i32* %j
  %tmp39 = add i32 %j_v38, 1
  store i32 %tmp39, i32* %j
  br label %while10

merge:                                            ; preds = %while10
  %i_v41 = load i32, i32* %i
  %tmp42 = add i32 %i_v41, 1
  store i32 %tmp42, i32* %i
  br label %while

merge43:                                          ; preds = %while
  call void @save_cpp(double* %return_arr, i8* %3)
  ret void
}

declare double* @faceDetect(i8*)

define %face_t* @face(i8*) {
entry:
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %face_t*
  %mat_arr = call double* @faceDetect(i8* %0)
  %element_ptr = getelementptr double, double* %mat_arr, i32 0
  %tmp = load double, double* %element_ptr
  %tmp1 = fptosi double %tmp to i32
  %size = mul i32 4, %tmp1
  %mallocsize = mul i32 %size, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall2 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat = bitcast i8* %malloccall2 to double*
  %malloccall3 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m = bitcast i8* %malloccall3 to %matrix_t*
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 4, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %tmp1, i32* %m_c
  %tmp4 = sub i32 %tmp1, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v15 = load i32, i32* %i
  %bool_val16 = icmp sle i32 %i_v15, 3
  br i1 %bool_val16, label %while_body, label %merge14

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while5

while5:                                           ; preds = %while_body6, %while_body
  %j_v11 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v11, %tmp4
  br i1 %bool_val, label %while_body6, label %merge

while_body6:                                      ; preds = %while5
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp7 = mul i32 %tmp1, %i_v
  %index = add i32 %j_v, %tmp7
  %element_ptr8 = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr8
  %j_v9 = load i32, i32* %j
  %tmp10 = add i32 %j_v9, 1
  store i32 %tmp10, i32* %j
  br label %while5

merge:                                            ; preds = %while5
  %i_v12 = load i32, i32* %i
  %tmp13 = add i32 %i_v12, 1
  store i32 %tmp13, i32* %i
  br label %while

merge14:                                          ; preds = %while
  %mat_r = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %mat_r
  %counter = alloca i32
  store i32 1, i32* %counter
  %tmp17 = sub i32 %tmp1, 1
  %i18 = alloca i32
  store i32 0, i32* %i18
  br label %while19

while19:                                          ; preds = %merge35, %merge14
  %i_v41 = load i32, i32* %i18
  %bool_val42 = icmp sle i32 %i_v41, %tmp17
  br i1 %bool_val42, label %while_body20, label %merge40

while_body20:                                     ; preds = %while19
  %j21 = alloca i32
  store i32 0, i32* %j21
  br label %while22

while22:                                          ; preds = %while_body23, %while_body20
  %j_v36 = load i32, i32* %j21
  %bool_val37 = icmp sle i32 %j_v36, 3
  br i1 %bool_val37, label %while_body23, label %merge35

while_body23:                                     ; preds = %while22
  %j_v24 = load i32, i32* %j21
  %i_v25 = load i32, i32* %i18
  %tmp26 = mul i32 %tmp1, %i_v25
  %index27 = add i32 %j_v24, %tmp26
  %element_ptr28 = getelementptr double, double* %mat_mat, i32 %index27
  %counter29 = load i32, i32* %counter
  %element_ptr30 = getelementptr double, double* %mat_arr, i32 %counter29
  %tmp_element = load double, double* %element_ptr30
  store double %tmp_element, double* %element_ptr28
  %counter31 = load i32, i32* %counter
  %tmp32 = add i32 %counter31, 1
  store i32 %tmp32, i32* %counter
  %j_v33 = load i32, i32* %j21
  %tmp34 = add i32 %j_v33, 1
  store i32 %tmp34, i32* %j21
  br label %while22

merge35:                                          ; preds = %while22
  %i_v38 = load i32, i32* %i18
  %tmp39 = add i32 %i_v38, 1
  store i32 %tmp39, i32* %i18
  br label %while19

merge40:                                          ; preds = %while19
  %mat_r43 = getelementptr inbounds %face_t, %face_t* %return, i32 0, i32 0
  store %matrix_t* %m, %matrix_t** %mat_r43
  ret %face_t* %return
}

define %return_t* @bitwise(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %k = alloca double
  %tmp133 = load double, double* %k
  store double 0.000000e+00, double* %k
  %i134 = alloca i32
  %tmp135 = load i32, i32* %i134
  store i32 0, i32* %i134
  %j136 = alloca i32
  %tmp137 = load i32, i32* %j136
  store i32 0, i32* %j136
  %i138 = load i32, i32* %i134
  %tmp139 = icmp slt i32 %i138, 3
  %tmp140 = load i32, i32* %i134
  store i32 0, i32* %i134
  br label %while141

while141:                                         ; preds = %merge266, %merge130
  %i273 = load i32, i32* %i134
  %tmp274 = icmp slt i32 %i273, 3
  br i1 %tmp274, label %while_body142, label %merge272

while_body142:                                    ; preds = %while141
  %j143 = load i32, i32* %j136
  %tmp144 = icmp slt i32 %j143, 3
  %tmp145 = load i32, i32* %j136
  store i32 0, i32* %j136
  br label %while146

while146:                                         ; preds = %merge249, %while_body142
  %j267 = load i32, i32* %j136
  %tmp268 = icmp slt i32 %j267, 3
  br i1 %tmp268, label %while_body147, label %merge266

while_body147:                                    ; preds = %while146
  %k148 = load double, double* %k
  %m_r149 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat150 = load i32, i32* %m_r149
  %m_c151 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat152 = load i32, i32* %m_c151
  %i153 = load i32, i32* %i134
  %tmp155 = icmp sgt i32 0, %i153
  br i1 %tmp155, label %then, label %else

merge154:                                         ; preds = %else, %then
  %tmp156 = sub i32 %r_mat150, 1
  %tmp161 = icmp slt i32 %tmp156, %i153
  br i1 %tmp161, label %then158, label %else160

then:                                             ; preds = %while_body147
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge154

else:                                             ; preds = %while_body147
  br label %merge154

merge157:                                         ; preds = %else160, %then158
  %i162 = load i32, i32* %i134
  %tmp167 = icmp sgt i32 0, %i162
  br i1 %tmp167, label %then164, label %else166

then158:                                          ; preds = %merge154
  %printf159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge157

else160:                                          ; preds = %merge154
  br label %merge157

merge163:                                         ; preds = %else166, %then164
  %tmp168 = sub i32 %r_mat150, 1
  %tmp173 = icmp slt i32 %tmp168, %i162
  br i1 %tmp173, label %then170, label %else172

then164:                                          ; preds = %merge157
  %printf165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge163

else166:                                          ; preds = %merge157
  br label %merge163

merge169:                                         ; preds = %else172, %then170
  %j174 = load i32, i32* %j136
  %tmp179 = icmp sgt i32 0, %j174
  br i1 %tmp179, label %then176, label %else178

then170:                                          ; preds = %merge163
  %printf171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge169

else172:                                          ; preds = %merge163
  br label %merge169

merge175:                                         ; preds = %else178, %then176
  %tmp180 = sub i32 %c_mat152, 1
  %tmp185 = icmp slt i32 %tmp180, %j174
  br i1 %tmp185, label %then182, label %else184

then176:                                          ; preds = %merge169
  %printf177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge175

else178:                                          ; preds = %merge169
  br label %merge175

merge181:                                         ; preds = %else184, %then182
  %j186 = load i32, i32* %j136
  %tmp191 = icmp sgt i32 0, %j186
  br i1 %tmp191, label %then188, label %else190

then182:                                          ; preds = %merge175
  %printf183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge181

else184:                                          ; preds = %merge175
  br label %merge181

merge187:                                         ; preds = %else190, %then188
  %tmp192 = sub i32 %c_mat152, 1
  %tmp197 = icmp slt i32 %tmp192, %j186
  br i1 %tmp197, label %then194, label %else196

then188:                                          ; preds = %merge181
  %printf189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge187

else190:                                          ; preds = %merge181
  br label %merge187

merge193:                                         ; preds = %else196, %then194
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat198 = load double*, double** %mat
  %tmp199 = mul i32 %c_mat152, %i153
  %index200 = add i32 %j174, %tmp199
  %element_ptr201 = getelementptr double, double* %mat198, i32 %index200
  %element = load double, double* %element_ptr201
  %m_r202 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat203 = load i32, i32* %m_r202
  %m_c204 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat205 = load i32, i32* %m_c204
  %i206 = load i32, i32* %i134
  %tmp211 = icmp sgt i32 0, %i206
  br i1 %tmp211, label %then208, label %else210

then194:                                          ; preds = %merge187
  %printf195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge193

else196:                                          ; preds = %merge187
  br label %merge193

merge207:                                         ; preds = %else210, %then208
  %tmp212 = sub i32 %r_mat203, 1
  %tmp217 = icmp slt i32 %tmp212, %i206
  br i1 %tmp217, label %then214, label %else216

then208:                                          ; preds = %merge193
  %printf209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge207

else210:                                          ; preds = %merge193
  br label %merge207

merge213:                                         ; preds = %else216, %then214
  %i218 = load i32, i32* %i134
  %tmp223 = icmp sgt i32 0, %i218
  br i1 %tmp223, label %then220, label %else222

then214:                                          ; preds = %merge207
  %printf215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge213

else216:                                          ; preds = %merge207
  br label %merge213

merge219:                                         ; preds = %else222, %then220
  %tmp224 = sub i32 %r_mat203, 1
  %tmp229 = icmp slt i32 %tmp224, %i218
  br i1 %tmp229, label %then226, label %else228

then220:                                          ; preds = %merge213
  %printf221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge219

else222:                                          ; preds = %merge213
  br label %merge219

merge225:                                         ; preds = %else228, %then226
  %j230 = load i32, i32* %j136
  %tmp235 = icmp sgt i32 0, %j230
  br i1 %tmp235, label %then232, label %else234

then226:                                          ; preds = %merge219
  %printf227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge225

else228:                                          ; preds = %merge219
  br label %merge225

merge231:                                         ; preds = %else234, %then232
  %tmp236 = sub i32 %c_mat205, 1
  %tmp241 = icmp slt i32 %tmp236, %j230
  br i1 %tmp241, label %then238, label %else240

then232:                                          ; preds = %merge225
  %printf233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge231

else234:                                          ; preds = %merge225
  br label %merge231

merge237:                                         ; preds = %else240, %then238
  %j242 = load i32, i32* %j136
  %tmp247 = icmp sgt i32 0, %j242
  br i1 %tmp247, label %then244, label %else246

then238:                                          ; preds = %merge231
  %printf239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge237

else240:                                          ; preds = %merge231
  br label %merge237

merge243:                                         ; preds = %else246, %then244
  %tmp248 = sub i32 %c_mat205, 1
  %tmp253 = icmp slt i32 %tmp248, %j242
  br i1 %tmp253, label %then250, label %else252

then244:                                          ; preds = %merge237
  %printf245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge243

else246:                                          ; preds = %merge237
  br label %merge243

merge249:                                         ; preds = %else252, %then250
  %mat254 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat255 = load double*, double** %mat254
  %tmp256 = mul i32 %c_mat205, %i206
  %index257 = add i32 %j230, %tmp256
  %element_ptr258 = getelementptr double, double* %mat255, i32 %index257
  %element259 = load double, double* %element_ptr258
  %tmp260 = fmul double %element, %element259
  %tmp261 = fadd double %k148, %tmp260
  %tmp262 = load double, double* %k
  store double %tmp261, double* %k
  %j263 = load i32, i32* %j136
  %tmp264 = add i32 %j263, 1
  %tmp265 = load i32, i32* %j136
  store i32 %tmp264, i32* %j136
  br label %while146

then250:                                          ; preds = %merge243
  %printf251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge249

else252:                                          ; preds = %merge243
  br label %merge249

merge266:                                         ; preds = %while146
  %i269 = load i32, i32* %i134
  %tmp270 = add i32 %i269, 1
  %tmp271 = load i32, i32* %i134
  store i32 %tmp270, i32* %i134
  br label %while141

merge272:                                         ; preds = %while141
  %malloccall = tail call i8* @malloc(i32 ptrtoint (double* getelementptr (double, double* null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t*
  %k275 = load double, double* %k
  %return0 = getelementptr inbounds %return_t, %return_t* %return, i32 0, i32 0
  store double %k275, double* %return0
  ret %return_t* %return
  %tmp276 = alloca %return_t
  ret %return_t* %tmp276
}

declare void @free(i8*)

define %return_t.0* @filter(%matrix_t*, %matrix_t*) {
entry:
  %m_r = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_mat = load i32, i32* %m_r
  %m_c = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_mat = load i32, i32* %m_c
  %size = mul i32 %r_mat, %c_mat
  %system_mat = alloca double, i32 %size
  %m = alloca %matrix_t
  %m_mat = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  store double* %system_mat, double** %m_mat
  %m_r1 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  store i32 %r_mat, i32* %m_r1
  %m_c2 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  store i32 %c_mat, i32* %m_c2
  %tmp = sub i32 %r_mat, 1
  %tmp3 = sub i32 %c_mat, 1
  %i = alloca i32
  store i32 0, i32* %i
  br label %while

while:                                            ; preds = %merge, %entry
  %i_v13 = load i32, i32* %i
  %bool_val14 = icmp sle i32 %i_v13, %tmp
  br i1 %bool_val14, label %while_body, label %merge12

while_body:                                       ; preds = %while
  %j = alloca i32
  store i32 0, i32* %j
  br label %while4

while4:                                           ; preds = %while_body5, %while_body
  %j_v9 = load i32, i32* %j
  %bool_val = icmp sle i32 %j_v9, %tmp3
  br i1 %bool_val, label %while_body5, label %merge

while_body5:                                      ; preds = %while4
  %j_v = load i32, i32* %j
  %i_v = load i32, i32* %i
  %tmp6 = mul i32 %c_mat, %i_v
  %index = add i32 %j_v, %tmp6
  %element_ptr = getelementptr double, double* %system_mat, i32 %index
  store double 0.000000e+00, double* %element_ptr
  %j_v7 = load i32, i32* %j
  %tmp8 = add i32 %j_v7, 1
  store i32 %tmp8, i32* %j
  br label %while4

merge:                                            ; preds = %while4
  %i_v10 = load i32, i32* %i
  %tmp11 = add i32 %i_v10, 1
  store i32 %tmp11, i32* %i
  br label %while

merge12:                                          ; preds = %while
  %tmp15 = sub i32 %c_mat, 1
  %tmp16 = sub i32 %r_mat, 1
  %m_mat17 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_mat = load double*, double** %m_mat17
  %m_r18 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat19 = load i32, i32* %m_r18
  %m_c20 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat21 = load i32, i32* %m_c20
  %m_mat22 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 0
  %mat_v = load double*, double** %m_mat22
  %m_r23 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 1
  %r_v = load i32, i32* %m_r23
  %m_c24 = getelementptr inbounds %matrix_t, %matrix_t* %0, i32 0, i32 2
  %c_v = load i32, i32* %m_c24
  %i25 = alloca i32
  store i32 0, i32* %i25
  br label %while26

while26:                                          ; preds = %merge47, %merge12
  %i_v53 = load i32, i32* %i25
  %bool_val54 = icmp sle i32 %i_v53, %tmp16
  br i1 %bool_val54, label %while_body27, label %merge52

while_body27:                                     ; preds = %while26
  %j28 = alloca i32
  store i32 0, i32* %j28
  br label %while29

while29:                                          ; preds = %while_body30, %while_body27
  %j_v48 = load i32, i32* %j28
  %bool_val49 = icmp sle i32 %j_v48, %tmp15
  br i1 %bool_val49, label %while_body30, label %merge47

while_body30:                                     ; preds = %while29
  %j_v31 = load i32, i32* %j28
  %i_v32 = load i32, i32* %i25
  %tmp33 = mul i32 %c_mat21, %i_v32
  %index34 = add i32 %j_v31, %tmp33
  %element_ptr35 = getelementptr double, double* %mat_mat, i32 %index34
  %j_v36 = load i32, i32* %j28
  %tmp37 = sub i32 %j_v36, 0
  %tmp38 = add i32 %tmp37, 0
  %i_v39 = load i32, i32* %i25
  %tmp40 = sub i32 %i_v39, 0
  %tmp41 = add i32 %tmp40, 0
  %tmp42 = mul i32 %c_v, %tmp41
  %index43 = add i32 %tmp38, %tmp42
  %element_ptr44 = getelementptr double, double* %mat_v, i32 %index43
  %tmp_element = load double, double* %element_ptr44
  store double %tmp_element, double* %element_ptr35
  %j_v45 = load i32, i32* %j28
  %tmp46 = add i32 %j_v45, 1
  store i32 %tmp46, i32* %j28
  br label %while29

merge47:                                          ; preds = %while29
  %i_v50 = load i32, i32* %i25
  %tmp51 = add i32 %i_v50, 1
  store i32 %tmp51, i32* %i25
  br label %while26

merge52:                                          ; preds = %while26
  %m_r55 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_mat56 = load i32, i32* %m_r55
  %m_c57 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_mat58 = load i32, i32* %m_c57
  %size59 = mul i32 %r_mat56, %c_mat58
  %system_mat60 = alloca double, i32 %size59
  %m61 = alloca %matrix_t
  %m_mat62 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  store double* %system_mat60, double** %m_mat62
  %m_r63 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  store i32 %r_mat56, i32* %m_r63
  %m_c64 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  store i32 %c_mat58, i32* %m_c64
  %tmp65 = sub i32 %r_mat56, 1
  %tmp66 = sub i32 %c_mat58, 1
  %i67 = alloca i32
  store i32 0, i32* %i67
  br label %while68

while68:                                          ; preds = %merge80, %merge52
  %i_v86 = load i32, i32* %i67
  %bool_val87 = icmp sle i32 %i_v86, %tmp65
  br i1 %bool_val87, label %while_body69, label %merge85

while_body69:                                     ; preds = %while68
  %j70 = alloca i32
  store i32 0, i32* %j70
  br label %while71

while71:                                          ; preds = %while_body72, %while_body69
  %j_v81 = load i32, i32* %j70
  %bool_val82 = icmp sle i32 %j_v81, %tmp66
  br i1 %bool_val82, label %while_body72, label %merge80

while_body72:                                     ; preds = %while71
  %j_v73 = load i32, i32* %j70
  %i_v74 = load i32, i32* %i67
  %tmp75 = mul i32 %c_mat58, %i_v74
  %index76 = add i32 %j_v73, %tmp75
  %element_ptr77 = getelementptr double, double* %system_mat60, i32 %index76
  store double 0.000000e+00, double* %element_ptr77
  %j_v78 = load i32, i32* %j70
  %tmp79 = add i32 %j_v78, 1
  store i32 %tmp79, i32* %j70
  br label %while71

merge80:                                          ; preds = %while71
  %i_v83 = load i32, i32* %i67
  %tmp84 = add i32 %i_v83, 1
  store i32 %tmp84, i32* %i67
  br label %while68

merge85:                                          ; preds = %while68
  %tmp88 = sub i32 %c_mat58, 1
  %tmp89 = sub i32 %r_mat56, 1
  %m_mat90 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 0
  %mat_mat91 = load double*, double** %m_mat90
  %m_r92 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 1
  %r_mat93 = load i32, i32* %m_r92
  %m_c94 = getelementptr inbounds %matrix_t, %matrix_t* %m61, i32 0, i32 2
  %c_mat95 = load i32, i32* %m_c94
  %m_mat96 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 0
  %mat_v97 = load double*, double** %m_mat96
  %m_r98 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 1
  %r_v99 = load i32, i32* %m_r98
  %m_c100 = getelementptr inbounds %matrix_t, %matrix_t* %1, i32 0, i32 2
  %c_v101 = load i32, i32* %m_c100
  %i102 = alloca i32
  store i32 0, i32* %i102
  br label %while103

while103:                                         ; preds = %merge125, %merge85
  %i_v131 = load i32, i32* %i102
  %bool_val132 = icmp sle i32 %i_v131, %tmp89
  br i1 %bool_val132, label %while_body104, label %merge130

while_body104:                                    ; preds = %while103
  %j105 = alloca i32
  store i32 0, i32* %j105
  br label %while106

while106:                                         ; preds = %while_body107, %while_body104
  %j_v126 = load i32, i32* %j105
  %bool_val127 = icmp sle i32 %j_v126, %tmp88
  br i1 %bool_val127, label %while_body107, label %merge125

while_body107:                                    ; preds = %while106
  %j_v108 = load i32, i32* %j105
  %i_v109 = load i32, i32* %i102
  %tmp110 = mul i32 %c_mat95, %i_v109
  %index111 = add i32 %j_v108, %tmp110
  %element_ptr112 = getelementptr double, double* %mat_mat91, i32 %index111
  %j_v113 = load i32, i32* %j105
  %tmp114 = sub i32 %j_v113, 0
  %tmp115 = add i32 %tmp114, 0
  %i_v116 = load i32, i32* %i102
  %tmp117 = sub i32 %i_v116, 0
  %tmp118 = add i32 %tmp117, 0
  %tmp119 = mul i32 %c_v101, %tmp118
  %index120 = add i32 %tmp115, %tmp119
  %element_ptr121 = getelementptr double, double* %mat_v97, i32 %index120
  %tmp_element122 = load double, double* %element_ptr121
  store double %tmp_element122, double* %element_ptr112
  %j_v123 = load i32, i32* %j105
  %tmp124 = add i32 %j_v123, 1
  store i32 %tmp124, i32* %j105
  br label %while106

merge125:                                         ; preds = %while106
  %i_v128 = load i32, i32* %i102
  %tmp129 = add i32 %i_v128, 1
  store i32 %tmp129, i32* %i102
  br label %while103

merge130:                                         ; preds = %while103
  %a = alloca i32
  %tmp133 = load i32, i32* %a
  store i32 0, i32* %a
  %b = alloca i32
  %tmp134 = load i32, i32* %b
  store i32 0, i32* %b
  %size_result = call %matrix_size_t* @size(%matrix_t* %m)
  %v_ptr = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 0
  %v = load i32, i32* %v_ptr
  %tmp135 = load i32, i32* %a
  store i32 %v, i32* %a
  %v_ptr136 = getelementptr inbounds %matrix_size_t, %matrix_size_t* %size_result, i32 0, i32 1
  %v137 = load i32, i32* %v_ptr136
  %tmp138 = load i32, i32* %b
  store i32 %v137, i32* %b
  %2 = bitcast %matrix_size_t* %size_result to i8*
  tail call void @free(i8* %2)
  %b139 = load i32, i32* %b
  %tmp140 = add i32 %b139, 2
  %a141 = load i32, i32* %a
  %tmp142 = add i32 %a141, 2
  %zeros_result = call %zero_matrix_t* @zeros(i32 %tmp142, i32 %tmp140)
  %v_ptr143 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result, i32 0, i32 0
  %v144 = load %matrix_t*, %matrix_t** %v_ptr143
  %3 = bitcast %zero_matrix_t* %zeros_result to i8*
  tail call void @free(i8* %3)
  %m_mat145 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_mat146 = load double*, double** %m_mat145
  %m_r147 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_mat148 = load i32, i32* %m_r147
  %m_c149 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_mat150 = load i32, i32* %m_c149
  %size151 = mul i32 %r_mat148, %c_mat150
  %system_mat152 = alloca double, i32 %size151
  %m153 = alloca %matrix_t
  %m_mat154 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  store double* %system_mat152, double** %m_mat154
  %m_r155 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  store i32 %r_mat148, i32* %m_r155
  %m_c156 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  store i32 %c_mat150, i32* %m_c156
  %tmp157 = sub i32 %r_mat148, 1
  %tmp158 = sub i32 %c_mat150, 1
  %i159 = alloca i32
  store i32 0, i32* %i159
  br label %while160

while160:                                         ; preds = %merge172, %merge130
  %i_v178 = load i32, i32* %i159
  %bool_val179 = icmp sle i32 %i_v178, %tmp157
  br i1 %bool_val179, label %while_body161, label %merge177

while_body161:                                    ; preds = %while160
  %j162 = alloca i32
  store i32 0, i32* %j162
  br label %while163

while163:                                         ; preds = %while_body164, %while_body161
  %j_v173 = load i32, i32* %j162
  %bool_val174 = icmp sle i32 %j_v173, %tmp158
  br i1 %bool_val174, label %while_body164, label %merge172

while_body164:                                    ; preds = %while163
  %j_v165 = load i32, i32* %j162
  %i_v166 = load i32, i32* %i159
  %tmp167 = mul i32 %c_mat150, %i_v166
  %index168 = add i32 %j_v165, %tmp167
  %element_ptr169 = getelementptr double, double* %system_mat152, i32 %index168
  store double 0.000000e+00, double* %element_ptr169
  %j_v170 = load i32, i32* %j162
  %tmp171 = add i32 %j_v170, 1
  store i32 %tmp171, i32* %j162
  br label %while163

merge172:                                         ; preds = %while163
  %i_v175 = load i32, i32* %i159
  %tmp176 = add i32 %i_v175, 1
  store i32 %tmp176, i32* %i159
  br label %while160

merge177:                                         ; preds = %while160
  %tmp180 = sub i32 %c_mat150, 1
  %tmp181 = sub i32 %r_mat148, 1
  %m_mat182 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_mat183 = load double*, double** %m_mat182
  %m_r184 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat185 = load i32, i32* %m_r184
  %m_c186 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat187 = load i32, i32* %m_c186
  %m_mat188 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 0
  %mat_v189 = load double*, double** %m_mat188
  %m_r190 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 1
  %r_v191 = load i32, i32* %m_r190
  %m_c192 = getelementptr inbounds %matrix_t, %matrix_t* %v144, i32 0, i32 2
  %c_v193 = load i32, i32* %m_c192
  %i194 = alloca i32
  store i32 0, i32* %i194
  br label %while195

while195:                                         ; preds = %merge217, %merge177
  %i_v223 = load i32, i32* %i194
  %bool_val224 = icmp sle i32 %i_v223, %tmp181
  br i1 %bool_val224, label %while_body196, label %merge222

while_body196:                                    ; preds = %while195
  %j197 = alloca i32
  store i32 0, i32* %j197
  br label %while198

while198:                                         ; preds = %while_body199, %while_body196
  %j_v218 = load i32, i32* %j197
  %bool_val219 = icmp sle i32 %j_v218, %tmp180
  br i1 %bool_val219, label %while_body199, label %merge217

while_body199:                                    ; preds = %while198
  %j_v200 = load i32, i32* %j197
  %i_v201 = load i32, i32* %i194
  %tmp202 = mul i32 %c_mat187, %i_v201
  %index203 = add i32 %j_v200, %tmp202
  %element_ptr204 = getelementptr double, double* %mat_mat183, i32 %index203
  %j_v205 = load i32, i32* %j197
  %tmp206 = sub i32 %j_v205, 0
  %tmp207 = add i32 %tmp206, 0
  %i_v208 = load i32, i32* %i194
  %tmp209 = sub i32 %i_v208, 0
  %tmp210 = add i32 %tmp209, 0
  %tmp211 = mul i32 %c_v193, %tmp210
  %index212 = add i32 %tmp207, %tmp211
  %element_ptr213 = getelementptr double, double* %mat_v189, i32 %index212
  %tmp_element214 = load double, double* %element_ptr213
  store double %tmp_element214, double* %element_ptr204
  %j_v215 = load i32, i32* %j197
  %tmp216 = add i32 %j_v215, 1
  store i32 %tmp216, i32* %j197
  br label %while198

merge217:                                         ; preds = %while198
  %i_v220 = load i32, i32* %i194
  %tmp221 = add i32 %i_v220, 1
  store i32 %tmp221, i32* %i194
  br label %while195

merge222:                                         ; preds = %while195
  %4 = bitcast double* %mat_mat146 to i8*
  tail call void @free(i8* %4)
  %5 = bitcast %matrix_t* %v144 to i8*
  tail call void @free(i8* %5)
  %m_r225 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_mat226 = load i32, i32* %m_r225
  %m_c227 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_mat228 = load i32, i32* %m_c227
  %size229 = mul i32 %r_mat226, %c_mat228
  %system_mat230 = alloca double, i32 %size229
  %m231 = alloca %matrix_t
  %m_mat232 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  store double* %system_mat230, double** %m_mat232
  %m_r233 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  store i32 %r_mat226, i32* %m_r233
  %m_c234 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  store i32 %c_mat228, i32* %m_c234
  %tmp235 = sub i32 %r_mat226, 1
  %tmp236 = sub i32 %c_mat228, 1
  %i237 = alloca i32
  store i32 0, i32* %i237
  br label %while238

while238:                                         ; preds = %merge250, %merge222
  %i_v256 = load i32, i32* %i237
  %bool_val257 = icmp sle i32 %i_v256, %tmp235
  br i1 %bool_val257, label %while_body239, label %merge255

while_body239:                                    ; preds = %while238
  %j240 = alloca i32
  store i32 0, i32* %j240
  br label %while241

while241:                                         ; preds = %while_body242, %while_body239
  %j_v251 = load i32, i32* %j240
  %bool_val252 = icmp sle i32 %j_v251, %tmp236
  br i1 %bool_val252, label %while_body242, label %merge250

while_body242:                                    ; preds = %while241
  %j_v243 = load i32, i32* %j240
  %i_v244 = load i32, i32* %i237
  %tmp245 = mul i32 %c_mat228, %i_v244
  %index246 = add i32 %j_v243, %tmp245
  %element_ptr247 = getelementptr double, double* %system_mat230, i32 %index246
  store double 0.000000e+00, double* %element_ptr247
  %j_v248 = load i32, i32* %j240
  %tmp249 = add i32 %j_v248, 1
  store i32 %tmp249, i32* %j240
  br label %while241

merge250:                                         ; preds = %while241
  %i_v253 = load i32, i32* %i237
  %tmp254 = add i32 %i_v253, 1
  store i32 %tmp254, i32* %i237
  br label %while238

merge255:                                         ; preds = %while238
  %tmp258 = sub i32 %c_mat228, 1
  %tmp259 = sub i32 %r_mat226, 1
  %m_mat260 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat261 = load double*, double** %m_mat260
  %m_r262 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat263 = load i32, i32* %m_r262
  %m_c264 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat265 = load i32, i32* %m_c264
  %m_mat266 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 0
  %mat_v267 = load double*, double** %m_mat266
  %m_r268 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 1
  %r_v269 = load i32, i32* %m_r268
  %m_c270 = getelementptr inbounds %matrix_t, %matrix_t* %m153, i32 0, i32 2
  %c_v271 = load i32, i32* %m_c270
  %i272 = alloca i32
  store i32 0, i32* %i272
  br label %while273

while273:                                         ; preds = %merge295, %merge255
  %i_v301 = load i32, i32* %i272
  %bool_val302 = icmp sle i32 %i_v301, %tmp259
  br i1 %bool_val302, label %while_body274, label %merge300

while_body274:                                    ; preds = %while273
  %j275 = alloca i32
  store i32 0, i32* %j275
  br label %while276

while276:                                         ; preds = %while_body277, %while_body274
  %j_v296 = load i32, i32* %j275
  %bool_val297 = icmp sle i32 %j_v296, %tmp258
  br i1 %bool_val297, label %while_body277, label %merge295

while_body277:                                    ; preds = %while276
  %j_v278 = load i32, i32* %j275
  %i_v279 = load i32, i32* %i272
  %tmp280 = mul i32 %c_mat265, %i_v279
  %index281 = add i32 %j_v278, %tmp280
  %element_ptr282 = getelementptr double, double* %mat_mat261, i32 %index281
  %j_v283 = load i32, i32* %j275
  %tmp284 = sub i32 %j_v283, 0
  %tmp285 = add i32 %tmp284, 0
  %i_v286 = load i32, i32* %i272
  %tmp287 = sub i32 %i_v286, 0
  %tmp288 = add i32 %tmp287, 0
  %tmp289 = mul i32 %c_v271, %tmp288
  %index290 = add i32 %tmp285, %tmp289
  %element_ptr291 = getelementptr double, double* %mat_v267, i32 %index290
  %tmp_element292 = load double, double* %element_ptr291
  store double %tmp_element292, double* %element_ptr282
  %j_v293 = load i32, i32* %j275
  %tmp294 = add i32 %j_v293, 1
  store i32 %tmp294, i32* %j275
  br label %while276

merge295:                                         ; preds = %while276
  %i_v298 = load i32, i32* %i272
  %tmp299 = add i32 %i_v298, 1
  store i32 %tmp299, i32* %i272
  br label %while273

merge300:                                         ; preds = %while273
  %b303 = load i32, i32* %b
  %a304 = load i32, i32* %a
  %zeros_result305 = call %zero_matrix_t* @zeros(i32 %a304, i32 %b303)
  %v_ptr306 = getelementptr inbounds %zero_matrix_t, %zero_matrix_t* %zeros_result305, i32 0, i32 0
  %v307 = load %matrix_t*, %matrix_t** %v_ptr306
  %6 = bitcast %zero_matrix_t* %zeros_result305 to i8*
  tail call void @free(i8* %6)
  %m_mat308 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_mat309 = load double*, double** %m_mat308
  %m_r310 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_mat311 = load i32, i32* %m_r310
  %m_c312 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_mat313 = load i32, i32* %m_c312
  %size314 = mul i32 %r_mat311, %c_mat313
  %system_mat315 = alloca double, i32 %size314
  %m316 = alloca %matrix_t
  %m_mat317 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  store double* %system_mat315, double** %m_mat317
  %m_r318 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  store i32 %r_mat311, i32* %m_r318
  %m_c319 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  store i32 %c_mat313, i32* %m_c319
  %tmp320 = sub i32 %r_mat311, 1
  %tmp321 = sub i32 %c_mat313, 1
  %i322 = alloca i32
  store i32 0, i32* %i322
  br label %while323

while323:                                         ; preds = %merge335, %merge300
  %i_v341 = load i32, i32* %i322
  %bool_val342 = icmp sle i32 %i_v341, %tmp320
  br i1 %bool_val342, label %while_body324, label %merge340

while_body324:                                    ; preds = %while323
  %j325 = alloca i32
  store i32 0, i32* %j325
  br label %while326

while326:                                         ; preds = %while_body327, %while_body324
  %j_v336 = load i32, i32* %j325
  %bool_val337 = icmp sle i32 %j_v336, %tmp321
  br i1 %bool_val337, label %while_body327, label %merge335

while_body327:                                    ; preds = %while326
  %j_v328 = load i32, i32* %j325
  %i_v329 = load i32, i32* %i322
  %tmp330 = mul i32 %c_mat313, %i_v329
  %index331 = add i32 %j_v328, %tmp330
  %element_ptr332 = getelementptr double, double* %system_mat315, i32 %index331
  store double 0.000000e+00, double* %element_ptr332
  %j_v333 = load i32, i32* %j325
  %tmp334 = add i32 %j_v333, 1
  store i32 %tmp334, i32* %j325
  br label %while326

merge335:                                         ; preds = %while326
  %i_v338 = load i32, i32* %i322
  %tmp339 = add i32 %i_v338, 1
  store i32 %tmp339, i32* %i322
  br label %while323

merge340:                                         ; preds = %while323
  %tmp343 = sub i32 %c_mat313, 1
  %tmp344 = sub i32 %r_mat311, 1
  %m_mat345 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_mat346 = load double*, double** %m_mat345
  %m_r347 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat348 = load i32, i32* %m_r347
  %m_c349 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat350 = load i32, i32* %m_c349
  %m_mat351 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 0
  %mat_v352 = load double*, double** %m_mat351
  %m_r353 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 1
  %r_v354 = load i32, i32* %m_r353
  %m_c355 = getelementptr inbounds %matrix_t, %matrix_t* %v307, i32 0, i32 2
  %c_v356 = load i32, i32* %m_c355
  %i357 = alloca i32
  store i32 0, i32* %i357
  br label %while358

while358:                                         ; preds = %merge380, %merge340
  %i_v386 = load i32, i32* %i357
  %bool_val387 = icmp sle i32 %i_v386, %tmp344
  br i1 %bool_val387, label %while_body359, label %merge385

while_body359:                                    ; preds = %while358
  %j360 = alloca i32
  store i32 0, i32* %j360
  br label %while361

while361:                                         ; preds = %while_body362, %while_body359
  %j_v381 = load i32, i32* %j360
  %bool_val382 = icmp sle i32 %j_v381, %tmp343
  br i1 %bool_val382, label %while_body362, label %merge380

while_body362:                                    ; preds = %while361
  %j_v363 = load i32, i32* %j360
  %i_v364 = load i32, i32* %i357
  %tmp365 = mul i32 %c_mat350, %i_v364
  %index366 = add i32 %j_v363, %tmp365
  %element_ptr367 = getelementptr double, double* %mat_mat346, i32 %index366
  %j_v368 = load i32, i32* %j360
  %tmp369 = sub i32 %j_v368, 0
  %tmp370 = add i32 %tmp369, 0
  %i_v371 = load i32, i32* %i357
  %tmp372 = sub i32 %i_v371, 0
  %tmp373 = add i32 %tmp372, 0
  %tmp374 = mul i32 %c_v356, %tmp373
  %index375 = add i32 %tmp370, %tmp374
  %element_ptr376 = getelementptr double, double* %mat_v352, i32 %index375
  %tmp_element377 = load double, double* %element_ptr376
  store double %tmp_element377, double* %element_ptr367
  %j_v378 = load i32, i32* %j360
  %tmp379 = add i32 %j_v378, 1
  store i32 %tmp379, i32* %j360
  br label %while361

merge380:                                         ; preds = %while361
  %i_v383 = load i32, i32* %i357
  %tmp384 = add i32 %i_v383, 1
  store i32 %tmp384, i32* %i357
  br label %while358

merge385:                                         ; preds = %while358
  %7 = bitcast double* %mat_mat309 to i8*
  tail call void @free(i8* %7)
  %8 = bitcast %matrix_t* %v307 to i8*
  tail call void @free(i8* %8)
  %m_r388 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_mat389 = load i32, i32* %m_r388
  %m_c390 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_mat391 = load i32, i32* %m_c390
  %size392 = mul i32 %r_mat389, %c_mat391
  %system_mat393 = alloca double, i32 %size392
  %m394 = alloca %matrix_t
  %m_mat395 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  store double* %system_mat393, double** %m_mat395
  %m_r396 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  store i32 %r_mat389, i32* %m_r396
  %m_c397 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  store i32 %c_mat391, i32* %m_c397
  %tmp398 = sub i32 %r_mat389, 1
  %tmp399 = sub i32 %c_mat391, 1
  %i400 = alloca i32
  store i32 0, i32* %i400
  br label %while401

while401:                                         ; preds = %merge413, %merge385
  %i_v419 = load i32, i32* %i400
  %bool_val420 = icmp sle i32 %i_v419, %tmp398
  br i1 %bool_val420, label %while_body402, label %merge418

while_body402:                                    ; preds = %while401
  %j403 = alloca i32
  store i32 0, i32* %j403
  br label %while404

while404:                                         ; preds = %while_body405, %while_body402
  %j_v414 = load i32, i32* %j403
  %bool_val415 = icmp sle i32 %j_v414, %tmp399
  br i1 %bool_val415, label %while_body405, label %merge413

while_body405:                                    ; preds = %while404
  %j_v406 = load i32, i32* %j403
  %i_v407 = load i32, i32* %i400
  %tmp408 = mul i32 %c_mat391, %i_v407
  %index409 = add i32 %j_v406, %tmp408
  %element_ptr410 = getelementptr double, double* %system_mat393, i32 %index409
  store double 0.000000e+00, double* %element_ptr410
  %j_v411 = load i32, i32* %j403
  %tmp412 = add i32 %j_v411, 1
  store i32 %tmp412, i32* %j403
  br label %while404

merge413:                                         ; preds = %while404
  %i_v416 = load i32, i32* %i400
  %tmp417 = add i32 %i_v416, 1
  store i32 %tmp417, i32* %i400
  br label %while401

merge418:                                         ; preds = %while401
  %tmp421 = sub i32 %c_mat391, 1
  %tmp422 = sub i32 %r_mat389, 1
  %m_mat423 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_mat424 = load double*, double** %m_mat423
  %m_r425 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat426 = load i32, i32* %m_r425
  %m_c427 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat428 = load i32, i32* %m_c427
  %m_mat429 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 0
  %mat_v430 = load double*, double** %m_mat429
  %m_r431 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 1
  %r_v432 = load i32, i32* %m_r431
  %m_c433 = getelementptr inbounds %matrix_t, %matrix_t* %m316, i32 0, i32 2
  %c_v434 = load i32, i32* %m_c433
  %i435 = alloca i32
  store i32 0, i32* %i435
  br label %while436

while436:                                         ; preds = %merge458, %merge418
  %i_v464 = load i32, i32* %i435
  %bool_val465 = icmp sle i32 %i_v464, %tmp422
  br i1 %bool_val465, label %while_body437, label %merge463

while_body437:                                    ; preds = %while436
  %j438 = alloca i32
  store i32 0, i32* %j438
  br label %while439

while439:                                         ; preds = %while_body440, %while_body437
  %j_v459 = load i32, i32* %j438
  %bool_val460 = icmp sle i32 %j_v459, %tmp421
  br i1 %bool_val460, label %while_body440, label %merge458

while_body440:                                    ; preds = %while439
  %j_v441 = load i32, i32* %j438
  %i_v442 = load i32, i32* %i435
  %tmp443 = mul i32 %c_mat428, %i_v442
  %index444 = add i32 %j_v441, %tmp443
  %element_ptr445 = getelementptr double, double* %mat_mat424, i32 %index444
  %j_v446 = load i32, i32* %j438
  %tmp447 = sub i32 %j_v446, 0
  %tmp448 = add i32 %tmp447, 0
  %i_v449 = load i32, i32* %i435
  %tmp450 = sub i32 %i_v449, 0
  %tmp451 = add i32 %tmp450, 0
  %tmp452 = mul i32 %c_v434, %tmp451
  %index453 = add i32 %tmp448, %tmp452
  %element_ptr454 = getelementptr double, double* %mat_v430, i32 %index453
  %tmp_element455 = load double, double* %element_ptr454
  store double %tmp_element455, double* %element_ptr445
  %j_v456 = load i32, i32* %j438
  %tmp457 = add i32 %j_v456, 1
  store i32 %tmp457, i32* %j438
  br label %while439

merge458:                                         ; preds = %while439
  %i_v461 = load i32, i32* %i435
  %tmp462 = add i32 %i_v461, 1
  store i32 %tmp462, i32* %i435
  br label %while436

merge463:                                         ; preds = %while436
  %m_r466 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_mat467 = load i32, i32* %m_r466
  %m_c468 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_mat469 = load i32, i32* %m_c468
  br i1 false, label %then, label %else

merge470:                                         ; preds = %else, %then
  %tmp471 = sub i32 %r_mat467, 1
  %tmp476 = icmp slt i32 %tmp471, 0
  br i1 %tmp476, label %then473, label %else475

then:                                             ; preds = %merge463
  %printf = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge470

else:                                             ; preds = %merge463
  br label %merge470

merge472:                                         ; preds = %else475, %then473
  %a477 = load i32, i32* %a
  %tmp478 = sub i32 %a477, 1
  %tmp483 = icmp sgt i32 0, %tmp478
  br i1 %tmp483, label %then480, label %else482

then473:                                          ; preds = %merge470
  %printf474 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge472

else475:                                          ; preds = %merge470
  br label %merge472

merge479:                                         ; preds = %else482, %then480
  %tmp484 = sub i32 %r_mat467, 1
  %tmp489 = icmp slt i32 %tmp484, %tmp478
  br i1 %tmp489, label %then486, label %else488

then480:                                          ; preds = %merge472
  %printf481 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge479

else482:                                          ; preds = %merge472
  br label %merge479

merge485:                                         ; preds = %else488, %then486
  br i1 false, label %then491, label %else493

then486:                                          ; preds = %merge479
  %printf487 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge485

else488:                                          ; preds = %merge479
  br label %merge485

merge490:                                         ; preds = %else493, %then491
  %tmp494 = sub i32 %c_mat469, 1
  %tmp499 = icmp slt i32 %tmp494, 0
  br i1 %tmp499, label %then496, label %else498

then491:                                          ; preds = %merge485
  %printf492 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge490

else493:                                          ; preds = %merge485
  br label %merge490

merge495:                                         ; preds = %else498, %then496
  %b500 = load i32, i32* %b
  %tmp501 = sub i32 %b500, 1
  %tmp506 = icmp sgt i32 0, %tmp501
  br i1 %tmp506, label %then503, label %else505

then496:                                          ; preds = %merge490
  %printf497 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge495

else498:                                          ; preds = %merge490
  br label %merge495

merge502:                                         ; preds = %else505, %then503
  %tmp507 = sub i32 %c_mat469, 1
  %tmp512 = icmp slt i32 %tmp507, %tmp501
  br i1 %tmp512, label %then509, label %else511

then503:                                          ; preds = %merge495
  %printf504 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge502

else505:                                          ; preds = %merge495
  br label %merge502

merge508:                                         ; preds = %else511, %then509
  %tmp513 = sub i32 %tmp478, 0
  %tmp514 = sub i32 %tmp501, 0
  %tmp515 = add i32 %tmp514, 1
  %tmp516 = add i32 %tmp513, 1
  %size517 = mul i32 %tmp516, %tmp515
  %system_mat518 = alloca double, i32 %size517
  %m519 = alloca %matrix_t
  %m_mat520 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  store double* %system_mat518, double** %m_mat520
  %m_r521 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  store i32 %tmp516, i32* %m_r521
  %m_c522 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  store i32 %tmp515, i32* %m_c522
  %tmp523 = sub i32 %tmp516, 1
  %tmp524 = sub i32 %tmp515, 1
  %i525 = alloca i32
  store i32 0, i32* %i525
  br label %while526

then509:                                          ; preds = %merge502
  %printf510 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge508

else511:                                          ; preds = %merge502
  br label %merge508

while526:                                         ; preds = %merge538, %merge508
  %i_v544 = load i32, i32* %i525
  %bool_val545 = icmp sle i32 %i_v544, %tmp523
  br i1 %bool_val545, label %while_body527, label %merge543

while_body527:                                    ; preds = %while526
  %j528 = alloca i32
  store i32 0, i32* %j528
  br label %while529

while529:                                         ; preds = %while_body530, %while_body527
  %j_v539 = load i32, i32* %j528
  %bool_val540 = icmp sle i32 %j_v539, %tmp524
  br i1 %bool_val540, label %while_body530, label %merge538

while_body530:                                    ; preds = %while529
  %j_v531 = load i32, i32* %j528
  %i_v532 = load i32, i32* %i525
  %tmp533 = mul i32 %tmp515, %i_v532
  %index534 = add i32 %j_v531, %tmp533
  %element_ptr535 = getelementptr double, double* %system_mat518, i32 %index534
  store double 0.000000e+00, double* %element_ptr535
  %j_v536 = load i32, i32* %j528
  %tmp537 = add i32 %j_v536, 1
  store i32 %tmp537, i32* %j528
  br label %while529

merge538:                                         ; preds = %while529
  %i_v541 = load i32, i32* %i525
  %tmp542 = add i32 %i_v541, 1
  store i32 %tmp542, i32* %i525
  br label %while526

merge543:                                         ; preds = %while526
  %m_mat546 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_mat547 = load double*, double** %m_mat546
  %m_r548 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat549 = load i32, i32* %m_r548
  %m_c550 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_mat551 = load i32, i32* %m_c550
  %m_mat552 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 0
  %mat_v553 = load double*, double** %m_mat552
  %m_r554 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 1
  %r_v555 = load i32, i32* %m_r554
  %m_c556 = getelementptr inbounds %matrix_t, %matrix_t* %m, i32 0, i32 2
  %c_v557 = load i32, i32* %m_c556
  %i558 = alloca i32
  store i32 0, i32* %i558
  br label %while559

while559:                                         ; preds = %merge581, %merge543
  %i_v587 = load i32, i32* %i558
  %bool_val588 = icmp sle i32 %i_v587, %tmp513
  br i1 %bool_val588, label %while_body560, label %merge586

while_body560:                                    ; preds = %while559
  %j561 = alloca i32
  store i32 0, i32* %j561
  br label %while562

while562:                                         ; preds = %while_body563, %while_body560
  %j_v582 = load i32, i32* %j561
  %bool_val583 = icmp sle i32 %j_v582, %tmp514
  br i1 %bool_val583, label %while_body563, label %merge581

while_body563:                                    ; preds = %while562
  %j_v564 = load i32, i32* %j561
  %i_v565 = load i32, i32* %i558
  %tmp566 = mul i32 %c_mat551, %i_v565
  %index567 = add i32 %j_v564, %tmp566
  %element_ptr568 = getelementptr double, double* %mat_mat547, i32 %index567
  %j_v569 = load i32, i32* %j561
  %tmp570 = sub i32 %j_v569, 0
  %tmp571 = add i32 %tmp570, 0
  %i_v572 = load i32, i32* %i558
  %tmp573 = sub i32 %i_v572, 0
  %tmp574 = add i32 %tmp573, 0
  %tmp575 = mul i32 %c_v557, %tmp574
  %index576 = add i32 %tmp571, %tmp575
  %element_ptr577 = getelementptr double, double* %mat_v553, i32 %index576
  %tmp_element578 = load double, double* %element_ptr577
  store double %tmp_element578, double* %element_ptr568
  %j_v579 = load i32, i32* %j561
  %tmp580 = add i32 %j_v579, 1
  store i32 %tmp580, i32* %j561
  br label %while562

merge581:                                         ; preds = %while562
  %i_v584 = load i32, i32* %i558
  %tmp585 = add i32 %i_v584, 1
  store i32 %tmp585, i32* %i558
  br label %while559

merge586:                                         ; preds = %while559
  %m_r589 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat590 = load i32, i32* %m_r589
  %m_c591 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat592 = load i32, i32* %m_c591
  br i1 false, label %then594, label %else596

merge593:                                         ; preds = %else596, %then594
  %tmp597 = sub i32 %r_mat590, 1
  %tmp602 = icmp slt i32 %tmp597, 1
  br i1 %tmp602, label %then599, label %else601

then594:                                          ; preds = %merge586
  %printf595 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge593

else596:                                          ; preds = %merge586
  br label %merge593

merge598:                                         ; preds = %else601, %then599
  %a603 = load i32, i32* %a
  %tmp608 = icmp sgt i32 0, %a603
  br i1 %tmp608, label %then605, label %else607

then599:                                          ; preds = %merge593
  %printf600 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge598

else601:                                          ; preds = %merge593
  br label %merge598

merge604:                                         ; preds = %else607, %then605
  %tmp609 = sub i32 %r_mat590, 1
  %tmp614 = icmp slt i32 %tmp609, %a603
  br i1 %tmp614, label %then611, label %else613

then605:                                          ; preds = %merge598
  %printf606 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge604

else607:                                          ; preds = %merge598
  br label %merge604

merge610:                                         ; preds = %else613, %then611
  br i1 false, label %then616, label %else618

then611:                                          ; preds = %merge604
  %printf612 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge610

else613:                                          ; preds = %merge604
  br label %merge610

merge615:                                         ; preds = %else618, %then616
  %tmp619 = sub i32 %c_mat592, 1
  %tmp624 = icmp slt i32 %tmp619, 1
  br i1 %tmp624, label %then621, label %else623

then616:                                          ; preds = %merge610
  %printf617 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge615

else618:                                          ; preds = %merge610
  br label %merge615

merge620:                                         ; preds = %else623, %then621
  %b625 = load i32, i32* %b
  %tmp630 = icmp sgt i32 0, %b625
  br i1 %tmp630, label %then627, label %else629

then621:                                          ; preds = %merge615
  %printf622 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge620

else623:                                          ; preds = %merge615
  br label %merge620

merge626:                                         ; preds = %else629, %then627
  %tmp631 = sub i32 %c_mat592, 1
  %tmp636 = icmp slt i32 %tmp631, %b625
  br i1 %tmp636, label %then633, label %else635

then627:                                          ; preds = %merge620
  %printf628 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge626

else629:                                          ; preds = %merge620
  br label %merge626

merge632:                                         ; preds = %else635, %then633
  %tmp637 = sub i32 %a603, 1
  %tmp638 = add i32 %tmp637, 1
  %m_r639 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_mat640 = load i32, i32* %m_r639
  %tmp645 = icmp ne i32 %tmp638, %r_mat640
  br i1 %tmp645, label %then642, label %else644

then633:                                          ; preds = %merge626
  %printf634 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge632

else635:                                          ; preds = %merge626
  br label %merge632

merge641:                                         ; preds = %else644, %then642
  %tmp646 = sub i32 %b625, 1
  %tmp647 = add i32 %tmp646, 1
  %m_r648 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %r_mat649 = load i32, i32* %m_r648
  %tmp654 = icmp ne i32 %tmp647, %r_mat649
  br i1 %tmp654, label %then651, label %else653

then642:                                          ; preds = %merge632
  %printf643 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge641

else644:                                          ; preds = %merge632
  br label %merge641

merge650:                                         ; preds = %else653, %then651
  %m_mat655 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_mat656 = load double*, double** %m_mat655
  %m_r657 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat658 = load i32, i32* %m_r657
  %m_c659 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat660 = load i32, i32* %m_c659
  %m_mat661 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 0
  %mat_v662 = load double*, double** %m_mat661
  %m_r663 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 1
  %r_v664 = load i32, i32* %m_r663
  %m_c665 = getelementptr inbounds %matrix_t, %matrix_t* %m519, i32 0, i32 2
  %c_v666 = load i32, i32* %m_c665
  %i667 = alloca i32
  store i32 1, i32* %i667
  br label %while668

then651:                                          ; preds = %merge641
  %printf652 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @fmt_str.8, i32 0, i32 0))
  call void @abort()
  br label %merge650

else653:                                          ; preds = %merge641
  br label %merge650

while668:                                         ; preds = %merge690, %merge650
  %i_v696 = load i32, i32* %i667
  %bool_val697 = icmp sle i32 %i_v696, %a603
  br i1 %bool_val697, label %while_body669, label %merge695

while_body669:                                    ; preds = %while668
  %j670 = alloca i32
  store i32 1, i32* %j670
  br label %while671

while671:                                         ; preds = %while_body672, %while_body669
  %j_v691 = load i32, i32* %j670
  %bool_val692 = icmp sle i32 %j_v691, %b625
  br i1 %bool_val692, label %while_body672, label %merge690

while_body672:                                    ; preds = %while671
  %j_v673 = load i32, i32* %j670
  %i_v674 = load i32, i32* %i667
  %tmp675 = mul i32 %c_mat660, %i_v674
  %index676 = add i32 %j_v673, %tmp675
  %element_ptr677 = getelementptr double, double* %mat_mat656, i32 %index676
  %j_v678 = load i32, i32* %j670
  %tmp679 = sub i32 %j_v678, 1
  %tmp680 = add i32 %tmp679, 0
  %i_v681 = load i32, i32* %i667
  %tmp682 = sub i32 %i_v681, 1
  %tmp683 = add i32 %tmp682, 0
  %tmp684 = mul i32 %c_v666, %tmp683
  %index685 = add i32 %tmp680, %tmp684
  %element_ptr686 = getelementptr double, double* %mat_v662, i32 %index685
  %tmp_element687 = load double, double* %element_ptr686
  store double %tmp_element687, double* %element_ptr677
  %j_v688 = load i32, i32* %j670
  %tmp689 = add i32 %j_v688, 1
  store i32 %tmp689, i32* %j670
  br label %while671

merge690:                                         ; preds = %while671
  %i_v693 = load i32, i32* %i667
  %tmp694 = add i32 %i_v693, 1
  store i32 %tmp694, i32* %i667
  br label %while668

merge695:                                         ; preds = %while668
  %i698 = alloca i32
  %tmp699 = load i32, i32* %i698
  store i32 0, i32* %i698
  %j700 = alloca i32
  %tmp701 = load i32, i32* %j700
  store i32 0, i32* %j700
  %i702 = load i32, i32* %i698
  %a703 = load i32, i32* %a
  %tmp704 = icmp slt i32 %i702, %a703
  %tmp705 = load i32, i32* %i698
  store i32 0, i32* %i698
  br label %while706

while706:                                         ; preds = %merge908, %merge695
  %i916 = load i32, i32* %i698
  %a917 = load i32, i32* %a
  %tmp918 = icmp slt i32 %i916, %a917
  br i1 %tmp918, label %while_body707, label %merge915

while_body707:                                    ; preds = %while706
  %j708 = load i32, i32* %j700
  %b709 = load i32, i32* %b
  %tmp710 = icmp slt i32 %j708, %b709
  %tmp711 = load i32, i32* %j700
  store i32 0, i32* %j700
  br label %while712

while712:                                         ; preds = %merge896, %while_body707
  %j909 = load i32, i32* %j700
  %b910 = load i32, i32* %b
  %tmp911 = icmp slt i32 %j909, %b910
  br i1 %tmp911, label %while_body713, label %merge908

while_body713:                                    ; preds = %while712
  %k = alloca double
  %tmp714 = load double, double* %k
  store double 0.000000e+00, double* %k
  %m_r715 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_mat716 = load i32, i32* %m_r715
  %m_c717 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_mat718 = load i32, i32* %m_c717
  %i719 = load i32, i32* %i698
  %tmp724 = icmp sgt i32 0, %i719
  br i1 %tmp724, label %then721, label %else723

merge720:                                         ; preds = %else723, %then721
  %tmp725 = sub i32 %r_mat716, 1
  %tmp730 = icmp slt i32 %tmp725, %i719
  br i1 %tmp730, label %then727, label %else729

then721:                                          ; preds = %while_body713
  %printf722 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge720

else723:                                          ; preds = %while_body713
  br label %merge720

merge726:                                         ; preds = %else729, %then727
  %i731 = load i32, i32* %i698
  %tmp732 = add i32 %i731, 2
  %tmp737 = icmp sgt i32 0, %tmp732
  br i1 %tmp737, label %then734, label %else736

then727:                                          ; preds = %merge720
  %printf728 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge726

else729:                                          ; preds = %merge720
  br label %merge726

merge733:                                         ; preds = %else736, %then734
  %tmp738 = sub i32 %r_mat716, 1
  %tmp743 = icmp slt i32 %tmp738, %tmp732
  br i1 %tmp743, label %then740, label %else742

then734:                                          ; preds = %merge726
  %printf735 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge733

else736:                                          ; preds = %merge726
  br label %merge733

merge739:                                         ; preds = %else742, %then740
  %j744 = load i32, i32* %j700
  %tmp749 = icmp sgt i32 0, %j744
  br i1 %tmp749, label %then746, label %else748

then740:                                          ; preds = %merge733
  %printf741 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge739

else742:                                          ; preds = %merge733
  br label %merge739

merge745:                                         ; preds = %else748, %then746
  %tmp750 = sub i32 %c_mat718, 1
  %tmp755 = icmp slt i32 %tmp750, %j744
  br i1 %tmp755, label %then752, label %else754

then746:                                          ; preds = %merge739
  %printf747 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge745

else748:                                          ; preds = %merge739
  br label %merge745

merge751:                                         ; preds = %else754, %then752
  %j756 = load i32, i32* %j700
  %tmp757 = add i32 %j756, 2
  %tmp762 = icmp sgt i32 0, %tmp757
  br i1 %tmp762, label %then759, label %else761

then752:                                          ; preds = %merge745
  %printf753 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge751

else754:                                          ; preds = %merge745
  br label %merge751

merge758:                                         ; preds = %else761, %then759
  %tmp763 = sub i32 %c_mat718, 1
  %tmp768 = icmp slt i32 %tmp763, %tmp757
  br i1 %tmp768, label %then765, label %else767

then759:                                          ; preds = %merge751
  %printf760 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge758

else761:                                          ; preds = %merge751
  br label %merge758

merge764:                                         ; preds = %else767, %then765
  %tmp769 = sub i32 %tmp732, %i719
  %tmp770 = sub i32 %tmp757, %j744
  %tmp771 = add i32 %tmp770, 1
  %tmp772 = add i32 %tmp769, 1
  %size773 = mul i32 %tmp772, %tmp771
  %system_mat774 = alloca double, i32 %size773
  %m775 = alloca %matrix_t
  %m_mat776 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  store double* %system_mat774, double** %m_mat776
  %m_r777 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  store i32 %tmp772, i32* %m_r777
  %m_c778 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  store i32 %tmp771, i32* %m_c778
  %tmp779 = sub i32 %tmp772, 1
  %tmp780 = sub i32 %tmp771, 1
  %i781 = alloca i32
  store i32 0, i32* %i781
  br label %while782

then765:                                          ; preds = %merge758
  %printf766 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge764

else767:                                          ; preds = %merge758
  br label %merge764

while782:                                         ; preds = %merge794, %merge764
  %i_v800 = load i32, i32* %i781
  %bool_val801 = icmp sle i32 %i_v800, %tmp779
  br i1 %bool_val801, label %while_body783, label %merge799

while_body783:                                    ; preds = %while782
  %j784 = alloca i32
  store i32 0, i32* %j784
  br label %while785

while785:                                         ; preds = %while_body786, %while_body783
  %j_v795 = load i32, i32* %j784
  %bool_val796 = icmp sle i32 %j_v795, %tmp780
  br i1 %bool_val796, label %while_body786, label %merge794

while_body786:                                    ; preds = %while785
  %j_v787 = load i32, i32* %j784
  %i_v788 = load i32, i32* %i781
  %tmp789 = mul i32 %tmp771, %i_v788
  %index790 = add i32 %j_v787, %tmp789
  %element_ptr791 = getelementptr double, double* %system_mat774, i32 %index790
  store double 0.000000e+00, double* %element_ptr791
  %j_v792 = load i32, i32* %j784
  %tmp793 = add i32 %j_v792, 1
  store i32 %tmp793, i32* %j784
  br label %while785

merge794:                                         ; preds = %while785
  %i_v797 = load i32, i32* %i781
  %tmp798 = add i32 %i_v797, 1
  store i32 %tmp798, i32* %i781
  br label %while782

merge799:                                         ; preds = %while782
  %m_mat802 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 0
  %mat_mat803 = load double*, double** %m_mat802
  %m_r804 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 1
  %r_mat805 = load i32, i32* %m_r804
  %m_c806 = getelementptr inbounds %matrix_t, %matrix_t* %m775, i32 0, i32 2
  %c_mat807 = load i32, i32* %m_c806
  %m_mat808 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 0
  %mat_v809 = load double*, double** %m_mat808
  %m_r810 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 1
  %r_v811 = load i32, i32* %m_r810
  %m_c812 = getelementptr inbounds %matrix_t, %matrix_t* %m231, i32 0, i32 2
  %c_v813 = load i32, i32* %m_c812
  %i814 = alloca i32
  store i32 0, i32* %i814
  br label %while815

while815:                                         ; preds = %merge837, %merge799
  %i_v843 = load i32, i32* %i814
  %bool_val844 = icmp sle i32 %i_v843, %tmp769
  br i1 %bool_val844, label %while_body816, label %merge842

while_body816:                                    ; preds = %while815
  %j817 = alloca i32
  store i32 0, i32* %j817
  br label %while818

while818:                                         ; preds = %while_body819, %while_body816
  %j_v838 = load i32, i32* %j817
  %bool_val839 = icmp sle i32 %j_v838, %tmp770
  br i1 %bool_val839, label %while_body819, label %merge837

while_body819:                                    ; preds = %while818
  %j_v820 = load i32, i32* %j817
  %i_v821 = load i32, i32* %i814
  %tmp822 = mul i32 %c_mat807, %i_v821
  %index823 = add i32 %j_v820, %tmp822
  %element_ptr824 = getelementptr double, double* %mat_mat803, i32 %index823
  %j_v825 = load i32, i32* %j817
  %tmp826 = sub i32 %j_v825, 0
  %tmp827 = add i32 %tmp826, %j744
  %i_v828 = load i32, i32* %i814
  %tmp829 = sub i32 %i_v828, 0
  %tmp830 = add i32 %tmp829, %i719
  %tmp831 = mul i32 %c_v813, %tmp830
  %index832 = add i32 %tmp827, %tmp831
  %element_ptr833 = getelementptr double, double* %mat_v809, i32 %index832
  %tmp_element834 = load double, double* %element_ptr833
  store double %tmp_element834, double* %element_ptr824
  %j_v835 = load i32, i32* %j817
  %tmp836 = add i32 %j_v835, 1
  store i32 %tmp836, i32* %j817
  br label %while818

merge837:                                         ; preds = %while818
  %i_v840 = load i32, i32* %i814
  %tmp841 = add i32 %i_v840, 1
  store i32 %tmp841, i32* %i814
  br label %while815

merge842:                                         ; preds = %while815
  %bitwise_result = call %return_t* @bitwise(%matrix_t* %m775, %matrix_t* %m61)
  %v_ptr845 = getelementptr inbounds %return_t, %return_t* %bitwise_result, i32 0, i32 0
  %v846 = load double, double* %v_ptr845
  %9 = bitcast %return_t* %bitwise_result to i8*
  tail call void @free(i8* %9)
  %tmp847 = load double, double* %k
  store double %v846, double* %k
  %k848 = load double, double* %k
  %m_r849 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat850 = load i32, i32* %m_r849
  %m_c851 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat852 = load i32, i32* %m_c851
  %i853 = load i32, i32* %i698
  %tmp858 = icmp sgt i32 0, %i853
  br i1 %tmp858, label %then855, label %else857

merge854:                                         ; preds = %else857, %then855
  %tmp859 = sub i32 %r_mat850, 1
  %tmp864 = icmp slt i32 %tmp859, %i853
  br i1 %tmp864, label %then861, label %else863

then855:                                          ; preds = %merge842
  %printf856 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge854

else857:                                          ; preds = %merge842
  br label %merge854

merge860:                                         ; preds = %else863, %then861
  %i865 = load i32, i32* %i698
  %tmp870 = icmp sgt i32 0, %i865
  br i1 %tmp870, label %then867, label %else869

then861:                                          ; preds = %merge854
  %printf862 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge860

else863:                                          ; preds = %merge854
  br label %merge860

merge866:                                         ; preds = %else869, %then867
  %tmp871 = sub i32 %r_mat850, 1
  %tmp876 = icmp slt i32 %tmp871, %i865
  br i1 %tmp876, label %then873, label %else875

then867:                                          ; preds = %merge860
  %printf868 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge866

else869:                                          ; preds = %merge860
  br label %merge866

merge872:                                         ; preds = %else875, %then873
  %j877 = load i32, i32* %j700
  %tmp882 = icmp sgt i32 0, %j877
  br i1 %tmp882, label %then879, label %else881

then873:                                          ; preds = %merge866
  %printf874 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge872

else875:                                          ; preds = %merge866
  br label %merge872

merge878:                                         ; preds = %else881, %then879
  %tmp883 = sub i32 %c_mat852, 1
  %tmp888 = icmp slt i32 %tmp883, %j877
  br i1 %tmp888, label %then885, label %else887

then879:                                          ; preds = %merge872
  %printf880 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge878

else881:                                          ; preds = %merge872
  br label %merge878

merge884:                                         ; preds = %else887, %then885
  %j889 = load i32, i32* %j700
  %tmp894 = icmp sgt i32 0, %j889
  br i1 %tmp894, label %then891, label %else893

then885:                                          ; preds = %merge878
  %printf886 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge884

else887:                                          ; preds = %merge878
  br label %merge884

merge890:                                         ; preds = %else893, %then891
  %tmp895 = sub i32 %c_mat852, 1
  %tmp900 = icmp slt i32 %tmp895, %j889
  br i1 %tmp900, label %then897, label %else899

then891:                                          ; preds = %merge884
  %printf892 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge890

else893:                                          ; preds = %merge884
  br label %merge890

merge896:                                         ; preds = %else899, %then897
  %mat = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat901 = load double*, double** %mat
  %tmp902 = mul i32 %c_mat852, %i853
  %index903 = add i32 %j877, %tmp902
  %element_ptr904 = getelementptr double, double* %mat901, i32 %index903
  store double %k848, double* %element_ptr904
  %j905 = load i32, i32* %j700
  %tmp906 = add i32 %j905, 1
  %tmp907 = load i32, i32* %j700
  store i32 %tmp906, i32* %j700
  br label %while712

then897:                                          ; preds = %merge890
  %printf898 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @fmt_str, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @fmt_str.7, i32 0, i32 0))
  call void @abort()
  br label %merge896

else899:                                          ; preds = %merge890
  br label %merge896

merge908:                                         ; preds = %while712
  %i912 = load i32, i32* %i698
  %tmp913 = add i32 %i912, 1
  %tmp914 = load i32, i32* %i698
  store i32 %tmp913, i32* %i698
  br label %while706

merge915:                                         ; preds = %while706
  %malloccall = tail call i8* @malloc(i32 ptrtoint (i1** getelementptr (i1*, i1** null, i32 1) to i32))
  %return = bitcast i8* %malloccall to %return_t.0*
  %m_r919 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_mat920 = load i32, i32* %m_r919
  %m_c921 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_mat922 = load i32, i32* %m_c921
  %size923 = mul i32 %r_mat920, %c_mat922
  %mallocsize = mul i32 %size923, ptrtoint (double* getelementptr (double, double* null, i32 1) to i32)
  %malloccall924 = tail call i8* @malloc(i32 %mallocsize)
  %system_mat925 = bitcast i8* %malloccall924 to double*
  %malloccall926 = tail call i8* @malloc(i32 ptrtoint (%matrix_t* getelementptr (%matrix_t, %matrix_t* null, i32 1) to i32))
  %m927 = bitcast i8* %malloccall926 to %matrix_t*
  %m_mat928 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  store double* %system_mat925, double** %m_mat928
  %m_r929 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  store i32 %r_mat920, i32* %m_r929
  %m_c930 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  store i32 %c_mat922, i32* %m_c930
  %tmp931 = sub i32 %r_mat920, 1
  %tmp932 = sub i32 %c_mat922, 1
  %i933 = alloca i32
  store i32 0, i32* %i933
  br label %while934

while934:                                         ; preds = %merge946, %merge915
  %i_v952 = load i32, i32* %i933
  %bool_val953 = icmp sle i32 %i_v952, %tmp931
  br i1 %bool_val953, label %while_body935, label %merge951

while_body935:                                    ; preds = %while934
  %j936 = alloca i32
  store i32 0, i32* %j936
  br label %while937

while937:                                         ; preds = %while_body938, %while_body935
  %j_v947 = load i32, i32* %j936
  %bool_val948 = icmp sle i32 %j_v947, %tmp932
  br i1 %bool_val948, label %while_body938, label %merge946

while_body938:                                    ; preds = %while937
  %j_v939 = load i32, i32* %j936
  %i_v940 = load i32, i32* %i933
  %tmp941 = mul i32 %c_mat922, %i_v940
  %index942 = add i32 %j_v939, %tmp941
  %element_ptr943 = getelementptr double, double* %system_mat925, i32 %index942
  store double 0.000000e+00, double* %element_ptr943
  %j_v944 = load i32, i32* %j936
  %tmp945 = add i32 %j_v944, 1
  store i32 %tmp945, i32* %j936
  br label %while937

merge946:                                         ; preds = %while937
  %i_v949 = load i32, i32* %i933
  %tmp950 = add i32 %i_v949, 1
  store i32 %tmp950, i32* %i933
  br label %while934

merge951:                                         ; preds = %while934
  %tmp954 = sub i32 %c_mat922, 1
  %tmp955 = sub i32 %r_mat920, 1
  %m_mat956 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 0
  %mat_mat957 = load double*, double** %m_mat956
  %m_r958 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 1
  %r_mat959 = load i32, i32* %m_r958
  %m_c960 = getelementptr inbounds %matrix_t, %matrix_t* %m927, i32 0, i32 2
  %c_mat961 = load i32, i32* %m_c960
  %m_mat962 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 0
  %mat_v963 = load double*, double** %m_mat962
  %m_r964 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 1
  %r_v965 = load i32, i32* %m_r964
  %m_c966 = getelementptr inbounds %matrix_t, %matrix_t* %m394, i32 0, i32 2
  %c_v967 = load i32, i32* %m_c966
  %i968 = alloca i32
  store i32 0, i32* %i968
  br label %while969

while969:                                         ; preds = %merge991, %merge951
  %i_v997 = load i32, i32* %i968
  %bool_val998 = icmp sle i32 %i_v997, %tmp955
  br i1 %bool_val998, label %while_body970, label %merge996

while_body970:                                    ; preds = %while969
  %j971 = alloca i32
  store i32 0, i32* %j971
  br label %while972

while972:                                         ; preds = %while_body973, %while_body970
  %j_v992 = load i32, i32* %j971
  %bool_val993 = icmp sle i32 %j_v992, %tmp954
  br i1 %bool_val993, label %while_body973, label %merge991

while_body973:                                    ; preds = %while972
  %j_v974 = load i32, i32* %j971
  %i_v975 = load i32, i32* %i968
  %tmp976 = mul i32 %c_mat961, %i_v975
  %index977 = add i32 %j_v974, %tmp976
  %element_ptr978 = getelementptr double, double* %mat_mat957, i32 %index977
  %j_v979 = load i32, i32* %j971
  %tmp980 = sub i32 %j_v979, 0
  %tmp981 = add i32 %tmp980, 0
  %i_v982 = load i32, i32* %i968
  %tmp983 = sub i32 %i_v982, 0
  %tmp984 = add i32 %tmp983, 0
  %tmp985 = mul i32 %c_v967, %tmp984
  %index986 = add i32 %tmp981, %tmp985
  %element_ptr987 = getelementptr double, double* %mat_v963, i32 %index986
  %tmp_element988 = load double, double* %element_ptr987
  store double %tmp_element988, double* %element_ptr978
  %j_v989 = load i32, i32* %j971
  %tmp990 = add i32 %j_v989, 1
  store i32 %tmp990, i32* %j971
  br label %while972

merge991:                                         ; preds = %while972
  %i_v994 = load i32, i32* %i968
  %tmp995 = add i32 %i_v994, 1
  store i32 %tmp995, i32* %i968
  br label %while969

merge996:                                         ; preds = %while969
  %return0 = getelementptr inbounds %return_t.0, %return_t.0* %return, i32 0, i32 0
  store %matrix_t* %m927, %matrix_t** %return0
  ret %return_t.0* %return
  %tmp999 = alloca %return_t.0
  ret %return_t.0* %tmp999
}
